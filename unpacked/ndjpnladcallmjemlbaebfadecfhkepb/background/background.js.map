{"version":3,"sources":["webpack://officechromeextension/webpack/runtime/chunk loaded","webpack://officechromeextension/./app/common/constants.js","webpack://officechromeextension/./app/diagnostics/index.js","webpack://officechromeextension/./app/diagnostics/telemetry.service.js","webpack://officechromeextension/./app/diagnostics/ariaTelemetry.service.js","webpack://officechromeextension/./app/diagnostics/otelTelemetry.service.js","webpack://officechromeextension/./app/common/httpInterceptor.js","webpack://officechromeextension/./app/common/logDecorator.js","webpack://officechromeextension/./app/common/storage.service.js","webpack://officechromeextension/./app/common/index.js","webpack://officechromeextension/./app/common/notification.service.js","webpack://officechromeextension/./app/user/index.js","webpack://officechromeextension/./app/user/protectedResourceInterceptor.js","webpack://officechromeextension/./app/user/msaUser.service.js","webpack://officechromeextension/./app/user/o365User.service.js","webpack://officechromeextension/./app/user/msidUser.service.js","webpack://officechromeextension/./app/user/user.service.js","webpack://officechromeextension/./app/background/background.controller.js","webpack://officechromeextension/./app/copypaste/index.js","webpack://officechromeextension/./app/file/index.js","webpack://officechromeextension/./app/file/file.service.js","webpack://officechromeextension/./app/file/fileLoader.service.js","webpack://officechromeextension/./app/file/oneDriveFile.service.js","webpack://officechromeextension/./app/file/sharePointFile.service.js","webpack://officechromeextension/./app/background/background.js","webpack://officechromeextension/./app/common/browserHandler.ts","webpack://officechromeextension/./app/common/permissions.ts","webpack://officechromeextension/./app/common/utilities.ts","webpack://officechromeextension/./app/diagnostics/aria.ts","webpack://officechromeextension/./third_party/angularjs-localizationservice.1.0.1/localize.js","webpack://officechromeextension/webpack/bootstrap","webpack://officechromeextension/webpack/runtime/compat get default export","webpack://officechromeextension/webpack/runtime/define property getters","webpack://officechromeextension/webpack/runtime/global","webpack://officechromeextension/webpack/runtime/hasOwnProperty shorthand","webpack://officechromeextension/webpack/runtime/make namespace object","webpack://officechromeextension/webpack/runtime/runtimeId","webpack://officechromeextension/webpack/runtime/jsonp chunk loading","webpack://officechromeextension/webpack/startup"],"names":["deferred","IDTYPE","MSACID","ORGIDPUID","ACTIVITY","AUTHENTICATION","NAME","AUTHORIZATION","NOTIFICATION","TELEMETRY","USERINFO_AVAILABLE","SSO","LOGOUT","REQUEST_TOKEN","LOG","APPINFO_NAME","TELEM_PREFIX","FILE","APPLICATION_IMAGE_PATH","APPLICATION_LABEL","ERROR","MAX_SIZE_BYTE_LIMIT","OFFICE_APP_FILE_ASSOCIATIONS","EXCEL","ONENOTE","POWERPOINT","WORD","OFFICE_MIME_TYPES","ORIGIN","HTML5","LOCAL_PATH","SUPPORTED_APPLICATIONS","SUPPORTED_FILE_TYPES","JQUERY","EVENT_ID","KEYPRESS","ENTER","ARROWLEFT","ARROWUP","ARROWRIGHT","ARROWDOWN","MOUSEDOWN","LEFT_BUTTON_CLICK","LINKS","OFFICE_URL","PROGRESSPAGE_URL","SETTINGS_URL","SIGNUP","UNINSTALL","OFFICE_HOME_URL","MY_CONTENT_URL","APPS_MODULE_URL","OFFICE_HOME_DEV_URL","SUPPORT_URL","MYACCOUNT_MSA_URL","MYACCOUNT_O365_URL","APP","arguments","SWAY","SWAY_DEFAULT","ONEDRIVE","TEAMS","SHAREPOINT_DEFAULT","OUTLOOK_DEFAULT","OUTLOOK_O365","MENU_VIEWMODE","NONE","NEW","OPEN","ACCOUNT","SETTINGS","OAUTH","ACCESS_TOKEN","AUTH_CODE","CODE","EXPIRES_ON","REFRESH_TOKEN","SERVICE_ENDPOINT","SERVICE_ID","O365CONFIG","CLIENT_ID","CLIENT_SECRET","GRAPH_RESOURCE","ENDPOINTS","INSTANCE","LOGOUT_URI","MRU_URL","PHOTO_URL","ONEDRIVE_URL","SHAREPOINT_URL","REDIRECT_URI","UPLOAD_URL","FEDERATED_URL","MSACONFIG","ONEDRIVE_ITEMS_URL","SCOPE","URL","USERINFO_URL","FILEACCESS","id","priority","type","message","FILE_MAX_SIZE_BYTE_LIMIT_REACHED","FILE_UPLOAD_FAILURE_GENERIC","FILE_UPLOAD_FAILURE_SERVER","FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA","FILE_UPLOAD_IN_PROGRESS","SETDEFAULT","AUTOSAVE","buttons","title","AUTOSAVETOONEDRIVE","AUTOSAVETOSHAREPOINT","NOTSIGNEDIN","UNSUPPORTEDFILETYPE","INVALIDSUBSCRIPTION","WEBDOCREDIRECT","DISPLAY_URL","QUERY_OPTION","RECENTS","LIST_LENGTH_MSA","LIST_LENGTH_O365","FILTER","ONEDRIVE_ENDPOINT","DISPLAY_PANEL","LIST","LOADING","NO_DOCS","CANCELLED","GENERIC","NO_DOCS_FOUND","UNSUPPORTED_USER_TYPE","SIGNINSTATUS","UNKNOWN","HASREFRESHTOKEN","SIGNEDIN","COMMAND","SET_DISABLED","TRACK_TRACE","TRACK_EVENT","ENABLED_SETTING_STORAGE_KEY","EVENT_PREFIX","PII_TYPE","IDENTITY","USER_TYPE","MSA","O365","USER_SERVICE_TYPE","MSID","USER_DATA_BOUNDARY","EU","TIMEOUT","DEFAULT_REQUEST","USER_INFO_LOOKUP","USER_INFO_LOOKUP_TEST","COPY_PASTE","TEST","PASTE","GET_CLIPBOARD_DATA","GET_AVAILABLE_COMMANDS","ERROR_RETRIES","HTTP_REQUEST","BROWSER_ICON","DEFAULT","INACTIVE","MESSAGE_CHANNEL","RESPONSE_STATUS_SUCCESS","RESPONSE_STATUS_FAIL","RESPONSE_CODE_NO_SUPPORT","RESPONSE_CODE_INVALID","service","$injector","ariaTelemetry","otelTelemetry","telemetryProviders","addCustomProperties","async","properties","userService","get","storage","window","sessionStorage","getItem","then","result","sessionId","pii","manifest","AppVersion","version","dataBoundaryPromise","getUserDataBoundary","DataBoundary","dataBoundary","language","Language","constants","userType","getUserType","semanticContext","AWTLogManager","setUserId","userInfo","getUserInfo","cid","features","ExperimentFeatures","toString","puid","push","name","value","tid","getEnabledSettingFromStorage","$q","defer","resolve","settings","settingName","storedSetting","JSON","parse","undefined","readSettingValueOrUndefined","telemetry_enabled","promise","getEnabledSetting","setEnabledSetting","enabled","set","stringify","lastUpdate","Date","now","manualOverride","setEnabledSettingInStorage","i","length","activity","command","trackEvent","eventName","measurements","propertiesToTrack","trackTrace","$window","addEventProperties","eventProperties","setProperty","property","hasOwnProperty","enabledSetting","this","replace","AWTEventProperties","setName","ariaLogger","logEvent","dataFields","otelLogger","partAFields","item","otelEvent","eventFlags","dataCategories","diagnosticLevel","toLowerCase","includes","sendTelemetryEvent","$log","$timeout","retries","request","config","timeout","responseError","response","status","debug","url","info","data","error_codes","$http","startsWith","error","reject","logDecorator","$delegate","telemetry","getTruncatedString","string","substring","logToBackground","severity","stack","filename","source","log","toLocaleString","month","day","hour","minute","second","extensionOrigin","location","href","origin","trimExtensionOrigin","console","prepareLog","originalFunction","severityLevel","args","slice","call","logParams","fullStack","Error","messageString","Promise","split","mapStackTrace","mappedStack","match","shift","caller","matched","pop","timeStamp","apply","warn","dumpStorage","chrome","local","commonModule","$httpProvider","$provide","decorator","interceptors","factory","keys","items","remove","clear","localize","show","notification","index","getLocalizedString","iconUrl","wasCleared","imageUrl","progress","notificationId","httpInterceptor","headers","resource","acquireToken","token","Authorization","clearToken","getConfig","lookupUserInfo","oneDriveUrl","method","email","emails","account","getResourceForEndpoint","endpoint","configEndpoint","indexOf","tokenData","idToken","user","parsedJson","encodedIdToken","decodedToken","jwtToken","matches","exec","header","JWSPayload","JWSSig","decodeJwt","base64Decoded","base64IdToken","atob","decodeURIComponent","escape","base64DecodeStringUrlSafe","_logstatus","err","extractIdToken","aud","upn","getUserProfile","id_token","httpRequest","webUrl","reason","getOneDriveUrl","sharePointUrl","getSharePointUrl","scopes","userInfoUrl","aadV2Url","redirectUri","logoutUrl","authorizeUrl","aadClientId","loginUrl","search","createParams","prompt","getUserService","additionalParams","defaultParams","URLSearchParams","Object","assign","fetchUserInfo","object","prop","deleteMetaDataTags","fetchOneDriveUrl","fetchOneDriveQuota","quota","parseInt","total","Math","round","endpointResources","paths","urlPath","pathname","reduce","previous","current","warning","infoFuncs","all","requestAccessToken","scope","response_type","params","navigateToAuthEndpoint","access_token","msaUserService","o365UserService","msidUserService","userOrServiceType","getServiceProvider","getAccessToken","isTokenExpired","expires_on","refreshToken","getIdentityProperty","getRefreshToken","refresh_token","grant_type","tokenUrl","refreshAccessToken","saveTokens","statusText","authorize","serviceType","code","accessToken","acquireTokenFromCode","createOtelSink","setUserType","boundaryOrToken","boundary","values","payload","parseJwtToken","xms_tdbr","setUserDataBoundary","idOrToken","userId","tenantId","setUserAndTenantId","login","error_description","userAndTenantId","osPlugin","OsPlugin","detectOs","oneDSSinkProperties","endpointUrl","plugins","persistentDataFields","platform","primaryIdentitySpace","primaryIdentityHash","isAnonymous","tenantGroup","oneDSSink","OneDSSink","telemetrySinks","addSink","flushQueue","typeOrToken","tenantInfo","tenants","tenant","resolveTypeAndTenant","tenantEntry","identity","getStoredIdentity","mergeProperties","unpackStateParam","state","appid","inIFrame","searchParams","param","createGuid","frameId","cleanup","listener","iframe","document","getElementById","parentNode","removeChild","sender","clearTimeout","has","iframeAuthDelay","setTimeout","createElement","setAttribute","style","visibility","position","width","height","border","body","appendChild","src","handleLogin","logout","handleLogout","useAuthNext","toggle","override","checkAuthFlighting","noLogout","close","tab","checkTransitionAuth","transitionAuthInterval","options","checkedTime","toUTCString","storageData","elapsed","authNext","lastCheck","flighted","force","deviceId","getDeviceId","accept","contentType","AppId","FeatureFlags","userServiceProvider","getServiceForUserType","target","key","sourceValue","entries","Array","isArray","forEach","getEndpointBase","expires_in","Number","tokenEntry","supportsScopes","required","granted","resourceScope","allTokens","saveUserInfo","expiresOn","userPrincipalName","getPhotoFromServer","photoUrl","photoRequest","responseType","photo","reader","FileReader","onload","readAsDataURL","char","timestamp","performance","rand","random","floor","setInterval","initCheckTransition","isLoggedIn","getEndpointUrlForCurrentUser","getUserPhoto","getUserAndTenantId","uid","waitForUserInfo","userInfoListener","giveUpDelay","giveUp","cleanUp","getUserLicenseInfo","controller","fileService","copyPasteService","webRedirectDisabled","sessionInfo","documentTabId","webRedirect_disabled","windowId","currentTime","startTime","duration","LastSession","isInteger","start_time","logDay","today","setHours","StartTime","Duration","updateSessionInfo","changes","areaName","newValue","requestHeaders","tabId","urls","responseHeaders","isResponseHeaderPrivate","displayWebDocRedirectNotification","redirectUrl","activeTabId","upload","fileUrl","openFileUrlInTab","details","appVersion","platformInfo","os","supportUrl","e","previousVersion","localStorage","profile","displayAutoSaveNotification","sendResponse","eventId","localeCompare","sensitivity","RespondWithError","CreateInvalidMethodResponse","description","setUninstallUrl","checkPermission","msg","callback","handleTestCommand","handlePasteCommand","handleGetClipboardDataCommand","handleGetAvailableCommands","addEventListener","onPasteEvent","changeInfo","NameSpaceType","DomainName","currentUrl","uploadFile","file","startUrl","getDisplayTabId","ext","IsInvalidMethod","invalidResponse","fileEntries","uploadFiles","event","RegExp","prototype","imageReader","fileReader","fileLoader","sharePointFileService","oneDriveFileService","currentUserType","doUpload","fileServiceProvider","EventName","Message","getFileServiceProvider","handleFileUploadError","fileInfo","fileOrigin","loadFile","autoSaveNotification","handleFileLoadError","size","FILE_SIZE_MAX_EXCEEDED","UNSUPPORTED_FILE_TYPE","encodeURI","content","Int8Array","readAsArrayBuffer","loadFileFromHTML5","filePath","xhr","XMLHttpRequest","open","onreadystatechange","readyState","LOAD_FROM_PATH","send","loadFileFromPath","byteLength","encodeURIComponent","transformRequest","fileName","toISOString","etag","eTag","documentElement","browserListeners","propertyList","concat","browserHandler","browser","edgeBrowser","create","notifications","alert","onButtonClicked","addListener","onClicked","runtime","getPlatformInfo","jasmine","mock","browserAction","setIcon","icon","extension","getURL","i18n","getUILanguage","getMessage","onMessage","removeListener","splice","sendMessage","tabs","createProperties","BrowserHandler","promised","proc","results","requested","permissions","getAll","filter","permission","filterNeeded","contains","eventProps","Granted","LastError","lastError","Id","optional","getManifest","optional_permissions","Utilities","deserializeQuery","query","pl","decode","s","obj","getFileExtension","docExt","splitDoc","navigateToUrlWithNewTab","openActive","onSuccess","active","isUndefinedOrNull","safeOpenNewTab","windows","onCreated","isNotUndefinedOrNull","isExtensionInTestingMode","isExtensionInDevelopmentMode","test","update_url","getAppDescription","isBackgroundContext","loc","getBackgroundPage","getCurrentTime","getTime","isChrome","getBrowserName","navigator","vendor","getBrowserAndVersion","browserVersion","checkUserAgentForBrowser","regex","browserMatch","userAgent","groups","userAgentData","brands","find","entry","brand","orderedBrowserMatches","isRTL","uiLang","iconPath","path","getNewId","crypto","randomUUID","telemetryLogger","TelemetryLogger","enableQueue","setTenantToken","deviceInfo","getDeviceInfo","setItem","platformType","browserSessionId","initialize","setContext","getLogger","angular","module","$filter","input","directive","i18nDirective","restrict","updateText","elm","tag","text","link","attrs","$observe","i18NAttrDirective","attr","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","m","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"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","file":"\\background\\background.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { CopyPasteService } from '@1js/office-online-ccp';\r\n\r\nexport default {\r\n    IDTYPE: {\r\n        MSACID: 'MSACID',\r\n        ORGIDPUID: 'OrgIdPUID'\r\n    },\r\n    ACTIVITY: {\r\n        AUTHENTICATION: {\r\n            NAME: 'authentication'\r\n        },\r\n        AUTHORIZATION: {\r\n            NAME: 'authorization'\r\n        },\r\n        NOTIFICATION: {\r\n            NAME: 'notification'\r\n        },\r\n        TELEMETRY: {\r\n            NAME: 'telemetry'\r\n        },\r\n        USERINFO_AVAILABLE: {\r\n            NAME: 'userInfoAvailable'\r\n        },\r\n        SSO: {\r\n            NAME: 'sso'\r\n        },\r\n        LOGOUT: {\r\n            NAME: 'logout'\r\n        },\r\n        REQUEST_TOKEN: {\r\n            NAME: 'requestToken'\r\n        },\r\n        LOG: {\r\n            NAME: 'log'\r\n        },\r\n    },\r\n    APPINFO_NAME: 'OfficeOnlineExtension',\r\n    TELEM_PREFIX: 'Office.Taos.M365Extension',\r\n    FILE: {\r\n        APPLICATION_IMAGE_PATH: {\r\n            'excel': 'assets/excel_doc.png',\r\n            'onenote': 'assets/onenote_doc.png',\r\n            'powerpoint': 'assets/powerpoint_doc.png',\r\n            'unknown': 'assets/generic_doc.png',\r\n            'word': 'assets/word_doc.png'\r\n        },\r\n        APPLICATION_LABEL: {\r\n            'excel': 'ExcelOnlineAppName',\r\n            'onenote': 'OneNoteOnlineAppName',\r\n            'powerpoint': 'PowerPointOnlineAppName',\r\n            'unknown': 'OfficeOnlineAppName',\r\n            'word': 'WordOnlineAppName'\r\n        },\r\n        ERROR: {\r\n            'FILE_SIZE_MAX_EXCEEDED': 'fileSizeMaxExceeded',\r\n            'LOAD_FROM_PATH': 'loadFromPath',\r\n            'UNSUPPORTED_FILE_TYPE': 'unsupportedFileType'\r\n        },\r\n        MAX_SIZE_BYTE_LIMIT: 1024 * 1024 * 4,\r\n        OFFICE_APP_FILE_ASSOCIATIONS: {\r\n            EXCEL: 'excel',\r\n            ONENOTE: 'onenote',\r\n            POWERPOINT: 'powerpoint',\r\n            WORD: 'word'\r\n        },\r\n        OFFICE_MIME_TYPES: {\r\n            'application/msword': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.template': 'word',\r\n            'application/vnd.oasis.opendocument.text': 'word',\r\n            'application/vnd.ms-powerpoint': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.slideshow': 'powerpoint',\r\n            'application/vnd.oasis.opendocument.presentation': 'powerpoint',\r\n            'application/vnd.ms-excel': 'excel',\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'excel',\r\n            'application/vnd.ms-excel.sheet.binary.macroEnabled.12': 'excel',\r\n            'application/vnd.ms-excel.sheet.macroEnabled.12': 'excel',\r\n            'application/vnd.oasis.opendocument.spreadsheet': 'excel'\r\n        },\r\n        ORIGIN: {\r\n            HTML5: 'html5',\r\n            LOCAL_PATH: 'local_path'\r\n        },\r\n        SUPPORTED_APPLICATIONS: [\r\n            'Word',\r\n            'Excel',\r\n            'PowerPoint',\r\n            'OneNote'\r\n        ],\r\n        SUPPORTED_FILE_TYPES: {\r\n            'doc': 'word',\r\n            'dot': 'word',\r\n            'docx': 'word',\r\n            'dotx': 'word',\r\n            'odt': 'word',\r\n            'ppt': 'powerpoint',\r\n            'pot': 'powerpoint',\r\n            'pps': 'powerpoint',\r\n            // BUG: 214522: 'ppa': 'powerpoint',\r\n            'pptx': 'powerpoint',\r\n            'ppsx': 'powerpoint',\r\n            'odp': 'powerpoint',\r\n            // BUG: 214522: 'xls': 'excel',\r\n            // BUG: 214522: 'xlt': 'excel',\r\n            // BUG: 214522: 'xla': 'excel',\r\n            'xlsx': 'excel',\r\n            'xlsm': 'excel',\r\n            'xlsb': 'excel',\r\n            'ods': 'excel',\r\n            'notebook': 'onenote'\r\n        }\r\n    },\r\n    JQUERY: {\r\n        EVENT_ID: {\r\n            // Reference: http://api.jquery.com/keypress/\r\n            KEYPRESS: {\r\n                ENTER: 13,\r\n                ARROWLEFT: 37,\r\n                ARROWUP: 38,\r\n                ARROWRIGHT: 39,\r\n                ARROWDOWN: 40\r\n            },\r\n            // Reference: http://api.jquery.com/mousedown/\r\n            MOUSEDOWN: {\r\n                LEFT_BUTTON_CLICK: 1\r\n            }\r\n        }\r\n    },\r\n    LINKS: {\r\n        OFFICE_URL: 'https://portal.office.com/home',\r\n        PROGRESSPAGE_URL: 'https://onedrive.live.com',\r\n        SETTINGS_URL: 'chrome://extensions',\r\n        SIGNUP: 'https://onedrive.live.com/about',\r\n        UNINSTALL: 'https://contentstorage.osi.office.net/officeonlineextensionuninstall/uninstall.html',\r\n        OFFICE_HOME_URL: 'https://go.microsoft.com/fwlink/?linkid=859986',\r\n        MY_CONTENT_URL: 'https://go.microsoft.com/fwlink/?linkid=2227960',\r\n        APPS_MODULE_URL: 'https://go.microsoft.com/fwlink/?linkid=2238237',\r\n        OFFICE_HOME_DEV_URL: 'https://go.microsoft.com/fwlink/?linkid=860665',\r\n        SUPPORT_URL: 'https://aka.ms/officeextsignin',\r\n        MYACCOUNT_MSA_URL: 'https://go.microsoft.com/fwlink/?LinkId=823747',\r\n        MYACCOUNT_O365_URL: 'https://go.microsoft.com/fwlink/?LinkId=824642',\r\n        APP: {\r\n            WORD: function () {return `https://office.live.com/start/word.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            EXCEL: function () {return `https://office.live.com/start/excel.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            POWERPOINT: function () {return `https://office.live.com/start/powerpoint.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            ONENOTE: function () {return `https://www.onenote.com/notebooks?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY: function () {return `https://www.sway.com/?auth_pvr=${arguments[0]}&auth_upn=${arguments[1]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY_DEFAULT: 'https://www.sway.com/?WT.mc_id=Chrome_OfficeApp',\r\n            ONEDRIVE: 'https://onedrive.live.com',\r\n            TEAMS: 'https://teams.microsoft.com',\r\n            SHAREPOINT_DEFAULT: 'https://products.office.com/sharepoint',\r\n            OUTLOOK_DEFAULT: 'https://outlook.com',\r\n            OUTLOOK_O365: 'https://outlook.office365.com'\r\n        }\r\n    },\r\n    MENU_VIEWMODE: {\r\n        NONE: 0,\r\n        NEW: 1,\r\n        OPEN: 2,\r\n        ACCOUNT: 3,\r\n        SETTINGS: 4\r\n    },\r\n    OAUTH: {\r\n        ACCESS_TOKEN: 'access_token',\r\n        AUTH_CODE: 'authorization_code',\r\n        CODE: 'code',\r\n        EXPIRES_ON: 'expires_on',\r\n        REFRESH_TOKEN: 'refresh_token',\r\n        SERVICE_ENDPOINT: 'service_endpoint',\r\n        SERVICE_ID: 'service_id'\r\n    },\r\n    O365CONFIG: {\r\n        CLIENT_ID: 'd08f258a-c5dd-4a8f-8afc-9321d67c767a',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579837]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '00000000000000000000000000000000',\r\n        GRAPH_RESOURCE: 'https://graph.microsoft.com',\r\n        ENDPOINTS: {\r\n            'officeapps.live.com': 'https://officeapps.live.com',\r\n            'graph.microsoft.com': 'https://graph.microsoft.com'\r\n        },\r\n        INSTANCE: 'https://login.windows.net/common/oauth2/',\r\n        LOGOUT_URI: 'https://login.microsoftonline.com/logout.srf',\r\n        MRU_URL: 'https://ocws.officeapps.live.com/ocs/docs/recent/',\r\n        PHOTO_URL: 'https://graph.microsoft.com/v1.0/me/photo/$value',\r\n        ONEDRIVE_URL: 'https://graph.microsoft.com/v1.0/me/drive/root',\r\n        SHAREPOINT_URL: 'https://graph.microsoft.com/v1.0/sites/root',\r\n        REDIRECT_URI: 'https://login.microsoftonline.com/login.srf',\r\n        UPLOAD_URL: 'https://graph.microsoft.com/v1.0/me/drive/root:/',\r\n        FEDERATED_URL: 'https://login.microsoftonline.com/getuserrealm.srf'\r\n    },\r\n    MSACONFIG: {\r\n        CLIENT_ID: '000000004016DA34',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579838]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '00000000000000000000000000000000',\r\n        INSTANCE: 'https://login.live.com/oauth20_authorize.srf',\r\n        LOGOUT_URI: 'https://login.live.com/oauth20_logout.srf',\r\n        ONEDRIVE_ITEMS_URL: 'https://api.onedrive.com/v1.0/drive/items/',\r\n        PHOTO_URL: 'https://apis.live.net/v5.0/me/picture',\r\n        REDIRECT_URI: 'https://login.live.com/oauth20_desktop.srf',\r\n        SCOPE: 'wl.basic+wl.emails+wl.signin+wl.offline_access+onedrive.readwrite+wl.skydrive',\r\n        URL: 'https://login.live.com/oauth20_token.srf',\r\n        USERINFO_URL: 'https://apis.live.net/v5.0/me'\r\n    },\r\n    /* Notification priorities:\r\n       -2, -1: Do not use; deprecated\r\n       0 - Lowest priority; will not display in Edge\r\n       1 - Medium priority\r\n       2 - Highest priority\r\n    */\r\n    NOTIFICATION: {\r\n        FILEACCESS: {\r\n            id: 'fileAccess',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileAccess'\r\n        },\r\n        FILE_MAX_SIZE_BYTE_LIMIT_REACHED: {\r\n            id: 'fileMaxSizeByteLimitReached',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileMaxSizeByteLimitReached'\r\n        },\r\n        FILE_UPLOAD_FAILURE_GENERIC: {\r\n            id: 'fileUploadFailureGeneric',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureGeneric'\r\n        },\r\n        FILE_UPLOAD_FAILURE_SERVER: {\r\n            id: 'fileUploadFailureServer',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureServer'\r\n        },\r\n        FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA: {\r\n            id: 'fileUploadFailureUnsupportedMedia',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureUnsupportedMedia'\r\n        },\r\n        FILE_UPLOAD_IN_PROGRESS: {\r\n            id: 'fileUploadInProgress',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadInProgress'\r\n        },\r\n        SETDEFAULT: {\r\n            id: 'setDefault',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationSetDefault'\r\n        },\r\n        AUTOSAVE: {\r\n            id: 'autoSave',\r\n            priority: 0,\r\n            type: 'basic',\r\n            buttons: [\r\n                {title: 'NotificationAutoSaveButton'}\r\n            ]\r\n        },\r\n        AUTOSAVETOONEDRIVE: 'NotificationAutoSaveToOneDrive',\r\n        AUTOSAVETOSHAREPOINT: 'NotificationAutoSaveToSharePoint',\r\n        NOTSIGNEDIN: {\r\n            id: 'notSignedIn',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationNotSignedIn'\r\n        },\r\n        UNSUPPORTEDFILETYPE: {\r\n            id: 'unsupportedFileType',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationUnsupportedFileType'\r\n        },\r\n        INVALIDSUBSCRIPTION: {\r\n            id: 'invalidSubscription',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationInvalidSubscription'\r\n        },\r\n        WEBDOCREDIRECT: {\r\n            id: 'webDocRedirect',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationWebDocRedirect',\r\n            buttons: [\r\n                {title: 'NotificationWebDocRedirectButton'}\r\n            ]\r\n        }\r\n    },\r\n    ONEDRIVE: {\r\n        DISPLAY_URL: 'https://onedrive.live.com/view.aspx?cid=',\r\n        INSTANCE: 'https://api.onedrive.com/v1.0',\r\n        QUERY_OPTION: '?@name.conflictBehavior=rename'\r\n    },\r\n    RECENTS: {\r\n        LIST_LENGTH_MSA: 3,\r\n        LIST_LENGTH_O365: 3,\r\n        FILTER: '?apps=powerpoint,word,excel,onenote&sort=date',\r\n        ONEDRIVE_ENDPOINT: 'https://api.onedrive.com/v2.1/drive/recent',\r\n        DISPLAY_PANEL: {\r\n            ERROR: 0,\r\n            LIST: 1,\r\n            LOADING: 2,\r\n            NO_DOCS: 3,\r\n            NONE: 4\r\n        },\r\n        ERROR: {\r\n            CANCELLED: 0,\r\n            GENERIC: 1,\r\n            NO_DOCS_FOUND: 2,\r\n            UNSUPPORTED_USER_TYPE: 3\r\n        }\r\n    },\r\n    SIGNINSTATUS: {\r\n        UNKNOWN: -1,\r\n        NONE: 0,\r\n        HASREFRESHTOKEN: 1,\r\n        SIGNEDIN: 2\r\n    },\r\n    TELEMETRY: {\r\n        COMMAND: {\r\n            SET_DISABLED: 'setDisabledTelemetry',\r\n            TRACK_TRACE: 'trackTrace',\r\n            TRACK_EVENT: 'trackEvent'\r\n        },\r\n        ENABLED_SETTING_STORAGE_KEY: 'telemetry_enabled',\r\n        EVENT_PREFIX: 'OO_CHROME_',\r\n        PII_TYPE: {\r\n            IDENTITY: 10\r\n        }\r\n    },\r\n    USER_TYPE: {\r\n        MSA: 'msa',\r\n        O365: 'aad',\r\n        NONE: 'none'\r\n    },\r\n    USER_SERVICE_TYPE: {\r\n        MSA: 'msaUserService',\r\n        O365: 'o365UserService',\r\n        MSID: 'msidUserService',\r\n        NONE: 'noneUserService'\r\n    },\r\n    USER_DATA_BOUNDARY: {\r\n        NONE: 'none',\r\n        EU: 'eu',\r\n    },\r\n    TIMEOUT: {\r\n        DEFAULT_REQUEST: 10000,\r\n        USER_INFO_LOOKUP: 5000,\r\n        USER_INFO_LOOKUP_TEST: 50\r\n    },\r\n    COPY_PASTE: {\r\n        TEST: CopyPasteService.testCommand,\r\n        PASTE: CopyPasteService.pasteCommand,\r\n        GET_CLIPBOARD_DATA: CopyPasteService.getClipboardDataCommand,\r\n        GET_AVAILABLE_COMMANDS: CopyPasteService.getAvailableCommandsCommand\r\n    },\r\n    ERROR_RETRIES: {\r\n        HTTP_REQUEST: 3\r\n    },\r\n    BROWSER_ICON: {\r\n        DEFAULT: '../assets/icon_20.png',\r\n        INACTIVE: '../assets/icon_inactive_20.png'\r\n    },\r\n    SSO: {\r\n        MESSAGE_CHANNEL: 'com.microsoft.browsercore',\r\n        RESPONSE_STATUS_SUCCESS: 'Success',\r\n        RESPONSE_STATUS_FAIL: 'Fail',\r\n        RESPONSE_CODE_NO_SUPPORT: 'NoSupport',\r\n        RESPONSE_CODE_INVALID: -2147186943\r\n    },\r\n};\r\n","import angular from 'angular';\r\nimport ariaTelemetry from './ariaTelemetry.service';\r\nimport otelTelemetry from './otelTelemetry.service';\r\nimport telemetry from './telemetry.service';\r\n\r\nexport default angular\r\n    .module('app.diagnostics', [])\r\n    .service('telemetry', ['$injector', 'ariaTelemetry', 'otelTelemetry', telemetry])\r\n    .service('ariaTelemetry', ['$window', ariaTelemetry])\r\n    .service('otelTelemetry', ['$window', otelTelemetry])\r\n    .name;\r\n\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {AWTLogManager} from '@aria/webjs-sdk';\r\n\r\nexport default function telemetry($injector, ariaTelemetry, otelTelemetry) {\r\n    var telemetryProviders = [otelTelemetry];\r\n\r\n    var addCustomProperties = async function (properties) {\r\n        var userService = $injector.get('userService');\r\n        var storage = $injector.get('storage');\r\n\r\n        \r\n        // Append app specific properties\r\n        if (Utilities.isUndefinedOrNull(properties)) {\r\n            properties = {};\r\n        }\r\n        \r\n        //Append sessionId for browser and popup sessions\r\n        properties['BrowserSessionId'] = window.sessionStorage.getItem('browserSessionId');\r\n        await storage.get('sessionId').then(function (result) {\r\n            properties['Session_Id'] = result.sessionId;\r\n        });\r\n\r\n        properties.pii = [];\r\n        var manifest = Utilities.getManifest();\r\n        if (manifest) {\r\n            properties.AppVersion = manifest.version;\r\n        }\r\n\r\n        // Get data boundary for EUDB routing\r\n        var dataBoundaryPromise = await userService.getUserDataBoundary();\r\n        properties.DataBoundary = dataBoundaryPromise.dataBoundary;\r\n\r\n        // Get UI language\r\n        var language = BrowserHandler.i18n.getUILanguage();\r\n        if (Utilities.isNotUndefinedOrNull(language)) {\r\n            properties.Language = language;\r\n        }\r\n\r\n        // Add AppInfo.Name for GDPR T3 export\r\n        properties['AppInfo.Name'] = constants.APPINFO_NAME;\r\n        // Add user info properties\r\n        var userType = await userService.getUserType();\r\n        var semanticContext = AWTLogManager.getSemanticContext();\r\n        \r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        var userInfo = await userService.getUserInfo(userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        // userInfo properties - cid from MSA\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.cid)) {\r\n            properties['User_PrimaryIdentityHash'] = userInfo.cid;\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.cid);\r\n        }\r\n\r\n        // userInfo properties - features (from ExP treatment assignment)\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.features)) {\r\n            properties.ExperimentFeatures = userInfo.features.toString();\r\n        }\r\n\r\n        // PII identity properties - puid from O365\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.puid)) {\r\n            properties.pii.push({type: constants.TELEMETRY.PII_TYPE.IDENTITY, name: 'User_PrimaryIdentityHash', value: userInfo.puid});\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.puid);\r\n        }\r\n\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.tid)) {\r\n            properties['User_TenantId'] = userInfo.tid;\r\n        }\r\n\r\n        return properties;\r\n    };\r\n\r\n    // Parses correctly the value of setting\r\n    // Returns undefined if the value cannot be parsed.\r\n    var readSettingValueOrUndefined = function (settings, settingName) {\r\n        if (!settings[settingName]) {return undefined}\r\n\r\n        var storedSetting = JSON.parse(settings[settingName]);\r\n\r\n        if (storedSetting.value === undefined) {return undefined}\r\n\r\n        return JSON.parse(storedSetting.value);\r\n    };\r\n\r\n    var getEnabledSettingFromStorage = function () {\r\n        var $q = $injector.get('$q');\r\n        var storage = $injector.get('storage');\r\n        var deferred = $q.defer();\r\n\r\n        storage.get(['telemetry_enabled', 'enableTelemetry']).then(function (result) {\r\n            deferred.resolve(\r\n                Utilities.isUndefinedOrNull(result)\r\n                    || readSettingValueOrUndefined(result, 'enableTelemetry') === true\r\n                    || Utilities.isUndefinedOrNull(result.telemetry_enabled)\r\n                    || result.telemetry_enabled === true\r\n                    ? true : false);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var setEnabledSettingInStorage = function (enabled) {\r\n        var storage = $injector.get('storage');\r\n        storage.set({\r\n            'telemetry_enabled': enabled,\r\n            'enableTelemetry': JSON.stringify(\r\n                {\r\n                    value: JSON.stringify(enabled),\r\n                    lastUpdate: Date.now(),\r\n                    manualOverride: false\r\n                }\r\n            ),\r\n        });\r\n    };\r\n\r\n    var service = {\r\n        // Get telemetry setting from storage\r\n        getEnabledSetting: function () {\r\n            return getEnabledSettingFromStorage();\r\n        },\r\n\r\n        // Set telemetry setting from storage\r\n        setEnabledSetting: function (enabled) {\r\n            // App Insights workaround: send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.SET_DISABLED,\r\n                    enabled: enabled\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            // Cache setting in local storage\r\n            setEnabledSettingInStorage(enabled);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                telemetryProviders[i].setEnabledSetting(enabled);\r\n            }\r\n        },\r\n\r\n        // Use to track custom application events and sends to application insights\r\n        trackEvent: async function (eventName, properties, measurements) {\r\n            if (angular.isUndefined(eventName) || !angular.isString(eventName)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_EVENT,\r\n                    eventName: eventName,\r\n                    properties: properties,\r\n                    measurements: measurements\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackEvent(eventName, propertiesToTrack, measurements);\r\n            }\r\n\r\n        },\r\n\r\n        // Use to track trace messages (ie. logging/diagnostics info) and sends to application insights\r\n        trackTrace: async function (message, properties) {\r\n            if (angular.isUndefined(message) || !angular.isString(message)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_TRACE,\r\n                    message: message,\r\n                    properties: properties\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackTrace(message, propertiesToTrack);\r\n            }\r\n        }\r\n    };\r\n\r\n    // return the local instance when called\r\n    return service;\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './telemetry.service';\r\nimport constants from '../common/constants';\r\nimport {AWTEventProperties} from '@aria/webjs-sdk';\r\n\r\nexport default function ariaTelemetry($window) {\r\n    var addEventProperties = function (eventProperties, properties) {\r\n        if (Utilities.isUndefinedOrNull(eventProperties) || Utilities.isUndefinedOrNull(properties)) {\r\n            return;\r\n        }\r\n\r\n        // Obfuscate pii properties out and remove\r\n        if (!Utilities.isUndefinedOrNull(properties.pii)) {\r\n            for (var i = 0; i <= properties.pii.length - 1; ++i) {\r\n                eventProperties.setProperty(properties.pii[i].name, properties.pii[i].value, properties.pii[i].type);\r\n            }\r\n            delete properties.pii;\r\n        }\r\n\r\n        // Add rest of properties\r\n        for (var property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                eventProperties.setProperty(property, properties[property]);\r\n            }\r\n        }\r\n    };\r\n\r\n    var enabledSetting = true;\r\n\r\n    this.setEnabledSetting = function (enabled) {\r\n        enabledSetting = enabled;\r\n    };\r\n\r\n    this.trackEvent = function (eventName, properties, measurements) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        // ARIA: Bug when dots are in event name; replace with underscores\r\n        eventName = eventName.replace(/\\./g, '_');\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + eventName);\r\n        addEventProperties(eventProperties, properties);\r\n        addEventProperties(eventProperties, measurements);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n\r\n    this.trackTrace = function (message, properties) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + message);\r\n        eventProperties.setProperty('severity', message);\r\n        addEventProperties(eventProperties, properties);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n}\r\n","import './telemetry.service';\r\nimport constants from '../common/constants';\r\nimport * as OTel from '@microsoft/oteljs';\r\n\r\nexport default function otelTelemetry($window) {\r\n\r\n  this.trackEvent = function (eventName, properties, measurements) {\r\n    if (!enabledSetting) {\r\n      return;\r\n    }\r\n    let dataFields = [];\r\n\r\n    //remove data prefix from session id and browser session id\r\n    $window.otelLogger.partAFields = [\r\n      OTel.makeStringDataField(\"Session.Id\", properties['Session_Id']),\r\n      OTel.makeStringDataField(\"BrowserSessionId\", properties['BrowserSessionId']),\r\n    ];\r\n\r\n    for (let item in properties) {\r\n      if(item !== 'AppInfo.Name' && item !== 'Session_Id' && item !== 'BrowserSessionId'){\r\n        dataFields.push(OTel.makeStringDataField(item, properties[item]));\r\n      }\r\n    }\r\n    for (let item in measurements) {\r\n      dataFields.push(OTel.makeStringDataField(item, measurements[item]));\r\n    }\r\n\r\n    let otelEvent = {\r\n      eventName: constants.TELEM_PREFIX + \".\" + eventName,\r\n      dataFields: dataFields,\r\n      eventFlags: {\r\n        dataCategories: 2,\r\n        diagnosticLevel: 10,\r\n      },\r\n    };\r\n\r\n    //remove diagnostic for now per D&F guidelines, only log to Aria\r\n    if(otelEvent['eventName'].toLowerCase().includes(\"diagnostic.\")){\r\n      return;\r\n    }\r\n    $window.otelLogger.sendTelemetryEvent(otelEvent);\r\n  };\r\n\r\n  this.trackTrace = function (message, properties) {\r\n    if (!enabledSetting) {\r\n        return;\r\n    }\r\n    let dataFields = [];\r\n\r\n    //remove data prefix from session id and browser session id\r\n    $window.otelLogger.partAFields = [\r\n      OTel.makeStringDataField(\"Session.Id\", properties['Session_Id']),\r\n      OTel.makeStringDataField(\"BrowserSessionId\", properties['BrowserSessionId']),\r\n    ];\r\n\r\n    for (let item in properties) {\r\n      if(item !== 'AppInfo.Name' && item !== 'Session_Id' && item !== 'BrowserSessionId'){\r\n        dataFields.push(OTel.makeStringDataField(item, properties[item]));\r\n      }\r\n    }\r\n    let otelEvent = {\r\n      eventName: constants.TELEM_PREFIX + \".\" + message,\r\n      dataFields: dataFields,\r\n      eventFlags: {\r\n        dataCategories: 2,\r\n        diagnosticLevel: 10,\r\n      },\r\n    };\r\n    //set event name based on message because can't log to console with custom event name higher upstream\r\n    //also remove diagnostic Info and Warn for now per D&F guidelines, only log to Aria\r\n    if(message.toLowerCase() === \"info\"){\r\n      otelEvent['eventName'] = constants.TELEM_PREFIX + \".Diagnostic.Info\";\r\n      return;\r\n    } else if(message.toLowerCase() === \"warn\"){\r\n      otelEvent['eventName'] = constants.TELEM_PREFIX + \".Diagnostic.Warn\";\r\n      return;\r\n    } else if(message.toLowerCase() === 'error'){\r\n      otelEvent['eventName'] = constants.TELEM_PREFIX + \".Diagnostic.Error\";\r\n    }\r\n\r\n    $window.otelLogger.sendTelemetryEvent(otelEvent);\r\n  };\r\n\r\n  var enabledSetting = true;\r\n\r\n  this.setEnabledSetting = function (enabled) {\r\n    enabledSetting = enabled;\r\n  };\r\n}","import constants from './constants';\r\nimport Utilities from './utilities';\r\nimport 'angular';\r\n\r\nexport default httpInterceptor;\r\n\r\nfunction httpInterceptor($q, $log, $timeout, $injector) {\r\n    var retries = 0;\r\n    return {\r\n        request: function (config) {\r\n            if (Utilities.isUndefinedOrNull(config.timeout)) {\r\n                config.timeout = constants.TIMEOUT.DEFAULT_REQUEST;\r\n            }\r\n            return config;\r\n        },\r\n        responseError: function (response) {\r\n            if (response) {\r\n                switch (response.status) {\r\n                    case 0:\r\n                        $log.debug(`httpErrorResponseInterceptor - Request cancelled - ${response.config.url}`);\r\n                        break;\r\n                    case 401:\r\n                        $log.info(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                        break;\r\n                    case 400:\r\n                        // Error of invalid AADService. Log the info trace.\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50001\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Invalid AADSerivce - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            break;\r\n                        }\r\n\r\n                        // Interaction required. Retry the request with the same resource for 3 times.\r\n                        // https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-code\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50079\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Interaction required - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            if (retries < constants.ERROR_RETRIES.HTTP_REQUEST) {\r\n                                retries++;\r\n                                return $timeout(function () {\r\n                                    var $http = $injector.get('$http');\r\n                                    return $http(response.config);\r\n                                }, constants.TIMEOUT.USER_INFO_LOOKUP);\r\n                            }\r\n\r\n                            retries = 0;\r\n                        }\r\n                        break;\r\n                    case 404:\r\n                        // don't throw exceptions when graph returns something not found\r\n                        if (response.config.url.startsWith('https://graph.microsoft.com/v1.0/me/drive')) {\r\n                            return $q.resolve(response);\r\n                        }\r\n                    // eslint-disable-next-line no-fallthrough\r\n                    default:\r\n                        $log.error(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                }\r\n            }\r\n\r\n            return $q.reject(response);\r\n        },\r\n    };\r\n}\r\n","import BrowserHandler from './browserHandler';\r\nimport Utilities from '../common/utilities';\r\nimport {mapStackTrace} from 'sourcemapped-stacktrace';\r\n\r\nexport default function logDecorator($delegate, telemetry) {\r\n    // App Insights custom property values have a max length of 8192\r\n    // Limit to 8000 to stay under the App Insights limit\r\n    function getTruncatedString(string) {\r\n        return string.length > 8000 ? string.substring(0, 8000) : string;\r\n    }\r\n\r\n    // Wrapper functions for telemetry in order to handle any errors from the telemetry service //\r\n\r\n    // Gets the enabled setting from storage\r\n    function getEnabledSetting() {\r\n        return telemetry.getEnabledSetting();\r\n    }\r\n\r\n    // Sets the enabled setting\r\n    function setEnabledSetting(enabled) {\r\n        try {\r\n            telemetry.setEnabledSetting(enabled);\r\n        } catch (error) {\r\n            $delegate.error(`setEnabledSetting error: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom event\r\n    function trackEvent(eventName, properties, measurements) {\r\n        try {\r\n            telemetry.trackEvent(eventName, properties, measurements);\r\n        } catch (error) {\r\n            $delegate.error(`trackEvent error with eventName ${eventName}: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom trace (logging/diagnostics info)\r\n    function trackTrace(message, properties) {\r\n        try {\r\n            telemetry.trackTrace(message, properties);\r\n        } catch (error) {\r\n            // empty - if trackTrace fails, then error, info, warn, and debug statements can't be logged\r\n        }\r\n    }\r\n\r\n    function trimExtensionOrigin(url) {\r\n        try {\r\n            const extensionOrigin = (new URL(location.href)).origin + '/';\r\n            url = url.toString().replace(extensionOrigin, '');\r\n        }\r\n        // eslint-disable-next-line no-empty\r\n        catch {}\r\n\r\n        return url;\r\n    }\r\n\r\n    // Sends the log in a message where the background script will handle it and log\r\n    // the message to the console. Only useful in cases like the popup where an event\r\n    // may get logged before you can open the debugger window\r\n    function logToBackground(message, severity, stack, filename, source) {\r\n        if (Utilities.isBackgroundContext()) {\r\n            try {\r\n                const now = new Date();\r\n                var timeStamp = now.toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n                var log = `[${timeStamp}] (${trimExtensionOrigin(source)}) ${filename ? filename + ' ' : ''} ${message}`;\r\n                console[severity.toLowerCase()](log);\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n            catch {}\r\n            return;\r\n        }\r\n\r\n        BrowserHandler.runtime.sendMessage({\r\n            activity: 'log',\r\n            severity: severity,\r\n            log: message,\r\n            filename: filename,\r\n            stack: stack\r\n        });\r\n    }\r\n\r\n    function messageString(message) {\r\n        if (typeof message === 'string') {\r\n            return message;\r\n        }\r\n        return JSON.stringify(message);\r\n    }\r\n\r\n    // Returns a new logging function (error, info, etc.) that extends the original logging function\r\n    var prepareLog = function (originalFunction, severityLevel) {\r\n        return function () {\r\n            var args = [].slice.call(arguments);\r\n            var logParams = args[0];\r\n            var fullStack = undefined;\r\n\r\n            if (Utilities.isExtensionInDevelopmentMode()) {\r\n                fullStack = Error().stack;\r\n            }\r\n\r\n            var message = getTruncatedString(messageString(logParams.message ? logParams.message : logParams));\r\n\r\n            new Promise((resolve) => {\r\n                if (logParams.stack) {\r\n                    resolve(typeof logParams.stack === 'string' ? getTruncatedString(logParams.stack).split('\\n') : logParams.stack);\r\n                } else if (fullStack) {\r\n                    mapStackTrace(fullStack, mappedStack => {\r\n                        // remove this file from the top of the stack\r\n                        while (mappedStack[0].match('logDecorator.js')) {\r\n                            mappedStack.shift();\r\n                        }\r\n\r\n                        resolve(mappedStack);\r\n                    }, {/*cacheGlobally: true*/});\r\n                } else {\r\n                    resolve([]);\r\n                }\r\n            }).then((stack) => {\r\n                var filename = '';\r\n                var source = logParams.source || location;\r\n                if (logParams.filename) {\r\n                    filename = logParams.filename;\r\n                } else {\r\n                    for (var caller of stack) {\r\n                        var matched = caller.match(/\\b[\\w.]+\\b:\\d+/g);\r\n                        if (!matched) {\r\n                            continue;\r\n                        }\r\n                        filename = matched.pop();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                logToBackground(message, severityLevel, stack, filename, source);\r\n                var timeStamp = new Date().toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n\r\n                args[0] = `[${timeStamp}] ${filename ? filename + ' ' : ''}${severityLevel}: ${message}`;\r\n\r\n                // Only output logs in development mode\r\n                if (Utilities.isExtensionInDevelopmentMode()) {\r\n                    originalFunction.apply(null, args);\r\n                }\r\n\r\n                // Do not track debug trace messages to telemetry\r\n                if (severityLevel === 'DEBUG') {\r\n                    return;\r\n                }\r\n\r\n                trackTrace(severityLevel, {\r\n                    message: message,\r\n                    stack: severityLevel === 'Error' ? stack : '',\r\n                });\r\n            });\r\n        };\r\n    };\r\n\r\n    // Extend the original $delegate logging functions\r\n    //No need to convert debug to Otel since it is just console output\r\n    $delegate.debug = prepareLog($delegate.debug, 'DEBUG');\r\n    $delegate.info = prepareLog($delegate.info, 'Info');\r\n    $delegate.warn = prepareLog($delegate.warn, 'Warn');\r\n    $delegate.error = prepareLog($delegate.error, 'Error');\r\n\r\n    // Attach telemetry functions to the $delegate so that $log can replace the telemetry service throughout the application\r\n    $delegate.getEnabledSetting = getEnabledSetting;\r\n    $delegate.setEnabledSetting = setEnabledSetting;\r\n    $delegate.trackEvent = trackEvent;\r\n    $delegate.trackTrace = trackTrace;\r\n\r\n    return $delegate;\r\n}\r\n","import BrowserHandler from './browserHandler';\r\n\r\nwindow.dumpStorage = () => {\r\n    if (!window.chrome) {\r\n        return;\r\n    }\r\n\r\n    window.chrome.storage.local.get(null, result => {\r\n        console.log(`result '${JSON.stringify(result, '\\t')}'`);\r\n    });\r\n};\r\n\r\nexport default function ($q, $log) {\r\n    return {\r\n        get: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.get(keys, function (result) {\r\n                $log.debug(`storage: get '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        set: function (items) {\r\n            $log.debug(`storage: set items '${JSON.stringify(items)}'`);\r\n            BrowserHandler.storage.local.set(items);\r\n        },\r\n\r\n        remove: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.remove(keys, function (result) {\r\n                $log.debug(`storage: remove '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        clear: function () {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.clear(function (result) {\r\n                $log.debug(`storage: clear result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport './browserHandler'; /* eslint-disable-line sort-imports */\r\nimport 'angularjs-localizationservice.1.0.1/localize';\r\nimport httpInterceptor from './httpInterceptor';\r\nimport logDecorator from './logDecorator';\r\nimport notification from './notification.service';\r\nimport storage from './storage.service';\r\n\r\nvar commonModule = angular\r\n    .module('app.common', [])\r\n    .config(['$httpProvider', '$provide', appCommon])\r\n    .factory('storage', ['$q', '$log', storage])\r\n    .factory('notification', ['$log', 'localize', notification])\r\n    .factory('httpInterceptor', ['$q', '$log', '$timeout', '$injector', httpInterceptor]);\r\n\r\nexport default commonModule.name;\r\n\r\nfunction appCommon($httpProvider, $provide) {\r\n    $provide.decorator('$log', ['$delegate', 'telemetry', logDecorator]);\r\n\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('httpInterceptor');\r\n}\r\n","import Utilities from './utilities';\r\nimport BrowserHandler from './browserHandler';\r\nimport constants from './constants';\r\n\r\nexport default function ($log, localize) {\r\n    return {\r\n        show: function (notification) {\r\n            // Send message to background instance to handle show notification.\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.NOTIFICATION.NAME,\r\n                    notification: notification,\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            var buttons;\r\n            if (notification.buttons !== undefined && notification.buttons !== null) {\r\n                buttons = [];\r\n                for (var index = 0; index < notification.buttons.length; ++index) {\r\n                    buttons[index] = {};\r\n                    buttons[index].title = localize.getLocalizedString(notification.buttons[index].title);\r\n                    buttons[index].iconUrl = notification.buttons[index].iconUrl;\r\n                }\r\n            }\r\n\r\n            BrowserHandler.notifications.clear(notification.id, function (wasCleared) {\r\n                BrowserHandler.notifications.create(\r\n                    notification.id,\r\n                    {\r\n                        iconUrl: '../assets/icon.png',\r\n                        imageUrl: notification.imageUrl,\r\n                        message: localize.getLocalizedString(notification.message),\r\n                        priority: notification.priority,\r\n                        progress: notification.progress,\r\n                        title: '',\r\n                        type: notification.type,\r\n                        buttons: buttons,\r\n                    },\r\n                    function (notificationId) {\r\n                        if (notificationId === undefined || notificationId === null) {\r\n                            $log.error('CreateNotificationError');\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport protectedResourceInterceptor from './protectedResourceInterceptor';\r\nimport userService from './user.service';\r\nimport msidUserService from './msidUser.service';\r\nimport msaUserService from './msaUser.service';\r\nimport o365UserService from './o365User.service';\r\nimport '../common';\r\n\r\nexport default angular\r\n    .module('app.user', [])\r\n    .config(['$httpProvider', '$provide', appUser])\r\n    .factory('protectedResourceInterceptor', ['$q', '$log', '$injector', protectedResourceInterceptor])\r\n    .service('msaUserService', ['$log', '$injector', msaUserService])\r\n    .service('o365UserService', ['$log', '$injector', 'notification', o365UserService])\r\n    .service('msidUserService', ['$log', '$injector', 'notification', msidUserService])\r\n    .factory('userService', ['$q', '$log', '$injector', '$window', 'storage', 'notification', 'msaUserService', 'o365UserService', 'msidUserService', userService])\r\n    .name;\r\n\r\nfunction appUser($httpProvider, $provide) {\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('protectedResourceInterceptor');\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './user.service';\r\nimport constants from '../common/constants';\r\n\r\n\r\nexport default function protectedResourceInterceptor($q, $log, $injector) {\r\n    var userService = $injector.get('userService');\r\n\r\n    return {\r\n        request: function (config) {\r\n            var deferred = $q.defer();\r\n\r\n            if (Utilities.isUndefinedOrNull(config) || Utilities.isUndefinedOrNull(config.headers)) {\r\n                $log.error('protectedResourceInterceptor.request: http request config is null or undefined');\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var userType = config.headers['X-UserType'];\r\n\r\n            // Only apply http config changes to requests that have custom header\r\n            if (Utilities.isUndefinedOrNull(userType)) {\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var resource = config.headers['X-Resource'];\r\n\r\n            // Remove the custom header; no longer needed\r\n            delete config.headers['X-Resource'];\r\n            delete config.headers['X-UserType'];\r\n            userService.acquireToken(userType, config.url, resource).then(token => {\r\n                // Validate userType within acquireToken method\r\n                if (!Utilities.isUndefinedOrNull(token)) {\r\n                    config.headers.Authorization = 'Bearer ' + token;\r\n                }\r\n                else {\r\n                    $log.warn(`failed to get auth token for type:${userType} url: ${config.url}, resource ${resource}`);\r\n                }\r\n                deferred.resolve(config);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n        responseError: function (response) {\r\n            if (response && response.status === 401) {\r\n                if (Utilities.isNotUndefinedOrNull(response.config) &&\r\n                    (response.config.url === constants.O365CONFIG.SHAREPOINT_URL || response.config.url === constants.O365CONFIG.PHOTO_URL)) {\r\n                    // Don't clear the token if the request is made to get the sharepoint site url or the user photo.\r\n                    return $q.reject(response);\r\n                }\r\n\r\n                userService.clearToken();\r\n            }\r\n\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msaUserService($log, $injector) {\r\n    this.type = constants.USER_TYPE.MSA;\r\n    this.type = constants.USER_SERVICE_TYPE.MSA;\r\n    this.userType = constants.USER_TYPE.MSA;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.MSACONFIG.URL,\r\n            'params': {\r\n                'client_id': constants.MSACONFIG.CLIENT_ID,\r\n                'client_secret': constants.MSACONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.MSACONFIG.REDIRECT_URI\r\n            },\r\n            'resource': constants.ONEDRIVE.INSTANCE,\r\n            'loginUrl': constants.MSACONFIG.INSTANCE + '?response_type=code&client_id=' + constants.MSACONFIG.CLIENT_ID + '&redirect_uri=' + constants.MSACONFIG.REDIRECT_URI + '&scope=' + constants.MSACONFIG.SCOPE,\r\n            'logoutUrl': constants.MSACONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.MSACONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.RECENTS.ONEDRIVE_ENDPOINT\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (data) {\r\n        return new Promise((resolve, reject) => {\r\n            var userInfo = {\r\n                oneDriveUrl: constants.LINKS.APP.ONEDRIVE\r\n            };\r\n\r\n            var $http = $injector.get('$http');\r\n            var request = {\r\n                method: 'GET',\r\n                url: constants.MSACONFIG.USERINFO_URL,\r\n                headers: {\r\n                    'X-UserType': constants.USER_SERVICE_TYPE.MSA\r\n                }\r\n            };\r\n\r\n            $http(request).then(\r\n                function (response) {\r\n                    var data = response.data;\r\n                    userInfo.email = data.emails.account;\r\n                    userInfo.cid = data.id;\r\n                    resolve(userInfo);\r\n                },\r\n                function () {\r\n                    reject(`msaUser.Service.lookupUserInfo http request failed`);\r\n                });\r\n        });\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        return constants.MSACONFIG.SCOPE;\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function o365UserService($log, $injector, notification) {\r\n    this.type = constants.USER_SERVICE_TYPE.O365;\r\n    this.userType = constants.USER_TYPE.O365;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.O365CONFIG.INSTANCE + 'token',\r\n            'params': {\r\n                'client_id': constants.O365CONFIG.CLIENT_ID,\r\n                'client_secret': constants.O365CONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.O365CONFIG.REDIRECT_URI,\r\n                'resource': constants.O365CONFIG.GRAPH_RESOURCE\r\n            },\r\n            'resource': constants.O365CONFIG.GRAPH_RESOURCE,\r\n            'loginUrl': constants.O365CONFIG.INSTANCE + 'authorize?response_type=code&client_id=' + constants.O365CONFIG.CLIENT_ID + '&redirect_uri=' + constants.O365CONFIG.REDIRECT_URI + '&response_mode=query',\r\n            'logoutUrl': constants.O365CONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.O365CONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.O365CONFIG.MRU_URL + constants.RECENTS.FILTER\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        var resource = this.getConfig().resource;\r\n        if (Utilities.isUndefinedOrNull(endpoint)) {\r\n            return resource;\r\n        }\r\n\r\n        // Return resource from config data.\r\n        for (var configEndpoint in constants.O365CONFIG.ENDPOINTS) {\r\n            if (constants.O365CONFIG.ENDPOINTS.hasOwnProperty(configEndpoint) && endpoint.indexOf(configEndpoint) > -1) {\r\n                resource = constants.O365CONFIG.ENDPOINTS[configEndpoint];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return resource;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (tokenData) {\r\n        var userInfo = getUserProfile(tokenData.id_token);\r\n        const oneDriveUrl = await getOneDriveUrl();\r\n        userInfo.oneDriveUrl = oneDriveUrl;\r\n\r\n        const sharePointUrl = await getSharePointUrl();\r\n        userInfo.sharePointUrl = sharePointUrl || constants.LINKS.APP.SHAREPOINT_DEFAULT;\r\n        return userInfo;\r\n    };\r\n\r\n    async function getOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            clearToken();\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error('0365User.getOneDriveUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getSharePointUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.SHAREPOINT_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_SERVICE_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n            return Promise.reject('No SharePoint info for user');\r\n        }\r\n        catch (reason) {\r\n            $log.error('0365User.getSharePointUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function clearToken() {\r\n        var userService = $injector.get('userService');\r\n        userService.clearToken();\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function getUserProfile(idToken) {\r\n        var user = {};\r\n        var parsedJson = extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === constants.O365CONFIG.CLIENT_ID.toLowerCase()) {\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.email = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.email = parsedJson.email;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('puid')) {\r\n                    user.puid = parsedJson.puid;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('tid')) {\r\n                    user.tid = parsedJson.tid;\r\n                }\r\n            } else {\r\n                $log.error('IdToken has invalid aud field');\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function extractIdToken(encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = base64DecodeStringUrlSafe(base64IdToken);\r\n            if (!base64Decoded) {\r\n                this._logstatus('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            $log.error('The returned id_token could not be decoded: ' + err.stack);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function decodeJwt(jwtToken) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3],\r\n        };\r\n\r\n        return crackedToken;\r\n    }\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msidUserService($log, $injector, notification) {\r\n    const type = constants.USER_SERVICE_TYPE.MSID;\r\n    var userService = undefined;\r\n    // previous app registration also included (are they still needed?)\r\n    // Graph:\r\n    // offline_access, Directory.AccessAsUser.All, User.Read.All\r\n    // SharePoint:\r\n    // MyFiles.Read, MyFiles.Write\r\n    const scopes = 'email openid profile user.read';\r\n    const userInfoUrl = 'https://graph.microsoft.com/v1.0/me/';\r\n    const aadV2Url = new URL('https://login.microsoftonline.com/common/oauth2/').toString();\r\n    const msaOAuthUrl = new URL('https://login.live.com/oauth20_authorize.srf').toString();\r\n    const redirectUri = new URL('nativeclient', aadV2Url).toString();\r\n    const logoutUrl = new URL('v2.0/logoutsession', aadV2Url).toString();\r\n    const authorizeUrl = new URL('v2.0/authorize', aadV2Url).toString();\r\n    const aadClientId = 'e28ff72c-58a5-49ba-8125-42ec264d7cd0'; // newest clientId\r\n    const loginUrl = (() => {\r\n        var loginUrl = new URL(authorizeUrl);\r\n        loginUrl.search = createParams({prompt: 'select_account'});\r\n        return loginUrl.toString();\r\n    })();\r\n\r\n    function getUserService() {\r\n        if (!userService) {\r\n            userService = $injector.get('userService');\r\n        }\r\n\r\n        return userService;\r\n    }\r\n\r\n    function createParams(additionalParams) {\r\n        const defaultParams = {\r\n            'client_id': aadClientId,\r\n            'response_type': 'id_token token',\r\n            'redirect_uri': redirectUri,\r\n            'scope': scopes,\r\n            'response_mode': 'fragment',\r\n        };\r\n        const params = new URLSearchParams(Object.assign({}, defaultParams, additionalParams));\r\n        return params.toString();\r\n    }\r\n\r\n    // Could we use chrome.identity.launchWebAuthFlow()\r\n    // with redirect url https://ndjpnladcallmjemlbaebfadecfhkepb.chromiumapp.org/response?\r\n    // see https://developer.chrome.com/extensions/identity#method-launchWebAuthFlow\r\n    function getConfig() {\r\n        return {\r\n            'loginUrl': loginUrl,\r\n            'logoutUrl': logoutUrl,\r\n            'photoUrl': 'https://graph.microsoft.com/beta/me/photo/$value',\r\n            'userInfoUrl': userInfoUrl,\r\n            'documentsUrl': 'https://graph.microsoft.com/v1.0/me/drive/recent'\r\n        };\r\n    }\r\n\r\n    async function handleLogin() {\r\n        const msaParams = {\r\n            'url': msaOAuthUrl,\r\n            'aadredir': 1,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        const aadParams = {\r\n            'url': authorizeUrl,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        // TODO: Not sure if aadv2 requires dual stack approach where we try one endpoint and then another but if\r\n        // so we then need to determine if we should start with AAD or MSA but default to MSA since it can\r\n        // handle sign up in case they want to create a new account for overview on how to handle dual stack\r\n        // select_account see https://identitydocs.azurewebsites.net/static/overview/user_discovery.html\r\n        const authEndpointParams = [];\r\n        // authEndpointParams.push(msaParams); // not adding until app configuration is updated to support msa\r\n        authEndpointParams.push(aadParams);\r\n\r\n        var accountId = undefined;\r\n        for (var endpointParams of authEndpointParams) {\r\n            var loginUrl = new URL(endpointParams.url);\r\n            delete endpointParams.url;\r\n\r\n            if (accountId) {\r\n                endpointParams.set('login_hint', accountId);\r\n            }\r\n            loginUrl.search = createParams(endpointParams);\r\n            var response = await getUserService().navigateToAuthEndpoint(loginUrl.toString(), type);\r\n            if (!response.error || response.error === 'aad_auth') {\r\n                return;\r\n            }\r\n\r\n            if (response.username) {\r\n                accountId = response.username;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function lookupUserInfo(token) {\r\n        const infoFuncs = [\r\n            fetchUserInfo(),\r\n            fetchOneDriveUrl(),\r\n            fetchOneDriveQuota()\r\n        ];\r\n        var results = await Promise.all(infoFuncs);\r\n\r\n        return results.reduce((previous, current) => {\r\n            return Object.assign(previous, current);\r\n        });\r\n    }\r\n\r\n    function deleteMetaDataTags(object) {\r\n        for (const prop in object) {\r\n            if (object.hasOwnProperty(prop)) {\r\n                if (prop.match(/^@odata/i)) {\r\n                    delete object[prop];\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    async function fetchUserInfo() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: userInfoUrl,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        var userInfo = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            userInfo = deleteMetaDataTags(response);\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchUserInfo failed: ${reason}`);\r\n        }\r\n\r\n        return userInfo;\r\n    }\r\n\r\n    async function fetchOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var data = await getUserService().httpRequest(request);\r\n            if (data.webUrl) {\r\n                return {'oneDriveUrl': data.webUrl};\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error(`msidUser.fetchOneDriveUrl failed: ${JSON.stringify(reason)}`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // accounts.microsoft.com makes a call to\r\n    // https://account.microsoft.com/services/api/subscriptions?X-Requested-With=XMLHttpRequest&excludeWindowsStoreInstallOptions=false&_=1571422283464\r\n    // which seems to get consumer subscriptions, maybe another option?\r\n    async function fetchSubscriptionInfo(userType) {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/licenseDetails',\r\n            headers: {\r\n                'X-UserType': userType\r\n            }\r\n        };\r\n\r\n        var licenses = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n\r\n            for (const license of response.value.values()) {\r\n                const sku = license.skuPartNumber.toLowerCase();\r\n                var plans = license.servicePlans.filter(plan => plan.provisioningStatus === 'Success').map(plan => plan.servicePlanName.toLowerCase());\r\n                licenses[sku] = plans;\r\n            }\r\n            return {'licenses': licenses};\r\n        }\r\n        catch (reason) {\r\n            $log.error(`msidUser.fetchSubscriptionInfo failed: ${JSON.stringify(reason)}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function fetchOneDriveQuota() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/drive',\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            var quota = parseInt(response.quota.total) / (1024 * 1024 * 1024);\r\n            quota = Math.round(quota * 100) / 100;\r\n            $log.info(`OneDrive quota: ${JSON.stringify(response.quota, null, '\\t')} capacity: ${quota}GB`);\r\n            return {'driveQuota': response.quota.total, 'driveQuotaString': `${quota}GB`};\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchOneDriveQuota failed: ${reason}`);\r\n        }\r\n    }\r\n\r\n    function getResourceForEndpoint(endpoint) {\r\n        if (!endpoint) {\r\n            return scopes;\r\n        }\r\n\r\n        const endpointResources = {\r\n            'https://graph.microsoft.com': {\r\n                '/v1.0/me/': scopes,\r\n                '/v1.0/me/drive/recent': 'Files.ReadWrite.All' //'https://graph.microsoft.com/Files.ReadWrite.All'\r\n            },\r\n            'https://nleditor.osi.office.net':\r\n            {\r\n                '/NlEditor/': 'https://nleditor.osi.office.net/NlEditor/instrumentation.write'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const url = new URL(endpoint);\r\n            if (!endpointResources.hasOwnProperty(url.origin)) {\r\n                return scopes;\r\n            }\r\n            const paths = endpointResources[url.origin];\r\n            const urlPath = url.pathname;\r\n\r\n            var match = Object.keys(paths).reduce((previous, current) => {\r\n                if (urlPath.startsWith(current) && current.length > previous.length) {\r\n                    return current;\r\n                } else {\r\n                    return previous;\r\n                }\r\n            });\r\n\r\n            return paths[match];\r\n        }\r\n        catch (reason) {\r\n            $log.warning(`msidUser.Service threw an exception: ${reason}`);\r\n            return scopes;\r\n        }\r\n    }\r\n\r\n    async function requestAccessToken(resource, userInfo) {\r\n        var additionalParams = {scope: resource, response_type: 'token'};\r\n        if (userInfo && userInfo.email) {\r\n            // additionalParams['domain_hint'] = organizations;\r\n            additionalParams['login_hint'] = userInfo.email;\r\n        }\r\n        var params = createParams(additionalParams);\r\n        var url = new URL(authorizeUrl);\r\n\r\n        url.search = params.toString();\r\n        var result = await getUserService().navigateToAuthEndpoint(url.href, type, true);\r\n\r\n        if (!result || !result.access_token) {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.info(`failed to get token from iframe for resource ${resource}`);\r\n            return Promise.reject(`unable to retrieve result from ${url.href}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        getConfig: getConfig,\r\n        getResourceForEndpoint: getResourceForEndpoint,\r\n        // handleLogin: handleLogin,\r\n        lookupUserInfo: lookupUserInfo,\r\n        requestAccessToken: requestAccessToken\r\n    };\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\nimport constants from '../common/constants';\r\nimport Utilities from '../common/utilities';\r\nimport { OneDSEndpoint, OneDSSink, OsPlugin } from \"@microsoft/oteljs-1ds\";\r\nimport * as OTel from '@microsoft/oteljs';\r\n\r\n// ppe = 'https://nleditor.osi.officeppe.net/NLEditor/BrowserExtension/V1'\r\nconst FlightingUrl = 'https://nleditor.osi.office.net/NLEditor/api/V1/BrowserExtension';\r\n\r\nexport default function userService($q, $log, $injector, $window, storage, notification, msaUserService, o365UserService, msidUserService) {\r\n    function authMessageListener(message, sender, response) {\r\n        switch (message.activity) {\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n                logout().then(() => {\r\n                    response();\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n                login(message.type).then(result => {\r\n                    response(result);\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n                {\r\n                    // This handler can probably go away if it's determined that we don't\r\n                    // need to call authenticate for any responses that aren't our own\r\n                    if (sender.id === BrowserHandler.runtime.id && message.close) {\r\n                        if (sender.tab && sender.tab.id) {\r\n                            BrowserHandler.tabs.remove(sender.tab.id);\r\n                        }\r\n                        delete message.close;\r\n                    }\r\n\r\n                    authorize(unpackStateParam(message)).then(() => {\r\n                        response();\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                {\r\n                    navigateToAuthEndpoint(message.data.url, message.data.type, message.data.inIFrame).then(token => {\r\n                        response(token);\r\n                    });\r\n                    return true;\r\n                }\r\n            default:\r\n                {\r\n                    return;\r\n                }\r\n        }\r\n    }\r\n\r\n    // This module can be loaded by pages other than the background page so only\r\n    // handle these messages on the background page\r\n    if (Utilities.isBackgroundContext()) {\r\n        BrowserHandler.runtime.onMessage.addListener(authMessageListener);\r\n    }\r\n\r\n    async function acquireToken(userOrServiceType, endpoint, resource) {\r\n        var userService = {};\r\n        userService = await getServiceProvider(userOrServiceType);\r\n\r\n        if (!userService) {\r\n            $log.error('userService.acquireToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        if (!resource && userService.getResourceForEndpoint) {\r\n            resource = userService.getResourceForEndpoint(endpoint);\r\n        }\r\n\r\n        var token = {};\r\n        try {\r\n            token = await getAccessToken(endpoint, resource);\r\n\r\n            // if found cached token for resource/scope and not expired, return it\r\n            if (token && token.access_token && !isTokenExpired(token.expires_on)) {\r\n                $log.debug(`Using cached token with resource:'${resource}'${endpoint ? ' for ' + endpoint : ''} `);\r\n                return token.access_token;\r\n            }\r\n\r\n            token = await requestAccessToken(userService, resource);\r\n\r\n            if (token) {\r\n                saveTokens(userService, endpoint, token);\r\n            } else {\r\n                return Promise.reject('No tokens available');\r\n            }\r\n        }\r\n        catch (reason) {\r\n            $log.error(`userService.acquireToken - failed. reason: ${reason}, userType: ${userOrServiceType}, endpoint: ${endpoint}, resource: ${resource}`);\r\n        }\r\n\r\n        if (!token || !token.access_token || !token.expires_on || isTokenExpired(token.expires_on)) {\r\n            return null;\r\n        }\r\n\r\n        return token.access_token;\r\n    }\r\n\r\n    function getFunctionName() {\r\n        var stack = Error().stack;\r\n        if (stack.length < 3) {\r\n            return;\r\n        }\r\n        var caller = stack.split('\\n')[2];\r\n        var match = caller.match(/^\\s*at\\s*(\\w*)/);\r\n        if (!match || match.length < 2) {\r\n            return;\r\n        }\r\n\r\n        return match[1];\r\n    }\r\n\r\n    async function httpRequest(request) {\r\n        if (!request) {\r\n            return Promise.reject('Invalid Request');\r\n        }\r\n\r\n        var stack = new Error().stack;\r\n        var result = new Promise((resolve, reject) => {\r\n            const $http = $injector.get('$http');\r\n\r\n            $http(request).then(\r\n                (response) => {\r\n                    resolve(response.data);\r\n                },\r\n                (response) => {\r\n                    reject(`httpRequest failed for url: ${request.url} reason: ${response.statusText} stack:\\n ${stack}`);\r\n                });\r\n\r\n        });\r\n\r\n        return (await result);\r\n    }\r\n\r\n    async function acquireTokenFromCode(userService, code) {\r\n        if (!userService) {\r\n            $log.error('userService.acquireTokenFromCode - Invalid type');\r\n            Promise.reject('Invalid userService type');\r\n            return;\r\n        }\r\n\r\n        var config = userService.getConfig();\r\n        config.params.grant_type = constants.OAUTH.AUTH_CODE;\r\n        config.params.code = code;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        const accessToken = await httpRequest(request);\r\n        await saveTokens(userService, userService.getConfig().resource, accessToken);\r\n        // is all the above needed or would protectedResourceInterceptor call into acquireToken\r\n        // if the userType was just added to the header here?\r\n        await lookupUserInfo(userService, accessToken);\r\n        return accessToken.access_token;\r\n    }\r\n\r\n    async function getRefreshToken() {\r\n        return getIdentityProperty('refresh_token');\r\n    }\r\n\r\n    async function refreshAccessToken(userService, resource, refresh_token) {\r\n        if (!userService) {\r\n            $log.error('userService.refreshAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        var token = {};\r\n        var config = userService.getConfig();\r\n\r\n        config.params.grant_type = constants.OAUTH.REFRESH_TOKEN;\r\n        config.params.resource = resource;\r\n        config.params.refresh_token = refresh_token;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        token = await httpRequest(request);\r\n        return token;\r\n    }\r\n\r\n    async function requestAccessToken(userService, resource) {\r\n        if (!userService) {\r\n            $log.error('userService.requestAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        // if there's a refresh token available (code grant only) attempt to renew it\r\n        // if there is no refresh token then it's an implicit flow which just attempts\r\n        // to get a new access token\r\n        const refreshToken = await getRefreshToken();\r\n        if (refreshToken) {\r\n            return refreshAccessToken(userService, resource, refreshToken);\r\n        }\r\n\r\n        const userType = await getUserType();\r\n        var userInfo = await getUserInfo(userType);\r\n        if (userService.requestAccessToken) {\r\n            var result = await userService.requestAccessToken(resource, userInfo);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async function authorize(request) {\r\n        const serviceType = request.type;\r\n        var userType = undefined;\r\n        var dataBoundary = undefined;\r\n        var userAndTenantId = undefined;\r\n        var userService = await getServiceProvider(serviceType);\r\n        var result = false;\r\n        if (!userService) {\r\n            $log.error('userService.authenticate - Invalid type');\r\n            return;\r\n        }\r\n\r\n        if (request.code) {\r\n            userType = serviceType.userType;\r\n            try {\r\n                var token = await acquireTokenFromCode(userService, request.code);\r\n                result = !!token;\r\n\r\n            }\r\n            catch (reason) {\r\n                if (userType === constants.USER_TYPE.O365) {\r\n                    notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (request.id_token) {\r\n                userType = await setUserType(request.id_token);\r\n                dataBoundary = await setUserDataBoundary(request.id_token);\r\n                userAndTenantId = await setUserAndTenantId(request.id_token);\r\n                createOtelSink(userType, dataBoundary, userAndTenantId);\r\n            }\r\n            if (request.access_token) {\r\n                await saveTokens(userService, userService.getConfig().userInfoUrl, request);\r\n                if (!userType) {\r\n                    userType = await getUserType();\r\n                }\r\n                await lookupUserInfo(userService, request.id_token);\r\n            }\r\n            result = userType !== constants.USER_TYPE.NONE;\r\n        }\r\n        if (request.error) {\r\n            if (request.error === 'interaction_required') {\r\n                login(await getUserType(), false);\r\n            } else {\r\n                $log.error(`userService.authenticate - authentication returned error: ${request.error} description: ${request.error_description} request: ${JSON.stringify(request)}`);\r\n            }\r\n        }\r\n\r\n        $log.trackEvent('Request.Authorization', {'ServiceType': serviceType, 'Succeeded': result, 'EventCategory': 'Request'});\r\n        return result ? Promise.resolve() : Promise.reject();\r\n    }\r\n\r\n    async function clearToken() {\r\n        return Promise.all([\r\n            storage.remove('accessToken'),\r\n            storage.remove('refreshToken'),\r\n            storage.remove('userInfo'),\r\n            storage.remove('userType'),\r\n            storage.remove('identity'),\r\n        ]);\r\n    }\r\n\r\n    async function createOtelSink(userType, dataBoundary, userAndTenantId) {\r\n\r\n        //Initialize OTel Logger\r\n        const osPlugin = new OsPlugin();\r\n        await osPlugin.detectOs();\r\n        //set EU/RoW endpoint\r\n        const oneDSSinkProperties = {\r\n            endpointUrl: dataBoundary.dataBoundary === 'EU' && userType === 'aad' ? OneDSEndpoint.EUDB : OneDSEndpoint.PUBLIC,\r\n            plugins: [osPlugin],\r\n        };\r\n        const persistentDataFields = [\r\n            ...OTel.App.getFields({\r\n                name: \"M365Extension\",\r\n                platform: \"Web\",\r\n            }),\r\n            ...OTel.User.getFields({\r\n                primaryIdentitySpace: userType === 'aad' ? 'OrgIdPUID' : 'MSAPUID',\r\n                primaryIdentityHash: userAndTenantId['userId'],\r\n                isAnonymous: false,\r\n                tenantId: userAndTenantId['tenantId'],\r\n                tenantGroup: userType === 'aad' ? 'Commercial' : 'Consumer',\r\n            }),\r\n            OTel.makeStringDataField('DeviceType', window.sessionStorage.getItem('deviceType')),\r\n        ];\r\n        const oneDSSink = new OneDSSink(persistentDataFields, oneDSSinkProperties);\r\n        \r\n        //remove existing sinks and add new one for correct data boundary\r\n        $window.otelLogger.telemetrySinks = [];\r\n        $window.otelLogger.addSink(oneDSSink);\r\n        //flush the queue of stored events\r\n        $window.otelLogger.flushQueue();\r\n    }\r\n\r\n    async function getLoginStatus() {\r\n        var result = await storage.get('userType');\r\n\r\n        if (!result.userType) {\r\n            return false;\r\n        }\r\n        try {\r\n            var accessToken = await acquireToken(result.userType);\r\n            return !!accessToken;\r\n        }\r\n        catch (reason) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function isLoggedIn() {\r\n        var storageData = await storage.get(['userType', 'identity']);\r\n        return (storageData.identity && storageData.userType && storageData.userType !== constants.USER_TYPE.NONE /*&& result.accessToken*/);\r\n    }\r\n\r\n    async function getUserType() {\r\n        // Does this still need to be here? every telemetry call\r\n        // calls this which causes us to log back in again\r\n        /*\r\n        var status = await getLoginStatus();\r\n        if (!status) {\r\n            deferred.resolve(constants.USER_TYPE.NONE);\r\n            return deferred.promise;\r\n        }\r\n        */\r\n\r\n        var result = await storage.get('userType');\r\n        return result.userType || constants.USER_TYPE.NONE;\r\n    }\r\n\r\n    async function setUserType(typeOrToken) {\r\n        var userType = '';\r\n        if (Object.values(constants.USER_TYPE).includes(typeOrToken)) {\r\n            userType = typeOrToken;\r\n        } else {\r\n            var tenantInfo = resolveTypeAndTenant(typeOrToken);\r\n            userType = tenantInfo.type;\r\n            delete tenantInfo.type;\r\n\r\n            var tenantEntry = {\r\n                [userType]: tenantInfo\r\n            };\r\n\r\n            var identity = await getStoredIdentity();\r\n\r\n            mergeProperties(identity, tenantEntry);\r\n            await storage.set({identity});\r\n        }\r\n\r\n        if (userType !== constants.USER_TYPE.NONE) {\r\n            await storage.set({'userType': userType});\r\n        }\r\n\r\n        return userType;\r\n    }\r\n\r\n    async function getUserDataBoundary() {\r\n        var result = await storage.get('dataBoundary');\r\n        return result.dataBoundary || constants.USER_DATA_BOUNDARY.NONE;\r\n    }\r\n\r\n    async function setUserDataBoundary(boundaryOrToken) {\r\n        var boundary = '';\r\n        if(Object.values(constants.USER_DATA_BOUNDARY).includes(boundaryOrToken)) {\r\n            boundary = boundaryOrToken;\r\n        } else {\r\n            try {\r\n                const {header, payload} = parseJwtToken(boundaryOrToken);\r\n                boundary = {['dataBoundary']: payload.xms_tdbr};\r\n                if(boundary.dataBoundary === undefined) {\r\n                    boundary.dataBoundary = constants.USER_DATA_BOUNDARY.NONE;\r\n                }\r\n                await storage.set({'dataBoundary': boundary});\r\n            }\r\n            catch (error) {\r\n                $log.error(`userService.setUserDataBoundary - unable to parse token: ${error}`);\r\n                return {type: constants.USER_DATA_BOUNDARY.NONE};\r\n            }\r\n        }\r\n        return boundary;\r\n    }\r\n\r\n    async function getUserAndTenantId() {\r\n        var uid = await storage.get('userId');\r\n        var tid = await storage.get('tenantId');\r\n        var result = {userId: uid['userId'], tenantId: tid['tenantId']};\r\n        return result;\r\n    }\r\n\r\n    async function setUserAndTenantId(idOrToken) {\r\n        var puid = '';\r\n        var tid = '';\r\n        try {\r\n            const {header, payload} = parseJwtToken(idOrToken);\r\n            puid = payload.puid;\r\n            tid = payload.tid;\r\n            await storage.set({'userId': payload.puid});\r\n            await storage.set({'tenantId': payload.tid});\r\n        }\r\n        catch (error) {\r\n            $log.error(`userService.setUserAndTenantId - unable to parse token: ${error}`);\r\n            return undefined;\r\n        }\r\n        return {userId: puid, tenantId: tid};\r\n    }\r\n\r\n    function unpackStateParam(message) {\r\n        // separate the type from the state param\r\n        if (message.state) {\r\n            message.state = decodeURIComponent(message.state);\r\n        }\r\n        var [state, type, appid] = message.state.split('|');\r\n        if (type) {\r\n            message.type = type;\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    async function navigateToAuthEndpoint(url, type, inIFrame) {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({activity: 'requestToken', data: {url: url, type: type, inIFrame: inIFrame}}, token => {\r\n                    resolve(token);\r\n                });\r\n            } else {\r\n                url = new URL(url);\r\n                const params = url.searchParams;\r\n                for (const param of ['state', 'nonce']) {\r\n                    var value = params.get(param);\r\n                    if (!value) {\r\n                        value = createGuid();\r\n                    }\r\n                    // append the type to ensure the same is used to handle the response\r\n                    if (param === 'state' && type) {\r\n                        value += '|' + type + '|' + constants.APPINFO_NAME;\r\n                    }\r\n\r\n                    params.set(param, value);\r\n                }\r\n\r\n                var frameId = undefined;\r\n                var timeout = undefined;\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function cleanup() {\r\n                    BrowserHandler.runtime.onMessage.removeListener(listener);\r\n                    if (frameId) {\r\n                        var iframe = document.getElementById(frameId);\r\n                        if (iframe) {\r\n                            iframe.parentNode.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // remember the state parameter to unsure the response has the same state\r\n                const state = params.get('state');\r\n                const scope = params.get('scope');\r\n\r\n                $log.info(`loading auth url:${url.href} ${inIFrame ? 'in iframe' : ''}`);\r\n                var info = await getUserInfo();\r\n                if (info && info.email && !params.has('login_hint')) {\r\n                    params.set('login_hint', info.email);\r\n                }\r\n\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function listener(message, sender, response) {\r\n                    if (sender.id !== BrowserHandler.runtime.id) {\r\n                        $log.debug(`auth listener rejected invalid id: ${sender.id}`);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.activity === constants.ACTIVITY.AUTHORIZATION.NAME) {\r\n                        var result = unpackStateParam(message);\r\n\r\n                        if (!result) {\r\n                            $log.error(`userService.listener - auth url:${url} returned null response `);\r\n                            reject(result);\r\n                        }\r\n\r\n                        if (result.state !== state) {\r\n                            $log.warn(`userService.listener - auth url:${url} mismatched state:${result.state}`);\r\n                        }\r\n\r\n                        $log[result.error ? 'error' : 'debug'](`userService.listener - auth response:${JSON.stringify(result)} received from url:${url}`);\r\n\r\n                        if (timeout) {\r\n                            clearTimeout(timeout);\r\n                        }\r\n\r\n                        delete result.activity;\r\n                        cleanup();\r\n                        resolve(result);\r\n                    }\r\n                }\r\n                BrowserHandler.runtime.onMessage.addListener(listener);\r\n\r\n                if (!inIFrame) {\r\n                    BrowserHandler.tabs.create({url: url.toString()});\r\n                } else {\r\n                    params.set('prompt', 'none');\r\n                    frameId = 'authFrame!' + scope;\r\n\r\n                    const iframeAuthDelay = 60000;\r\n                    timeout = setTimeout(() => {\r\n                        $log.warn(`userService.authInFrame timed out waiting for ${url.toString()} after ${iframeAuthDelay} ms`);\r\n                        cleanup();\r\n                        reject('Timed out waiting for response from iFrame');\r\n                    }, iframeAuthDelay);\r\n\r\n                    var iframe = document.getElementById(frameId);\r\n                    if (!iframe) {\r\n                        iframe = document.createElement('iframe');\r\n                        iframe.setAttribute('id', frameId);\r\n                        iframe.style.visibility = \"hidden\";\r\n                        iframe.style.position = \"absolute\";\r\n                        iframe.style.width = iframe.style.height = \"0\";\r\n                        iframe.style.border = \"0\";\r\n                        iframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n\r\n                        document.body.appendChild(iframe);\r\n                        iframe.src = url.toString();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async function login(userType, clear = true) {\r\n        if (clear === true) {\r\n            clearToken();\r\n        }\r\n\r\n        var userService = await getServiceProvider(userType);\r\n        if (userService.handleLogin) {\r\n            return userService.handleLogin();\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        var loginUrl = config['loginUrl'];\r\n        if (!loginUrl) {\r\n            $log.error('userService.login - Invalid type');\r\n            return;\r\n        }\r\n\r\n        return navigateToAuthEndpoint(loginUrl, userService.type);\r\n    }\r\n\r\n    async function logout() {\r\n        const userType = await getUserType();\r\n        var userService = await getServiceProvider(userType);\r\n        clearToken();\r\n        if (userService.handleLogout) {\r\n            await userService.handleLogout();\r\n        } else {\r\n            const config = userService.getConfig();\r\n            var logoutUrl = config['logoutUrl'];\r\n            if (!logoutUrl) {\r\n                $log.error('userService.logout - Invalid type');\r\n                return;\r\n            }\r\n\r\n            var request = {\r\n                method: 'GET',\r\n                url: logoutUrl\r\n            };\r\n\r\n            await httpRequest(request);\r\n        }\r\n\r\n        $log.debug(`userService.logout - ${userType}`);\r\n    }\r\n\r\n    async function getDeviceId() {\r\n        var result = await storage.get('deviceId');\r\n        if (result.deviceId) {\r\n            return result.deviceId;\r\n        }\r\n\r\n        var id = createGuid();\r\n        await storage.set({'deviceId': id});\r\n        return id;\r\n    }\r\n\r\n    async function useAuthNext(toggle) {\r\n        if (typeof toggle !== 'undefined') {\r\n            storage.set({'authNext': {override: toggle}});\r\n        }\r\n\r\n        return checkAuthFlighting({noLogout: true});\r\n    }\r\n\r\n    window.useAuthNext = useAuthNext;\r\n    window.checkTransitionAuth = checkAuthFlighting;\r\n\r\n    // only check once a day\r\n    const transitionAuthInterval = 24 /*hours*/ * 3600 /*seconds per hour*/ * 1000/* millseconds per second*/;\r\n\r\n    async function initCheckTransition() {\r\n        $log.debug('initCheckTransition');\r\n        //check now before setting interval\r\n        await checkAuthFlighting();\r\n        // set the recurring interval to perform the check\r\n        setInterval(checkAuthFlighting, transitionAuthInterval);\r\n    }\r\n\r\n    if (Utilities.isBackgroundContext()) {\r\n        initCheckTransition();\r\n    }\r\n\r\n    async function checkAuthFlighting(options) {\r\n        var now = new Date();\r\n        const checkedTime = now.toUTCString();\r\n        var storageData = await storage.get('authNext');\r\n        now = Math.round(now / 1000);\r\n        var elapsed = 0;\r\n        if (storageData.authNext && storageData.authNext.lastCheck && Utilities.isNotUndefinedOrNull(storageData.authNext.flighted)) {\r\n            elapsed = now - storageData.authNext.lastCheck;\r\n\r\n            if (!(options && options.force === true) && elapsed < transitionAuthInterval && storageData.authNext.flighted) {\r\n                return storageData.authNext.flighted;\r\n            }\r\n        }\r\n\r\n        $log.info(`checkTransitionAuth time:${checkedTime}`);\r\n\r\n        var authNext = await (async () => {\r\n            // Guidance from service is to use deviceId as userId since the userId isn't\r\n            // always available, and would change if they login with a different account.\r\n            // X_UserId needs to be consistent so they don't jump flights but\r\n            // X_CorrelationId isn't required\r\n            const editorService = FlightingUrl;\r\n            var deviceId = await getDeviceId();\r\n            var request = {\r\n                url: editorService,\r\n                method: 'POST',\r\n                accept: 'application/json',\r\n                contentType: 'application/json',\r\n                headers: {\r\n                    // 'X-CorrelationId': deviceId,\r\n                    'X-UserId': deviceId // CodeQL [js/insecure-randomness] False-positive: Device Id for flighting doesn't need to be be cryptographically secure.\r\n                },\r\n                data: {\r\n                    AppId: \"OfficeBX_Online\"\r\n                }\r\n            };\r\n\r\n            var result = {};\r\n            try {\r\n                result = await httpRequest(request);\r\n            } catch (error) {\r\n                // eslint-disable-next-line no-debugger\r\n                debugger;\r\n                $log.error(`userService.checkAuthFlighting - Call to editor service failed. error:${JSON.stringify(error)}`);\r\n            }\r\n\r\n            var enabled = false;\r\n            if (result && result.FeatureFlags && result.FeatureFlags.authNext) {\r\n                var authNext = result.FeatureFlags.authNext;\r\n                enabled = typeof authNext === 'string' ? authNext.toLowerCase() === 'true' : !!authNext;\r\n            }\r\n\r\n            $log.info(`editor featureFlags.authNext returned:${enabled}`);\r\n            return enabled;\r\n        })();\r\n\r\n        await storage.set({'authNext': {flighted: authNext, 'lastCheck': now}});\r\n\r\n        // check the override last so the flighting service will still get called as usual\r\n        if (storageData.authNext && Utilities.isNotUndefinedOrNull(storageData.authNext.override)) {\r\n            $log.info(`using authNext override from local storage.`);\r\n            return storageData.authNext.override;\r\n        }\r\n\r\n        var serviceType = await getIdentityProperty('service');\r\n        if (authNext === (serviceType === constants.USER_SERVICE_TYPE.MSID)) {\r\n            // current serviceType and authNext match so return with no change\r\n            return;\r\n        }\r\n\r\n        $log.trackEvent('Request.AuthNext', {'Elapsed': elapsed, 'AuthNext': authNext, serviceType, 'EventCategory': 'Request'});\r\n\r\n        // logout to force user to login with correct flighted auth\r\n        if (options && !options.noLogout) {\r\n            await logout();\r\n        }\r\n    }\r\n\r\n    async function getLastAuthCheck() {\r\n        if (!window.lastAuthFlightCheck) {\r\n            var result = await storage.get('authNext');\r\n            if (result.lastCheck) {\r\n                window.lastAuthFlightCheck = result.lastCheck;\r\n            }\r\n        }\r\n        return window.lastAuthFlightCheck;\r\n    }\r\n\r\n\r\n    async function getServiceForUserType(userType) {\r\n        // if one serviceType was responsible for logged in identity return it\r\n        var serviceType = await getIdentityProperty('service', userType);\r\n        if (serviceType) {\r\n            return serviceType;\r\n        }\r\n\r\n        // otherwise determine which to use\r\n        serviceType = constants.USER_SERVICE_TYPE.NONE;\r\n        if (await useAuthNext()) {\r\n            return constants.USER_SERVICE_TYPE.MSID;\r\n        }\r\n\r\n        switch (userType) {\r\n            case constants.USER_TYPE.MSA:\r\n                serviceType = constants.USER_SERVICE_TYPE.MSA;\r\n                break;\r\n            case constants.USER_TYPE.O365:\r\n                serviceType = constants.USER_SERVICE_TYPE.O365;\r\n                break;\r\n        }\r\n        return serviceType;\r\n    }\r\n\r\n    async function getServiceProvider(type) {\r\n        var userServiceProvider = null;\r\n        if (!Object.values(constants.USER_SERVICE_TYPE).includes(type)) {\r\n            type = await getServiceForUserType(type);\r\n        }\r\n        // Determine which user service to use and inject\r\n        if (type.indexOf(constants.USER_SERVICE_TYPE.MSA) !== -1) {\r\n            userServiceProvider = msaUserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.O365) !== -1) {\r\n            userServiceProvider = o365UserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.MSID) !== -1) {\r\n            userServiceProvider = msidUserService;\r\n        } else {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.error(`userService.getServiceProvider - Invalid type - ${type}`);\r\n        }\r\n\r\n        return userServiceProvider;\r\n    }\r\n\r\n    async function getStoredIdentity() {\r\n        var result = await storage.get('identity');\r\n        return (result && result.identity) ? result.identity : {};\r\n    }\r\n\r\n    function mergeProperties(target, source) {\r\n        for (var [key, sourceValue] of Object.entries(source)) {\r\n            if (!sourceValue) {\r\n                continue;\r\n            }\r\n\r\n            if (!target[key] || target[key] === \"none\" || sourceValue === \"none\") {\r\n                target[key] = sourceValue;\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue !== typeof target[key]) {\r\n                $log.warn(`skipping ${key} due to conflicting types`);\r\n                continue;\r\n            }\r\n\r\n            if (Array.isArray(sourceValue)) {\r\n                sourceValue.forEach((value) => {\r\n                    var index = target[key].indexOf(value);\r\n                    if (index < 0) {\r\n                        target[key].push(value);\r\n                    }\r\n                });\r\n\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue === 'object') {\r\n\r\n                mergeProperties(target[key], sourceValue);\r\n                continue;\r\n            }\r\n            target[key] = sourceValue;\r\n        }\r\n    }\r\n\r\n    function resolveTypeAndTenant(tokenData) {\r\n        var scopes = tokenData.scopes || tokenData.scope;\r\n        if (scopes && scopes.includes('wl.')) {\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n        var idToken = tokenData.id_token || tokenData;\r\n        if (!idToken) {\r\n            return {type: constants.USER_TYPE.NONE};\r\n        }\r\n\r\n        const tenants = {\r\n            '9188040d-6c67-4c5b-b112-36a304b66dad': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'prod'\r\n            },\r\n            '4925308c-f164-4d2d-bc7e-0631132e9375': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'ppe'\r\n            },\r\n            '72f988bf-86f1-41af-91ab-2d7cd011db47': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'prod', 'domain': 'microsoft.com'\r\n            },\r\n            'f686d426-8d16-42db-81b7-ab578e110ccd': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'ppe', 'domain': 'microsoft.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const {header, payload} = parseJwtToken(idToken);\r\n            var result = {['tenant']: payload.tid};\r\n            if (tenants.hasOwnProperty(result.tenant)) {\r\n                var tenantInfo = tenants[result.tenant];\r\n                result = Object.assign(result, tenantInfo);\r\n            } else {\r\n                // everything not included in tenants would be AAD\r\n                result.type = constants.USER_TYPE.O365;\r\n            }\r\n\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            // If it wasn't parsable then it must be an MSA\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n    }\r\n\r\n    function getEndpointBase(endpoint) {\r\n        const url = new URL(endpoint);\r\n        return url.origin;\r\n    }\r\n\r\n    async function saveTokens(userService, endpoint, tokenData) {\r\n        if (tokenData.expires_in && !tokenData.expires_on) {\r\n            tokenData.expires_on = Utilities.getCurrentTime() + Number(tokenData.expires_in);\r\n        }\r\n\r\n        if (!endpoint) {\r\n            $log.error('userService.saveTokens - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        var userType = await getUserType();\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            userType = await setUserType(tokenData);\r\n        }\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.error('userService.saveTokens - unable to resolve userType');\r\n            return;\r\n        }\r\n\r\n        var scope = decodeURIComponent(tokenData.scope).toLowerCase().split(/[ +]/);\r\n\r\n        // if one of the scopes contains a url, then it is the actual endpoint\r\n        for (const item of scope) {\r\n            var result = item.match(/(^https:\\/\\/[.\\w]*(?:\\S+\\/))/i);\r\n            if (result) {\r\n                endpoint = result[result.index];\r\n                break;\r\n            }\r\n        }\r\n        endpoint = getEndpointBase(endpoint);\r\n        if (tokenData.resource && tokenData.resource !== endpoint) {\r\n            $log.info(`saveTokens ${endpoint} does not match ${tokenData.resource}`);\r\n            endpoint = tokenData.resource;\r\n        }\r\n\r\n        var tokenEntry = {\r\n            [userType]: {\r\n                \"id_token\": tokenData.id_token,\r\n                \"refresh_token\": tokenData.refresh_token,\r\n                \"service\": userService.type,\r\n                \"resources\": {\r\n                    [endpoint]: {\r\n                        \"access_token\": tokenData.access_token,\r\n                        \"expires_in\": tokenData.expires_in,\r\n                        \"expires_on\": tokenData.expires_on,\r\n                        \"scope\": scope\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        mergeProperties(identity, tokenEntry);\r\n        await storage.set({identity});\r\n    }\r\n\r\n    function supportsScopes(required, granted) {\r\n        if (!required) {\r\n            return true;\r\n        }\r\n\r\n        if (!granted) {\r\n            return false;\r\n        }\r\n\r\n        if (!Array.isArray(required)) {\r\n            required = required.toLowerCase().split(/[ +]/);\r\n        }\r\n\r\n        for (const scope of required) {\r\n            if (!granted.includes(scope)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async function getAccessToken(endpoint, resourceScope) {\r\n        if (!endpoint) {\r\n            $log.error('userService.getAccessToken - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        endpoint = getEndpointBase(endpoint);\r\n\r\n        try {\r\n            var allTokens = await getIdentityProperty('resources');\r\n\r\n            // either specifically by name or the first one if there is no entry for the endpoint\r\n            if (allTokens[endpoint]) {\r\n\r\n                var tokenData = allTokens[endpoint];\r\n                // if the resource is the same as the endpoint as in the case of legacy auth,\r\n                // no reason to validate the scopes. just return it\r\n                if (endpoint === resourceScope) {\r\n                    return tokenData;\r\n                }\r\n\r\n                if (tokenData && supportsScopes(resourceScope, tokenData.scope)) {\r\n                    return tokenData;\r\n                }\r\n\r\n                // remove it from the array so it's not checked again below\r\n                delete allTokens[endpoint];\r\n            }\r\n\r\n            // in case the token data was stored under a different endpoint, try to find the appropriate\r\n            // scopes stored under other scopes\r\n            for (const token in allTokens) {\r\n                if (supportsScopes(resourceScope, token.scope)) {\r\n                    return token;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getUserInfo(userType) {\r\n        return getIdentityProperty('userInfo', userType);\r\n    }\r\n\r\n    async function getIdentityProperty(property, userType) {\r\n        if (!userType) {\r\n            userType = await getUserType();\r\n        }\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        if (!identity[userType] || !identity[userType][property]) {\r\n            return null;\r\n        }\r\n\r\n        return identity[userType][property];\r\n    }\r\n\r\n    // Waits for the userInfo to be available (non-null) before resolving\r\n    async function waitForUserInfo(userType) {\r\n        return new Promise(async (resolve) => {\r\n            var userInfo = await getUserInfo(userType);\r\n            // userInfo is available => resolve\r\n            if (Utilities.isNotUndefinedOrNull(userInfo)) {\r\n                return resolve(userInfo);\r\n            }\r\n\r\n            BrowserHandler.runtime.onMessage.addListener(userInfoListener);\r\n\r\n            // in testing mode, only wait for a short time before giving up on getting the userInfo so as not to slow down unit tests too much\r\n            var giveUpDelay = Utilities.isExtensionInTestingMode() ? constants.TIMEOUT.USER_INFO_LOOKUP_TEST : constants.TIMEOUT.USER_INFO_LOOKUP;\r\n\r\n            // if looking up the userInfo takes too long, resolve with the current userInfo (undefined or null)\r\n            var giveUp = setTimeout(() => {\r\n                $log.warn(`userService.waitForUserInfo timed out after ${constants.TIMEOUT.USER_INFO_LOOKUP} ms - ${userType}`);\r\n                cleanUp();\r\n                resolve(userInfo);\r\n            }, giveUpDelay);\r\n\r\n            // listen for a runtime message that is sent when the userInfo is available from lookupUserInfo\r\n            function userInfoListener(request) {\r\n                if (request.activity === constants.ACTIVITY.USERINFO_AVAILABLE.NAME) {\r\n                    cleanUp();\r\n                    clearTimeout(giveUp);\r\n                    resolve(request.data);\r\n                }\r\n            }\r\n\r\n            function cleanUp() {\r\n                BrowserHandler.runtime.onMessage.removeListener(userInfoListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function saveUserInfo(userType, data, replace) {\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        var userInfo = {};\r\n        if (identity[userType] && identity[userType].userInfo && !replace) {\r\n            userInfo = identity[userType].userInfo;\r\n        }\r\n\r\n        mergeProperties(userInfo, data);\r\n\r\n        if (identity[userType]) {\r\n            identity[userType].userInfo = userInfo;\r\n            await storage.set({identity});\r\n        }\r\n    }\r\n\r\n    function isTokenExpired(expiresOn) {\r\n        var now = Utilities.getCurrentTime();\r\n        var offset = 120;\r\n        return expiresOn && expiresOn > now + offset ? false : true;\r\n    }\r\n\r\n    async function lookupUserInfo(userService, tokenData) {\r\n        var userType = await getUserType();\r\n\r\n        var userInfo = await userService.lookupUserInfo(tokenData);\r\n        // send a message (listened to in waitForUserInfo) with the newly available userInfo\r\n        BrowserHandler.runtime.sendMessage({activity: constants.ACTIVITY.USERINFO_AVAILABLE.NAME, data: userInfo});\r\n        // save the userInfo to local storage\r\n        if (!userInfo.email && userInfo.userPrincipalName) {\r\n            userInfo.email = userInfo.userPrincipalName;\r\n        }\r\n\r\n        await saveUserInfo(userType, userInfo, true);\r\n\r\n        // get user's profile photo\r\n        await getPhotoFromServer(userService);\r\n    }\r\n\r\n    // TODO: consolidate with o365User once we have WebPack\r\n    function parseJwtToken(token) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(token);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('userService.parseJwtToken - The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var header = JSON.parse(base64DecodeStringUrlSafe(matches[1]));\r\n        var payload = JSON.parse(base64DecodeStringUrlSafe(matches[2]));\r\n        return {header, payload};\r\n    }\r\n\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n    }\r\n\r\n    // Gets the user's photo (profile picture) from either local storage or an http call\r\n    // Calls the helper functions attached to the service (getUserType, getUserInfo, getPhotoFromServer) to allow for mocking in UTs\r\n    async function getUserPhoto() {\r\n        var userType = await getUserType();\r\n        // Invalid user type - no photo\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.warn('UserService.getUserPhoto: no signed-in user');\r\n            return Promise.reject(constants.RECENTS.ERROR.UNSUPPORTED_USER_TYPE);\r\n        }\r\n\r\n        var userInfo = await getUserInfo(userType);\r\n        // If there is a photo in local storage, use that\r\n        if (userInfo && userInfo.photo) {\r\n            $log.trackEvent('Request.GotLocalPhoto', {'EventCategory': 'Request'});\r\n            return userInfo.photo;\r\n        }\r\n\r\n        // No local photo - Do not retry to fetch the photo from server, use the default photo instead.\r\n        return Promise.reject('No photo in local storage');\r\n    }\r\n\r\n    // Gets the user's photo from the appropriate endpoint based on the given userType\r\n    async function getPhotoFromServer(userService) {\r\n        const serviceType = userService.type;\r\n        const userType = await getUserType();\r\n        const config = userService.getConfig();\r\n        var photoUrl = config['photoUrl'];\r\n        if (!photoUrl) {\r\n            return;\r\n        }\r\n\r\n        // Request to get photo\r\n        var photoRequest = {\r\n            method: 'GET',\r\n            url: photoUrl,\r\n            responseType: 'blob',\r\n            headers: {\r\n                'X-UserType': serviceType\r\n            }\r\n        };\r\n\r\n        // Send photo request\r\n        try {\r\n            const photo = await httpRequest(photoRequest);\r\n            $log.trackEvent('Request.GotServerPhoto', {'EventCategory': 'Request'});\r\n\r\n            // Convert the photo response into a displayable string source\r\n            var reader = new FileReader();\r\n            reader.onload = async () => {\r\n\r\n                // Save the photo in the userInfo in local storage\r\n                saveUserInfo(userType, {photo: reader.result});\r\n\r\n                return reader.result;\r\n            };\r\n            reader.readAsDataURL(photo);\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async function getEndpointUrlForCurrentUser(endpoint) {\r\n        const userType = await getUserType();\r\n        if (!userType || userType === constants.USER_TYPE.NONE) {\r\n            return null;\r\n        }\r\n        var userService = await getServiceProvider(userType);\r\n        if (!userService) {\r\n            return null;\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        return config[endpoint];\r\n    }\r\n\r\n    function createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\r\n            let timestamp = performance.now();\r\n            const rand = (timestamp + Math.random() * 16) % 16 | 0;\r\n            timestamp = Math.floor(timestamp / 16);\r\n            return (char === 'x' ? rand : (rand & 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n    async function getUserLicenseInfo() {\r\n        var userInfo = await getUserInfo();\r\n        const licenseProps = ['driveQuota', 'licenses'];\r\n        return licenseProps.reduce((previous, current) => {\r\n            if (userInfo[current]) {\r\n                previous[current] = userInfo[current];\r\n            }\r\n            return previous;\r\n        }, {});\r\n    }\r\n\r\n    // all exports are async\r\n    return {\r\n        acquireToken,\r\n        clearToken,\r\n        isLoggedIn,\r\n        getEndpointUrlForCurrentUser,\r\n        getUserType,\r\n        getUserInfo,\r\n        getUserPhoto,\r\n        getUserDataBoundary,\r\n        getUserAndTenantId,\r\n        httpRequest,\r\n        navigateToAuthEndpoint,\r\n        saveUserInfo,\r\n        waitForUserInfo,\r\n        getUserLicenseInfo,\r\n        useAuthNext,\r\n        // Exposed to be called from UTs\r\n        authorize,\r\n        getAccessToken,\r\n        getPhotoFromServer,\r\n        login,\r\n        logout,\r\n        lookupUserInfo,\r\n        createOtelSink,\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {checkPermission} from '../common/permissions';\r\n\r\nexport default angular\r\n    .module('app.background', [])\r\n    .controller('BackgroundController', [\r\n        '$window',\r\n        '$http',\r\n        '$q',\r\n        '$log',\r\n        'notification',\r\n        'storage',\r\n        'userService',\r\n        'fileService',\r\n        'copyPasteService',\r\n        backgroundController,\r\n    ]);\r\n\r\nfunction backgroundController($window, $http, $q, $log, notification, storage, userService, fileService, copyPasteService) {\r\n    userService.isLoggedIn().then(status => {\r\n        status ? Utilities.setIcon(constants.BROWSER_ICON.DEFAULT) : Utilities.setIcon(constants.BROWSER_ICON.INACTIVE);\r\n        // if the user is logged in but there are no telemetery sinks, create one based on the user data\r\n        if(status === true && $window.otelLogger.telemetrySinks.length === 0){\r\n            const userType = userService.getUserType();\r\n            const dataBoundary = userService.getUserDataBoundary();\r\n            const userAndTenantId = userService.getUserAndTenantId();\r\n            userService.createOtelSink(userType, dataBoundary, userAndTenantId);\r\n        }\r\n    });\r\n\r\n    var webRedirectDisabled;\r\n    storage.get('webRedirect_disabled').then(function (result) {\r\n        webRedirectDisabled = Utilities.isNotUndefinedOrNull(result.webRedirect_disabled) && result.webRedirect_disabled;\r\n    });\r\n\r\n    BrowserHandler.windows.onFocusChanged.addListener(function (windowId) {\r\n        updateSessionInfo();\r\n    });\r\n\r\n    var sessionInfo;\r\n\r\n    async function updateSessionInfo(force) {\r\n        var currentTime = new Date();\r\n\r\n        if (sessionInfo) {\r\n            var startSession = new Date(sessionInfo.startTime);\r\n            // update the elapsed time\r\n            var elapsed = currentTime - startSession;\r\n            sessionInfo.duration += elapsed;\r\n        } else {\r\n            var result = await storage.get('LastSession');\r\n            if (result && result.LastSession && Number.isInteger(result.LastSession.duration) && Date.parse(result.LastSession.startTime)) {\r\n                sessionInfo = result.LastSession;\r\n\r\n                // remap old start_time to new startTime\r\n                if (sessionInfo.hasOwnProperty('start_time')) {\r\n                    sessionInfo.startTime = sessionInfo.start_time;\r\n                    delete sessionInfo.start_time;\r\n                }\r\n            } else {\r\n                sessionInfo = {\r\n                    startTime: currentTime,\r\n                    duration: 0,\r\n                };\r\n            }\r\n        }\r\n\r\n        // if the currentTime is not the same day as the last update,\r\n        // log the telemetry and reset the start time\r\n        var logDay = new Date(sessionInfo.startTime);\r\n        var today = new Date(currentTime);\r\n        today.setHours(0, 0, 0, 0);\r\n        logDay.setHours(0, 0, 0, 0);\r\n\r\n        if (force || today - logDay) {\r\n            $log.trackEvent('Session', {StartTime: sessionInfo.startTime, Duration: sessionInfo.duration});\r\n            sessionInfo.duration = 0;\r\n        }\r\n\r\n        sessionInfo.startTime = currentTime.toString();\r\n\r\n        storage.set({\r\n            LastSession: sessionInfo,\r\n        });\r\n    }\r\n\r\n    BrowserHandler.storage.onChanged.addListener(\r\n        function (changes, areaName) {\r\n            if (Utilities.isNotUndefinedOrNull(changes.webRedirect_disabled)) {\r\n                webRedirectDisabled = changes.webRedirect_disabled.newValue;\r\n            }\r\n            else if (changes.identity) {\r\n                var identity = changes.identity.newValue;\r\n                identity ? Utilities.setIcon(constants.BROWSER_ICON.DEFAULT) : Utilities.setIcon(constants.BROWSER_ICON.INACTIVE);\r\n            }\r\n        });\r\n\r\n    // Begin documents from the web\r\n    var documentTabId;\r\n\r\n    BrowserHandler.webRequest.onSendHeaders.addListener(\r\n        function (data) {\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n            // Examine Referer header to determine whether to redirect to Office for the web or not.\r\n            for (var i = 0; i < data.requestHeaders.length; ++i) {\r\n                if (data.requestHeaders[i].name === 'Referer') {\r\n                    if (data.requestHeaders[i].value.indexOf('officeapps.live.com') >= 0) {\r\n                        // If user is viewing document in Office on the web, set the tabId to null to stop redirecting.\r\n                        documentTabId = null;\r\n                    } else {\r\n                        documentTabId = data.tabId;\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        {\r\n            urls: [\r\n                '*://*/*.doc',\r\n                '*://*/*.doct',\r\n                '*://*/*.docx',\r\n                '*://*/*.dotx',\r\n                '*://*/*.odt',\r\n                '*://*/*.ppt',\r\n                '*://*/*.pot',\r\n                '*://*/*.pps',\r\n                '*://*/*.pptx',\r\n                '*://*/*.ppsx',\r\n                '*://*/*.odp',\r\n                '*://*/*.xls',\r\n                '*://*/*.xlsx',\r\n                '*://*/*.xlsm',\r\n                '*://*/*.xlsb',\r\n                '*://*/*.ods',\r\n            ],\r\n        },\r\n        ['requestHeaders']\r\n    );\r\n\r\n    BrowserHandler.webRequest.onHeadersReceived.addListener(\r\n        function (data) {\r\n            // If web document redirecting settings has been disabled by the user, stop redirecting.\r\n            if (webRedirectDisabled) {\r\n                return;\r\n            }\r\n\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n\r\n            // Continue processing this request iff we are able to inspect the response headers, the referrer was not Office for the web (ie documentTabId === null)\r\n            if (\r\n                Utilities.isUndefinedOrNull(data.responseHeaders) ||\r\n                Utilities.isUndefinedOrNull(documentTabId) ||\r\n                Utilities.isUndefinedOrNull(data.tabId) ||\r\n                documentTabId !== data.tabId\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // Examine Cache-Control and Content-Type in response header.\r\n            // Redirect valid online document to be viewed in Office on the web.\r\n            var response = {};\r\n            for (var i = 0; i < data.responseHeaders.length; ++i) {\r\n                response[data.responseHeaders[i].name] = data.responseHeaders[i].value;\r\n            }\r\n\r\n            if (isResponseHeaderPrivate(response, 'Cache-Control') || isResponseHeaderPrivate(response, 'Pragma')) {\r\n                // If the web linked document is a private content, stop redirecting.\r\n                return;\r\n            } else if (response['Content-Type']) {\r\n                if (constants.FILE.OFFICE_MIME_TYPES[response['Content-Type'].toLowerCase()]) {\r\n                    // Check if the web linked document is a valid Office document\r\n                    $log.trackEvent('OpenDocument_BrowserWebDocument');\r\n\r\n                    storage.get('displayWebDocRedirectNotification').then(function (result) {\r\n                        if (\r\n                            Utilities.isUndefinedOrNull(result.displayWebDocRedirectNotification) ||\r\n                            result.displayWebDocRedirectNotification === true\r\n                        ) {\r\n                            notification.show(constants.NOTIFICATION.WEBDOCREDIRECT);\r\n                        }\r\n                    });\r\n\r\n                    return {redirectUrl: 'https://view.officeapps.live.com/op/view.aspx?src=' + data.url};\r\n                } else {\r\n                    $log.trackEvent('WebRequest_Header', {'contentType': response['Content-Type']});\r\n                    return;\r\n                }\r\n            }\r\n            return;\r\n        },\r\n        {\r\n            urls: [\r\n                '*://*/*.doc',\r\n                '*://*/*.doct',\r\n                '*://*/*.docx',\r\n                '*://*/*.dotx',\r\n                '*://*/*.odt',\r\n                '*://*/*.ppt',\r\n                '*://*/*.pot',\r\n                '*://*/*.pps',\r\n                '*://*/*.pptx',\r\n                '*://*/*.ppsx',\r\n                '*://*/*.odp',\r\n                '*://*/*.xls',\r\n                '*://*/*.xlsx',\r\n                '*://*/*.xlsm',\r\n                '*://*/*.xlsb',\r\n                '*://*/*.ods',\r\n            ],\r\n        },\r\n        ['responseHeaders', 'blocking']\r\n    );\r\n\r\n    // End documents from the web\r\n\r\n    // Begin documents from local storage\r\n\r\n    // Add a listener for local file web requests\r\n    // Fires when dragging a file into the browser or using the file picker\r\n    BrowserHandler.webRequest.onBeforeRequest.addListener(\r\n        function (data) {\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n            $log.trackEvent('OpenDocument_BrowserDragAndDrop');\r\n            var activeTabId = data.tabId;\r\n            fileService.upload(data.url, constants.FILE.ORIGIN.LOCAL_PATH, function (fileUrl) {\r\n                if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                    // File upload failed; return\r\n                    return;\r\n                }\r\n\r\n                openFileUrlInTab(fileUrl, activeTabId);\r\n            });\r\n\r\n            return {redirectUrl: constants.LINKS.PROGRESSPAGE_URL};\r\n        },\r\n        {\r\n            urls: [\r\n                'file:///*.doc',\r\n                'file:///*.doct',\r\n                'file:///*.docx',\r\n                'file:///*.dotx',\r\n                'file:///*.odt',\r\n                'file:///*.ppt',\r\n                'file:///*.pot',\r\n                'file:///*.pps',\r\n                'file:///*.pptx',\r\n                'file:///*.ppsx',\r\n                'file:///*.odp',\r\n                'file:///*.xlsx',\r\n                'file:///*.xlsm',\r\n                'file:///*.xlsb',\r\n                'file:///*.ods',\r\n            ],\r\n        },\r\n        ['blocking']\r\n    );\r\n\r\n    // Listening for errors in local file web requests.\r\n    BrowserHandler.webRequest.onErrorOccurred.addListener(\r\n        function (details) {\r\n            // Record the error\r\n            $log.error(`BackgroundWebRequestOnErrorOccured - ${details.error}`);\r\n        },\r\n        {\r\n            urls: [\r\n                'file:///*.doc',\r\n                'file:///*.doct',\r\n                'file:///*.docx',\r\n                'file:///*.dotx',\r\n                'file:///*.odt',\r\n                'file:///*.ppt',\r\n                'file:///*.pot',\r\n                'file:///*.pps',\r\n                'file:///*.pptx',\r\n                'file:///*.ppsx',\r\n                'file:///*.odp',\r\n                'file:///*.xlsx',\r\n                'file:///*.xlsm',\r\n                'file:///*.xlsb',\r\n                'file:///*.ods',\r\n            ],\r\n        }\r\n    );\r\n\r\n    // End documents from local storage\r\n\r\n    // Display log install or update and clear old data\r\n    BrowserHandler.runtime.onInstalled.addListener(async function (details) {\r\n        var manifest = Utilities.getManifest();\r\n        var appVersion = manifest ? manifest.version : -1;\r\n\r\n        if (details.reason === 'install') {\r\n            $log.trackEvent('Action.Install', {'AppVersion': appVersion, 'EventCategory': 'Action', 'Action_Type': 'Click'});\r\n\r\n            // I don't think this is a thing anymore, I don't see it in the extension settings\r\n            // and the manifest supports permissions now\r\n            // Prompt allow access to file urls notification when first time installing the app\r\n            // notification.show(constants.NOTIFICATION.FILEACCESS);\r\n\r\n            BrowserHandler.runtime.getPlatformInfo(platformInfo => {\r\n                if (platformInfo.os === 'cros') {\r\n                    // Prompt double click to open notification when first time installing the app on ChromeOS\r\n                    notification.show(constants.NOTIFICATION.SETDEFAULT);\r\n                }\r\n            });\r\n\r\n            // Show support page when when first time installing the app\r\n            var supportUrl = constants.LINKS.SUPPORT_URL;\r\n\r\n            // There have been complaints of this showing after updating so look for some residual\r\n            // data in local storage to see if this is really a first install before opening the supportUrl\r\n            try {\r\n                const result = await storage.get(['deviceId', 'LastSession']);\r\n                // if there are any values (keys) then it's not really a first install\r\n                if (Object.keys(result).length) {\r\n                    return;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // if an exception was thrown trying to retrieve any settings then assume\r\n                // this is first run\r\n            }\r\n            openFileUrlInTab(supportUrl, null);\r\n\r\n        }\r\n        else if (details.reason === 'update') {\r\n            $log.trackEvent('Feature.AppUpdated', {'AppVersion': appVersion, 'PreviousVersion': details.previousVersion, 'EventCategory': 'Feature'});\r\n\r\n            if (Utilities.isNotUndefinedOrNull(window.localStorage.getItem(constants.OAUTH.SERVICE_ID))) {\r\n                // If the serviceInfo is stored in window.localStorage, reset the storage data.\r\n                storage.clear();\r\n                window.localStorage.clear();\r\n            }\r\n\r\n            storage.get('userInfo').then(function (result) {\r\n                if (\r\n                    Utilities.isNotUndefinedOrNull(result) &&\r\n                    Utilities.isNotUndefinedOrNull(result.userInfo) &&\r\n                    (Utilities.isNotUndefinedOrNull(result.userInfo.id) || Utilities.isNotUndefinedOrNull(result.userInfo.profile))\r\n                ) {\r\n                    // If the userInfo is in old data form, reset the storage data.\r\n                    storage.clear();\r\n                    window.localStorage.clear();\r\n                }\r\n            });\r\n            //If on an older version of the extension is running, logout user when app updates so we get a fresh auth token for Data Boundary and telemetry collection\r\n            //Version 3.1.1 ensures that the user data boundary is saved in local storage so we don't need a new token\r\n            if(appVersion < '3.1.1') {\r\n                storage.remove('identity');\r\n            }\r\n        }\r\n    });\r\n\r\n    BrowserHandler.notifications.onButtonClicked.addListener(function (notificationId) {\r\n        switch (notificationId) {\r\n            case constants.NOTIFICATION.AUTOSAVE.id:\r\n                storage.set({displayAutoSaveNotification: false});\r\n                break;\r\n            case constants.NOTIFICATION.WEBDOCREDIRECT.id:\r\n                storage.set({displayWebDocRedirectNotification: false});\r\n                break;\r\n        }\r\n    });\r\n\r\n    BrowserHandler.notifications.onClicked.addListener(function (notificationId) {\r\n        switch (notificationId) {\r\n            case constants.NOTIFICATION.FILEACCESS.id:\r\n                BrowserHandler.tabs.create({url: constants.LINKS.SETTINGS_URL});\r\n                break;\r\n            case constants.NOTIFICATION.INVALIDSUBSCRIPTION.id:\r\n                BrowserHandler.tabs.create({url: constants.LINKS.OFFICE_URL});\r\n                break;\r\n        }\r\n    });\r\n\r\n    // Listen to incoming messages from foreground pages process requests\r\n    BrowserHandler.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n        switch (request.eventId) {\r\n            // ignoring messages from editor telemetry with known eventIds\r\n            case \"telemetryEvent\":\r\n            case \"newActivityTelemetryEvent\":\r\n                return;\r\n        }\r\n\r\n        // ignore messages that don't have activity as they aren't ours\r\n        if (!request.activity) {\r\n            return;\r\n        }\r\n\r\n        switch (request.activity) {\r\n            case constants.ACTIVITY.LOG.NAME:\r\n                {\r\n                    var source = undefined;\r\n                    if (sender.url) {\r\n                        var url = new URL(sender.url);\r\n                        source = url.origin + url.pathname;\r\n                    }\r\n\r\n                    $log[request.severity.toLowerCase()]({message: request.log, stack: request.stack, filename: request.filename, source});\r\n                    // no need to log (below switch block) that we've logged so just return\r\n                    return;\r\n                }\r\n            case constants.ACTIVITY.SSO.NAME:\r\n                {\r\n                    // Handle SSO for AAD users by sending messages to native client\r\n                    try {\r\n                        // Pass the sender into the native host to validate that the page is able to call this method.\r\n                        request.body.sender = sender.origin;\r\n\r\n                        if ('GetSupportedUrls'.localeCompare(request.body.method, undefined, { sensitivity: 'base' }) == 0) {\r\n                            RespondWithError(CreateInvalidMethodResponse(), sendResponse);\r\n                            return true;\r\n                        }\r\n\r\n                        BrowserHandler.runtime.sendNativeMessage(\r\n                            constants.SSO.MESSAGE_CHANNEL,\r\n                            request.body,\r\n                            function (result) {\r\n                                var response = {};\r\n                                $log.debug(`BrowserCore response: ${JSON.stringify(result)}`);\r\n                                if (result) {\r\n                                    if (result.status === constants.SSO.RESPONSE_STATUS_FAIL) {\r\n                                        RespondWithError(result, sendResponse);\r\n                                    } else {\r\n                                        response = Object.assign({status: constants.SSO.RESPONSE_STATUS_SUCCESS, result});\r\n                                        $log.trackEvent('Diagnostic.SsoSuccess', {'EventCategory': 'Diagnostic'});\r\n                                        sendResponse(response);\r\n                                    }\r\n                                } else {\r\n                                    RespondWithError({\r\n                                        status: constants.SSO.RESPONSE_STATUS_FAIL,\r\n                                        code: constants.SSO.RESPONSE_CODE_NO_SUPPORT,\r\n                                        description: BrowserHandler.runtime.lastError.message,\r\n                                    }, sendResponse);\r\n                                }\r\n                            });\r\n                    }\r\n                    catch (e) {\r\n                        RespondWithError({\r\n                            status: constants.SSO.RESPONSE_STATUS_FAIL,\r\n                            code: constants.SSO.RESPONSE_CODE_NO_SUPPORT,\r\n                            description: e.toString(),\r\n                        }, sendResponse);\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.TELEMETRY.NAME:\r\n                switch (request.command) {\r\n                    case constants.TELEMETRY.COMMAND.SET_DISABLED:\r\n                        $log.setEnabledSetting(request.enabled);\r\n                        setUninstallUrl(request.enabled);\r\n                        break;\r\n                    case constants.TELEMETRY.COMMAND.TRACK_EVENT:\r\n                        $log.trackEvent(request.eventName, request.properties, request.measurements);\r\n                        break;\r\n                    case constants.TELEMETRY.COMMAND.TRACK_TRACE:\r\n                        $log.trackTrace(request.message, request.properties);\r\n                        break;\r\n                }\r\n                break;\r\n            case constants.ACTIVITY.NOTIFICATION.NAME:\r\n                notification.show(request.notification);\r\n                break;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                // Ignore these that are explicitly handled elsewhere\r\n                return;\r\n            default: {\r\n                $log.warn(`Unhandled activity:${JSON.stringify(request)}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        $log.debug(`BackgroundController.onMessage: Processed activity ${request.activity}`);\r\n    });\r\n\r\n    // We only support copy&paste in Chrome, so check browser and register listeners if we are running on Chrome.\r\n    if (Utilities.isChrome()) {\r\n        checkPermission(['clipboardRead'], $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n            BrowserHandler.runtime.onMessageExternal.addListener(function (msg, sender, callback) {\r\n                switch (msg.command) {\r\n                    case constants.COPY_PASTE.TEST:\r\n                        return copyPasteService.handleTestCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.PASTE:\r\n                        return copyPasteService.handlePasteCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.GET_CLIPBOARD_DATA:\r\n                        return copyPasteService.handleGetClipboardDataCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.GET_AVAILABLE_COMMANDS:\r\n                        return copyPasteService.handleGetAvailableCommands(msg, sender, callback);\r\n                    default:\r\n                        return false;\r\n                }\r\n            });\r\n        });\r\n        $window.addEventListener('paste', copyPasteService.onPasteEvent);\r\n\r\n        // SSO for gsuite account federated with AAD on Chrome OS\r\n        checkPermission(['identity', 'identity.email'], $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n\r\n            BrowserHandler.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\r\n                if (\r\n                    !changeInfo.url ||\r\n                    !isLogInUrl(changeInfo.url) ||\r\n                    changeInfo.url.indexOf('login_hint') !== -1 ||\r\n                    changeInfo.url.indexOf('username') !== -1\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                BrowserHandler.identity.getProfileUserInfo(function (userInfo) {\r\n                    if (!userInfo || !userInfo.email) {\r\n                        return;\r\n                    }\r\n                    var email = userInfo.email;\r\n\r\n                    var request = {\r\n                        method: 'GET',\r\n                        url: constants.O365CONFIG.FEDERATED_URL + '?login=' + email,\r\n                    };\r\n\r\n                    $http(request).then(\r\n                        function (response) {\r\n                            var data = response.data;\r\n                            if (data && data.NameSpaceType === 'Federated' && data.DomainName !== 'live.com') {\r\n                                var param = changeInfo.url.indexOf('https://login.live.com/login.srf') === -1 ? 'login_hint' : 'username';\r\n                                var currentUrl = changeInfo.url;\r\n                                if (currentUrl.indexOf('?') !== -1) {\r\n                                    currentUrl += '&' + param + '=' + email;\r\n                                } else {\r\n                                    currentUrl += '?' + param + '=' + email;\r\n                                }\r\n                                BrowserHandler.tabs.update(tabId, {url: currentUrl});\r\n                            }\r\n                        },\r\n                        function () {\r\n                            return;\r\n                        });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    BrowserHandler.runtime.getPlatformInfo(function (platformInfo) {\r\n        if (platformInfo.os !== 'cros') {\r\n            return;\r\n        }\r\n\r\n        checkPermission('fileBrowserHandler', $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n\r\n            // Listen to incoming messages from file browser handler for Chrome OS.\r\n            BrowserHandler.fileBrowserHandler.onExecute.addListener(function (id, details) {\r\n                var fileEntries = details.entries;\r\n                uploadFiles(fileEntries, function (fileUrl) {\r\n                    if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                        // File upload failed; return\r\n                        return;\r\n                    }\r\n\r\n                    openFileUrlInTab(fileUrl, null);\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    function isLogInUrl(url) {\r\n        return (\r\n            url.search(/^https:\\/\\/login\\.microsoftonline\\.com\\/(common|.{8}-.{4}-.{4}-.{4}-.{12})\\/oauth2\\/authorize/) != -1 ||\r\n            url.indexOf('https://login.live.com/login.srf') !== -1\r\n        );\r\n    }\r\n\r\n    function receiveMessage(event) {\r\n        if (BrowserHandler.runtime.getURL('').search(new RegExp(event.origin, 'i')) !== 0) {\r\n            $log.error(`BackgroundController.receiveMessage: Error processing message with unrecognized origin ${event.origin}`);\r\n            return;\r\n        }\r\n\r\n        if (Object.prototype.toString.call(event.data) !== '[object File]') {\r\n            $log.error(\r\n                `BackgroundController.receiveMessage: Error processing message with event.data type ${Object.prototype.toString.call(event.data)}`\r\n            );\r\n            return;\r\n        }\r\n\r\n        uploadFile(event.data, function (fileUrl) {\r\n            if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                // File upload failed; return\r\n                return;\r\n            }\r\n\r\n            openFileUrlInTab(fileUrl, null);\r\n        });\r\n    }\r\n    window.addEventListener('message', receiveMessage, false);\r\n\r\n    // Creates a new browser tab with progresspage url and returns its' tab id\r\n    function getDisplayTabId(startUrl) {\r\n        if (Utilities.isUndefinedOrNull(startUrl)) {\r\n            startUrl = constants.LINKS.PROGRESSPAGE_URL;\r\n        }\r\n\r\n        var deferred = $q.defer();\r\n        Utilities.safeOpenNewTab(startUrl, true, function(tab) {\r\n            deferred.resolve(tab.id);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    // Helper method that takes an array of HTML5 file entries and uploads each file; executes callback after each upload\r\n    function uploadFiles(fileEntries, callback) {\r\n        if (Utilities.isUndefinedOrNull(fileEntries)) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < fileEntries.length; ++i) {\r\n            fileEntries[i].file(function (file) {\r\n                uploadFile(file, function (fileUrl) {\r\n                    callback(fileUrl);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // Helper method that takes an  HTML5 file entry and uploads the file; executes callback after upload\r\n    function uploadFile(file, callback) {\r\n        if (Utilities.isUndefinedOrNull(file)) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        fileService.upload(file, constants.FILE.ORIGIN.HTML5, function (fileUrl) {\r\n            callback(fileUrl);\r\n        });\r\n    }\r\n\r\n    // Helper method that opens a file url given a tab id; will create a new window or tab if tabId is null\r\n    function openFileUrlInTab(fileUrl, tabId) {\r\n        var deferred = $q.defer();\r\n        deferred.resolve(Utilities.isNotUndefinedOrNull(tabId) ? tabId : getDisplayTabId(fileUrl));\r\n\r\n        deferred.promise.then(function (tabId) {\r\n            if (Utilities.isUndefinedOrNull(tabId)) {\r\n                $log.warn('BackgroundController.openFileUrlInTab: tabIdPromise null or undefined');\r\n                return;\r\n            }\r\n\r\n            BrowserHandler.tabs.update(tabId, {url: fileUrl});\r\n        });\r\n    }\r\n\r\n    function isResponseHeaderPrivate(response, header) {\r\n        return response[header] && response[header].toLowerCase().indexOf('private') !== -1;\r\n    }\r\n\r\n    function initialize() {\r\n        $log.getEnabledSetting().then(function (enabled) {\r\n            setUninstallUrl(enabled);\r\n        });\r\n\r\n    }\r\n\r\n    function setUninstallUrl(enabled) {\r\n        if (!Utilities.isNotUndefinedOrNull(enabled)) {\r\n            enabled = true;\r\n        }\r\n\r\n        // Check if setUninstallURL is enabled\r\n        if (Utilities.isNotUndefinedOrNull(BrowserHandler.runtime.setUninstallURL)) {\r\n            var manifest = Utilities.getManifest();\r\n            var appVersion = manifest ? manifest.version : -1;\r\n\r\n            // Use office.com as default uninstall page\r\n            var url = Utilities.isExtensionInDevelopmentMode() ? constants.LINKS.OFFICE_HOME_DEV_URL : constants.LINKS.OFFICE_HOME_URL;\r\n\r\n            // Check if logging is enabled by user\r\n            if (enabled) {\r\n                url = constants.LINKS.UNINSTALL + '?version=' + appVersion;\r\n                url = Utilities.isExtensionInDevelopmentMode() ? url + '&isDebug=true' : url;\r\n            }\r\n\r\n            BrowserHandler.runtime.setUninstallURL(url);\r\n        }\r\n    }\r\n\r\n    function RespondWithError(response, sendResponse) {\r\n        if (IsInvalidMethod(response)) {\r\n            // for Invalid Method we want produce the same response regardless it came from extension or native code, it should be hidden from caller.\r\n            const invalidResponse = CreateInvalidMethodResponse();\r\n            $log.trackEvent('Diagnostic.SsoFail', invalidResponse, {'EventCategory': 'Diagnostic'});\r\n            sendResponse(invalidResponse);\r\n        }\r\n        else {\r\n            $log.trackEvent('Diagnostic.SsoFail', response, {'EventCategory': 'Diagnostic'});\r\n            sendResponse(response);\r\n        }\r\n    }\r\n\r\n    function IsInvalidMethod(response) {\r\n        return response.ext && response.ext.error === constants.SSO.RESPONSE_CODE_INVALID;\r\n    }\r\n\r\n    function CreateInvalidMethodResponse() {\r\n        return {\r\n            status: 'Fail',\r\n            code: 'OSError',\r\n            description: 'Error processing request.',\r\n            ext: { error: constants.SSO.RESPONSE_CODE_INVALID }\r\n        };\r\n    }\r\n\r\n    initialize();\r\n}\r\n","import angular from 'angular';\r\nimport { CopyPasteService, FileReaderEx, ImageReader } from '@1js/office-online-ccp';\r\n\r\nexport default angular\r\n    .module('app.copypaste', [])\r\n    .factory('copyPasteService', ['$log', 'imageReader', '$window', ($log, imageReader, $window) => new CopyPasteService($log, imageReader, $window)])\r\n    .factory('fileReader', () => new FileReaderEx())\r\n    .factory('imageReader', ['$log', 'fileReader', ($log, fileReader) => new ImageReader($log, fileReader)])\r\n    .name;\r\n","import angular from 'angular';\r\nimport fileService from './file.service';\r\nimport fileLoader from './fileLoader.service';\r\nimport oneDriveFileService from './oneDriveFile.service';\r\nimport sharePointFileService from './sharePointFile.service';\r\n\r\nexport default angular\r\n    .module('app.file', [])\r\n    .factory('fileService', ['$http', '$q', '$log', 'localize', 'notification', 'storage', 'fileLoader', 'userService', 'sharePointFileService', 'oneDriveFileService', fileService])\r\n    .factory('fileLoader', ['$http', '$q', '$log', fileLoader])\r\n    .service('oneDriveFileService', ['$http', '$log', 'localize', oneDriveFileService])\r\n    .service('sharePointFileService', ['$http', '$log', 'localize', 'userService', sharePointFileService])\r\n    .name;\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function fileService($http, $q, $log, localize, notification, storage, fileLoader, userService, sharePointFileService, oneDriveFileService) {\r\n    var currentUserType = constants.USER_TYPE.NONE;\r\n\r\n    function handleFileLoadError(error) {\r\n        if (Utilities.isUndefinedOrNull(error)) {\r\n            return;\r\n        }\r\n\r\n        switch (error) {\r\n            case (constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED):\r\n                notification.show(constants.NOTIFICATION.FILE_MAX_SIZE_BYTE_LIMIT_REACHED);\r\n                break;\r\n            case (constants.FILE.ERROR.UNSUPPORTED_FILE_TYPE):\r\n                notification.show(constants.NOTIFICATION.UNSUPPORTEDFILETYPE);\r\n                break;\r\n            default:\r\n                $log.error(`fileService.loadFile - ${error}`);\r\n                notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_GENERIC);\r\n        }\r\n    }\r\n\r\n    function handleFileUploadError(data, status) {\r\n        if (Utilities.isUndefinedOrNull(status)) {\r\n            return;\r\n        }\r\n\r\n        if (status === 415) {\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA);\r\n        }\r\n        else if (status === 502 || status === 503 || status === 509) {\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_SERVER);\r\n        }\r\n        else if (data) {\r\n            $log.error(`fileService.doUpload - ${status} - ${JSON.stringify(data)}`);\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_GENERIC);\r\n        }\r\n    }\r\n\r\n    function getFileServiceProvider(userType) {\r\n        var fileServiceProvider = null;\r\n\r\n        // Determine which file service to use and inject\r\n        switch (userType) {\r\n            case constants.USER_TYPE.O365:\r\n                fileServiceProvider = sharePointFileService;\r\n                break;\r\n            case constants.USER_TYPE.MSA:\r\n                fileServiceProvider = oneDriveFileService;\r\n                break;\r\n            default:\r\n                notification.show(constants.NOTIFICATION.NOTSIGNEDIN);\r\n                $log.trackEvent('Error', {EventName: 'FileUploadFail', Message: 'User not signed in', 'EventCategory': 'Error'});\r\n                break;\r\n        }\r\n\r\n        return fileServiceProvider;\r\n    }\r\n\r\n    function doUpload(file, callback) {\r\n        var fileServiceProvider;\r\n\r\n        userService.getUserType().then(function (userType) {\r\n            currentUserType = userType;\r\n            fileServiceProvider = getFileServiceProvider(userType);\r\n            if (Utilities.isUndefinedOrNull(fileServiceProvider)) {\r\n                callback(null);\r\n                return;\r\n            }\r\n\r\n            // Show a notification that file upload is now in progress\r\n            $log.trackEvent('Request.FileUpload', {'FileExtension': Utilities.getFileExtension(file.name), 'EventCategory': 'Request'});\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_IN_PROGRESS);\r\n\r\n            fileServiceProvider.doUpload(file, function (fileUrl, data, status) {\r\n                if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                    handleFileUploadError(data, status);\r\n                }\r\n\r\n                callback(fileUrl);\r\n            });\r\n        });\r\n    }\r\n\r\n    function upload(fileInfo, fileOrigin, callback) {\r\n        if (Utilities.isUndefinedOrNull(fileInfo) || (fileOrigin !== constants.FILE.ORIGIN.HTML5 && fileOrigin !== constants.FILE.ORIGIN.LOCAL_PATH)) {\r\n            $log.error(`fileService.upload(): Invalid argument: fileInfo: ${JSON.stringify(fileInfo)}, fileOrigin: ${fileOrigin}`);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        fileLoader.loadFile(fileInfo, fileOrigin).then(\r\n            function (file) {\r\n                doUpload(file, function (fileUrl) {\r\n                    if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                        callback(null);\r\n                        return;\r\n                    }\r\n\r\n                    storage.get('displayAutoSaveNotification').then(function (result) {\r\n                        if (Utilities.isUndefinedOrNull(result.displayAutoSaveNotification) || result.displayAutoSaveNotification === true) {\r\n                            var autoSaveNotification = constants.NOTIFICATION.AUTOSAVE;\r\n                            autoSaveNotification.message = currentUserType === constants.USER_TYPE.MSA ? constants.NOTIFICATION.AUTOSAVETOONEDRIVE : constants.NOTIFICATION.AUTOSAVETOSHAREPOINT;\r\n                            notification.show(autoSaveNotification);\r\n                        }\r\n\r\n                        callback(fileUrl);\r\n                    });\r\n                });\r\n            },\r\n            function (error) {\r\n                handleFileLoadError(error);\r\n                callback(null);\r\n                return;\r\n            }\r\n        );\r\n    }\r\n\r\n    return {upload};\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function fileLoader($http, $q, $log) {\r\n    function loadFileFromPath(filePath) {\r\n        var deferred = $q.defer();\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', filePath, true);\r\n        xhr.responseType = 'arraybuffer';\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200 || xhr.status === 0) {\r\n                    var result = {};\r\n                    result.content = xhr.response;\r\n                    result.name = filePath.replace(/^.*[\\\\/]/, '');\r\n                    deferred.resolve(result);\r\n                } else {\r\n                    $log.error(`fileLoader.loadFileFromPath(): XMLHttpRequestError at method loadFileFromPath - ${xhr.status}`);\r\n                    deferred.reject(constants.FILE.ERROR.LOAD_FROM_PATH);\r\n                    return deferred.promise;\r\n                }\r\n            }\r\n        };\r\n\r\n        xhr.send(null);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function loadFileFromHTML5(file) {\r\n        var deferred = $q.defer();\r\n        if (Utilities.isUndefinedOrNull(constants.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(file.name)])) {\r\n            deferred.reject(constants.FILE.ERROR.UNSUPPORTED_FILE_TYPE);\r\n            return deferred.promise;\r\n        }\r\n\r\n        var reader = new FileReader();\r\n        var result = {};\r\n        result.name = encodeURI(file.name);\r\n\r\n        reader.onload = function () {\r\n            result.content = new Int8Array(reader.result);\r\n            deferred.resolve(result);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function loadFile(fileInfo, fileOrigin) {\r\n        var deferred = $q.defer();\r\n\r\n        if (\r\n            Utilities.isUndefinedOrNull(fileInfo) ||\r\n            (Utilities.isUndefinedOrNull(fileOrigin) && fileOrigin !== constants.FILE.ORIGIN.HTML5 && fileOrigin !== constants.FILE.ORIGIN.LOCAL_PATH)\r\n        ) {\r\n            deferred.reject(`fileLoader.loadFile(): Invalid argument: fileInfo: ${JSON.stringify(fileInfo)}, fileOrigin: ${fileOrigin}`);\r\n            return deferred.promise;\r\n        }\r\n\r\n        if (fileOrigin === constants.FILE.ORIGIN.HTML5) {\r\n            // Check size of file before attempting to load the file\r\n            if (fileInfo.size > constants.FILE.MAX_SIZE_BYTE_LIMIT) {\r\n                $log.info(`fileLoader.loadFile(): Attempt to upload file with size exceeding limit - ${fileInfo.size} bytes`);\r\n                deferred.reject(constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED);\r\n                return deferred.promise;\r\n            }\r\n\r\n            loadFileFromHTML5(fileInfo).then(\r\n                function (file) {\r\n                    deferred.resolve(file);\r\n                },\r\n                function (error) {\r\n                    deferred.reject(error);\r\n                }\r\n            );\r\n        } else {\r\n            loadFileFromPath(fileInfo).then(\r\n                function (file) {\r\n                    if (!file.content) {\r\n                        $log.error(); (`fileLoader.loadFile(): loadFileFromPath failed`);\r\n                        deferred.reject(constants.FILE.ERROR.LOAD_FROM_PATH);\r\n                    }\r\n                    // Check size of file after attempting to load the file\r\n                    else if (file.content.byteLength > constants.FILE.MAX_SIZE_BYTE_LIMIT) {\r\n                        $log.info(`fileLoader.loadFile(): Attempt to upload file with size exceeding limit - ${file.content.byteLength} bytes`);\r\n                        deferred.reject(constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED);\r\n                    }\r\n                    else {\r\n                        deferred.resolve(file);\r\n                    }\r\n                },\r\n                function (error) {\r\n                    deferred.reject(error);\r\n                }\r\n            );\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    var service = {\r\n        loadFile: loadFile,\r\n    };\r\n\r\n    return service;\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function oneDriveFileService($http, $log, localize) {\r\n\r\n    this.doUpload = function (file, callback) {\r\n        var requestUrl = constants.ONEDRIVE.INSTANCE +\r\n            '/drive/root:/' + encodeURIComponent(localize.getLocalizedString('AppFolderName')) +\r\n            '/' + file.name + ':/content' + constants.ONEDRIVE.QUERY_OPTION;\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: requestUrl,\r\n            headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'X-UserType': constants.USER_TYPE.MSA\r\n            },\r\n            data: file.content,\r\n            transformRequest: []\r\n        };\r\n\r\n        $http(request).then(\r\n            function (response) {\r\n                var data = response.data;\r\n                $log.debug(`oneDriveFileService.doUpload - ${response.status} - ${data.webUrl}`);\r\n                callback(data.webUrl);\r\n            },\r\n            function (response) {\r\n                callback(null, null, response.statusText);\r\n            });\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function sharePointFileService($http, $log/* , constants */, localize, userService) {\r\n\r\n    function renameFile(fileName) {\r\n        var now = new Date().toISOString();\r\n        var reg = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+):(\\d+).+/;\r\n        var version = now.replace(reg, '_$1$2$3_$4$5$6.');\r\n        return fileName.replace('.', version);\r\n    }\r\n\r\n    this.doUpload = async function (file, callback) {\r\n        file.name = renameFile(file.name);\r\n        var userInfo = await userService.getUserInfo(constants.USER_TYPE.O365);\r\n        if (Utilities.isUndefinedOrNull(userInfo) || Utilities.isUndefinedOrNull(userInfo.oneDriveUrl)) {\r\n            $log.error('sharePointFileService.doUpload - Invalid OneDriveUrl');\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        var requestUrl = constants.O365CONFIG.UPLOAD_URL +\r\n            encodeURIComponent(localize.getLocalizedString('AppFolderName')) +\r\n            '/' + file.name + ':/content';\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: requestUrl,\r\n            headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            },\r\n            data: file.content,\r\n            transformRequest: []\r\n        };\r\n\r\n        $http(request).then(\r\n            function (response) {\r\n                var data = response.data;\r\n                var status = response.status;\r\n                var etag = '', fileUrl = '';\r\n\r\n                if (Utilities.isUndefinedOrNull(data.eTag)) {\r\n                    $log.error('sharePointFileService.doUpload - Missing eTag');\r\n                    callback(null, data, status);\r\n                    return;\r\n                }\r\n                etag = data.eTag.substring(1, data.eTag.indexOf(','));\r\n\r\n                if (Utilities.isUndefinedOrNull(data['@microsoft.graph.downloadUrl'])) {\r\n                    $log.error('sharePointFileService.doUpload - Missing downloadUrl');\r\n                    callback(null, data, status);\r\n                    return;\r\n                }\r\n                fileUrl = data['@microsoft.graph.downloadUrl'].replace(/download.aspx?.+/, 'WopiFrame.aspx?sourcedoc=' + etag);\r\n\r\n                $log.debug(`sharePointFileService.doUpload - ${status} - ${fileUrl}`);\r\n                callback(fileUrl);\r\n            },\r\n            function (response) {\r\n                callback(null, response.data, response.status);\r\n            });\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport '../diagnostics';\r\nimport '../diagnostics/aria';\r\nimport '../common';\r\nimport '../user';\r\nimport './background.controller';\r\nimport '../copypaste';\r\nimport '../file';\r\n\r\ndocument.body.setAttribute('data-ng-controller', 'BackgroundController as ctrl');\r\ndocument.documentElement.setAttribute('data-ng-app', 'app');\r\n\r\nexport default angular\r\n    .module('app', ['localization', 'app.common', 'app.diagnostics', 'app.user', 'app.file', 'app.background', 'app.copypaste']);\r\n","declare let browser: any;\r\ndeclare let chrome: any;\r\n\r\nvar browserListeners: any[] = [];\r\nvar propertyList = {};\r\n\r\nfunction mergeProperties(target: any, source: any): any {\r\n    for (const [key, value] of Object.entries(source)) {\r\n        if (!target[key]) {\r\n            target[key] = value;\r\n            continue;\r\n        }\r\n\r\n        if (typeof value !== typeof target[key]) {\r\n            console.log(`skipping ${key} due to conflicting types`);\r\n            continue;\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            target[key] = target[key].concat(value);\r\n            continue;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            target[key] = mergeProperties(target[key], value);\r\n            continue;\r\n        }\r\n        target[key] = value;\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nexport default (function (): any {\r\n    var browserHandler = ((): any => {\r\n        if (typeof browser === 'object') {\r\n            var edgeBrowser = Object.create(browser);\r\n\r\n            edgeBrowser.notifications = {\r\n                clear: function (notificationId: string, callback: (wasCleared: boolean) => void): void {\r\n                    // Invoke callback with wasCleared == false\r\n                    callback(false);\r\n                },\r\n                create: function (\r\n                    notificationId: string,\r\n                    options: chrome.notifications.NotificationOptions,\r\n                    callback: (notificationId: string) => void\r\n                ): void {\r\n                    // Use window alert dialog to display notification message\r\n                    if (typeof options !== 'undefined' && options !== null) {\r\n                        // Only show when priority is 1 or 2\r\n                        if (typeof options.priority !== 'undefined' && options.priority !== null && options.priority > 0) {\r\n                            window.alert(options.message);\r\n                        }\r\n                    }\r\n\r\n                    // Invoke callback with notification id\r\n                    callback(notificationId);\r\n                },\r\n                onButtonClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n                onClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n            };\r\n\r\n            edgeBrowser.runtime = {\r\n                getPlatformInfo: function (callback: (platformInfo: chrome.runtime.PlatformInfo) => void): void {\r\n                    // Does not execute the callback function\r\n                    // Not implemented\r\n                },\r\n            };\r\n        } else if (typeof chrome === 'object') {\r\n            return Object.create(chrome);\r\n        }\r\n    })();\r\n\r\n    // when running in tests, provide override the necessary functions\r\n    if ((window as any).jasmine) {\r\n        const browserMock = {\r\n            mock: true,\r\n            browserAction: {\r\n                setIcon: function (icon: string): void {},\r\n            },\r\n            extension: {\r\n                getURL: function (name: any): string {\r\n                    return '';\r\n                },\r\n            },\r\n            i18n: {\r\n                getUILanguage: function (name: any, callback: any): string {\r\n                    return '';\r\n                },\r\n                getMessage: function (): string {\r\n                    return '';\r\n                },\r\n            },\r\n            runtime: {\r\n                onMessage: {\r\n                    addListener: function (listener: any): any {\r\n                        browserListeners.push(listener);\r\n                    },\r\n                    removeListener: function (listener: any): void {\r\n                        browserListeners.splice(browserListeners.indexOf(listener), 1);\r\n                    },\r\n                },\r\n                sendMessage: function (message: any): any {\r\n                    for (let i = 0; i < browserListeners.length; ++i) {\r\n                        browserListeners[i](message);\r\n                    }\r\n                },\r\n                id: 'ndjpnladcallmjemlbaebfadecfhkepb',\r\n            },\r\n            storage: {\r\n                local: {\r\n                    get: function (name: string, callback: (arg0: { [x: number]: any }) => void): any {\r\n                        callback({\r\n                            [name]: (propertyList as any)[name],\r\n                        });\r\n                    },\r\n\r\n                    set: function (data: { [x: string]: any; hasOwnProperty: (arg0: string) => any }): void {\r\n                        for (const key in data) {\r\n                            if (data.hasOwnProperty(key)) {\r\n                                (propertyList as any)[key] = /*JSON.stringify*/ data[key];\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    remove: function (name: string | number, callback: (arg0: any) => void): void {\r\n                        delete (propertyList as any)[name];\r\n                        callback(propertyList);\r\n                    },\r\n\r\n                    clear: function (name: any, callback: any): void {\r\n                        propertyList = {};\r\n                    },\r\n                },\r\n            },\r\n            tabs: {\r\n                create: function (createProperties: any, callback: (arg0: {}) => void): void {\r\n                    if (callback) callback({});\r\n                },\r\n            },\r\n        };\r\n        browserHandler = mergeProperties(browserHandler || {}, browserMock);\r\n        if (!(window as any).chrome) {\r\n            (window as any).chrome = browserHandler;\r\n        }\r\n    }\r\n\r\n    if (!(window as any).BrowserHandler) {\r\n        (window as any).BrowserHandler = browserHandler;\r\n    }\r\n\r\n    return browserHandler;\r\n})();\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\n('use strict');\r\n\r\nfunction promised(proc: any): any {\r\n    return function (...args: ((err: any, ...results: unknown[]) => void)[]): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            function callback(...results: unknown[]): void {\r\n                // eslint-disable-next-line\r\n                return resolve(...results);\r\n            }\r\n\r\n            args.push(callback);\r\n            proc.call(this, ...args);\r\n        });\r\n    };\r\n}\r\n\r\nasync function filterNeeded(permissions: string | string[]): Promise<string[]> {\r\n    if (!Array.isArray(permissions)) {\r\n        permissions = [permissions];\r\n    }\r\n\r\n    var granted = await promised(BrowserHandler.permissions.getAll)();\r\n    console.debug(`permissions granted: ${JSON.stringify(granted)}`);\r\n\r\n    return permissions.filter((permission: string) => {\r\n        return !granted.permissions.includes(permission);\r\n    });\r\n}\r\n\r\nexport function checkPermission(requested: string | string[], log: { trackEvent: Function } | null = null): Promise<boolean> {\r\n    if (!Array.isArray(requested)) {\r\n        requested = [requested];\r\n    }\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            var permissions = await filterNeeded(requested);\r\n            if (!permissions.length) {\r\n                return resolve(true);\r\n            }\r\n\r\n            var result = await promised(BrowserHandler.permissions.contains)({ permissions });\r\n            console.debug(`Granted permissions ${result === true ? '' : 'do not'} include ${permissions}`);\r\n            if (result) {\r\n                return resolve(result);\r\n            }\r\n            var granted = await promised(BrowserHandler.permissions.request)({ permissions });\r\n\r\n            console.debug(`Requested permissions ${permissions} ${granted ? 'granted' : 'denied'}`);\r\n            var eventProps: any = {\r\n                Granted: !!granted,\r\n                'Permissions': permissions.toString(),\r\n            };\r\n\r\n            if (!granted && BrowserHandler.runtime) {\r\n                eventProps.LastError = BrowserHandler.runtime.lastError?.message;\r\n                eventProps.Id = BrowserHandler.runtime.id;\r\n            }\r\n\r\n            log?.trackEvent('Permission', eventProps);\r\n            return resolve(!!granted);\r\n        } catch (err) {\r\n            resolve(false);\r\n        }\r\n    });\r\n}\r\n\r\nexport async function preemptivePermissionsRequest(): Promise<void> {\r\n    try {\r\n        var optional = BrowserHandler.runtime.getManifest().optional_permissions;\r\n        await checkPermission(optional);\r\n    } catch (err) {\r\n        console.log(`preemptivePermissionsRequest exception:${err}`);\r\n    }\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\nif (!(window as any).Utilities) {\r\n    (window as any).Utilities = {\r\n        // Deserialize query string to an object\r\n        deserializeQuery: function (query: string): any {\r\n            var match: RegExpExecArray,\r\n                pl = /\\+/g, // Regex for replacing addition symbol with a space\r\n                search = /([^&=]+)=?([^&]*)/g,\r\n                decode = function (s: string): string {\r\n                    return decodeURIComponent(s.replace(pl, ' '));\r\n                },\r\n                obj: any = {};\r\n            match = search.exec(query);\r\n            while (match) {\r\n                obj[decode(match[1])] = decode(match[2]);\r\n                match = search.exec(query);\r\n            }\r\n\r\n            return obj;\r\n        },\r\n\r\n        // Gets the file extension\r\n        getFileExtension: function (fileName: string): string {\r\n            var docExt = '';\r\n            if (fileName) {\r\n                var splitDoc = fileName.match(/(?:\\.)(\\w+)$/);\r\n                if (splitDoc && splitDoc.length > 1) {\r\n                    docExt = splitDoc[splitDoc.length - 1].toLowerCase();\r\n                }\r\n            }\r\n\r\n            return docExt;\r\n        },\r\n\r\n        // Navigate to url\r\n        navigateToUrlWithNewTab: function (url: string, openActive: boolean, onSuccess: (tab: any) => void): void {\r\n            BrowserHandler.tabs.create({\r\n                url: url,\r\n                active: this.isUndefinedOrNull(openActive) ? true : openActive,\r\n            }, onSuccess);\r\n        },\r\n\r\n        // Waiting for a BrowserHandler window to be created if there is no current window existing.\r\n        // This is to avoid opening a browser instance if the extension is installed silently.\r\n        safeOpenNewTab: function(url: string, openActive: boolean, onSuccess: (tab: any) => void): void {\r\n            BrowserHandler.windows.getAll((windows: any) => {\r\n                if (windows.length === 0) {\r\n                    BrowserHandler.windows.onCreated.addListener(() =>\r\n                        this.navigateToUrlWithNewTab(\r\n                            url,\r\n                            openActive,\r\n                            onSuccess\r\n                        )\r\n                    );\r\n                } else {\r\n                    this.navigateToUrlWithNewTab(\r\n                        url,\r\n                        openActive,\r\n                        onSuccess\r\n                    );\r\n                }\r\n            });\r\n        },\r\n\r\n        // Simple check for not undefined or null\r\n        isNotUndefinedOrNull: function (obj: any): boolean {\r\n            return !this.isUndefinedOrNull(obj);\r\n        },\r\n\r\n        // Simple check for undefined or null\r\n        isUndefinedOrNull: function (obj: any): boolean {\r\n            return typeof obj === 'undefined' || obj === null;\r\n        },\r\n\r\n        // Determines whether the extension is running in testing mode (running jasmine unit tests)\r\n        isExtensionInTestingMode: function (): boolean {\r\n            return this.isNotUndefinedOrNull((window as any).jasmine);\r\n        },\r\n\r\n        // Determines whether extension is running in developer mode; defaults to true if inconclusive\r\n        isExtensionInDevelopmentMode: function (): boolean {\r\n            // testing mode is not development mode\r\n            if (this.isExtensionInTestingMode()) {\r\n                return false;\r\n            }\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                var url = BrowserHandler.runtime.getURL('');\r\n\r\n                if (typeof url !== 'undefined' && url !== null) {\r\n                    if (/_microsoftofficeonline_/i.test(url)) {\r\n                        return false; // from store\r\n                    }\r\n                }\r\n            }\r\n            if ((window as any).chrome && (window as any).chrome.extension) {\r\n                // Make sure chrome manifest exists\r\n                var manifest = this.getManifest();\r\n                if (manifest === undefined || manifest === null) {\r\n                    return false;\r\n                }\r\n\r\n                // Google Web Store adds key and update_url keys to the manifest\r\n                if (manifest.key !== undefined || manifest.update_url !== undefined) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        // Returns the message id to use.\r\n        // This should work only in chrome.\r\n        getAppDescription: function (): string {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return undefined;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            return manifest.description;\r\n        },\r\n\r\n        // Gets the Chrome runtime manifest object\r\n        getManifest: function (): any {\r\n            // Make sure the BrowserHandler.runtime.getManifest() function exists\r\n            if (typeof BrowserHandler.runtime !== 'object' || typeof BrowserHandler.runtime.getManifest !== 'function') {\r\n                return null;\r\n            }\r\n\r\n            // Make sure manifest exists\r\n            var manifest = BrowserHandler.runtime.getManifest();\r\n            if (manifest === undefined || manifest === null) {\r\n                return null;\r\n            }\r\n\r\n            return manifest;\r\n        },\r\n\r\n        // Returns whether the current context is running in the extension background\r\n        isBackgroundContext: function (): boolean {\r\n            var loc = window.location.href;\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                if (/^ms-browser-extension/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Modern chrome does define window.browser so we need to re-check\r\n            if (window.chrome && window.chrome.extension) {\r\n                if (/^chrome/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Gets the current time\r\n        getCurrentTime: function (): number {\r\n            return Math.round(new Date().getTime() / 1000.0);\r\n        },\r\n\r\n        // Returns true if we are running on Chrome, false otherwise\r\n        isChrome: function (): boolean {\r\n            // Ref: http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome/13348618\r\n            return this.getBrowserName() === 'Chrome' && window.navigator.vendor.indexOf('Google') > -1;\r\n        },\r\n\r\n        // browserVersion: undefined,\r\n        getBrowserAndVersion: function () {\r\n            if (!this.browserVersion) {\r\n                const checkUserAgentForBrowser = (browser: string) => {\r\n                    // userAgent provides better version but may be limited in future so fallback to userAgentData if userAgent fails\r\n                    const regex = new RegExp(`(?<browser>${browser})/(?<version>[0-9.]+)`, 'i');\r\n                    const browserMatch = window.navigator.userAgent.match(regex);\r\n                    if (browserMatch && browserMatch.groups) {\r\n                        return browserMatch.groups;\r\n                    }\r\n\r\n                    if ((window.navigator as any).userAgentData) {\r\n                        const brands: Array<{ brand: string; version: string }> = (window.navigator as any).userAgentData.brands;\r\n                        const match = brands.find((entry) => entry.brand.match(new RegExp(browser, 'i')));\r\n                        if (match) {\r\n                            return { browser: match.brand, version: match.version };\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // order matters here as some browsers may include others to appear as another browser, such as Chrome with Safari\r\n                // or Edge based on Chromium including Chrome so more specific  needs to be checked first\r\n                const orderedBrowserMatches = ['OPe?R', 'Edge?', 'Chrome', 'Safari', 'Firefox'];\r\n                for (const browser of orderedBrowserMatches) {\r\n                    const browserVersion = checkUserAgentForBrowser(browser);\r\n                    if (browserVersion) {\r\n                        this.browserVersion = browserVersion;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.browserVersion;\r\n        },\r\n\r\n        // Returns the name of the current browser (Chrome or Edge)\r\n        getBrowserName: function (): string {\r\n            const browserVersion = this.getBrowserAndVersion();\r\n            return browserVersion ? browserVersion.browser : 'Chrome';\r\n        },\r\n\r\n        // Following code is required since Edge doesn't support \"__MSG_@@bidi_dir__\" in RS1\r\n        isRTL: function (): boolean {\r\n            var uiLang = BrowserHandler.i18n.getUILanguage();\r\n            return /^ar/i.test(uiLang) || /^fa/i.test(uiLang) || /^he/i.test(uiLang) ? true : false;\r\n        },\r\n\r\n        // Set the pop up icon\r\n        setIcon: function (iconPath: any): void {\r\n            BrowserHandler.browserAction.setIcon({\r\n                path: iconPath,\r\n            });\r\n        },\r\n\r\n        //create a new random ID\r\n        getNewId: function(): string {\r\n            return (window as any).crypto.randomUUID();\r\n        }\r\n    };\r\n}\r\n\r\nexport default (window as any).Utilities;\r\n","import Utilities from '../common/utilities';\r\nimport { AWTLogManager } from '@aria/webjs-sdk';\r\nimport { TelemetryLogger } from '@microsoft/oteljs';\r\nimport { getDeviceInfo } from '@office-start/device-detection-utility';\r\n\r\n//TODO: Rename this file to OTel.ts and remove Aria.ts\r\n\r\n// Set instrumentation key depending on whether extension is in development mode\r\n//[SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"not a auth secret. designates the Aria tenent\")]\r\nvar tenantId = '2c8ba5f543dc45cabca6a8903ae65ec0-17b4b4b1-0680-4459-8c45-b7c284ec277d-7329';\r\n\r\n//Initialize OTel Logger\r\n//Don't attach sink yet, enable queue so events don't get dropped\r\nconst telemetryLogger = new TelemetryLogger(undefined, undefined, {\r\n  // Enable queue, otherwise events will get dropped until the sink is attached\r\n  enableQueue: true,\r\n});\r\ntelemetryLogger.setTenantToken(\r\n  \"Office.Taos.M365Extension\",\r\n  \"1ad73c205de94133974c390ca1abac47-17f7e2b2-1b01-44f9-8ff4-c8bc7ed524c7-6756\"\r\n);\r\n\r\n(window as any).otelLogger = telemetryLogger;\r\n\r\n//Gather and store device type\r\nconst deviceInfo = getDeviceInfo();\r\nwindow.sessionStorage.setItem('deviceType', deviceInfo?.platform?.platformType);\r\n//Create session id\r\nvar browserSessionId = Utilities.getNewId();\r\nwindow.sessionStorage.setItem('browserSessionId', browserSessionId);\r\n\r\n// Initialize\r\nAWTLogManager.initialize(tenantId);\r\nconst browserVersion = Utilities.getBrowserAndVersion();\r\nif (browserVersion) {\r\n    AWTLogManager.setContext('DeviceInfo.BrowserName', browserVersion.browser);\r\n    AWTLogManager.setContext('DeviceInfo.BrowserVersion', browserVersion.version);\r\n}\r\n// Store the logger instance in a variable that is accessible in other methods of your page\r\nvar ariaLogger = AWTLogManager.getLogger(tenantId);\r\n(window as any).ariaLogger = ariaLogger;\r\n","﻿/* global BrowserHandler angular chrome browser */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    /*\r\n     * An AngularJS Localization Service\r\n     *\r\n     * Written by Jim Lavin\r\n     * http://codingsmackdown.tv\r\n     *\r\n     * Modified to integrate with chrome.i18n infrastructure\r\n     */\r\n    var BrowserHandler = window.BrowserHandler;\r\n\r\n    if (!BrowserHandler) {\r\n        BrowserHandler = chrome || browser;\r\n    }\r\n\r\n    angular\r\n        .module('localization', [])\r\n        // localization service responsible for retrieving resource files from chrome.i18n\r\n        .factory('localize', ['$filter', function ($filter) {\r\n            var localize = {\r\n                // checks the dictionary for a localized resource string\r\n                getLocalizedString: function (value) {\r\n                    // default the result to an empty string\r\n                    var result = '';\r\n\r\n                    // pull localized resource using Chrome API\r\n                    result = BrowserHandler.i18n.getMessage(value);\r\n\r\n                    // return the value to the call\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            // return the local instance when called\r\n            return localize;\r\n        }])\r\n\r\n        // simple translation filter\r\n        // usage {{ TOKEN | i18n }}\r\n        .filter('i18n', ['localize', function (localize) {\r\n            return function (input) {\r\n                return localize.getLocalizedString(input);\r\n            };\r\n        }])\r\n\r\n        // translation directive that can handle dynamic strings\r\n        // updates the text value of the attached element\r\n        // usage <span data-i18n=\"TOKEN\" ></span>\r\n        // or\r\n        // <span data-i18n=\"TOKEN|VALUE1|VALUE2\" ></span>\r\n        .directive('i18n', ['localize', function (localize) {\r\n            var i18nDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length <= 1) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    // update the element\r\n                    for (var index = 1; index < values.length; index++) {\r\n                        var target = '{' + (index - 1) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.text(tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18n', function (value) {\r\n                        i18nDirective.updateText(elm, attrs.i18n);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18nDirective;\r\n        }])\r\n        // translation directive that can handle dynamic strings\r\n        // updates the attribute value of the attached element\r\n        // usage <span data-i18n-attr=\"TOKEN|ATTRIBUTE\" ></span>\r\n        // or\r\n        // <span data-i18n-attr=\"TOKEN|ATTRIBUTE|VALUE1|VALUE2\" ></span>\r\n        .directive('i18nAttr', ['localize', function (localize) {\r\n            var i18NAttrDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length < 2) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    for (var index = 2; index < values.length; index++) {\r\n                        var target = '{' + (index - 2) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.attr(values[1], tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18nAttr', function (value) {\r\n                        i18NAttrDirective.updateText(elm, value);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18NAttrDirective;\r\n        }]);\r\n})();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.j = 965;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t965: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkofficechromeextension\"] = self[\"webpackChunkofficechromeextension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(9750)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}