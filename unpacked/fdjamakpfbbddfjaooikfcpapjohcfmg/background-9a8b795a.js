/*! For license information please see background-9a8b795a.js.LICENSE.txt */
"use strict";
(self.webpackChunk_dashlane_amphora = self.webpackChunk_dashlane_amphora || []).push([
  [394],
  {
    63879: (e, t, r) => {
      r.d(t, { O: () => s });
      var s = (function (e) {
        return (
          (e.PopupCarbon = "Popup"),
          (e.PopupCarbonLoader = "PopupCarbonLoader"),
          (e.OptionsCarbon = "OptionsCarbon"),
          (e.WebappCarbon = "leeloo"),
          e
        );
      })({});
    },
    88771: (e, t, r) => {
      r.d(t, { P: () => l, y: () => c });
      r(86847),
        r(4473),
        r(68126),
        r(41437),
        r(24814),
        r(71632),
        r(75815),
        r(73636),
        r(55566),
        r(72029),
        r(2165),
        r(296),
        r(30094),
        r(83746),
        r(37944),
        r(32721),
        r(55402),
        r(22250),
        r(92665),
        r(88737);
      function s(e) {
        return (
          (s =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          s(e)
        );
      }
      function o(e, t) {
        for (var r = 0; r < t.length; r++) {
          var o = t[r];
          (o.enumerable = o.enumerable || !1),
            (o.configurable = !0),
            "value" in o && (o.writable = !0),
            Object.defineProperty(
              e,
              ((n = o.key),
              (i = void 0),
              (i = (function (e, t) {
                if ("object" !== s(e) || null === e) return e;
                var r = e[Symbol.toPrimitive];
                if (void 0 !== r) {
                  var o = r.call(e, t || "default");
                  if ("object" !== s(o)) return o;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return ("string" === t ? String : Number)(e);
              })(n, "string")),
              "symbol" === s(i) ? i : String(i)),
              o
            );
        }
        var n, i;
      }
      function n(e, t) {
        return (
          (n = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (e, t) {
                return (e.__proto__ = t), e;
              }),
          n(e, t)
        );
      }
      function i(e) {
        var t = (function () {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
          } catch (e) {
            return !1;
          }
        })();
        return function () {
          var r,
            o = a(e);
          if (t) {
            var n = a(this).constructor;
            r = Reflect.construct(o, arguments, n);
          } else r = o.apply(this, arguments);
          return (function (e, t) {
            if (t && ("object" === s(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return (function (e) {
              if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e;
            })(e);
          })(this, r);
        };
      }
      function a(e) {
        return (
          (a = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          a(e)
        );
      }
      var c = (function (e) {
          !(function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            (e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } })),
              Object.defineProperty(e, "prototype", { writable: !1 }),
              t && n(e, t);
          })(c, e);
          var t,
            r,
            s,
            a = i(c);
          function c() {
            var e;
            !(function (e, t) {
              if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            })(this, c);
            for (var t = arguments.length, r = new Array(t), s = 0; s < t; s++) r[s] = arguments[s];
            return ((e = a.call.apply(a, [this].concat(r))).isConnected = !1), (e.onMessage = null), e;
          }
          return (
            (t = c),
            (r = [
              {
                key: "connect",
                value: function (e) {
                  (this.onMessage = function (t) {
                    e.receive(t);
                  }),
                    (this.isConnected = !0),
                    this._connected();
                }
              },
              {
                key: "receive",
                value: function (e) {
                  this._messageReceived(e);
                }
              },
              {
                key: "send",
                value: function (e) {
                  if (!this.isConnected) throw new Error("Channel not connected");
                  if (!this.onMessage) throw new Error("onMessage handler not set");
                  this.onMessage(e);
                }
              }
            ]) && o(t.prototype, r),
            s && o(t, s),
            Object.defineProperty(t, "prototype", { writable: !1 }),
            c
          );
        })(r(71796).GenericChannel),
        l = function (e, t) {
          e.connect(t), t.connect(e);
        };
    },
    33666: (e, t, r) => {
      r.d(t, { Y: () => u });
      r(37391),
        r(38298),
        r(4473),
        r(68126),
        r(22250),
        r(26589),
        r(75815),
        r(92665),
        r(88737),
        r(2191),
        r(75986),
        r(41437),
        r(24814),
        r(71632),
        r(73636),
        r(55566),
        r(72029),
        r(2165),
        r(296),
        r(30094),
        r(83746),
        r(37944),
        r(32721),
        r(55402);
      var s = r(71796),
        o = r(94353),
        n = r(20500);
      function i(e) {
        return (
          (i =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          i(e)
        );
      }
      function a(e, t) {
        for (var r = 0; r < t.length; r++) {
          var s = t[r];
          (s.enumerable = s.enumerable || !1),
            (s.configurable = !0),
            "value" in s && (s.writable = !0),
            Object.defineProperty(
              e,
              ((o = s.key),
              (n = void 0),
              (n = (function (e, t) {
                if ("object" !== i(e) || null === e) return e;
                var r = e[Symbol.toPrimitive];
                if (void 0 !== r) {
                  var s = r.call(e, t || "default");
                  if ("object" !== i(s)) return s;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return ("string" === t ? String : Number)(e);
              })(o, "string")),
              "symbol" === i(n) ? n : String(n)),
              s
            );
        }
        var o, n;
      }
      function c(e, t) {
        return (
          (c = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (e, t) {
                return (e.__proto__ = t), e;
              }),
          c(e, t)
        );
      }
      function l(e) {
        var t = (function () {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
          } catch (e) {
            return !1;
          }
        })();
        return function () {
          var r,
            s = d(e);
          if (t) {
            var o = d(this).constructor;
            r = Reflect.construct(s, arguments, o);
          } else r = s.apply(this, arguments);
          return (function (e, t) {
            if (t && ("object" === i(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return (function (e) {
              if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e;
            })(e);
          })(this, r);
        };
      }
      function d(e) {
        return (
          (d = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          d(e)
        );
      }
      var u = (function (e) {
        !(function (e, t) {
          if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
          (e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } })),
            Object.defineProperty(e, "prototype", { writable: !1 }),
            t && c(e, t);
        })(d, e);
        var t,
          r,
          s,
          i = l(d);
        function d(e) {
          var t,
            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3;
          return (
            (function (e, t) {
              if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            })(this, d),
            ((t = i.call(this, r)).name = void 0),
            (t.currentPorts = void 0),
            (t.onConnectListener = function (e) {
              if (e.name.startsWith(t.name)) {
                if (t.currentPorts.has(e.name)) throw new Error("Port already connected");
                if (!(0, o.k)(e)) throw new Error("Sender origin not trusted");
                t.setup(e);
              }
            }),
            (t.onDisconnectListener = function (e) {
              n.b.removeListener(t.onConnectListener);
              var r = t.currentPorts.get(e.name);
              if (
                (r &&
                  (r.onMessage.removeListener(t.onMessageListener),
                  r.onDisconnect.removeListener(t.onDisconnectListener),
                  t.currentPorts.delete(e.name)),
                t._disconnected(),
                chrome.runtime.lastError)
              ) {
                var s,
                  o = null != (s = chrome.runtime.lastError.message) ? s : "Unknown chrome.runtime.lastError";
                throw new Error(o);
              }
            }),
            (t.onMessageListener = function (e) {
              t._messageReceived(e);
            }),
            (t.name = e),
            (t.currentPorts = new Map()),
            t
          );
        }
        return (
          (t = d),
          (r = [
            {
              key: "connect",
              value: function () {
                n.b.addListener(this.onConnectListener);
              }
            },
            {
              key: "autoReconnect",
              value: function () {
                this.connect();
              }
            },
            {
              key: "send",
              value: function (e) {
                if (!this.currentPorts.size) throw new Error("No port to send message");
                this.currentPorts.forEach(function (t) {
                  return t.postMessage(e);
                });
              }
            },
            {
              key: "setup",
              value: function (e) {
                var t = this.currentPorts.get(e.name);
                t && (t.disconnect(), this.onDisconnectListener(t)),
                  e.onMessage.addListener(this.onMessageListener),
                  e.onDisconnect.addListener(this.onDisconnectListener),
                  this.currentPorts.set(e.name, e),
                  this._connected();
              }
            }
          ]) && a(t.prototype, r),
          s && a(t, s),
          Object.defineProperty(t, "prototype", { writable: !1 }),
          d
        );
      })(s.GenericChannel);
    },
    28367: (e, t, r) => {
      r.d(t, { s: () => u });
      r(37391),
        r(4473),
        r(68126),
        r(41437),
        r(24814),
        r(71632),
        r(75815),
        r(73636),
        r(55566),
        r(72029),
        r(2165),
        r(296),
        r(30094),
        r(83746),
        r(37944),
        r(32721),
        r(55402),
        r(22250),
        r(92665),
        r(88737);
      var s = r(71796),
        o = r(94353),
        n = r(20500);
      function i(e) {
        return (
          (i =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          i(e)
        );
      }
      function a(e, t) {
        for (var r = 0; r < t.length; r++) {
          var s = t[r];
          (s.enumerable = s.enumerable || !1),
            (s.configurable = !0),
            "value" in s && (s.writable = !0),
            Object.defineProperty(
              e,
              ((o = s.key),
              (n = void 0),
              (n = (function (e, t) {
                if ("object" !== i(e) || null === e) return e;
                var r = e[Symbol.toPrimitive];
                if (void 0 !== r) {
                  var s = r.call(e, t || "default");
                  if ("object" !== i(s)) return s;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return ("string" === t ? String : Number)(e);
              })(o, "string")),
              "symbol" === i(n) ? n : String(n)),
              s
            );
        }
        var o, n;
      }
      function c(e, t) {
        return (
          (c = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (e, t) {
                return (e.__proto__ = t), e;
              }),
          c(e, t)
        );
      }
      function l(e) {
        var t = (function () {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
          } catch (e) {
            return !1;
          }
        })();
        return function () {
          var r,
            s = d(e);
          if (t) {
            var o = d(this).constructor;
            r = Reflect.construct(s, arguments, o);
          } else r = s.apply(this, arguments);
          return (function (e, t) {
            if (t && ("object" === i(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return (function (e) {
              if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e;
            })(e);
          })(this, r);
        };
      }
      function d(e) {
        return (
          (d = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          d(e)
        );
      }
      var u = (function (e) {
        !(function (e, t) {
          if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
          (e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } })),
            Object.defineProperty(e, "prototype", { writable: !1 }),
            t && c(e, t);
        })(d, e);
        var t,
          r,
          s,
          i = l(d);
        function d(e) {
          var t,
            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3;
          return (
            (function (e, t) {
              if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            })(this, d),
            ((t = i.call(this, r)).name = void 0),
            (t.port = void 0),
            (t.onConnectListener = function (e) {
              if (e.name === t.name) {
                if (!(0, o.k)(e)) throw new Error("Sender origin not trusted");
                t.setup(e);
              }
            }),
            (t.onDisconnectListener = function () {
              if (
                (n.b.removeListener(t.onConnectListener),
                t.port &&
                  (t.port.onMessage.removeListener(t.onMessageListener),
                  t.port.onDisconnect.removeListener(t.onDisconnectListener),
                  (t.port = void 0)),
                t._disconnected(),
                chrome.runtime.lastError)
              ) {
                var e,
                  r = null != (e = chrome.runtime.lastError.message) ? e : "Unknown chrome.runtime.lastError";
                throw new Error(r);
              }
            }),
            (t.onMessageListener = function (e) {
              t._messageReceived(e);
            }),
            (t.name = e),
            t
          );
        }
        return (
          (t = d),
          (r = [
            {
              key: "connect",
              value: function () {
                this.port && (this.port.disconnect(), this.onDisconnectListener()), n.b.addListener(this.onConnectListener);
              }
            },
            {
              key: "autoReconnect",
              value: function () {
                this.connect();
              }
            },
            {
              key: "send",
              value: function (e) {
                if (!this.port) throw new Error("No port to send message");
                this.port.postMessage(e);
              }
            },
            {
              key: "setup",
              value: function (e) {
                (this.port = e),
                  this.port.onMessage.addListener(this.onMessageListener),
                  this.port.onDisconnect.addListener(this.onDisconnectListener),
                  this._connected();
              }
            }
          ]) && a(t.prototype, r),
          s && a(t, s),
          Object.defineProperty(t, "prototype", { writable: !1 }),
          d
        );
      })(s.GenericChannel);
    },
    94353: (e, t, r) => {
      r.d(t, { k: () => i });
      r(22250), r(75815), r(92665), r(88737), r(23389), r(21675);
      var s = r(92204),
        o = r(48593);
      function n(e) {
        var t = (function (e) {
          var t, r, s, o, n, i, a;
          return null != (t = null === (r = e.sender) || void 0 === r ? void 0 : r.origin)
            ? t
            : new URL(
                null !=
                (s =
                  null != (o = null === (n = e.sender) || void 0 === n ? void 0 : n.url)
                    ? o
                    : null === (i = e.sender) || void 0 === i || null === (a = i.tab) || void 0 === a
                    ? void 0
                    : a.url)
                  ? s
                  : ""
              ).origin;
        })(e);
        return new URL((0, s.A)("")).origin === t;
      }
      function i(e) {
        return (
          !!(function (e) {
            var t, r;
            return (null != (t = null === (r = e.sender) || void 0 === r ? void 0 : r.id) ? t : "") === (0, o.z)();
          })(e) || !!n(e)
        );
      }
    },
    39973: (e, t, r) => {
      r.d(t, { D: () => v });
      r(75815),
        r(45749),
        r(23041),
        r(22250),
        r(92665),
        r(88737),
        r(2165),
        r(83746),
        r(37944),
        r(55402),
        r(97979),
        r(38509),
        r(95665),
        r(41533),
        r(72029),
        r(71632),
        r(2191),
        r(4473),
        r(68126),
        r(75986),
        r(37391),
        r(41437),
        r(5744),
        r(18549),
        r(15442);
      var s = r(30754),
        o = r(82324),
        n = r(81805);
      function i(e) {
        return (
          (i =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          i(e)
        );
      }
      function a() {
        a = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          r = t.hasOwnProperty,
          s =
            Object.defineProperty ||
            function (e, t, r) {
              e[t] = r.value;
            },
          o = "function" == typeof Symbol ? Symbol : {},
          n = o.iterator || "@@iterator",
          c = o.asyncIterator || "@@asyncIterator",
          l = o.toStringTag || "@@toStringTag";
        function d(e, t, r) {
          return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t];
        }
        try {
          d({}, "");
        } catch (e) {
          d = function (e, t, r) {
            return (e[t] = r);
          };
        }
        function u(e, t, r, o) {
          var n = t && t.prototype instanceof m ? t : m,
            i = Object.create(n.prototype),
            a = new I(o || []);
          return s(i, "_invoke", { value: w(e, r, a) }), i;
        }
        function p(e, t, r) {
          try {
            return { type: "normal", arg: e.call(t, r) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        e.wrap = u;
        var h = {};
        function m() {}
        function v() {}
        function g() {}
        var y = {};
        d(y, n, function () {
          return this;
        });
        var f = Object.getPrototypeOf,
          _ = f && f(f(O([])));
        _ && _ !== t && r.call(_, n) && (y = _);
        var S = (g.prototype = m.prototype = Object.create(y));
        function E(e) {
          ["next", "throw", "return"].forEach(function (t) {
            d(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function b(e, t) {
          function o(s, n, a, c) {
            var l = p(e[s], e, n);
            if ("throw" !== l.type) {
              var d = l.arg,
                u = d.value;
              return u && "object" == i(u) && r.call(u, "__await")
                ? t.resolve(u.__await).then(
                    function (e) {
                      o("next", e, a, c);
                    },
                    function (e) {
                      o("throw", e, a, c);
                    }
                  )
                : t.resolve(u).then(
                    function (e) {
                      (d.value = e), a(d);
                    },
                    function (e) {
                      return o("throw", e, a, c);
                    }
                  );
            }
            c(l.arg);
          }
          var n;
          s(this, "_invoke", {
            value: function (e, r) {
              function s() {
                return new t(function (t, s) {
                  o(e, r, t, s);
                });
              }
              return (n = n ? n.then(s, s) : s());
            }
          });
        }
        function w(e, t, r) {
          var s = "suspendedStart";
          return function (o, n) {
            if ("executing" === s) throw new Error("Generator is already running");
            if ("completed" === s) {
              if ("throw" === o) throw n;
              return P();
            }
            for (r.method = o, r.arg = n; ; ) {
              var i = r.delegate;
              if (i) {
                var a = A(i, r);
                if (a) {
                  if (a === h) continue;
                  return a;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if ("suspendedStart" === s) throw ((s = "completed"), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              s = "executing";
              var c = p(e, t, r);
              if ("normal" === c.type) {
                if (((s = r.done ? "completed" : "suspendedYield"), c.arg === h)) continue;
                return { value: c.arg, done: r.done };
              }
              "throw" === c.type && ((s = "completed"), (r.method = "throw"), (r.arg = c.arg));
            }
          };
        }
        function A(e, t) {
          var r = t.method,
            s = e.iterator[r];
          if (void 0 === s)
            return (
              (t.delegate = null),
              ("throw" === r && e.iterator.return && ((t.method = "return"), (t.arg = void 0), A(e, t), "throw" === t.method)) ||
                ("return" !== r && ((t.method = "throw"), (t.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
              h
            );
          var o = p(s, e.iterator, t.arg);
          if ("throw" === o.type) return (t.method = "throw"), (t.arg = o.arg), (t.delegate = null), h;
          var n = o.arg;
          return n
            ? n.done
              ? ((t[e.resultName] = n.value),
                (t.next = e.nextLoc),
                "return" !== t.method && ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                h)
              : n
            : ((t.method = "throw"), (t.arg = new TypeError("iterator result is not an object")), (t.delegate = null), h);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
        }
        function C(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function I(e) {
          (this.tryEntries = [{ tryLoc: "root" }]), e.forEach(T, this), this.reset(!0);
        }
        function O(e) {
          if (e) {
            var t = e[n];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var s = -1,
                o = function t() {
                  for (; ++s < e.length; ) if (r.call(e, s)) return (t.value = e[s]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (o.next = o);
            }
          }
          return { next: P };
        }
        function P() {
          return { value: void 0, done: !0 };
        }
        return (
          (v.prototype = g),
          s(S, "constructor", { value: g, configurable: !0 }),
          s(g, "constructor", { value: v, configurable: !0 }),
          (v.displayName = d(g, l, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : ((e.__proto__ = g), d(e, l, "GeneratorFunction")),
              (e.prototype = Object.create(S)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          E(b.prototype),
          d(b.prototype, c, function () {
            return this;
          }),
          (e.AsyncIterator = b),
          (e.async = function (t, r, s, o, n) {
            void 0 === n && (n = Promise);
            var i = new b(u(t, r, s, o), n);
            return e.isGeneratorFunction(r)
              ? i
              : i.next().then(function (e) {
                  return e.done ? e.value : i.next();
                });
          }),
          E(S),
          d(S, l, "Generator"),
          d(S, n, function () {
            return this;
          }),
          d(S, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              r = [];
            for (var s in t) r.push(s);
            return (
              r.reverse(),
              function e() {
                for (; r.length; ) {
                  var s = r.pop();
                  if (s in t) return (e.value = s), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = O),
          (I.prototype = {
            constructor: I,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(C),
                !e)
              )
                for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function s(r, s) {
                return (i.type = "throw"), (i.arg = e), (t.next = r), s && ((t.method = "next"), (t.arg = void 0)), !!s;
              }
              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var n = this.tryEntries[o],
                  i = n.completion;
                if ("root" === n.tryLoc) return s("end");
                if (n.tryLoc <= this.prev) {
                  var a = r.call(n, "catchLoc"),
                    c = r.call(n, "finallyLoc");
                  if (a && c) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  } else if (a) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                  } else {
                    if (!c) throw new Error("try statement without catch or finally");
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                var o = this.tryEntries[s];
                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                  var n = o;
                  break;
                }
              }
              n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
              var i = n ? n.completion : {};
              return (i.type = e), (i.arg = t), n ? ((this.method = "next"), (this.next = n.finallyLoc), h) : this.complete(i);
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg), (this.method = "return"), (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                h
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), C(r), h;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.tryLoc === e) {
                  var s = r.completion;
                  if ("throw" === s.type) {
                    var o = s.arg;
                    C(r);
                  }
                  return o;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, r) {
              return (this.delegate = { iterator: O(e), resultName: t, nextLoc: r }), "next" === this.method && (this.arg = void 0), h;
            }
          }),
          e
        );
      }
      function c(e, t, r, s, o, n, i) {
        try {
          var a = e[n](i),
            c = a.value;
        } catch (e) {
          return void r(e);
        }
        a.done ? t(c) : Promise.resolve(c).then(s, o);
      }
      var l = " ";
      function d(e, t) {
        return u.apply(this, arguments);
      }
      function u() {
        var e;
        return (
          (e = a().mark(function e(t, r) {
            var i, c, d, u;
            return a().wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), (0, s.U)(t);
                    case 3:
                      if (
                        ((i = e.sent), "controllable_by_this_extension" === (c = i.levelOfControl) || "controlled_by_this_extension" === c)
                      ) {
                        e.next = 8;
                        break;
                      }
                      throw (
                        ((d = [
                          "Impossible to change browser setting: ".concat(t, "."),
                          "Extension prevented from changing: ".concat(c)
                        ].join(l)),
                        new Error(d))
                      );
                    case 8:
                      e.next = 18;
                      break;
                    case 10:
                      if (((e.prev = 10), (e.t0 = e.catch(0)), !(0, o.b)(e.t0))) {
                        e.next = 15;
                        break;
                      }
                      throw ((u = "Browser setting not supported: ".concat(t)), new Error(u));
                    case 15:
                      if (!(0, o.I)(e.t0)) {
                        e.next = 17;
                        break;
                      }
                      throw e.t0.runtimeError;
                    case 17:
                      throw e.t0;
                    case 18:
                      return (e.prev = 18), (e.next = 21), (0, n.t)(t, r);
                    case 21:
                      e.next = 27;
                      break;
                    case 23:
                      throw ((e.prev = 23), (e.t1 = e.catch(18)), (0, o.I)(e.t1) ? e.t1.runtimeError : e.t1);
                    case 27:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [
                [0, 10],
                [18, 23]
              ]
            );
          })),
          (u = function () {
            var t = this,
              r = arguments;
            return new Promise(function (s, o) {
              var n = e.apply(t, r);
              function i(e) {
                c(n, s, o, i, a, "next", e);
              }
              function a(e) {
                c(n, s, o, i, a, "throw", e);
              }
              i(void 0);
            });
          }),
          u.apply(this, arguments)
        );
      }
      function p(e) {
        return (
          (p =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          p(e)
        );
      }
      function h() {
        h = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          r = t.hasOwnProperty,
          s =
            Object.defineProperty ||
            function (e, t, r) {
              e[t] = r.value;
            },
          o = "function" == typeof Symbol ? Symbol : {},
          n = o.iterator || "@@iterator",
          i = o.asyncIterator || "@@asyncIterator",
          a = o.toStringTag || "@@toStringTag";
        function c(e, t, r) {
          return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t];
        }
        try {
          c({}, "");
        } catch (e) {
          c = function (e, t, r) {
            return (e[t] = r);
          };
        }
        function l(e, t, r, o) {
          var n = t && t.prototype instanceof m ? t : m,
            i = Object.create(n.prototype),
            a = new I(o || []);
          return s(i, "_invoke", { value: w(e, r, a) }), i;
        }
        function d(e, t, r) {
          try {
            return { type: "normal", arg: e.call(t, r) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        e.wrap = l;
        var u = {};
        function m() {}
        function v() {}
        function g() {}
        var y = {};
        c(y, n, function () {
          return this;
        });
        var f = Object.getPrototypeOf,
          _ = f && f(f(O([])));
        _ && _ !== t && r.call(_, n) && (y = _);
        var S = (g.prototype = m.prototype = Object.create(y));
        function E(e) {
          ["next", "throw", "return"].forEach(function (t) {
            c(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function b(e, t) {
          function o(s, n, i, a) {
            var c = d(e[s], e, n);
            if ("throw" !== c.type) {
              var l = c.arg,
                u = l.value;
              return u && "object" == p(u) && r.call(u, "__await")
                ? t.resolve(u.__await).then(
                    function (e) {
                      o("next", e, i, a);
                    },
                    function (e) {
                      o("throw", e, i, a);
                    }
                  )
                : t.resolve(u).then(
                    function (e) {
                      (l.value = e), i(l);
                    },
                    function (e) {
                      return o("throw", e, i, a);
                    }
                  );
            }
            a(c.arg);
          }
          var n;
          s(this, "_invoke", {
            value: function (e, r) {
              function s() {
                return new t(function (t, s) {
                  o(e, r, t, s);
                });
              }
              return (n = n ? n.then(s, s) : s());
            }
          });
        }
        function w(e, t, r) {
          var s = "suspendedStart";
          return function (o, n) {
            if ("executing" === s) throw new Error("Generator is already running");
            if ("completed" === s) {
              if ("throw" === o) throw n;
              return P();
            }
            for (r.method = o, r.arg = n; ; ) {
              var i = r.delegate;
              if (i) {
                var a = A(i, r);
                if (a) {
                  if (a === u) continue;
                  return a;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if ("suspendedStart" === s) throw ((s = "completed"), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              s = "executing";
              var c = d(e, t, r);
              if ("normal" === c.type) {
                if (((s = r.done ? "completed" : "suspendedYield"), c.arg === u)) continue;
                return { value: c.arg, done: r.done };
              }
              "throw" === c.type && ((s = "completed"), (r.method = "throw"), (r.arg = c.arg));
            }
          };
        }
        function A(e, t) {
          var r = t.method,
            s = e.iterator[r];
          if (void 0 === s)
            return (
              (t.delegate = null),
              ("throw" === r && e.iterator.return && ((t.method = "return"), (t.arg = void 0), A(e, t), "throw" === t.method)) ||
                ("return" !== r && ((t.method = "throw"), (t.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
              u
            );
          var o = d(s, e.iterator, t.arg);
          if ("throw" === o.type) return (t.method = "throw"), (t.arg = o.arg), (t.delegate = null), u;
          var n = o.arg;
          return n
            ? n.done
              ? ((t[e.resultName] = n.value),
                (t.next = e.nextLoc),
                "return" !== t.method && ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                u)
              : n
            : ((t.method = "throw"), (t.arg = new TypeError("iterator result is not an object")), (t.delegate = null), u);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
        }
        function C(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function I(e) {
          (this.tryEntries = [{ tryLoc: "root" }]), e.forEach(T, this), this.reset(!0);
        }
        function O(e) {
          if (e) {
            var t = e[n];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var s = -1,
                o = function t() {
                  for (; ++s < e.length; ) if (r.call(e, s)) return (t.value = e[s]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (o.next = o);
            }
          }
          return { next: P };
        }
        function P() {
          return { value: void 0, done: !0 };
        }
        return (
          (v.prototype = g),
          s(S, "constructor", { value: g, configurable: !0 }),
          s(g, "constructor", { value: v, configurable: !0 }),
          (v.displayName = c(g, a, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : ((e.__proto__ = g), c(e, a, "GeneratorFunction")),
              (e.prototype = Object.create(S)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          E(b.prototype),
          c(b.prototype, i, function () {
            return this;
          }),
          (e.AsyncIterator = b),
          (e.async = function (t, r, s, o, n) {
            void 0 === n && (n = Promise);
            var i = new b(l(t, r, s, o), n);
            return e.isGeneratorFunction(r)
              ? i
              : i.next().then(function (e) {
                  return e.done ? e.value : i.next();
                });
          }),
          E(S),
          c(S, a, "Generator"),
          c(S, n, function () {
            return this;
          }),
          c(S, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              r = [];
            for (var s in t) r.push(s);
            return (
              r.reverse(),
              function e() {
                for (; r.length; ) {
                  var s = r.pop();
                  if (s in t) return (e.value = s), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = O),
          (I.prototype = {
            constructor: I,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(C),
                !e)
              )
                for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function s(r, s) {
                return (i.type = "throw"), (i.arg = e), (t.next = r), s && ((t.method = "next"), (t.arg = void 0)), !!s;
              }
              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var n = this.tryEntries[o],
                  i = n.completion;
                if ("root" === n.tryLoc) return s("end");
                if (n.tryLoc <= this.prev) {
                  var a = r.call(n, "catchLoc"),
                    c = r.call(n, "finallyLoc");
                  if (a && c) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  } else if (a) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                  } else {
                    if (!c) throw new Error("try statement without catch or finally");
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                var o = this.tryEntries[s];
                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                  var n = o;
                  break;
                }
              }
              n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
              var i = n ? n.completion : {};
              return (i.type = e), (i.arg = t), n ? ((this.method = "next"), (this.next = n.finallyLoc), u) : this.complete(i);
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg), (this.method = "return"), (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                u
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), C(r), u;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.tryLoc === e) {
                  var s = r.completion;
                  if ("throw" === s.type) {
                    var o = s.arg;
                    C(r);
                  }
                  return o;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, r) {
              return (this.delegate = { iterator: O(e), resultName: t, nextLoc: r }), "next" === this.method && (this.arg = void 0), u;
            }
          }),
          e
        );
      }
      function m(e, t, r, s, o, n, i) {
        try {
          var a = e[n](i),
            c = a.value;
        } catch (e) {
          return void r(e);
        }
        a.done ? t(c) : Promise.resolve(c).then(s, o);
      }
      function v() {
        return g.apply(this, arguments);
      }
      function g() {
        var e;
        return (
          (e = h().mark(function e() {
            var t;
            return h().wrap(function (e) {
              for (;;)
                switch ((e.prev = e.next)) {
                  case 0:
                    return (
                      (t = ["autofillAddressEnabled", "autofillCreditCardEnabled", "passwordSavingEnabled"].map(function (e) {
                        return d(e, !1);
                      })),
                      (e.next = 4),
                      Promise.all(t)
                    );
                  case 4:
                  case "end":
                    return e.stop();
                }
            }, e);
          })),
          (g = function () {
            var t = this,
              r = arguments;
            return new Promise(function (s, o) {
              var n = e.apply(t, r);
              function i(e) {
                m(n, s, o, i, a, "next", e);
              }
              function a(e) {
                m(n, s, o, i, a, "throw", e);
              }
              i(void 0);
            });
          }),
          g.apply(this, arguments)
        );
      }
    },
    58821: (e, t, r) => {
      r.d(t, { F: () => d });
      r(35758),
        r(82312),
        r(37391),
        r(75815),
        r(45749),
        r(2165),
        r(83746),
        r(37944),
        r(55402),
        r(22250),
        r(92665),
        r(88737),
        r(97979),
        r(38509),
        r(95665),
        r(41533),
        r(72029),
        r(71632),
        r(2191),
        r(4473),
        r(68126),
        r(75986),
        r(41437),
        r(5744),
        r(18549);
      var s = r(84318),
        o = r(16241);
      function n(e) {
        return (
          (n =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          n(e)
        );
      }
      function i() {
        i = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          r = t.hasOwnProperty,
          s =
            Object.defineProperty ||
            function (e, t, r) {
              e[t] = r.value;
            },
          o = "function" == typeof Symbol ? Symbol : {},
          a = o.iterator || "@@iterator",
          c = o.asyncIterator || "@@asyncIterator",
          l = o.toStringTag || "@@toStringTag";
        function d(e, t, r) {
          return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t];
        }
        try {
          d({}, "");
        } catch (e) {
          d = function (e, t, r) {
            return (e[t] = r);
          };
        }
        function u(e, t, r, o) {
          var n = t && t.prototype instanceof m ? t : m,
            i = Object.create(n.prototype),
            a = new I(o || []);
          return s(i, "_invoke", { value: w(e, r, a) }), i;
        }
        function p(e, t, r) {
          try {
            return { type: "normal", arg: e.call(t, r) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        e.wrap = u;
        var h = {};
        function m() {}
        function v() {}
        function g() {}
        var y = {};
        d(y, a, function () {
          return this;
        });
        var f = Object.getPrototypeOf,
          _ = f && f(f(O([])));
        _ && _ !== t && r.call(_, a) && (y = _);
        var S = (g.prototype = m.prototype = Object.create(y));
        function E(e) {
          ["next", "throw", "return"].forEach(function (t) {
            d(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function b(e, t) {
          function o(s, i, a, c) {
            var l = p(e[s], e, i);
            if ("throw" !== l.type) {
              var d = l.arg,
                u = d.value;
              return u && "object" == n(u) && r.call(u, "__await")
                ? t.resolve(u.__await).then(
                    function (e) {
                      o("next", e, a, c);
                    },
                    function (e) {
                      o("throw", e, a, c);
                    }
                  )
                : t.resolve(u).then(
                    function (e) {
                      (d.value = e), a(d);
                    },
                    function (e) {
                      return o("throw", e, a, c);
                    }
                  );
            }
            c(l.arg);
          }
          var i;
          s(this, "_invoke", {
            value: function (e, r) {
              function s() {
                return new t(function (t, s) {
                  o(e, r, t, s);
                });
              }
              return (i = i ? i.then(s, s) : s());
            }
          });
        }
        function w(e, t, r) {
          var s = "suspendedStart";
          return function (o, n) {
            if ("executing" === s) throw new Error("Generator is already running");
            if ("completed" === s) {
              if ("throw" === o) throw n;
              return P();
            }
            for (r.method = o, r.arg = n; ; ) {
              var i = r.delegate;
              if (i) {
                var a = A(i, r);
                if (a) {
                  if (a === h) continue;
                  return a;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if ("suspendedStart" === s) throw ((s = "completed"), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              s = "executing";
              var c = p(e, t, r);
              if ("normal" === c.type) {
                if (((s = r.done ? "completed" : "suspendedYield"), c.arg === h)) continue;
                return { value: c.arg, done: r.done };
              }
              "throw" === c.type && ((s = "completed"), (r.method = "throw"), (r.arg = c.arg));
            }
          };
        }
        function A(e, t) {
          var r = t.method,
            s = e.iterator[r];
          if (void 0 === s)
            return (
              (t.delegate = null),
              ("throw" === r && e.iterator.return && ((t.method = "return"), (t.arg = void 0), A(e, t), "throw" === t.method)) ||
                ("return" !== r && ((t.method = "throw"), (t.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
              h
            );
          var o = p(s, e.iterator, t.arg);
          if ("throw" === o.type) return (t.method = "throw"), (t.arg = o.arg), (t.delegate = null), h;
          var n = o.arg;
          return n
            ? n.done
              ? ((t[e.resultName] = n.value),
                (t.next = e.nextLoc),
                "return" !== t.method && ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                h)
              : n
            : ((t.method = "throw"), (t.arg = new TypeError("iterator result is not an object")), (t.delegate = null), h);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
        }
        function C(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function I(e) {
          (this.tryEntries = [{ tryLoc: "root" }]), e.forEach(T, this), this.reset(!0);
        }
        function O(e) {
          if (e) {
            var t = e[a];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var s = -1,
                o = function t() {
                  for (; ++s < e.length; ) if (r.call(e, s)) return (t.value = e[s]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (o.next = o);
            }
          }
          return { next: P };
        }
        function P() {
          return { value: void 0, done: !0 };
        }
        return (
          (v.prototype = g),
          s(S, "constructor", { value: g, configurable: !0 }),
          s(g, "constructor", { value: v, configurable: !0 }),
          (v.displayName = d(g, l, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : ((e.__proto__ = g), d(e, l, "GeneratorFunction")),
              (e.prototype = Object.create(S)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          E(b.prototype),
          d(b.prototype, c, function () {
            return this;
          }),
          (e.AsyncIterator = b),
          (e.async = function (t, r, s, o, n) {
            void 0 === n && (n = Promise);
            var i = new b(u(t, r, s, o), n);
            return e.isGeneratorFunction(r)
              ? i
              : i.next().then(function (e) {
                  return e.done ? e.value : i.next();
                });
          }),
          E(S),
          d(S, l, "Generator"),
          d(S, a, function () {
            return this;
          }),
          d(S, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              r = [];
            for (var s in t) r.push(s);
            return (
              r.reverse(),
              function e() {
                for (; r.length; ) {
                  var s = r.pop();
                  if (s in t) return (e.value = s), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = O),
          (I.prototype = {
            constructor: I,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(C),
                !e)
              )
                for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function s(r, s) {
                return (i.type = "throw"), (i.arg = e), (t.next = r), s && ((t.method = "next"), (t.arg = void 0)), !!s;
              }
              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var n = this.tryEntries[o],
                  i = n.completion;
                if ("root" === n.tryLoc) return s("end");
                if (n.tryLoc <= this.prev) {
                  var a = r.call(n, "catchLoc"),
                    c = r.call(n, "finallyLoc");
                  if (a && c) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  } else if (a) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                  } else {
                    if (!c) throw new Error("try statement without catch or finally");
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                var o = this.tryEntries[s];
                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                  var n = o;
                  break;
                }
              }
              n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
              var i = n ? n.completion : {};
              return (i.type = e), (i.arg = t), n ? ((this.method = "next"), (this.next = n.finallyLoc), h) : this.complete(i);
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg), (this.method = "return"), (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                h
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), C(r), h;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.tryLoc === e) {
                  var s = r.completion;
                  if ("throw" === s.type) {
                    var o = s.arg;
                    C(r);
                  }
                  return o;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, r) {
              return (this.delegate = { iterator: O(e), resultName: t, nextLoc: r }), "next" === this.method && (this.arg = void 0), h;
            }
          }),
          e
        );
      }
      function a(e, t, r, s, o, n, i) {
        try {
          var a = e[n](i),
            c = a.value;
        } catch (e) {
          return void r(e);
        }
        a.done ? t(c) : Promise.resolve(c).then(s, o);
      }
      var c = { nightly: "icon_nightly_auth", mv2: "icon_auth", mv3: "icon_mv3_auth" },
        l = "icon_not_auth";
      function d(e) {
        return u.apply(this, arguments);
      }
      function u() {
        var e;
        return (
          (e = i().mark(function e(t) {
            var r, n, a, d;
            return i().wrap(function (e) {
              for (;;)
                switch ((e.prev = e.next)) {
                  case 0:
                    return (
                      (r = t.isUserAuthenticated),
                      (n = r
                        ? ((i = void 0),
                          (i = (0, s.W)()).name.includes("Nightly")
                            ? c.nightly
                            : i.name.includes("Beta") || 3 === i.manifest_version
                            ? c.mv3
                            : c.mv2)
                        : l),
                      (a = "icons/action/".concat(n)),
                      (d = { 16: "".concat(a, ".png"), 32: "".concat(a, "@2x.png") }),
                      (e.next = 6),
                      (0, o.B)(d)
                    );
                  case 6:
                  case "end":
                    return e.stop();
                }
              var i;
            }, e);
          })),
          (u = function () {
            var t = this,
              r = arguments;
            return new Promise(function (s, o) {
              var n = e.apply(t, r);
              function i(e) {
                a(n, s, o, i, c, "next", e);
              }
              function c(e) {
                a(n, s, o, i, c, "throw", e);
              }
              i(void 0);
            });
          }),
          u.apply(this, arguments)
        );
      }
    },
    96002: (e, t, r) => {
      r.d(t, { $: () => l });
      r(38298),
        r(86847),
        r(22250),
        r(75815),
        r(45749),
        r(92665),
        r(88737),
        r(23041),
        r(37391),
        r(2165),
        r(83746),
        r(37944),
        r(55402),
        r(97979),
        r(38509),
        r(95665),
        r(41533),
        r(72029),
        r(71632),
        r(2191),
        r(4473),
        r(68126),
        r(75986),
        r(41437),
        r(5744),
        r(18549);
      var s = r(329),
        o = r(98641);
      function n(e) {
        return (
          (n =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          n(e)
        );
      }
      function i() {
        i = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          r = t.hasOwnProperty,
          s =
            Object.defineProperty ||
            function (e, t, r) {
              e[t] = r.value;
            },
          o = "function" == typeof Symbol ? Symbol : {},
          a = o.iterator || "@@iterator",
          c = o.asyncIterator || "@@asyncIterator",
          l = o.toStringTag || "@@toStringTag";
        function d(e, t, r) {
          return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t];
        }
        try {
          d({}, "");
        } catch (e) {
          d = function (e, t, r) {
            return (e[t] = r);
          };
        }
        function u(e, t, r, o) {
          var n = t && t.prototype instanceof m ? t : m,
            i = Object.create(n.prototype),
            a = new I(o || []);
          return s(i, "_invoke", { value: w(e, r, a) }), i;
        }
        function p(e, t, r) {
          try {
            return { type: "normal", arg: e.call(t, r) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        e.wrap = u;
        var h = {};
        function m() {}
        function v() {}
        function g() {}
        var y = {};
        d(y, a, function () {
          return this;
        });
        var f = Object.getPrototypeOf,
          _ = f && f(f(O([])));
        _ && _ !== t && r.call(_, a) && (y = _);
        var S = (g.prototype = m.prototype = Object.create(y));
        function E(e) {
          ["next", "throw", "return"].forEach(function (t) {
            d(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function b(e, t) {
          function o(s, i, a, c) {
            var l = p(e[s], e, i);
            if ("throw" !== l.type) {
              var d = l.arg,
                u = d.value;
              return u && "object" == n(u) && r.call(u, "__await")
                ? t.resolve(u.__await).then(
                    function (e) {
                      o("next", e, a, c);
                    },
                    function (e) {
                      o("throw", e, a, c);
                    }
                  )
                : t.resolve(u).then(
                    function (e) {
                      (d.value = e), a(d);
                    },
                    function (e) {
                      return o("throw", e, a, c);
                    }
                  );
            }
            c(l.arg);
          }
          var i;
          s(this, "_invoke", {
            value: function (e, r) {
              function s() {
                return new t(function (t, s) {
                  o(e, r, t, s);
                });
              }
              return (i = i ? i.then(s, s) : s());
            }
          });
        }
        function w(e, t, r) {
          var s = "suspendedStart";
          return function (o, n) {
            if ("executing" === s) throw new Error("Generator is already running");
            if ("completed" === s) {
              if ("throw" === o) throw n;
              return P();
            }
            for (r.method = o, r.arg = n; ; ) {
              var i = r.delegate;
              if (i) {
                var a = A(i, r);
                if (a) {
                  if (a === h) continue;
                  return a;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if ("suspendedStart" === s) throw ((s = "completed"), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              s = "executing";
              var c = p(e, t, r);
              if ("normal" === c.type) {
                if (((s = r.done ? "completed" : "suspendedYield"), c.arg === h)) continue;
                return { value: c.arg, done: r.done };
              }
              "throw" === c.type && ((s = "completed"), (r.method = "throw"), (r.arg = c.arg));
            }
          };
        }
        function A(e, t) {
          var r = t.method,
            s = e.iterator[r];
          if (void 0 === s)
            return (
              (t.delegate = null),
              ("throw" === r && e.iterator.return && ((t.method = "return"), (t.arg = void 0), A(e, t), "throw" === t.method)) ||
                ("return" !== r && ((t.method = "throw"), (t.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
              h
            );
          var o = p(s, e.iterator, t.arg);
          if ("throw" === o.type) return (t.method = "throw"), (t.arg = o.arg), (t.delegate = null), h;
          var n = o.arg;
          return n
            ? n.done
              ? ((t[e.resultName] = n.value),
                (t.next = e.nextLoc),
                "return" !== t.method && ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                h)
              : n
            : ((t.method = "throw"), (t.arg = new TypeError("iterator result is not an object")), (t.delegate = null), h);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
        }
        function C(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function I(e) {
          (this.tryEntries = [{ tryLoc: "root" }]), e.forEach(T, this), this.reset(!0);
        }
        function O(e) {
          if (e) {
            var t = e[a];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var s = -1,
                o = function t() {
                  for (; ++s < e.length; ) if (r.call(e, s)) return (t.value = e[s]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (o.next = o);
            }
          }
          return { next: P };
        }
        function P() {
          return { value: void 0, done: !0 };
        }
        return (
          (v.prototype = g),
          s(S, "constructor", { value: g, configurable: !0 }),
          s(g, "constructor", { value: v, configurable: !0 }),
          (v.displayName = d(g, l, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : ((e.__proto__ = g), d(e, l, "GeneratorFunction")),
              (e.prototype = Object.create(S)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          E(b.prototype),
          d(b.prototype, c, function () {
            return this;
          }),
          (e.AsyncIterator = b),
          (e.async = function (t, r, s, o, n) {
            void 0 === n && (n = Promise);
            var i = new b(u(t, r, s, o), n);
            return e.isGeneratorFunction(r)
              ? i
              : i.next().then(function (e) {
                  return e.done ? e.value : i.next();
                });
          }),
          E(S),
          d(S, l, "Generator"),
          d(S, a, function () {
            return this;
          }),
          d(S, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              r = [];
            for (var s in t) r.push(s);
            return (
              r.reverse(),
              function e() {
                for (; r.length; ) {
                  var s = r.pop();
                  if (s in t) return (e.value = s), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = O),
          (I.prototype = {
            constructor: I,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(C),
                !e)
              )
                for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function s(r, s) {
                return (i.type = "throw"), (i.arg = e), (t.next = r), s && ((t.method = "next"), (t.arg = void 0)), !!s;
              }
              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var n = this.tryEntries[o],
                  i = n.completion;
                if ("root" === n.tryLoc) return s("end");
                if (n.tryLoc <= this.prev) {
                  var a = r.call(n, "catchLoc"),
                    c = r.call(n, "finallyLoc");
                  if (a && c) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  } else if (a) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                  } else {
                    if (!c) throw new Error("try statement without catch or finally");
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                var o = this.tryEntries[s];
                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                  var n = o;
                  break;
                }
              }
              n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
              var i = n ? n.completion : {};
              return (i.type = e), (i.arg = t), n ? ((this.method = "next"), (this.next = n.finallyLoc), h) : this.complete(i);
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg), (this.method = "return"), (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                h
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), C(r), h;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.tryLoc === e) {
                  var s = r.completion;
                  if ("throw" === s.type) {
                    var o = s.arg;
                    C(r);
                  }
                  return o;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, r) {
              return (this.delegate = { iterator: O(e), resultName: t, nextLoc: r }), "next" === this.method && (this.arg = void 0), h;
            }
          }),
          e
        );
      }
      function a(e, t, r, s, o, n, i) {
        try {
          var a = e[n](i),
            c = a.value;
        } catch (e) {
          return void r(e);
        }
        a.done ? t(c) : Promise.resolve(c).then(s, o);
      }
      function c(e) {
        var t = "http".concat(e.secure ? "s" : ""),
          r = e.domain.startsWith(".") ? e.domain.substring(1) : e.domain;
        return "".concat(t, "://").concat(r).concat(e.path);
      }
      function l(e) {
        return d.apply(this, arguments);
      }
      function d() {
        var e;
        return (
          (e = i().mark(function e(t) {
            var r;
            return i().wrap(function (e) {
              for (;;)
                switch ((e.prev = e.next)) {
                  case 0:
                    return (e.next = 2), (0, s.g)({ domain: t });
                  case 2:
                    return (
                      (r = e.sent),
                      e.abrupt(
                        "return",
                        Promise.all(
                          r.map(function (e) {
                            return (0, o.O)({ url: c(e), name: e.name });
                          })
                        )
                      )
                    );
                  case 4:
                  case "end":
                    return e.stop();
                }
            }, e);
          })),
          (d = function () {
            var t = this,
              r = arguments;
            return new Promise(function (s, o) {
              var n = e.apply(t, r);
              function i(e) {
                a(n, s, o, i, c, "next", e);
              }
              function c(e) {
                a(n, s, o, i, c, "throw", e);
              }
              i(void 0);
            });
          }),
          d.apply(this, arguments)
        );
      }
    },
    59488: (e, t, r) => {
      r.d(t, { j: () => c });
      r(75815),
        r(45749),
        r(2165),
        r(83746),
        r(37944),
        r(55402),
        r(22250),
        r(92665),
        r(88737),
        r(97979),
        r(38509),
        r(95665),
        r(41533),
        r(72029),
        r(71632),
        r(2191),
        r(4473),
        r(68126),
        r(75986),
        r(37391),
        r(41437),
        r(5744),
        r(18549);
      var s = r(39680),
        o = r(41808);
      function n(e) {
        return (
          (n =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          n(e)
        );
      }
      function i() {
        i = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          r = t.hasOwnProperty,
          s =
            Object.defineProperty ||
            function (e, t, r) {
              e[t] = r.value;
            },
          o = "function" == typeof Symbol ? Symbol : {},
          a = o.iterator || "@@iterator",
          c = o.asyncIterator || "@@asyncIterator",
          l = o.toStringTag || "@@toStringTag";
        function d(e, t, r) {
          return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t];
        }
        try {
          d({}, "");
        } catch (e) {
          d = function (e, t, r) {
            return (e[t] = r);
          };
        }
        function u(e, t, r, o) {
          var n = t && t.prototype instanceof m ? t : m,
            i = Object.create(n.prototype),
            a = new I(o || []);
          return s(i, "_invoke", { value: w(e, r, a) }), i;
        }
        function p(e, t, r) {
          try {
            return { type: "normal", arg: e.call(t, r) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        e.wrap = u;
        var h = {};
        function m() {}
        function v() {}
        function g() {}
        var y = {};
        d(y, a, function () {
          return this;
        });
        var f = Object.getPrototypeOf,
          _ = f && f(f(O([])));
        _ && _ !== t && r.call(_, a) && (y = _);
        var S = (g.prototype = m.prototype = Object.create(y));
        function E(e) {
          ["next", "throw", "return"].forEach(function (t) {
            d(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function b(e, t) {
          function o(s, i, a, c) {
            var l = p(e[s], e, i);
            if ("throw" !== l.type) {
              var d = l.arg,
                u = d.value;
              return u && "object" == n(u) && r.call(u, "__await")
                ? t.resolve(u.__await).then(
                    function (e) {
                      o("next", e, a, c);
                    },
                    function (e) {
                      o("throw", e, a, c);
                    }
                  )
                : t.resolve(u).then(
                    function (e) {
                      (d.value = e), a(d);
                    },
                    function (e) {
                      return o("throw", e, a, c);
                    }
                  );
            }
            c(l.arg);
          }
          var i;
          s(this, "_invoke", {
            value: function (e, r) {
              function s() {
                return new t(function (t, s) {
                  o(e, r, t, s);
                });
              }
              return (i = i ? i.then(s, s) : s());
            }
          });
        }
        function w(e, t, r) {
          var s = "suspendedStart";
          return function (o, n) {
            if ("executing" === s) throw new Error("Generator is already running");
            if ("completed" === s) {
              if ("throw" === o) throw n;
              return P();
            }
            for (r.method = o, r.arg = n; ; ) {
              var i = r.delegate;
              if (i) {
                var a = A(i, r);
                if (a) {
                  if (a === h) continue;
                  return a;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if ("suspendedStart" === s) throw ((s = "completed"), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              s = "executing";
              var c = p(e, t, r);
              if ("normal" === c.type) {
                if (((s = r.done ? "completed" : "suspendedYield"), c.arg === h)) continue;
                return { value: c.arg, done: r.done };
              }
              "throw" === c.type && ((s = "completed"), (r.method = "throw"), (r.arg = c.arg));
            }
          };
        }
        function A(e, t) {
          var r = t.method,
            s = e.iterator[r];
          if (void 0 === s)
            return (
              (t.delegate = null),
              ("throw" === r && e.iterator.return && ((t.method = "return"), (t.arg = void 0), A(e, t), "throw" === t.method)) ||
                ("return" !== r && ((t.method = "throw"), (t.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
              h
            );
          var o = p(s, e.iterator, t.arg);
          if ("throw" === o.type) return (t.method = "throw"), (t.arg = o.arg), (t.delegate = null), h;
          var n = o.arg;
          return n
            ? n.done
              ? ((t[e.resultName] = n.value),
                (t.next = e.nextLoc),
                "return" !== t.method && ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                h)
              : n
            : ((t.method = "throw"), (t.arg = new TypeError("iterator result is not an object")), (t.delegate = null), h);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
        }
        function C(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function I(e) {
          (this.tryEntries = [{ tryLoc: "root" }]), e.forEach(T, this), this.reset(!0);
        }
        function O(e) {
          if (e) {
            var t = e[a];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var s = -1,
                o = function t() {
                  for (; ++s < e.length; ) if (r.call(e, s)) return (t.value = e[s]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (o.next = o);
            }
          }
          return { next: P };
        }
        function P() {
          return { value: void 0, done: !0 };
        }
        return (
          (v.prototype = g),
          s(S, "constructor", { value: g, configurable: !0 }),
          s(g, "constructor", { value: v, configurable: !0 }),
          (v.displayName = d(g, l, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : ((e.__proto__ = g), d(e, l, "GeneratorFunction")),
              (e.prototype = Object.create(S)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          E(b.prototype),
          d(b.prototype, c, function () {
            return this;
          }),
          (e.AsyncIterator = b),
          (e.async = function (t, r, s, o, n) {
            void 0 === n && (n = Promise);
            var i = new b(u(t, r, s, o), n);
            return e.isGeneratorFunction(r)
              ? i
              : i.next().then(function (e) {
                  return e.done ? e.value : i.next();
                });
          }),
          E(S),
          d(S, l, "Generator"),
          d(S, a, function () {
            return this;
          }),
          d(S, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              r = [];
            for (var s in t) r.push(s);
            return (
              r.reverse(),
              function e() {
                for (; r.length; ) {
                  var s = r.pop();
                  if (s in t) return (e.value = s), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = O),
          (I.prototype = {
            constructor: I,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(C),
                !e)
              )
                for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function s(r, s) {
                return (i.type = "throw"), (i.arg = e), (t.next = r), s && ((t.method = "next"), (t.arg = void 0)), !!s;
              }
              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var n = this.tryEntries[o],
                  i = n.completion;
                if ("root" === n.tryLoc) return s("end");
                if (n.tryLoc <= this.prev) {
                  var a = r.call(n, "catchLoc"),
                    c = r.call(n, "finallyLoc");
                  if (a && c) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  } else if (a) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                  } else {
                    if (!c) throw new Error("try statement without catch or finally");
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                var o = this.tryEntries[s];
                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                  var n = o;
                  break;
                }
              }
              n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
              var i = n ? n.completion : {};
              return (i.type = e), (i.arg = t), n ? ((this.method = "next"), (this.next = n.finallyLoc), h) : this.complete(i);
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg), (this.method = "return"), (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                h
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), C(r), h;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.tryLoc === e) {
                  var s = r.completion;
                  if ("throw" === s.type) {
                    var o = s.arg;
                    C(r);
                  }
                  return o;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, r) {
              return (this.delegate = { iterator: O(e), resultName: t, nextLoc: r }), "next" === this.method && (this.arg = void 0), h;
            }
          }),
          e
        );
      }
      function a(e, t, r, s, o, n, i) {
        try {
          var a = e[n](i),
            c = a.value;
        } catch (e) {
          return void r(e);
        }
        a.done ? t(c) : Promise.resolve(c).then(s, o);
      }
      function c(e) {
        return l.apply(this, arguments);
      }
      function l() {
        var e;
        return (
          (e = i().mark(function e(t) {
            var r, n, a, c;
            return i().wrap(function (e) {
              for (;;)
                switch ((e.prev = e.next)) {
                  case 0:
                    if (!(0, s.G)()) {
                      e.next = 5;
                      break;
                    }
                    return (e.next = 3), (0, s.y)(t);
                  case 3:
                    return (r = e.sent), e.abrupt("return", r > 0);
                  case 5:
                    return (e.next = 7), (0, o.U)(t);
                  case 7:
                    return (n = e.sent), (a = void 0 === n[t]), (c = null === n[t]), e.abrupt("return", !a && !c);
                  case 11:
                  case "end":
                    return e.stop();
                }
            }, e);
          })),
          (l = function () {
            var t = this,
              r = arguments;
            return new Promise(function (s, o) {
              var n = e.apply(t, r);
              function i(e) {
                a(n, s, o, i, c, "next", e);
              }
              function c(e) {
                a(n, s, o, i, c, "throw", e);
              }
              i(void 0);
            });
          }),
          l.apply(this, arguments)
        );
      }
    },
    47940: (e, t, r) => {
      r.d(t, { b: () => P });
      r(86847),
        r(72424),
        r(23041),
        r(15442),
        r(37391),
        r(32202),
        r(75815),
        r(68585),
        r(45749),
        r(2165),
        r(83746),
        r(37944),
        r(55402),
        r(22250),
        r(92665),
        r(88737),
        r(97979),
        r(38509),
        r(95665),
        r(41533),
        r(72029),
        r(71632),
        r(2191),
        r(4473),
        r(68126),
        r(75986),
        r(41437),
        r(5744),
        r(18549),
        r(296),
        r(30094),
        r(32721),
        r(7541),
        r(22440),
        r(94973);
      var s = r(92204),
        o = r(24715),
        n = r(72733),
        i = r(57306),
        a = r(31460),
        c = (r(38298), r(61222));
      function l(e) {
        return (
          (l =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          l(e)
        );
      }
      function d() {
        d = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          r = t.hasOwnProperty,
          s =
            Object.defineProperty ||
            function (e, t, r) {
              e[t] = r.value;
            },
          o = "function" == typeof Symbol ? Symbol : {},
          n = o.iterator || "@@iterator",
          i = o.asyncIterator || "@@asyncIterator",
          a = o.toStringTag || "@@toStringTag";
        function c(e, t, r) {
          return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t];
        }
        try {
          c({}, "");
        } catch (e) {
          c = function (e, t, r) {
            return (e[t] = r);
          };
        }
        function u(e, t, r, o) {
          var n = t && t.prototype instanceof m ? t : m,
            i = Object.create(n.prototype),
            a = new I(o || []);
          return s(i, "_invoke", { value: w(e, r, a) }), i;
        }
        function p(e, t, r) {
          try {
            return { type: "normal", arg: e.call(t, r) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        e.wrap = u;
        var h = {};
        function m() {}
        function v() {}
        function g() {}
        var y = {};
        c(y, n, function () {
          return this;
        });
        var f = Object.getPrototypeOf,
          _ = f && f(f(O([])));
        _ && _ !== t && r.call(_, n) && (y = _);
        var S = (g.prototype = m.prototype = Object.create(y));
        function E(e) {
          ["next", "throw", "return"].forEach(function (t) {
            c(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function b(e, t) {
          function o(s, n, i, a) {
            var c = p(e[s], e, n);
            if ("throw" !== c.type) {
              var d = c.arg,
                u = d.value;
              return u && "object" == l(u) && r.call(u, "__await")
                ? t.resolve(u.__await).then(
                    function (e) {
                      o("next", e, i, a);
                    },
                    function (e) {
                      o("throw", e, i, a);
                    }
                  )
                : t.resolve(u).then(
                    function (e) {
                      (d.value = e), i(d);
                    },
                    function (e) {
                      return o("throw", e, i, a);
                    }
                  );
            }
            a(c.arg);
          }
          var n;
          s(this, "_invoke", {
            value: function (e, r) {
              function s() {
                return new t(function (t, s) {
                  o(e, r, t, s);
                });
              }
              return (n = n ? n.then(s, s) : s());
            }
          });
        }
        function w(e, t, r) {
          var s = "suspendedStart";
          return function (o, n) {
            if ("executing" === s) throw new Error("Generator is already running");
            if ("completed" === s) {
              if ("throw" === o) throw n;
              return P();
            }
            for (r.method = o, r.arg = n; ; ) {
              var i = r.delegate;
              if (i) {
                var a = A(i, r);
                if (a) {
                  if (a === h) continue;
                  return a;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if ("suspendedStart" === s) throw ((s = "completed"), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              s = "executing";
              var c = p(e, t, r);
              if ("normal" === c.type) {
                if (((s = r.done ? "completed" : "suspendedYield"), c.arg === h)) continue;
                return { value: c.arg, done: r.done };
              }
              "throw" === c.type && ((s = "completed"), (r.method = "throw"), (r.arg = c.arg));
            }
          };
        }
        function A(e, t) {
          var r = t.method,
            s = e.iterator[r];
          if (void 0 === s)
            return (
              (t.delegate = null),
              ("throw" === r && e.iterator.return && ((t.method = "return"), (t.arg = void 0), A(e, t), "throw" === t.method)) ||
                ("return" !== r && ((t.method = "throw"), (t.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
              h
            );
          var o = p(s, e.iterator, t.arg);
          if ("throw" === o.type) return (t.method = "throw"), (t.arg = o.arg), (t.delegate = null), h;
          var n = o.arg;
          return n
            ? n.done
              ? ((t[e.resultName] = n.value),
                (t.next = e.nextLoc),
                "return" !== t.method && ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                h)
              : n
            : ((t.method = "throw"), (t.arg = new TypeError("iterator result is not an object")), (t.delegate = null), h);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
        }
        function C(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function I(e) {
          (this.tryEntries = [{ tryLoc: "root" }]), e.forEach(T, this), this.reset(!0);
        }
        function O(e) {
          if (e) {
            var t = e[n];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var s = -1,
                o = function t() {
                  for (; ++s < e.length; ) if (r.call(e, s)) return (t.value = e[s]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (o.next = o);
            }
          }
          return { next: P };
        }
        function P() {
          return { value: void 0, done: !0 };
        }
        return (
          (v.prototype = g),
          s(S, "constructor", { value: g, configurable: !0 }),
          s(g, "constructor", { value: v, configurable: !0 }),
          (v.displayName = c(g, a, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : ((e.__proto__ = g), c(e, a, "GeneratorFunction")),
              (e.prototype = Object.create(S)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          E(b.prototype),
          c(b.prototype, i, function () {
            return this;
          }),
          (e.AsyncIterator = b),
          (e.async = function (t, r, s, o, n) {
            void 0 === n && (n = Promise);
            var i = new b(u(t, r, s, o), n);
            return e.isGeneratorFunction(r)
              ? i
              : i.next().then(function (e) {
                  return e.done ? e.value : i.next();
                });
          }),
          E(S),
          c(S, a, "Generator"),
          c(S, n, function () {
            return this;
          }),
          c(S, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              r = [];
            for (var s in t) r.push(s);
            return (
              r.reverse(),
              function e() {
                for (; r.length; ) {
                  var s = r.pop();
                  if (s in t) return (e.value = s), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = O),
          (I.prototype = {
            constructor: I,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(C),
                !e)
              )
                for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function s(r, s) {
                return (i.type = "throw"), (i.arg = e), (t.next = r), s && ((t.method = "next"), (t.arg = void 0)), !!s;
              }
              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var n = this.tryEntries[o],
                  i = n.completion;
                if ("root" === n.tryLoc) return s("end");
                if (n.tryLoc <= this.prev) {
                  var a = r.call(n, "catchLoc"),
                    c = r.call(n, "finallyLoc");
                  if (a && c) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  } else if (a) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                  } else {
                    if (!c) throw new Error("try statement without catch or finally");
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                var o = this.tryEntries[s];
                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                  var n = o;
                  break;
                }
              }
              n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
              var i = n ? n.completion : {};
              return (i.type = e), (i.arg = t), n ? ((this.method = "next"), (this.next = n.finallyLoc), h) : this.complete(i);
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg), (this.method = "return"), (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                h
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), C(r), h;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.tryLoc === e) {
                  var s = r.completion;
                  if ("throw" === s.type) {
                    var o = s.arg;
                    C(r);
                  }
                  return o;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, r) {
              return (this.delegate = { iterator: O(e), resultName: t, nextLoc: r }), "next" === this.method && (this.arg = void 0), h;
            }
          }),
          e
        );
      }
      function u(e, t, r, s, o, n, i) {
        try {
          var a = e[n](i),
            c = a.value;
        } catch (e) {
          return void r(e);
        }
        a.done ? t(c) : Promise.resolve(c).then(s, o);
      }
      function p() {
        return h.apply(this, arguments);
      }
      function h() {
        var e;
        return (
          (e = d().mark(function e() {
            var t, r, o, n;
            return d().wrap(function (e) {
              for (;;)
                switch ((e.prev = e.next)) {
                  case 0:
                    return (e.next = 2), (0, c.I)({});
                  case 2:
                    return (
                      (t = e.sent),
                      (r = (0, s.A)("")),
                      (o = function (e) {
                        return "string" == typeof e.url && e.url.startsWith(r);
                      }),
                      (n = function (e) {
                        return "" !== e.url;
                      }),
                      e.abrupt("return", t.filter(o).filter(n))
                    );
                  case 7:
                  case "end":
                    return e.stop();
                }
            }, e);
          })),
          (h = function () {
            var t = this,
              r = arguments;
            return new Promise(function (s, o) {
              var n = e.apply(t, r);
              function i(e) {
                u(n, s, o, i, a, "next", e);
              }
              function a(e) {
                u(n, s, o, i, a, "throw", e);
              }
              i(void 0);
            });
          }),
          h.apply(this, arguments)
        );
      }
      function m(e) {
        return (
          (m =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }),
          m(e)
        );
      }
      function v(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var s = Object.getOwnPropertySymbols(e);
          t &&
            (s = s.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            r.push.apply(r, s);
        }
        return r;
      }
      function g(e) {
        for (var t = 1; t < arguments.length; t++) {
          var r = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? v(Object(r), !0).forEach(function (t) {
                y(e, t, r[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : v(Object(r)).forEach(function (t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));
              });
        }
        return e;
      }
      function y(e, t, r) {
        return (
          (t = (function (e) {
            var t = (function (e, t) {
              if ("object" !== m(e) || null === e) return e;
              var r = e[Symbol.toPrimitive];
              if (void 0 !== r) {
                var s = r.call(e, t || "default");
                if ("object" !== m(s)) return s;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return ("string" === t ? String : Number)(e);
            })(e, "string");
            return "symbol" === m(t) ? t : String(t);
          })(t)) in e
            ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 })
            : (e[t] = r),
          e
        );
      }
      function f() {
        f = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          r = t.hasOwnProperty,
          s =
            Object.defineProperty ||
            function (e, t, r) {
              e[t] = r.value;
            },
          o = "function" == typeof Symbol ? Symbol : {},
          n = o.iterator || "@@iterator",
          i = o.asyncIterator || "@@asyncIterator",
          a = o.toStringTag || "@@toStringTag";
        function c(e, t, r) {
          return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t];
        }
        try {
          c({}, "");
        } catch (e) {
          c = function (e, t, r) {
            return (e[t] = r);
          };
        }
        function l(e, t, r, o) {
          var n = t && t.prototype instanceof p ? t : p,
            i = Object.create(n.prototype),
            a = new I(o || []);
          return s(i, "_invoke", { value: w(e, r, a) }), i;
        }
        function d(e, t, r) {
          try {
            return { type: "normal", arg: e.call(t, r) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        e.wrap = l;
        var u = {};
        function p() {}
        function h() {}
        function v() {}
        var g = {};
        c(g, n, function () {
          return this;
        });
        var y = Object.getPrototypeOf,
          _ = y && y(y(O([])));
        _ && _ !== t && r.call(_, n) && (g = _);
        var S = (v.prototype = p.prototype = Object.create(g));
        function E(e) {
          ["next", "throw", "return"].forEach(function (t) {
            c(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function b(e, t) {
          function o(s, n, i, a) {
            var c = d(e[s], e, n);
            if ("throw" !== c.type) {
              var l = c.arg,
                u = l.value;
              return u && "object" == m(u) && r.call(u, "__await")
                ? t.resolve(u.__await).then(
                    function (e) {
                      o("next", e, i, a);
                    },
                    function (e) {
                      o("throw", e, i, a);
                    }
                  )
                : t.resolve(u).then(
                    function (e) {
                      (l.value = e), i(l);
                    },
                    function (e) {
                      return o("throw", e, i, a);
                    }
                  );
            }
            a(c.arg);
          }
          var n;
          s(this, "_invoke", {
            value: function (e, r) {
              function s() {
                return new t(function (t, s) {
                  o(e, r, t, s);
                });
              }
              return (n = n ? n.then(s, s) : s());
            }
          });
        }
        function w(e, t, r) {
          var s = "suspendedStart";
          return function (o, n) {
            if ("executing" === s) throw new Error("Generator is already running");
            if ("completed" === s) {
              if ("throw" === o) throw n;
              return P();
            }
            for (r.method = o, r.arg = n; ; ) {
              var i = r.delegate;
              if (i) {
                var a = A(i, r);
                if (a) {
                  if (a === u) continue;
                  return a;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if ("suspendedStart" === s) throw ((s = "completed"), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              s = "executing";
              var c = d(e, t, r);
              if ("normal" === c.type) {
                if (((s = r.done ? "completed" : "suspendedYield"), c.arg === u)) continue;
                return { value: c.arg, done: r.done };
              }
              "throw" === c.type && ((s = "completed"), (r.method = "throw"), (r.arg = c.arg));
            }
          };
        }
        function A(e, t) {
          var r = t.method,
            s = e.iterator[r];
          if (void 0 === s)
            return (
              (t.delegate = null),
              ("throw" === r && e.iterator.return && ((t.method = "return"), (t.arg = void 0), A(e, t), "throw" === t.method)) ||
                ("return" !== r && ((t.method = "throw"), (t.arg = new TypeError("The iterator does not provide a '" + r + "' method")))),
              u
            );
          var o = d(s, e.iterator, t.arg);
          if ("throw" === o.type) return (t.method = "throw"), (t.arg = o.arg), (t.delegate = null), u;
          var n = o.arg;
          return n
            ? n.done
              ? ((t[e.resultName] = n.value),
                (t.next = e.nextLoc),
                "return" !== t.method && ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                u)
              : n
            : ((t.method = "throw"), (t.arg = new TypeError("iterator result is not an object")), (t.delegate = null), u);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
        }
        function C(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function I(e) {
          (this.tryEntries = [{ tryLoc: "root" }]), e.forEach(T, this), this.reset(!0);
        }
        function O(e) {
          if (e) {
            var t = e[n];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var s = -1,
                o = function t() {
                  for (; ++s < e.length; ) if (r.call(e, s)) return (t.value = e[s]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (o.next = o);
            }
          }
          return { next: P };
        }
        function P() {
          return { value: void 0, done: !0 };
        }
        return (
          (h.prototype = v),
          s(S, "constructor", { value: v, configurable: !0 }),
          s(v, "constructor", { value: h, configurable: !0 }),
          (h.displayName = c(v, a, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === h || "GeneratorFunction" === (t.displayName || t.name));
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf ? Object.setPrototypeOf(e, v) : ((e.__proto__ = v), c(e, a, "GeneratorFunction")),
              (e.prototype = Object.create(S)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          E(b.prototype),
          c(b.prototype, i, function () {
            return this;
          }),
          (e.AsyncIterator = b),
          (e.async = function (t, r, s, o, n) {
            void 0 === n && (n = Promise);
            var i = new b(l(t, r, s, o), n);
            return e.isGeneratorFunction(r)
              ? i
              : i.next().then(function (e) {
                  return e.done ? e.value : i.next();
                });
          }),
          E(S),
          c(S, a, "Generator"),
          c(S, n, function () {
            return this;
          }),
          c(S, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              r = [];
            for (var s in t) r.push(s);
            return (
              r.reverse(),
              function e() {
                for (; r.length; ) {
                  var s = r.pop();
                  if (s in t) return (e.value = s), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = O),
          (I.prototype = {
            constructor: I,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(C),
                !e)
              )
                for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function s(r, s) {
                return (i.type = "throw"), (i.arg = e), (t.next = r), s && ((t.method = "next"), (t.arg = void 0)), !!s;
              }
              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var n = this.tryEntries[o],
                  i = n.completion;
                if ("root" === n.tryLoc) return s("end");
                if (n.tryLoc <= this.prev) {
                  var a = r.call(n, "catchLoc"),
                    c = r.call(n, "finallyLoc");
                  if (a && c) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  } else if (a) {
                    if (this.prev < n.catchLoc) return s(n.catchLoc, !0);
                  } else {
                    if (!c) throw new Error("try statement without catch or finally");
                    if (this.prev < n.finallyLoc) return s(n.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                var o = this.tryEntries[s];
                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                  var n = o;
                  break;
                }
              }
              n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
              var i = n ? n.completion : {};
              return (i.type = e), (i.arg = t), n ? ((this.method = "next"), (this.next = n.finallyLoc), u) : this.complete(i);
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg), (this.method = "return"), (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                u
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), C(r), u;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var r = this.tryEntries[t];
                if (r.tryLoc === e) {
                  var s = r.completion;
                  if ("throw" === s.type) {
                    var o = s.arg;
                    C(r);
                  }
                  return o;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, r) {
              return (this.delegate = { iterator: O(e), resultName: t, nextLoc: r }), "next" === this.method && (this.arg = void 0), u;
            }
          }),
          e
        );
      }
      function _(e, t, r, s, o, n, i) {
        try {
          var a = e[n](i),
            c = a.value;
        } catch (e) {
          return void r(e);
        }
        a.done ? t(c) : Promise.resolve(c).then(s, o);
      }
      function S(e) {
        return function () {
          var t = this,
            r = arguments;
          return new Promise(function (s, o) {
            var n = e.apply(t, r);
            function i(e) {
              _(n, s, o, i, a, "next", e);
            }
            function a(e) {
              _(n, s, o, i, a, "throw", e);
            }
            i(void 0);
          });
        };
      }
      var E = "index.html";
      function b() {
        var e = (0, s.A)("");
        return "".concat(e).concat(E);
      }
      function w(e) {
        var t = e.identifier,
          r = e.queryInfo,
          s = e.name,
          o = b();
        if (!s) return o;
        var n = t ? "#".concat(s, "/").concat(t) : "#".concat(s),
          i = r
            ? "?".concat(
                (function (e) {
                  return Object.keys(e)
                    .map(function (t) {
                      return "".concat(t, "=").concat(e[t]);
                    })
                    .join("&");
                })(r)
              )
            : "";
        return encodeURI("".concat(o).concat(n).concat(i));
      }
      function A(e) {
        return T.apply(this, arguments);
      }
      function T() {
        return (T = S(
          f().mark(function e(t) {
            var r;
            return f().wrap(function (e) {
              for (;;)
                switch ((e.prev = e.next)) {
                  case 0:
                    return (r = { url: t }), (e.next = 3), (0, o.U)(r);
                  case 3:
                  case "end":
                    return e.stop();
                }
            }, e);
          })
        )).apply(this, arguments);
      }
      function C(e) {
        var t,
          r = e.existingTabs,
          s = e.focusedWindow,
          o = r.filter(function (e) {
            return e.active;
          }),
          n = o.find(function (e) {
            return e.windowId === s.id;
          }),
          i = o.pop(),
          a = r.pop();
        return null != (t = null != n ? n : i) ? t : a;
      }
      function I(e) {
        return O.apply(this, arguments);
      }
      function O() {
        return (O = S(
          f().mark(function e(t) {
            var r, s, o, c, l, d;
            return f().wrap(function (e) {
              for (;;)
                switch ((e.prev = e.next)) {
                  case 0:
                    return (r = t.path), (s = t.tabs), (e.next = 3), (0, n.T)();
                  case 3:
                    if (((o = e.sent), (c = C({ existingTabs: s, focusedWindow: o })))) {
                      e.next = 7;
                      break;
                    }
                    return e.abrupt("return");
                  case 7:
                    if ((c.windowId !== o.id && (0, i.V)(c.windowId, { focused: !0 }), c.id)) {
                      e.next = 10;
                      break;
                    }
                    return e.abrupt("return");
                  case 10:
                    return (l = r === b() ? {} : { url: r }), (d = g({ active: !0 }, l)), (e.next = 14), (0, a.V)(c.id, d);
                  case 14:
                  case "end":
                    return e.stop();
                }
            }, e);
          })
        )).apply(this, arguments);
      }
      function P(e) {
        return R.apply(this, arguments);
      }
      function R() {
        return (
          (R = S(
            f().mark(function e(t) {
              var r, s, o, n, i;
              return f().wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (r = t.id), (s = t.query), (o = t.route), (n = w({ identifier: r, queryInfo: s, name: o })), (e.next = 4), p();
                    case 4:
                      if (!(i = e.sent).length) {
                        e.next = 9;
                        break;
                      }
                      return (e.next = 8), I({ path: n, tabs: i });
                    case 8:
                      return e.abrupt("return");
                    case 9:
                      return (e.next = 11), A(n);
                    case 11:
                    case "end":
                      return e.stop();
                  }
              }, e);
            })
          )),
          R.apply(this, arguments)
        );
      }
    },
    53006: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    27571: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.abTestsLiveQueriesSlots = t.abTestsQueriesSlots = t.abTestsCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.abTestsCommandsSlots = { participateToUserABTest: (0, s.slot)() }),
        (t.abTestsQueriesSlots = { getUserABTestVariant: (0, s.slot)() }),
        (t.abTestsLiveQueriesSlots = { liveUserABTestVariant: (0, o.liveSlot)() });
    },
    28249: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(53006), t), o(r(27571), t);
    },
    29004: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(19240), t), o(r(69021), t);
    },
    19240: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.contactInfoLiveQueriesSlots = t.contactInfoQueriesSlots = t.contactInfoCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.contactInfoCommandsSlots = { editContactInfo: (0, s.slot)() }),
        (t.contactInfoQueriesSlots = { getContactInfo: (0, s.slot)() }),
        (t.contactInfoLiveQueriesSlots = { liveContactInfo: (0, o.liveSlot)() });
    },
    69021: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.EditContactInfoErrorCode = void 0),
        (function (e) {
          (e[(e.EMPTY_EMAIL = 0)] = "EMPTY_EMAIL"),
            (e[(e.INVALID_EMAIL = 1)] = "INVALID_EMAIL"),
            (e[(e.UNKNOWN_ERROR = 2)] = "UNKNOWN_ERROR");
        })(t.EditContactInfoErrorCode || (t.EditContactInfoErrorCode = {}));
    },
    90041: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(83559), t);
    },
    83559: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.subscriptionCodeLiveQueriesSlots = t.subscriptionCodeQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.subscriptionCodeQueriesSlots = { getSubscriptionCode: (0, s.slot)() }),
        (t.subscriptionCodeLiveQueriesSlots = { liveSubscriptionCode: (0, o.liveSlot)() });
    },
    53042: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.AccountCreationCode = void 0),
        (function (e) {
          (e[(e.USER_EXISTS = 0)] = "USER_EXISTS"),
            (e[(e.USER_DOESNT_EXIST = 1)] = "USER_DOESNT_EXIST"),
            (e[(e.USER_DOESNT_EXIST_UNLIKELY_MX = 2)] = "USER_DOESNT_EXIST_UNLIKELY_MX"),
            (e[(e.USER_DOESNT_EXIST_INVALID_MX = 3)] = "USER_DOESNT_EXIST_INVALID_MX"),
            (e[(e.USER_DOESNT_EXIST_SSO_NON_PROVISIONED = 4)] = "USER_DOESNT_EXIST_SSO_NON_PROVISIONED"),
            (e[(e.USER_SSO_PROVISIONED = 5)] = "USER_SSO_PROVISIONED"),
            (e[(e.USER_NITRO_SSO_PROVISIONED = 6)] = "USER_NITRO_SSO_PROVISIONED"),
            (e[(e.USER_NOT_PROPOSED = 7)] = "USER_NOT_PROPOSED");
        })(t.AccountCreationCode || (t.AccountCreationCode = {}));
    },
    12972: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.accountCreationLiveQueriesSlots = void 0);
      const s = r(72345);
      t.accountCreationLiveQueriesSlots = { liveAccountCreated: (0, s.liveSlot)() };
    },
    33773: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(53042), t), o(r(12972), t);
    },
    16307: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.antiPhishingLiveQueriesSlots = void 0);
      const s = r(72345);
      t.antiPhishingLiveQueriesSlots = { livePhishingURLList: (0, s.liveSlot)() };
    },
    65722: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(16307), t);
    },
    8850: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(14529), t), o(r(54876), t);
    },
    14529: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.twoFactorAuthenticationLiveQueriesSlots =
          t.twoFactorAuthenticationQueriesSlots =
          t.twoFactorAuthenticationCommandsSlots =
            void 0);
      const s = r(71796),
        o = r(72345);
      (t.twoFactorAuthenticationCommandsSlots = {
        refreshU2FDevicesList: (0, s.slot)(),
        removeU2FAuthenticator: (0, s.slot)(),
        refreshTwoFactorAuthenticationInfo: (0, s.slot)(),
        startTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
        stopTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
        continueTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
        backTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
        startTwoFactorAuthenticationDisableFlow: (0, s.slot)(),
        stopTwoFactorAuthenticationDisableFlow: (0, s.slot)(),
        continueTwoFactorAuthenticationDisableFlow: (0, s.slot)(),
        backTwoFactorAuthenticationDisableFlow: (0, s.slot)()
      }),
        (t.twoFactorAuthenticationQueriesSlots = {
          getU2FDevicesList: (0, s.slot)(),
          getTwoFactorAuthenticationEnableStage: (0, s.slot)(),
          getTwoFactorAuthenticationDisableStage: (0, s.slot)()
        }),
        (t.twoFactorAuthenticationLiveQueriesSlots = {
          liveU2FDevicesList: (0, o.liveSlot)(),
          liveTwoFactorAuthenticationEnableStage: (0, o.liveSlot)(),
          liveTwoFactorAuthenticationDisableStage: (0, o.liveSlot)()
        });
    },
    54876: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.RequestTOTPActivationError =
          t.TwoFactorAuthenticationDisableStages =
          t.TwoFactorAuthenticationEnableStages =
          t.RemoveU2FAuthenticatorError =
          t.RefreshU2FErrorCode =
            void 0),
        (function (e) {
          e[(e.UNKNOWN_ERROR = 0)] = "UNKNOWN_ERROR";
        })(t.RefreshU2FErrorCode || (t.RefreshU2FErrorCode = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
            (e.NO_KEYHANDLE_FOUND = "NO_KEYHANDLE_FOUND"),
            (e.WRONG_AUTHENTICATION_CODE = "WRONG_AUTHENTICATION_CODE");
        })(t.RemoveU2FAuthenticatorError || (t.RemoveU2FAuthenticatorError = {})),
        (function (e) {
          (e.AUTHENTICATION_TYPE = "AUTHENTICATION_TYPE"),
            (e.BACKUP_PHONE = "BACKUP_PHONE"),
            (e.QR_CODE = "QR_CODE"),
            (e.AUTHENTICATION_CODE = "AUTHENTICATION_CODE"),
            (e.LOADING = "LOADING"),
            (e.FINALIZING_CHANGES = "FINALIZING_CHANGES"),
            (e.BACKUP_CODES = "BACKUP_CODES"),
            (e.GENERIC_ERROR = "GENERIC_ERROR"),
            (e.LOGOUT_REQUIRED = "LOGOUT_REQUIRED"),
            (e.SUCCESS = "SUCCESS");
        })(t.TwoFactorAuthenticationEnableStages || (t.TwoFactorAuthenticationEnableStages = {})),
        (function (e) {
          (e.CONFIRMATION = "CONFIRMATION"),
            (e.AUTHENTICATION_CODE = "AUTHENTICATION_CODE"),
            (e.BACKUP_CODE = "BACKUP_CODE"),
            (e.FINALIZING_CHANGES = "FINALIZING_CHANGES"),
            (e.SUCCESS = "SUCCESS"),
            (e.LOGOUT_REQUIRED = "LOGOUT_REQUIRED"),
            (e.GENERIC_ERROR = "GENERIC_ERROR");
        })(t.TwoFactorAuthenticationDisableStages || (t.TwoFactorAuthenticationDisableStages = {})),
        (function (e) {
          (e.INTERNAL_ERROR = "internal_error"),
            (e.CANNOT_SEED_FOR_USER_WITH_TOTP_ENABLED = "cannot_seed_for_user_with_TOTP_enabled"),
            (e.OTP_FAILED = "otp_failed"),
            (e.TOTP_TYPE_IS_NOT_SET_TO_EMAIL_TOKEN = "totp_type_is_not_set_to_email_token"),
            (e.PHONE_VALIDATION_FAILED = "phone_validation_failed");
        })(t.RequestTOTPActivationError || (t.RequestTOTPActivationError = {}));
    },
    30156: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(47817), t), o(r(1195), t);
    },
    1195: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.InitUserVerificationWithWebAuthnError =
          t.RemoveWebAuthnAuthenticatorError =
          t.DisableWebAuthnAuthenticationError =
          t.OpenSessionWithWebAuthnAuthenticatorError =
          t.InitOpenSessionWithWebAuthnAuthenticatorError =
          t.RefreshAvailableWebAuthnAuthenticatorsError =
          t.RefreshWebAuthnAuthenticatorsError =
          t.RegisterWebAuthnAuthenticatorError =
          t.InitRegisterWebAuthnAuthenticatorError =
          t.EnableWebAuthnAuthenticationError =
          t.InitEnableWebAuthnAuthenticationError =
          t.WebAuthnCallTypes =
            void 0),
        (t.WebAuthnCallTypes = Object.freeze({ CREATE: "webauthn.create", GET: "webauthn.get" })),
        (function (e) {
          e.UNKNOWN_ERROR = "UNKNOWN_ERROR";
        })(t.InitEnableWebAuthnAuthenticationError || (t.InitEnableWebAuthnAuthenticationError = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
            (e.USER_HAS_OTP = "USER_HAS_OTP"),
            (e.WEBAUTHN_SERVICE_INIT_FAILED = "WEBAUTHN_SERVICE_INIT_FAILED");
        })(t.EnableWebAuthnAuthenticationError || (t.EnableWebAuthnAuthenticationError = {})),
        (function (e) {
          e.UNKNOWN_ERROR = "UNKNOWN_ERROR";
        })(t.InitRegisterWebAuthnAuthenticatorError || (t.InitRegisterWebAuthnAuthenticatorError = {})),
        (function (e) {
          (e.USER_HAS_OTP = "USER_HAS_OTP"), (e.UNKNOWN_ERROR = "UNKNOWN_ERROR");
        })(t.RegisterWebAuthnAuthenticatorError || (t.RegisterWebAuthnAuthenticatorError = {})),
        (function (e) {
          e.UNKNOWN_ERROR = "UNKNOWN_ERROR";
        })(t.RefreshWebAuthnAuthenticatorsError || (t.RefreshWebAuthnAuthenticatorsError = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"), (e.MISSING_SESSION_KEYS_IN_STORE = "MISSING_SESSION_KEYS_IN_STORE");
        })(t.RefreshAvailableWebAuthnAuthenticatorsError || (t.RefreshAvailableWebAuthnAuthenticatorsError = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
            (e.UNAVAILABLE_AUTHENTICATORS = "UNAVAILABLE_AUTHENTICATORS"),
            (e.CANNOT_TRIGGER_WEBAUTHN_AUTHENTICATION = "CANNOT_TRIGGER_WEBAUTHN_AUTHENTICATION");
        })(t.InitOpenSessionWithWebAuthnAuthenticatorError || (t.InitOpenSessionWithWebAuthnAuthenticatorError = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"), (e.MP_MISSING_IN_SESSION_ERROR = "MP_MISSING_IN_SESSION_ERROR");
        })(t.OpenSessionWithWebAuthnAuthenticatorError || (t.OpenSessionWithWebAuthnAuthenticatorError = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
            (e.WEBAUTHN_SERVICE_DEACTIVATE_FAILED = "WEBAUTHN_SERVICE_DEACTIVATE_FAILED"),
            (e.MISSING_LOGIN = "MISSING_LOGIN");
        })(t.DisableWebAuthnAuthenticationError || (t.DisableWebAuthnAuthenticationError = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"), (e.CANNOT_REMOVE_WEBAUTHN_AUTHENTICATOR = "CANNOT_REMOVE_WEBAUTHN_AUTHENTICATOR");
        })(t.RemoveWebAuthnAuthenticatorError || (t.RemoveWebAuthnAuthenticatorError = {})),
        (function (e) {
          (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
            (e.LOGGED_OUT = "LOGGED_OUT"),
            (e.CANNOT_REFRESH_WEBAUTHN_AUTHENTICATORS = "CANNOT_REFRESH_WEBAUTHN_AUTHENTICATORS"),
            (e.CANNOT_FETCH_WEBAUTHN_CHALLENGE = "CANNOT_FETCH_WEBAUTHN_CHALLENGE");
        })(t.InitUserVerificationWithWebAuthnError || (t.InitUserVerificationWithWebAuthnError = {}));
    },
    47817: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.webAuthnAuthenticationLiveQueriesSlots = t.webAuthnAuthenticationQueriesSlots = t.webAuthnAuthenticationCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.webAuthnAuthenticationCommandsSlots = {
        enableWebAuthnAuthentication: (0, s.slot)(),
        initEnableWebAuthnAuthentication: (0, s.slot)(),
        refreshAvailableWebAuthnAuthenticators: (0, s.slot)(),
        refreshWebAuthnAuthenticators: (0, s.slot)(),
        initRegisterWebAuthnAuthenticator: (0, s.slot)(),
        registerWebAuthnAuthenticator: (0, s.slot)(),
        initOpenSessionWithWebAuthnAuthenticator: (0, s.slot)(),
        openSessionWithWebAuthnAuthenticator: (0, s.slot)(),
        disableWebAuthnAuthentication: (0, s.slot)(),
        removeWebAuthnAuthenticator: (0, s.slot)(),
        initUserVerificationWithWebAuthn: (0, s.slot)()
      }),
        (t.webAuthnAuthenticationQueriesSlots = {
          getWebAuthnAuthenticators: (0, s.slot)(),
          getWebAuthnAuthenticationOptedIn: (0, s.slot)()
        }),
        (t.webAuthnAuthenticationLiveQueriesSlots = {
          liveWebAuthnAuthenticators: (0, o.liveSlot)(),
          liveWebAuthnAuthenticationOptedIn: (0, o.liveSlot)()
        });
    },
    29814: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.authenticationLiveQueriesSlots = t.authenticationQueriesSlots = t.authenticationCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345),
        n = r(8850),
        i = r(30156);
      (t.authenticationCommandsSlots = (0, s.combineEvents)(
        {
          registerDevice: (0, s.slot)(),
          requestExtraDeviceToken: (0, s.slot)(),
          requestEmailToken: (0, s.slot)(),
          requestPaymentUpdateAuthenticationToken: (0, s.slot)(),
          setReactivationStatus: (0, s.slot)()
        },
        i.webAuthnAuthenticationCommandsSlots,
        n.twoFactorAuthenticationCommandsSlots
      )),
        (t.authenticationQueriesSlots = (0, s.combineEvents)(
          {
            getHasOtp2Type: (0, s.slot)(),
            getUserOtpType: (0, s.slot)(),
            getReactivationStatus: (0, s.slot)(),
            getAvailableUserVerificationMethods: (0, s.slot)()
          },
          i.webAuthnAuthenticationQueriesSlots,
          n.twoFactorAuthenticationQueriesSlots
        )),
        (t.authenticationLiveQueriesSlots = (0, s.combineEvents)(
          { liveReactivationStatus: (0, o.liveSlot)() },
          i.webAuthnAuthenticationLiveQueriesSlots,
          n.twoFactorAuthenticationLiveQueriesSlots
        ));
    },
    25098: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(29814), t), o(r(52632), t), o(r(8850), t), o(r(30156), t);
    },
    52632: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.AuthenticationCode =
          t.OtpType =
          t.UserVerificationMethods =
          t.PersistData =
          t.ReactivationStatus =
          t.EmailTokenApiError =
            void 0),
        (t.EmailTokenApiError = "SEND_TOKEN_FAILED"),
        (function (e) {
          (e.DISABLED = "DISABLED"), (e.CLASSIC = "CLASSIC"), (e.WEBAUTHN = "WEBAUTHN");
        })(t.ReactivationStatus || (t.ReactivationStatus = {})),
        (function (e) {
          (e[(e.PERSIST_DATA_YES = 0)] = "PERSIST_DATA_YES"), (e[(e.PERSIST_DATA_NO = 1)] = "PERSIST_DATA_NO");
        })(t.PersistData || (t.PersistData = {})),
        (t.UserVerificationMethods = Object.freeze({ MasterPassword: "masterPassword", Webauthn: "webauthn" })),
        (function (e) {
          (e[(e.NO_OTP = 0)] = "NO_OTP"), (e[(e.OTP_NEW_DEVICE = 1)] = "OTP_NEW_DEVICE"), (e[(e.OTP_LOGIN = 2)] = "OTP_LOGIN");
        })(t.OtpType || (t.OtpType = {})),
        (function (e) {
          (e[(e.INVALID_LOGIN = 0)] = "INVALID_LOGIN"),
            (e[(e.EMPTY_LOGIN = 1)] = "EMPTY_LOGIN"),
            (e[(e.EMPTY_MASTER_PASSWORD = 2)] = "EMPTY_MASTER_PASSWORD"),
            (e[(e.EMPTY_ENCRYPTED_KEY = 3)] = "EMPTY_ENCRYPTED_KEY"),
            (e[(e.INVALID_ENCRYPTED_KEY = 4)] = "INVALID_ENCRYPTED_KEY"),
            (e[(e.EMPTY_TOKEN = 5)] = "EMPTY_TOKEN"),
            (e[(e.EMPTY_OTP = 6)] = "EMPTY_OTP"),
            (e[(e.SEND_TOKEN_FAILED = 7)] = "SEND_TOKEN_FAILED"),
            (e[(e.UKI_REGISTRATION_FAILED = 8)] = "UKI_REGISTRATION_FAILED"),
            (e[(e.REGISTER_DEVICE_FAILED = 9)] = "REGISTER_DEVICE_FAILED"),
            (e[(e.BUSINESS_ERROR = 10)] = "BUSINESS_ERROR"),
            (e[(e.USER_DOESNT_EXIST = 11)] = "USER_DOESNT_EXIST"),
            (e[(e.USER_DOESNT_EXIST_UNLIKELY_MX = 12)] = "USER_DOESNT_EXIST_UNLIKELY_MX"),
            (e[(e.USER_DOESNT_EXIST_INVALID_MX = 13)] = "USER_DOESNT_EXIST_INVALID_MX"),
            (e[(e.USER_UNAUTHORIZED = 14)] = "USER_UNAUTHORIZED"),
            (e[(e.WRONG_PASSWORD = 15)] = "WRONG_PASSWORD"),
            (e[(e.DATA_TAMPERED_ERROR = 16)] = "DATA_TAMPERED_ERROR"),
            (e[(e.LOGGEDIN = 17)] = "LOGGEDIN"),
            (e[(e.ASK_TOKEN = 18)] = "ASK_TOKEN"),
            (e[(e.ASK_OTP = 19)] = "ASK_OTP"),
            (e[(e.ASK_MASTER_PASSWORD = 20)] = "ASK_MASTER_PASSWORD"),
            (e[(e.USE_LOCAL_UKI = 21)] = "USE_LOCAL_UKI"),
            (e[(e.ASK_DASHLANE_AUTHENTICATOR = 22)] = "ASK_DASHLANE_AUTHENTICATOR"),
            (e[(e.OTP_NOT_VALID = 23)] = "OTP_NOT_VALID"),
            (e[(e.OTP_TOO_MANY_ATTEMPTS = 24)] = "OTP_TOO_MANY_ATTEMPTS"),
            (e[(e.OTP_ALREADY_USED = 25)] = "OTP_ALREADY_USED"),
            (e[(e.BACKUP_CODE_NOT_VALID = 26)] = "BACKUP_CODE_NOT_VALID"),
            (e[(e.TOKEN_NOT_VALID = 27)] = "TOKEN_NOT_VALID"),
            (e[(e.DASHLANE_AUTHENTICATOR_PUSH_NOTIFICATION_DENIED = 28)] = "DASHLANE_AUTHENTICATOR_PUSH_NOTIFICATION_DENIED"),
            (e[(e.SERVER_KEY_MISSING = 29)] = "SERVER_KEY_MISSING"),
            (e[(e.TOKEN_LOCKED = 30)] = "TOKEN_LOCKED"),
            (e[(e.TOKEN_TOO_MANY_ATTEMPTS = 31)] = "TOKEN_TOO_MANY_ATTEMPTS"),
            (e[(e.TOKEN_ACCOUNT_LOCKED = 32)] = "TOKEN_ACCOUNT_LOCKED"),
            (e[(e.TOKEN_EXPIRED = 33)] = "TOKEN_EXPIRED"),
            (e[(e.NO_ACTIVE_AUTHENTICATOR = 34)] = "NO_ACTIVE_AUTHENTICATOR"),
            (e[(e.FAILED_TO_CONTACT_AUTHENTICATOR_DEVICE = 35)] = "FAILED_TO_CONTACT_AUTHENTICATOR_DEVICE"),
            (e[(e.DASHLANE_AUTHENTICATOR_ASKED_FOR_LOCAL_SESSION = 36)] = "DASHLANE_AUTHENTICATOR_ASKED_FOR_LOCAL_SESSION"),
            (e[(e.DASHLANE_AUTHENTICATOR_LOGIN_CANCELLED = 37)] = "DASHLANE_AUTHENTICATOR_LOGIN_CANCELLED"),
            (e[(e.TOKEN_PROVIDED_FOR_LOCAL_SESSION = 38)] = "TOKEN_PROVIDED_FOR_LOCAL_SESSION"),
            (e[(e.DEVICE_ALREADY_REGISTERED = 39)] = "DEVICE_ALREADY_REGISTERED"),
            (e[(e.OTP_PROVIDED_FOR_LOCAL_NON_OTP_SESSION = 40)] = "OTP_PROVIDED_FOR_LOCAL_NON_OTP_SESSION"),
            (e[(e.DIFFERENT_LOGIN_PROVIDED_WITH_TOKEN_OR_OTP = 41)] = "DIFFERENT_LOGIN_PROVIDED_WITH_TOKEN_OR_OTP"),
            (e[(e.UNKNOWN_SYNC_ERROR = 42)] = "UNKNOWN_SYNC_ERROR"),
            (e[(e.INVALID_UKI = 43)] = "INVALID_UKI"),
            (e[(e.UNKNOWN_UKI = 44)] = "UNKNOWN_UKI"),
            (e[(e.UNKNOWN_ERROR = 45)] = "UNKNOWN_ERROR"),
            (e[(e.UNEXPECTED_OTP_TYPE = 46)] = "UNEXPECTED_OTP_TYPE"),
            (e[(e.UNAUTHORIZED = 47)] = "UNAUTHORIZED"),
            (e[(e.UNAUTHORIZED_NOT_VALID_CONTENT = 48)] = "UNAUTHORIZED_NOT_VALID_CONTENT"),
            (e[(e.NETWORK_ERROR = 49)] = "NETWORK_ERROR"),
            (e[(e.THROTTLED = 50)] = "THROTTLED"),
            (e[(e.SESSION_ALREADY_OPENED = 51)] = "SESSION_ALREADY_OPENED"),
            (e[(e.INVALID_SESSION = 52)] = "INVALID_SESSION"),
            (e[(e.DEVICE_NOT_REGISTERED = 53)] = "DEVICE_NOT_REGISTERED"),
            (e[(e.MISSING_APP_KEYS = 54)] = "MISSING_APP_KEYS"),
            (e[(e.PROVIDE_EXTRA_DEVICE_TOKEN = 55)] = "PROVIDE_EXTRA_DEVICE_TOKEN"),
            (e[(e.PROVIDE_MASTER_PASSWORD_FOR_EXTRA_DEVICE = 56)] = "PROVIDE_MASTER_PASSWORD_FOR_EXTRA_DEVICE"),
            (e[(e.PROVIDE_MASTER_PASSWORD_AND_SERVER_KEY_FOR_EXTRA_DEVICE = 57)] =
              "PROVIDE_MASTER_PASSWORD_AND_SERVER_KEY_FOR_EXTRA_DEVICE"),
            (e[(e.ASK_OTP_FOR_NEW_DEVICE = 58)] = "ASK_OTP_FOR_NEW_DEVICE"),
            (e[(e.TEAM_GENERIC_ERROR = 59)] = "TEAM_GENERIC_ERROR"),
            (e[(e.SSO_LOGIN_BYPASS = 60)] = "SSO_LOGIN_BYPASS"),
            (e[(e.SSO_VERIFICATION_FAILED = 61)] = "SSO_VERIFICATION_FAILED"),
            (e[(e.SSO_BLOCKED = 62)] = "SSO_BLOCKED"),
            (e[(e.CLIENT_VERSION_DOES_NOT_SUPPORT_SSO_MIGRATION = 63)] = "CLIENT_VERSION_DOES_NOT_SUPPORT_SSO_MIGRATION"),
            (e[(e.USER_DOESNT_EXIST_SSO = 64)] = "USER_DOESNT_EXIST_SSO");
        })(t.AuthenticationCode || (t.AuthenticationCode = {}));
    },
    1295: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.autofillDataQueriesSlots = void 0);
      const s = r(71796);
      t.autofillDataQueriesSlots = {
        getSingleAddressForAutofill: (0, s.slot)(),
        getMultipleAddressesForAutofill: (0, s.slot)(),
        getSingleBankAccountForAutofill: (0, s.slot)(),
        getMultipleBankAccountsForAutofill: (0, s.slot)(),
        getSingleCompanyForAutofill: (0, s.slot)(),
        getMultipleCompaniesForAutofill: (0, s.slot)(),
        getSingleCredentialForAutofill: (0, s.slot)(),
        getMultipleCredentialsForAutofill: (0, s.slot)(),
        getSingleDriverLicenseForAutofill: (0, s.slot)(),
        getMultipleDriverLicensesForAutofill: (0, s.slot)(),
        getSingleEmailForAutofill: (0, s.slot)(),
        getMultipleEmailsForAutofill: (0, s.slot)(),
        getSingleFiscalIdForAutofill: (0, s.slot)(),
        getMultipleFiscalIdsForAutofill: (0, s.slot)(),
        getSingleGeneratedPasswordForAutofill: (0, s.slot)(),
        getMultipleGeneratedPasswordsForAutofill: (0, s.slot)(),
        getSingleIdCardForAutofill: (0, s.slot)(),
        getMultipleIdCardsForAutofill: (0, s.slot)(),
        getSingleIdentityForAutofill: (0, s.slot)(),
        getMultipleIdentitiesForAutofill: (0, s.slot)(),
        getSingleNoteForAutofill: (0, s.slot)(),
        getMultipleNotesForAutofill: (0, s.slot)(),
        getSinglePasskeyForAutofill: (0, s.slot)(),
        getSinglePassportForAutofill: (0, s.slot)(),
        getMultiplePassportsForAutofill: (0, s.slot)(),
        getSinglePaymentCardForAutofill: (0, s.slot)(),
        getMultiplePaymentCardsForAutofill: (0, s.slot)(),
        getSinglePersonalWebsiteForAutofill: (0, s.slot)(),
        getMultiplePersonalWebsitesForAutofill: (0, s.slot)(),
        getSinglePhoneForAutofill: (0, s.slot)(),
        getMultiplePhonesForAutofill: (0, s.slot)(),
        getSingleSocialSecurityIdForAutofill: (0, s.slot)(),
        getMultipleSocialSecurityIdsForAutofill: (0, s.slot)(),
        getAutofillSettingOnUrlForAutofill: (0, s.slot)()
      };
    },
    94372: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(1295), t), o(r(37905), t), o(r(60188), t), o(r(42362), t);
    },
    60188: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    37905: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.AutofillOptions = void 0),
        (function (e) {
          (e.ANALYSIS_ENABLED_ON_ALL_FORMS = "ANALYSIS_ENABLED_ON_ALL_FORMS"),
            (e.ANALYSIS_ENABLED_ONLY_ON_LOGINS_AND_PASSWORDS = "ANALYSIS_ENABLED_ONLY_ON_LOGINS_AND_PASSWORDS");
        })(t.AutofillOptions || (t.AutofillOptions = {}));
    },
    42362: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.vaultSourceTypeToDataModelTypeMap = void 0);
      const s = r(92202),
        o = r(44225);
      t.vaultSourceTypeToDataModelTypeMap = {
        [s.VaultSourceType.Address]: o.DataModelType.KWAddress,
        [s.VaultSourceType.BankAccount]: o.DataModelType.KWBankStatement,
        [s.VaultSourceType.Company]: o.DataModelType.KWCompany,
        [s.VaultSourceType.Credential]: o.DataModelType.KWAuthentifiant,
        [s.VaultSourceType.CredentialCategory]: o.DataModelType.KWAuthCategory,
        [s.VaultSourceType.DriverLicense]: o.DataModelType.KWDriverLicence,
        [s.VaultSourceType.Email]: o.DataModelType.KWEmail,
        [s.VaultSourceType.FiscalId]: o.DataModelType.KWFiscalStatement,
        [s.VaultSourceType.GeneratedPassword]: o.DataModelType.KWGeneratedPassword,
        [s.VaultSourceType.IdCard]: o.DataModelType.KWIDCard,
        [s.VaultSourceType.Identity]: o.DataModelType.KWIdentity,
        [s.VaultSourceType.NoteCategory]: o.DataModelType.KWSecureNoteCategory,
        [s.VaultSourceType.Note]: o.DataModelType.KWSecureNote,
        [s.VaultSourceType.Passkey]: o.DataModelType.KWPasskey,
        [s.VaultSourceType.Passport]: o.DataModelType.KWPassport,
        [s.VaultSourceType.PaymentCard]: o.DataModelType.KWPaymentMean_creditCard,
        [s.VaultSourceType.PersonalWebsite]: o.DataModelType.KWPersonalWebsite,
        [s.VaultSourceType.Phone]: o.DataModelType.KWPhone,
        [s.VaultSourceType.SocialSecurityId]: o.DataModelType.KWSocialSecurityStatement
      };
    },
    39229: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.CarbonApiConnector = void 0);
      const s = r(71796),
        o = r(52240),
        n = r(78178),
        i = r(90397);
      t.CarbonApiConnector = (0, s.combineEvents)(o.carbonCommandsSlots, n.carbonQueriesSlots, i.carbonLiveQueriesSlots);
    },
    52240: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.carbonCommandsSlots = void 0);
      const s = r(71796),
        o = r(28249),
        n = r(29004),
        i = r(25098),
        a = r(15874),
        c = r(50459),
        l = r(14811),
        d = r(30897),
        u = r(65005),
        p = r(29450),
        h = r(96035),
        m = r(6666),
        v = r(15925),
        g = r(68183),
        y = r(6768),
        f = r(58290),
        _ = r(78779),
        S = r(37174),
        E = r(60687),
        b = r(77277),
        w = r(49106),
        A = r(68440),
        T = r(34852),
        C = r(31525),
        I = r(9987),
        O = r(57369),
        P = r(22162),
        R = r(31955),
        D = r(88219);
      t.carbonCommandsSlots = (0, s.combineEvents)(
        o.abTestsCommandsSlots,
        i.authenticationCommandsSlots,
        a.changeMasterPasswordCommandsSlots,
        n.contactInfoCommandsSlots,
        c.cryptoMigrationCommandsSlots,
        l.darkWebInsightsCommandsSlots,
        d.dataManagementCommandsSlots,
        v.eventLoggerCommandsSlots,
        g.exceptionCommandsSlots,
        u.familyCommandsSlots,
        h.globalExtensionSettingsCommandsSlots,
        m.healthCommandsSlots,
        y.loginCommandsSlots,
        f.loginNotificationsCommandsSlots,
        _.loginStepInfoCommandsSlots,
        S.notificationsCommandsSlots,
        E.openSessionCommandsSlots,
        b.passwordGeneratorCommandsSlots,
        w.paymentsCommandsSlots,
        A.protectedItemsUnlockerCommandsSlots,
        T.recoveryCommandsSlots,
        p.remoteFileCommandsSlots,
        C.sharingCommandsSlots,
        I.teamCommandsSlots,
        O.teamAdminCommandsSlots,
        P.userMessagesCommandsSlots,
        R.vpnCommandsSlots,
        D.deviceCommandsSlots
      );
    },
    90397: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.carbonLiveQueriesSlots = void 0);
      const s = r(71796),
        o = r(28249),
        n = r(29004),
        i = r(90041),
        a = r(33773),
        c = r(65722),
        l = r(25098),
        d = r(30897),
        u = r(15874),
        p = r(50459),
        h = r(29450),
        m = r(24875),
        v = r(58290),
        g = r(78779),
        y = r(37174),
        f = r(60687),
        _ = r(68440),
        S = r(34852),
        E = r(31525),
        b = r(57369),
        w = r(22162),
        A = r(31955);
      t.carbonLiveQueriesSlots = (0, s.combineEvents)(
        o.abTestsLiveQueriesSlots,
        a.accountCreationLiveQueriesSlots,
        c.antiPhishingLiveQueriesSlots,
        l.authenticationLiveQueriesSlots,
        u.changeMasterPasswordLiveQueriesSlots,
        n.contactInfoLiveQueriesSlots,
        p.cryptoMigrationLiveQueriesSlots,
        d.dataManagementLiveQueriesSlots,
        m.killswitchLiveQueriesSlots,
        v.loginNotificationsLiveQueriesSlots,
        g.loginStepInfoLiveQueriesSlots,
        y.notificationsLiveQueriesSlots,
        f.openSessionLiveQueriesSlots,
        _.protectedItemsUnlockerLiveQueriesSlots,
        S.recoveryLiveQueriesSlots,
        h.remoteFilesLiveQueriesSlots,
        E.sharingLiveQueriesSlots,
        i.subscriptionCodeLiveQueriesSlots,
        b.teamAdminLiveQueriesSlots,
        w.userMessagesLiveQueriesSlots,
        A.vpnLiveQueriesSlots
      );
    },
    78178: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.carbonQueriesSlots = void 0);
      const s = r(71796),
        o = r(28249),
        n = r(29004),
        i = r(90041),
        a = r(25098),
        c = r(94372),
        l = r(30897),
        d = r(50459),
        u = r(88219),
        p = r(80898),
        h = r(29450),
        m = r(24875),
        v = r(58290),
        g = r(78779),
        y = r(37174),
        f = r(60687),
        _ = r(77277),
        S = r(49106),
        E = r(68440),
        b = r(34852),
        w = r(98655),
        A = r(31525),
        T = r(9987),
        C = r(57369),
        I = r(22162),
        O = r(31955);
      t.carbonQueriesSlots = (0, s.combineEvents)(
        o.abTestsQueriesSlots,
        a.authenticationQueriesSlots,
        c.autofillDataQueriesSlots,
        n.contactInfoQueriesSlots,
        d.cryptoMigrationQueriesSlots,
        l.dataManagementQueriesSlots,
        u.deviceQueriesSlots,
        p.featureQueriesSlots,
        m.killswitchQueriesSlots,
        v.loginNotificationsQueriesSlots,
        g.loginStepInfoQueriesSlots,
        y.notificationsQueriesSlots,
        f.openSessionQueriesSlots,
        _.passwordGeneratorQueriesSlots,
        S.paymentsQueriesSlots,
        E.protectedItemsUnlockerQueriesSlots,
        b.recoveryQueriesSlots,
        h.remoteFilesQueriesSlots,
        A.sharingQueriesSlots,
        w.staticDataQueriesSlots,
        i.subscriptionCodeQueriesSlots,
        T.teamQueriesSlots,
        C.teamAdminQueriesSlots,
        I.userMessagesQueriesSlots,
        O.vpnQueriesSlots
      );
    },
    8438: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(52240), t), o(r(90397), t), o(r(78178), t), o(r(39229), t);
    },
    72345: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(60283), t), o(r(910), t), o(r(8438), t), o(r(53143), t);
    },
    910: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    60283: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.liveSlot = void 0);
      const s = r(71796),
        o = { noBuffer: !0 };
      t.liveSlot = () => (0, s.slot)(o);
    },
    53143: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    35715: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.CarbonDebugConnector = void 0);
      const s = r(71796);
      t.CarbonDebugConnector = { log: (0, s.slot)(), info: (0, s.slot)(), warning: (0, s.slot)(), error: (0, s.slot)() };
    },
    11873: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    80112: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(35715), t), o(r(11873), t);
    },
    79702: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.CarbonDiagnosticConnector = void 0);
      const s = r(71796);
      t.CarbonDiagnosticConnector = { decipheringDiagnosticLogEvent: (0, s.slot)() };
    },
    31427: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    55334: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(79702), t), o(r(31427), t);
    },
    80213: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.changeMasterPasswordLiveQueriesSlots = t.changeMasterPasswordCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.changeMasterPasswordCommandsSlots = { changeMasterPassword: (0, s.slot)() }),
        (t.changeMasterPasswordLiveQueriesSlots = { liveChangeMasterPasswordStatus: (0, o.liveSlot)() });
    },
    15874: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(80213), t), o(r(14776), t);
    },
    14776: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.ChangeMasterPasswordStepNeeded = t.ChangeMasterPasswordCode = t.ChangeMPFlowPath = void 0),
        (function (e) {
          (e.USER_CHANGING_MP = "USER_CHANGING_MP"),
            (e.MP_TO_SSO = "MP_TO_SSO"),
            (e.SSO_TO_MP = "SSO_TO_MP"),
            (e.TO_EMAIL_TOKEN = "EMAIL_TOKEN"),
            (e.ADMIN_ASSISTED_RECOVERY = "ADMIN_ASSISTED_RECOVERY"),
            (e.ACCOUNT_RECOVERY_KEY = "ACCOUNT_RECOVERY_KEY");
        })(t.ChangeMPFlowPath || (t.ChangeMPFlowPath = {})),
        (function (e) {
          (e.FEATURE_BLOCKED = "feature_blocked"),
            (e.INNACTIVE_SESSION = "inactive_session"),
            (e.INVALID_TOKEN = "invalid_token"),
            (e.OTP_PROBLEM = "otp_problem"),
            (e.MP_ERROR = "mp_error"),
            (e.MP_STRENGTH_ERROR = "mp_strength_error"),
            (e.SUCCESS = "success"),
            (e.SYNC_PROGRESS = "sync_in_progress"),
            (e.UNKNOWN_ERROR = "unknown_error"),
            (e.WRONG_PASSWORD = "wrong_password"),
            (e.UNEXPECTED_STATE = "unexpected_state");
        })(t.ChangeMasterPasswordCode || (t.ChangeMasterPasswordCode = {})),
        (function (e) {
          (e.DOWNLOAD = "download"),
            (e.DECRYPTING = "decrypting"),
            (e.ENCRYPTING = "encrypting"),
            (e.UPLOADING = "uploading"),
            (e.DONE = "done"),
            (e.ERROR = "error");
        })(t.ChangeMasterPasswordStepNeeded || (t.ChangeMasterPasswordStepNeeded = {}));
    },
    23411: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.cryptoMigrationLiveQueriesSlots = t.cryptoMigrationQueriesSlots = t.cryptoMigrationCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.cryptoMigrationCommandsSlots = { changeUserCrypto: (0, s.slot)() }),
        (t.cryptoMigrationQueriesSlots = { getCanUserChangeCrypto: (0, s.slot)(), getUserDerivationMethod: (0, s.slot)() }),
        (t.cryptoMigrationLiveQueriesSlots = { liveUserDerivationMethod: (0, o.liveSlot)() });
    },
    50459: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(23411), t), o(r(92490), t);
    },
    92490: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.SupportedDerivationMethods = t.CryptoMigrationApiErrorType = void 0),
        (function (e) {
          e.ChangeUserCryptoFailed = "CHANGE_USER_CRYPTO_FAILED";
        })(t.CryptoMigrationApiErrorType || (t.CryptoMigrationApiErrorType = {})),
        (function (e) {
          (e.ARGON2D = "argon2d"), (e.PBKDF2 = "pbkdf2"), (e.KWC3 = "kwc3");
        })(t.SupportedDerivationMethods || (t.SupportedDerivationMethods = {}));
    },
    10130: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.darkWebInsightsCommandsSlots = void 0);
      const s = r(71796);
      t.darkWebInsightsCommandsSlots = { getDarkWebInsightsReportResults: (0, s.slot)(), getDarkWebInsightsSummary: (0, s.slot)() };
    },
    14811: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(10130), t), o(r(76128), t);
    },
    76128: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.EmailIncidentViewStatuses = t.DarkWebInsightsBreachType = t.DarkWebInsightsApiErrorType = void 0),
        (function (e) {
          (e.GetDarkWebInsightsFailed = "GET_DARK_WEB_INSIGHTS_FAILED"),
            (e.GetDarkWebInsightsSummaryFailed = "GET_DARK_WEB_INSIGHTS_SUMMARY_FAILED");
        })(t.DarkWebInsightsApiErrorType || (t.DarkWebInsightsApiErrorType = {})),
        (function (e) {
          (e.Password = "password"),
            (e.CreditCard = "creditcard"),
            (e.IPAddress = "ip"),
            (e.MailingAddress = "address"),
            (e.Phone = "phone"),
            (e.Email = "email"),
            (e.Social = "social"),
            (e.GeoLocation = "geolocation"),
            (e.UserName = "username"),
            (e.PersonalInfo = "personalinfo");
        })(t.DarkWebInsightsBreachType || (t.DarkWebInsightsBreachType = {})),
        (t.EmailIncidentViewStatuses = Object.freeze({ New: "new", Viewed: "viewed" }));
    },
    47495: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isAddress = void 0),
        (t.isAddress = function (e) {
          return Boolean(e) && "KWAddress" === e.kwType;
        });
    },
    76647: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isBankAccount = void 0),
        (t.isBankAccount = function (e) {
          return Boolean(e) && "KWBankStatement" === e.kwType;
        });
    },
    15381: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isBreach = t.BreachStatus = void 0),
        (function (e) {
          (e.PENDING = "PENDING"), (e.VIEWED = "VIEWED"), (e.ACKNOWLEDGED = "ACKNOWLEDGED");
        })(t.BreachStatus || (t.BreachStatus = {})),
        (t.isBreach = function (e) {
          return Boolean(e) && "KWSecurityBreach" === e.kwType;
        });
    },
    39093: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isCollection = void 0),
        (t.isCollection = function (e) {
          return Boolean(e) && "KWCollection" === e.kwType;
        });
    },
    270: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isObjectLocalized =
          t.isDataModelObject =
          t.dataModelTypes =
          t.transactionTypes =
          t.getTransactionTypeFromDataModelType =
          t.getDataModelTypeFromTransactionType =
          t.TRANSACTION_TYPE_TO_DATAMODEL_TYPE =
          t.DATAMODEL_TYPE_TO_TRANSACTION_TYPE =
          t.TransactionType =
          t.DataModelType =
          t.getLocalFormat =
          t.Country =
            void 0);
      const s = r(50415);
      !(function (e) {
        (e.NO_TYPE = "NO_TYPE"),
          (e.UNIVERSAL = "UNIVERSAL"),
          (e.AD = "AD"),
          (e.AE = "AE"),
          (e.AF = "AF"),
          (e.AG = "AG"),
          (e.AI = "AI"),
          (e.AL = "AL"),
          (e.AM = "AM"),
          (e.AO = "AO"),
          (e.AR = "AR"),
          (e.AS = "AS"),
          (e.AT = "AT"),
          (e.AU = "AU"),
          (e.AW = "AW"),
          (e.AZ = "AZ"),
          (e.BA = "BA"),
          (e.BB = "BB"),
          (e.BD = "BD"),
          (e.BE = "BE"),
          (e.BF = "BF"),
          (e.BG = "BG"),
          (e.BH = "BH"),
          (e.BI = "BI"),
          (e.BJ = "BJ"),
          (e.BL = "BL"),
          (e.BM = "BM"),
          (e.BN = "BN"),
          (e.BO = "BO"),
          (e.BR = "BR"),
          (e.BS = "BS"),
          (e.BT = "BT"),
          (e.BW = "BW"),
          (e.BY = "BY"),
          (e.BZ = "BZ"),
          (e.CA = "CA"),
          (e.CD = "CD"),
          (e.CF = "CF"),
          (e.CG = "CG"),
          (e.CH = "CH"),
          (e.CI = "CI"),
          (e.CK = "CK"),
          (e.CL = "CL"),
          (e.CM = "CM"),
          (e.CN = "CN"),
          (e.CO = "CO"),
          (e.CR = "CR"),
          (e.CU = "CU"),
          (e.CV = "CV"),
          (e.CY = "CY"),
          (e.CZ = "CZ"),
          (e.DE = "DE"),
          (e.DJ = "DJ"),
          (e.DK = "DK"),
          (e.DM = "DM"),
          (e.DO = "DO"),
          (e.DZ = "DZ"),
          (e.EC = "EC"),
          (e.EE = "EE"),
          (e.EG = "EG"),
          (e.ER = "ER"),
          (e.ES = "ES"),
          (e.ET = "ET"),
          (e.FI = "FI"),
          (e.FJ = "FJ"),
          (e.FK = "FK"),
          (e.FM = "FM"),
          (e.FO = "FO"),
          (e.FR = "FR"),
          (e.GA = "GA"),
          (e.GB = "GB"),
          (e.GD = "GD"),
          (e.GE = "GE"),
          (e.GF = "GF"),
          (e.GG = "GG"),
          (e.GH = "GH"),
          (e.GI = "GI"),
          (e.GL = "GL"),
          (e.GM = "GM"),
          (e.GN = "GN"),
          (e.GP = "GP"),
          (e.GQ = "GQ"),
          (e.GR = "GR"),
          (e.GT = "GT"),
          (e.GU = "GU"),
          (e.GW = "GW"),
          (e.GY = "GY"),
          (e.HK = "HK"),
          (e.HN = "HN"),
          (e.HR = "HR"),
          (e.HT = "HT"),
          (e.HU = "HU"),
          (e.ID = "ID"),
          (e.IE = "IE"),
          (e.IL = "IL"),
          (e.IM = "IM"),
          (e.IN = "IN"),
          (e.IO = "IO"),
          (e.IQ = "IQ"),
          (e.IR = "IR"),
          (e.IS = "IS"),
          (e.IT = "IT"),
          (e.JE = "JE"),
          (e.JM = "JM"),
          (e.JO = "JO"),
          (e.JP = "JP"),
          (e.KE = "KE"),
          (e.KG = "KG"),
          (e.KH = "KH"),
          (e.KI = "KI"),
          (e.KM = "KM"),
          (e.KN = "KN"),
          (e.KP = "KP"),
          (e.KR = "KR"),
          (e.KW = "KW"),
          (e.KY = "KY"),
          (e.KZ = "KZ"),
          (e.LA = "LA"),
          (e.LB = "LB"),
          (e.LC = "LC"),
          (e.LI = "LI"),
          (e.LK = "LK"),
          (e.LR = "LR"),
          (e.LS = "LS"),
          (e.LT = "LT"),
          (e.LU = "LU"),
          (e.LV = "LV"),
          (e.LY = "LY"),
          (e.MA = "MA"),
          (e.MC = "MC"),
          (e.MD = "MD"),
          (e.ME = "ME"),
          (e.MF = "MF"),
          (e.MG = "MG"),
          (e.MH = "MH"),
          (e.MK = "MK"),
          (e.ML = "ML"),
          (e.MM = "MM"),
          (e.MN = "MN"),
          (e.MO = "MO"),
          (e.MP = "MP"),
          (e.MQ = "MQ"),
          (e.MR = "MR"),
          (e.MS = "MS"),
          (e.MT = "MT"),
          (e.MU = "MU"),
          (e.MV = "MV"),
          (e.MW = "MW"),
          (e.MX = "MX"),
          (e.MY = "MY"),
          (e.MZ = "MZ"),
          (e.NA = "NA"),
          (e.NC = "NC"),
          (e.NE = "NE"),
          (e.NF = "NF"),
          (e.NG = "NG"),
          (e.NI = "NI"),
          (e.NL = "NL"),
          (e.NO = "NO"),
          (e.NP = "NP"),
          (e.NR = "NR"),
          (e.NU = "NU"),
          (e.NZ = "NZ"),
          (e.OM = "OM"),
          (e.PA = "PA"),
          (e.PE = "PE"),
          (e.PF = "PF"),
          (e.PG = "PG"),
          (e.PH = "PH"),
          (e.PK = "PK"),
          (e.PL = "PL"),
          (e.PM = "PM"),
          (e.PR = "PR"),
          (e.PS = "PS"),
          (e.PT = "PT"),
          (e.PW = "PW"),
          (e.PY = "PY"),
          (e.QA = "QA"),
          (e.RE = "RE"),
          (e.RO = "RO"),
          (e.RS = "RS"),
          (e.RU = "RU"),
          (e.RW = "RW"),
          (e.SA = "SA"),
          (e.SB = "SB"),
          (e.SC = "SC"),
          (e.SD = "SD"),
          (e.SE = "SE"),
          (e.SG = "SG"),
          (e.SH = "SH"),
          (e.SI = "SI"),
          (e.SK = "SK"),
          (e.SL = "SL"),
          (e.SM = "SM"),
          (e.SN = "SN"),
          (e.SO = "SO"),
          (e.SR = "SR"),
          (e.ST = "ST"),
          (e.SV = "SV"),
          (e.SY = "SY"),
          (e.SZ = "SZ"),
          (e.TC = "TC"),
          (e.TD = "TD"),
          (e.TF = "TF"),
          (e.TG = "TG"),
          (e.TH = "TH"),
          (e.TJ = "TJ"),
          (e.TK = "TK"),
          (e.TL = "TL"),
          (e.TM = "TM"),
          (e.TN = "TN"),
          (e.TO = "TO"),
          (e.TR = "TR"),
          (e.TT = "TT"),
          (e.TV = "TV"),
          (e.TW = "TW"),
          (e.TZ = "TZ"),
          (e.UA = "UA"),
          (e.UG = "UG"),
          (e.US = "US"),
          (e.UY = "UY"),
          (e.UZ = "UZ"),
          (e.VA = "VA"),
          (e.VC = "VC"),
          (e.VE = "VE"),
          (e.VG = "VG"),
          (e.VI = "VI"),
          (e.VN = "VN"),
          (e.VU = "VU"),
          (e.WF = "WF"),
          (e.WS = "WS"),
          (e.XK = "XK"),
          (e.YE = "YE"),
          (e.YT = "YT"),
          (e.ZA = "ZA"),
          (e.ZM = "ZM"),
          (e.ZW = "ZW"),
          (e.AQ = "AQ"),
          (e.AX = "AX"),
          (e.BV = "BV"),
          (e.CC = "CC"),
          (e.CX = "CX"),
          (e.EH = "EH"),
          (e.GS = "GS"),
          (e.HM = "HM"),
          (e.PN = "PN"),
          (e.SJ = "SJ"),
          (e.UM = "UM");
      })(t.Country || (t.Country = {})),
        (t.getLocalFormat = function (e) {
          return e.LocaleFormat;
        }),
        (t.DataModelType = (0, s.Enum)(
          "KWAddress",
          "KWAuthCategory",
          "KWAuthentifiant",
          "KWBankStatement",
          "KWCollection",
          "KWCompany",
          "KWDataChangeHistory",
          "KWDriverLicence",
          "KWEmail",
          "KWFiscalStatement",
          "KWGeneratedPassword",
          "KWIDCard",
          "KWIdentity",
          "KWMerchand",
          "KWMiscData",
          "KWPasskey",
          "KWPassport",
          "KWPaymentMean_creditCard",
          "KWPaymentMean_paypal",
          "KWPersonalWebsite",
          "KWPhone",
          "KWPurchaseAccount",
          "KWPurchaseCategory",
          "KWPurchasePaidBasket",
          "KWPurchaseTrueArticle",
          "KWSecret",
          "KWSecureFileInfo",
          "KWSecureNote",
          "KWSecureNoteCategory",
          "KWSecurityBreach",
          "KWSettingsManagerApp",
          "KWSocialSecurityStatement",
          "KWWebSite"
        )),
        (t.TransactionType = (0, s.Enum)(
          "ADDRESS",
          "AUTHENTIFIANT",
          "AUTH_CATEGORY",
          "BANKACCESS",
          "BANKACCOUNT",
          "BANKCATEGORY",
          "BANKINSTITUTION",
          "BANKSITE",
          "BANKSTATEMENT",
          "BANKTRANSACTION",
          "COLLECTION",
          "COMPANY",
          "DATA_CHANGE_HISTORY",
          "DATA_USAGE_HISTORY",
          "DEFAULT_AUTHENTIFIANT",
          "DEFAULT_CONFIDENTIAL",
          "DEFAULT_IDENTITY",
          "DEFAULT_MISC",
          "DEFAULT_PAYMENTMEANS",
          "DEFAULT_REWARDCARD",
          "DRIVERLICENCE",
          "EMAIL",
          "EMERGENCY_BUNDLE_FULL",
          "EMERGENCY_BUNDLE_LITE",
          "FULLBACKUP",
          "FISCALSTATEMENT",
          "GENERATED_PASSWORD",
          "IDCARD",
          "IDENTITY",
          "INVOICEACCESS",
          "INVOICEELEMENT",
          "INVOICEINSTITUTION",
          "MERCHANT",
          "MISCDATA",
          "PASSKEY",
          "PASSPORT",
          "PAYMENTMEANS_CREDITCARD",
          "PAYMENTMEAN_PAYPAL",
          "PERSONALWEBSITE",
          "PHONE",
          "POINTS",
          "PURCHASEABANDONNEDBASKET",
          "PURCHASEACCOUNT",
          "PURCHASEARTICLE",
          "PURCHASEBASKET",
          "PURCHASEDELIVERYARTICLE",
          "PURCHASEOPTIONARTICLE",
          "PURCHASEPAIDBASKET",
          "PURCHASE_CATEGORY",
          "REWARDCARD",
          "SECRET",
          "SECUREFILEINFO",
          "SECURENOTE",
          "SECURENOTE_CATEGORY",
          "SECURITYALERT",
          "SECURITYALERTS",
          "SECURITYBREACH",
          "SETTINGS",
          "SHARING_GROUP",
          "SOCIALSECURITYSTATEMENT",
          "WEBSITE"
        )),
        (t.DATAMODEL_TYPE_TO_TRANSACTION_TYPE = {
          KWAddress: t.TransactionType.ADDRESS,
          KWAuthCategory: t.TransactionType.AUTH_CATEGORY,
          KWAuthentifiant: t.TransactionType.AUTHENTIFIANT,
          KWCollection: t.TransactionType.COLLECTION,
          KWBankStatement: t.TransactionType.BANKSTATEMENT,
          KWCompany: t.TransactionType.COMPANY,
          KWDataChangeHistory: t.TransactionType.DATA_CHANGE_HISTORY,
          KWDriverLicence: t.TransactionType.DRIVERLICENCE,
          KWEmail: t.TransactionType.EMAIL,
          KWFiscalStatement: t.TransactionType.FISCALSTATEMENT,
          KWGeneratedPassword: t.TransactionType.GENERATED_PASSWORD,
          KWIDCard: t.TransactionType.IDCARD,
          KWIdentity: t.TransactionType.IDENTITY,
          KWMerchand: t.TransactionType.MERCHANT,
          KWMiscData: t.TransactionType.MISCDATA,
          KWPasskey: t.TransactionType.PASSKEY,
          KWPassport: t.TransactionType.PASSPORT,
          KWPaymentMean_creditCard: t.TransactionType.PAYMENTMEANS_CREDITCARD,
          KWPaymentMean_paypal: t.TransactionType.PAYMENTMEAN_PAYPAL,
          KWPersonalWebsite: t.TransactionType.PERSONALWEBSITE,
          KWPhone: t.TransactionType.PHONE,
          KWPurchaseAccount: t.TransactionType.PURCHASEACCOUNT,
          KWPurchaseCategory: t.TransactionType.PURCHASE_CATEGORY,
          KWPurchasePaidBasket: t.TransactionType.PURCHASEPAIDBASKET,
          KWPurchaseTrueArticle: t.TransactionType.PURCHASEARTICLE,
          KWSecret: t.TransactionType.SECRET,
          KWSecureFileInfo: t.TransactionType.SECUREFILEINFO,
          KWSecureNote: t.TransactionType.SECURENOTE,
          KWSecureNoteCategory: t.TransactionType.SECURENOTE_CATEGORY,
          KWSecurityBreach: t.TransactionType.SECURITYBREACH,
          KWSettingsManagerApp: t.TransactionType.SETTINGS,
          KWSocialSecurityStatement: t.TransactionType.SOCIALSECURITYSTATEMENT,
          KWWebSite: t.TransactionType.WEBSITE
        }),
        (t.TRANSACTION_TYPE_TO_DATAMODEL_TYPE = Object.values(t.DataModelType).reduce(
          (e, r) => ((e[t.DATAMODEL_TYPE_TO_TRANSACTION_TYPE[r]] = r), e),
          {}
        )),
        (t.getDataModelTypeFromTransactionType = function (e) {
          const r = t.TRANSACTION_TYPE_TO_DATAMODEL_TYPE[e];
          if (!r) throw new Error(`No DataModelType found for TransactionType '${e}'`);
          return r;
        }),
        (t.getTransactionTypeFromDataModelType = function (e) {
          if (!t.DATAMODEL_TYPE_TO_TRANSACTION_TYPE[e]) throw new Error(`No TransactionType found for DataModelType ${e}`);
          return t.DATAMODEL_TYPE_TO_TRANSACTION_TYPE[e];
        }),
        (t.transactionTypes = s.Enum.keys(t.TransactionType)),
        (t.dataModelTypes = s.Enum.keys(t.DataModelType));
      (t.isDataModelObject = (e) => !!e.LocaleFormat && "string" == typeof e.AnonId && "string" == typeof e.SpaceId),
        (t.isObjectLocalized = function (e) {
          return (
            Boolean(e) &&
            ("KWPhone" === e.kwType || "KWIdentity" === e.kwType || "KWAddress" === e.kwType || "KWBankStatement" === e.kwType)
          );
        });
    },
    59761: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isCompany = void 0),
        (t.isCompany = function (e) {
          return Boolean(e) && "KWCompany" === e.kwType;
        });
    },
    77467: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isCredential = t.isCredentialCategory = void 0),
        (t.isCredentialCategory = function (e) {
          return Boolean(e) && "KWAuthCategory" === e.kwType;
        }),
        (t.isCredential = function (e) {
          return Boolean(e) && "KWAuthentifiant" === e.kwType;
        });
    },
    79840: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isDriverLicense = void 0),
        (t.isDriverLicense = function (e) {
          return Boolean(e) && "KWDriverLicence" === e.kwType;
        });
    },
    21563: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isEmail = void 0),
        (t.isEmail = function (e) {
          return Boolean(e) && "KWEmail" === e.kwType;
        });
    },
    19200: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    71148: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isFiscalId = void 0),
        (t.isFiscalId = function (e) {
          return Boolean(e) && "KWFiscalStatement" === e.kwType;
        });
    },
    34314: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isGeneratedPassword = void 0),
        (t.isGeneratedPassword = function (e) {
          return Boolean(e) && "KWGeneratedPassword" === e.kwType;
        });
    },
    33092: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    45633: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isIdCard = void 0),
        (t.isIdCard = function (e) {
          return Boolean(e) && "KWIDCard" === e.kwType;
        });
    },
    36070: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isIdentity = void 0),
        (t.isIdentity = function (e) {
          return Boolean(e) && "KWIdentity" === e.kwType;
        });
    },
    15578: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.LinkedWebsiteSource = void 0),
        (function (e) {
          (e.Manual = "manual"), (e.Remember = "remember");
        })(t.LinkedWebsiteSource || (t.LinkedWebsiteSource = {}));
    },
    25353: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isNote = t.isNoteCategory = t.NoteTypes = void 0),
        (t.NoteTypes = ["GRAY", "PURPLE", "GREEN", "BLUE", "YELLOW", "ORANGE", "PINK", "BROWN", "RED"]),
        (t.isNoteCategory = function (e) {
          return Boolean(e) && "KWSecureNoteCategory" === e.kwType;
        }),
        (t.isNote = function (e) {
          return Boolean(e) && "KWSecureNote" === e.kwType;
        });
    },
    9455: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isPasskey = void 0),
        (t.isPasskey = function (e) {
          return Boolean(e) && "KWPasskey" === e.kwType;
        });
    },
    38275: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isPassport = void 0),
        (t.isPassport = function (e) {
          return Boolean(e) && "KWPassport" === e.kwType;
        });
    },
    12728: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.isPaymentCard = t.PaymentCardColor = t.PaymentCardType = void 0);
      const s = r(50415);
      (t.PaymentCardType = (0, s.Enum)(
        "PAYMENT_TYPE_VISA",
        "PAYMENT_TYPE_MASTERCARD",
        "PAYMENT_TYPE_AMEX",
        "PAYMENT_TYPE_DISCOVER",
        "PAYMENT_TYPE_JCB",
        "PAYMENT_TYPE_DINERSCLUB"
      )),
        (t.PaymentCardColor = (0, s.Enum)("BLACK", "SILVER", "WHITE", "RED", "ORANGE", "GOLD", "BLUE_1", "BLUE_2", "GREEN_1", "GREEN_2")),
        (t.isPaymentCard = function (e) {
          return Boolean(e) && "KWPaymentMean_creditCard" === e.kwType;
        });
    },
    76756: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isPaypalAccount = void 0),
        (t.isPaypalAccount = function (e) {
          return Boolean(e) && "KWPaymentMean_paypal" === e.kwType;
        });
    },
    95701: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isPersonalSettings = void 0),
        (t.isPersonalSettings = function (e) {
          return Boolean(e) && "KWSettingsManagerApp" === e.kwType;
        });
    },
    41667: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isPersonalWebsite = void 0),
        (t.isPersonalWebsite = function (e) {
          return Boolean(e) && "KWPersonalWebsite" === e.kwType;
        });
    },
    91760: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.isPhone = t.PhoneType = void 0);
      const s = r(50415);
      (t.PhoneType = (0, s.Enum)(
        "PHONE_TYPE_ANY",
        "PHONE_TYPE_MOBILE",
        "PHONE_TYPE_LANDLINE",
        "PHONE_TYPE_FAX",
        "PHONE_TYPE_WORK_MOBILE",
        "PHONE_TYPE_WORK_LANDLINE",
        "PHONE_TYPE_WORK_FAX"
      )),
        (t.isPhone = function (e) {
          return Boolean(e) && "KWPhone" === e.kwType;
        });
    },
    98661: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isSecret = void 0),
        (t.isSecret = function (e) {
          return Boolean(e) && "KWSecret" === e.kwType;
        });
    },
    33952: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isSecureFileInfo = void 0),
        (t.isSecureFileInfo = function (e) {
          return Boolean(e) && "KWSecureFileInfo" === e.kwType;
        });
    },
    96949: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isSocialSecurityId = void 0),
        (t.isSocialSecurityId = function (e) {
          return Boolean(e) && "KWSocialSecurityStatement" === e.kwType;
        });
    },
    47357: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(47495), t),
        o(r(76647), t),
        o(r(15381), t),
        o(r(39093), t),
        o(r(270), t),
        o(r(59761), t),
        o(r(77467), t),
        o(r(79840), t),
        o(r(21563), t),
        o(r(19200), t),
        o(r(71148), t),
        o(r(34314), t),
        o(r(33092), t),
        o(r(45633), t),
        o(r(36070), t),
        o(r(15578), t),
        o(r(25353), t),
        o(r(9455), t),
        o(r(38275), t),
        o(r(12728), t),
        o(r(76756), t),
        o(r(95701), t),
        o(r(41667), t),
        o(r(91760), t),
        o(r(98661), t),
        o(r(33952), t),
        o(r(96949), t);
    },
    24635: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    39191: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    44225: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(47357), t), o(r(24635), t);
    },
    34694: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.deviceCommandsSlots = t.deviceQueriesSlots = void 0);
      const s = r(71796);
      (t.deviceQueriesSlots = { getAnonymousComputerId: (0, s.slot)(), getPlatformInfo: (0, s.slot)() }),
        (t.deviceCommandsSlots = { cleanRemotelyRemovedProfiles: (0, s.slot)() });
    },
    88219: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(34694), t);
    },
    98792: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.DeviceLimitCapabilityConnector = void 0);
      const s = r(71796);
      t.DeviceLimitCapabilityConnector = { deviceLimitCapabilityUpdated: (0, s.slot)() };
    },
    43245: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(98792), t);
    },
    99103: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    70242: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.ExtensionCarbonConnector = void 0);
      const s = r(71796);
      t.ExtensionCarbonConnector = {
        loginStatusChanged: (0, s.slot)({ noBuffer: !0 }),
        localAccountsListUpdated: (0, s.slot)({ noBuffer: !0 }),
        openSessionProgressChanged: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPForNewDeviceRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionAskMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenWarning: (0, s.slot)({ noBuffer: !0 }),
        openSessionExtraDeviceTokenRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionMasterPasswordLess: (0, s.slot)({ noBuffer: !0 }),
        openSessionSsoRedirectionToIdpRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionFailed: (0, s.slot)({ noBuffer: !0 }),
        sessionSyncStatus: (0, s.slot)({ noBuffer: !0 }),
        deactivateDeviceResult: (0, s.slot)({ noBuffer: !0 }),
        changeDeviceNameResult: (0, s.slot)({ noBuffer: !0 }),
        accountInfoChanged: (0, s.slot)({ noBuffer: !0 }),
        dataModelUpdated: (0, s.slot)({ noBuffer: !0 }),
        accountFeaturesChanged: (0, s.slot)({ noBuffer: !0 }),
        webOnboardingModeUpdated: (0, s.slot)({ noBuffer: !0 }),
        askWebsiteInfo: (0, s.slot)({ noBuffer: !0 }),
        getAccountInfo: (0, s.slot)({ noBuffer: !0 }),
        getAnonymousLogsMetadata: (0, s.slot)({ noBuffer: !0 }),
        checkIfMasterPasswordIsValid: (0, s.slot)({ noBuffer: !0 }),
        openSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        cancelDashlaneAuthenticatorRegistration: (0, s.slot)(),
        openSessionWithOTP: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithOTPForNewDevice: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openExtraDeviceSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithExtraDeviceToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionResendToken: (0, s.slot)({ noBuffer: !0 }),
        sessionForceSync: (0, s.slot)({ noBuffer: !0 }),
        closeSession: (0, s.slot)({ noBuffer: !0 }),
        lockSession: (0, s.slot)({ noBuffer: !0 }),
        exceptionLog: (0, s.slot)({ noBuffer: !0 }),
        getDevicesList: (0, s.slot)({ noBuffer: !0 }),
        getLocalAccountsList: (0, s.slot)({ noBuffer: !0 }),
        deactivateDevice: (0, s.slot)({ noBuffer: !0 }),
        changeDeviceName: (0, s.slot)({ noBuffer: !0 }),
        updateWebOnboardingMode: (0, s.slot)({ noBuffer: !0 })
      };
    },
    15763: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.ExtensionCarbonEventType = void 0);
      const s = r(50415);
      t.ExtensionCarbonEventType = (0, s.Enum)(
        "LOGIN_STATUS_CHANGED",
        "LOCAL_ACCOUNTS_LIST_UPDATED",
        "OPEN_SESSION_PROGRESS_CHANGED",
        "OPEN_SESSION_TOKEN_SENT",
        "OPEN_SESSION_OTP_SENT",
        "OPEN_SESSION_ASK_MASTER_PASSWORD",
        "OPEN_SESSION_ASK_PERSIST_DATA",
        "OPEN_SESSION_TOKEN_WARNING",
        "OPEN_SESSION_FAILED",
        "SESSION_SYNC_STATUS",
        "DEACTIVATE_DEVICE_RESULT",
        "CHANGE_DEVICE_NAME_RESULT",
        "ACCOUNT_INFO",
        "DATA_MODEL_UPDATED",
        "ACCOUNT_FEATURES",
        "OPEN_WEB_ONBOARDING_TAB",
        "WEB_ONBOARDING_MODE_UPDATED",
        "ASK_WEBSITE_INFO",
        "TOGGLE_DASHLANE_ON_PAGE",
        "TOGGLE_DASHLANE_ON_SITE",
        "GET_LOGIN_STATUS",
        "GET_ACCOUNT_INFO",
        "GET_DEVICES_LIST",
        "GET_LOCAL_ACCOUNTS_LIST",
        "GET_PASSWORD_GENERATION_SETTINGS",
        "GET_ANONYMOUS_LOGS_METADATA",
        "GENERATE_PASSWORD",
        "SAVE_GENERATED_PASSWORD",
        "DEACTIVATE_DEVICE",
        "CHANGE_DEVICE_NAME",
        "USERS_METADATA",
        "OPEN_SESSION",
        "OPEN_SESSION_WITH_TOKEN",
        "OPEN_SESSION_WITH_OTP",
        "OPEN_SESSION_MASTER_PASSWORD",
        "PERSIST_DATA_FOR_NEW_SESSION",
        "OPEN_SESSION_RESEND_TOKEN",
        "SESSION_FORCE_SYNC",
        "CLOSE_SESSION",
        "OPEN_DEV_SESSION",
        "UPDATE_WEB_ONBOARDING_MODE",
        "PERF_LOG",
        "EXCEPTION_LOG",
        "USAGE_LOG",
        "INSTALLER_LOG"
      );
    },
    28413: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(70242), t), o(r(15763), t);
    },
    56376: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.ExtensionDebugConnector = void 0);
      const s = r(71796);
      t.ExtensionDebugConnector = {
        getExtensionId: (0, s.slot)(),
        switchExtensionToStandalone: (0, s.slot)(),
        showInput: (0, s.slot)(),
        showFormOnPage: (0, s.slot)(),
        signalTti: (0, s.slot)(),
        signalDatabasesSent: (0, s.slot)()
      };
    },
    13981: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.ExtensionDebugEventType = void 0);
      const s = r(50415);
      t.ExtensionDebugEventType = (0, s.Enum)(
        "GET_EXTENSION_ID",
        "SIGNAL_TTI",
        "DATABASES_SEND",
        "SHOW_INPUT",
        "SHOW_FORM_ON_PAGE",
        "SWITCH_TO_STANDALONE"
      );
    },
    91609: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(56376), t), o(r(13981), t);
    },
    21818: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.familyCommandsSlots = void 0);
      const s = r(71796);
      t.familyCommandsSlots = {
        getFamilyDetails: (0, s.slot)(),
        joinFamily: (0, s.slot)(),
        leaveFamily: (0, s.slot)(),
        removeFamilyMember: (0, s.slot)(),
        resetFamilyJoinToken: (0, s.slot)()
      };
    },
    65005: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(21818), t), o(r(50647), t);
    },
    50647: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.FamilyRenewalPlatform = t.FamilyMemberRole = t.FamilyStatusCode = t.JoinFamilyUserStatus = void 0),
        (function (e) {
          (e.NEW_USER = "NEW_USER"), (e.EXISTING_FREE_USER = "EXISTING_FREE_USER"), (e.EXISTING_PREMIUM_USER = "EXISTING_PREMIUM_USER");
        })(t.JoinFamilyUserStatus || (t.JoinFamilyUserStatus = {})),
        (function (e) {
          (e[(e.DISCONTINUED = 0)] = "DISCONTINUED"), (e[(e.PREMIUM = 1)] = "PREMIUM"), (e[(e.PREMIUM_PLUS = 2)] = "PREMIUM_PLUS");
        })(t.FamilyStatusCode || (t.FamilyStatusCode = {})),
        (function (e) {
          (e.ADMIN = "admin"), (e.REGULAR = "regular"), (e.REMOVED = "removed");
        })(t.FamilyMemberRole || (t.FamilyMemberRole = {})),
        (function (e) {
          (e.IOS_APP_STORE = "ios"), (e.MAC_STORE = "mac"), (e.PLAY_STORE = "playstore");
        })(t.FamilyRenewalPlatform || (t.FamilyRenewalPlatform = {}));
    },
    33824: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.featureQueriesSlots = void 0);
      const s = r(71796);
      t.featureQueriesSlots = { getHasFeature: (0, s.slot)(), getFeatures: (0, s.slot)() };
    },
    80898: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(78674), t), o(r(33824), t);
    },
    78674: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    4126: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.remoteFilesLiveQueriesSlots = t.remoteFilesQueriesSlots = t.remoteFileCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.remoteFileCommandsSlots = { decipherRemoteFile: (0, s.slot)() }),
        (t.remoteFilesQueriesSlots = { getFileContent: (0, s.slot)() }),
        (t.remoteFilesLiveQueriesSlots = { liveFileMeta: (0, o.liveSlot)() });
    },
    29450: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(4126), t), o(r(46046), t);
    },
    46046: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.FileNamesList =
          t.SERVER_ERROR_HTTP_STATUS =
          t.UNSPECIFIED_ERROR =
          t.FILE_NOT_UPDATED =
          t.FILE_NOT_FOUND_HTTP_STATUS =
          t.NO_CURRENT_UPDATE_HTTP_STATUS =
          t.UPDATE_AVAILABLE_HTTP_STATUS =
            void 0),
        (t.UPDATE_AVAILABLE_HTTP_STATUS = "update_available"),
        (t.NO_CURRENT_UPDATE_HTTP_STATUS = "unknown_revision"),
        (t.FILE_NOT_FOUND_HTTP_STATUS = "not_found"),
        (t.FILE_NOT_UPDATED = "not_updated"),
        (t.UNSPECIFIED_ERROR = "unspecified_error"),
        (t.SERVER_ERROR_HTTP_STATUS = "error_server"),
        (t.FileNamesList = ["overrides.json", "phishing_urls_test.json"]);
    },
    44605: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.globalExtensionSettingsCommandsSlots = void 0);
      const s = r(71796);
      t.globalExtensionSettingsCommandsSlots = { setGlobalExtensionSettings: (0, s.slot)(), getGlobalExtensionSettings: (0, s.slot)() };
    },
    96035: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(44605), t), o(r(73054), t);
    },
    73054: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    15044: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.healthCommandsSlots = void 0);
      const s = r(71796);
      t.healthCommandsSlots = { evaluatePassword: (0, s.slot)() };
    },
    6666: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(15044), t), o(r(14836), t);
    },
    14836: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    24875: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(38561), t);
    },
    38561: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.killswitchLiveQueriesSlots = t.killswitchQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.killswitchQueriesSlots = {
        getIsBrazeContentDisabled: (0, s.slot)(),
        getIsLoginFlowMigrationDisabled: (0, s.slot)(),
        getIsAutoSSOLoginDisabled: (0, s.slot)()
      }),
        (t.killswitchLiveQueriesSlots = {
          liveIsBrazeContentDisabled: (0, o.liveSlot)(),
          liveIsLoginFlowMigrationDisabled: (0, o.liveSlot)(),
          liveIsAutoSSOLoginDisabled: (0, o.liveSlot)()
        });
    },
    28730: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.CarbonLeelooConnector = void 0);
      const s = r(71796);
      t.CarbonLeelooConnector = {
        abTestingChanged: (0, s.slot)(),
        loginStatusChanged: (0, s.slot)({ noBuffer: !0 }),
        openSessionProgressChanged: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPForNewDeviceRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionAskMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenWarning: (0, s.slot)({ noBuffer: !0 }),
        openSessionExtraDeviceTokenRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionSsoRedirectionToIdpRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionMasterPasswordLess: (0, s.slot)({ noBuffer: !0 }),
        openSessionFailed: (0, s.slot)({ noBuffer: !0 }),
        sessionSyncStatus: (0, s.slot)({ noBuffer: !0 }),
        localAccountsListUpdated: (0, s.slot)(),
        spaceDataUpdated: (0, s.slot)(),
        teamAdminDataUpdated: (0, s.slot)(),
        credentialLoginUrlRetrieved: (0, s.slot)(),
        deactivateDeviceResult: (0, s.slot)(),
        changeDeviceNameResult: (0, s.slot)(),
        accountInfoChanged: (0, s.slot)(),
        accountFeaturesChanged: (0, s.slot)(),
        updatePaymentCardTokenResult: (0, s.slot)(),
        webOnboardingModeUpdated: (0, s.slot)(),
        currentLocationUpdated: (0, s.slot)(),
        checkDirectorySyncKeyRequest: (0, s.slot)(),
        encryptSettingsResultUpdated: (0, s.slot)(),
        confirmCreateAccountResultUpdated: (0, s.slot)(),
        sendSharingResponseResult: (0, s.slot)(),
        serverSidePairingStatusChanged: (0, s.slot)(),
        getUki: (0, s.slot)(),
        getAccountInfo: (0, s.slot)(),
        getDevicesList: (0, s.slot)(),
        getLocalAccountsList: (0, s.slot)(),
        getTemporaryToken: (0, s.slot)(),
        deactivateDevice: (0, s.slot)(),
        changeDeviceName: (0, s.slot)(),
        getInvoices: (0, s.slot)(),
        getPersonalSettings: (0, s.slot)(),
        openSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        cancelDashlaneAuthenticatorRegistration: (0, s.slot)(),
        openSessionWithOTP: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithOTPForNewDevice: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openExtraDeviceSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithExtraDeviceToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionResendToken: (0, s.slot)({ noBuffer: !0 }),
        sessionForceSync: (0, s.slot)(),
        closeSession: (0, s.slot)(),
        lockSession: (0, s.slot)({ noBuffer: !0 }),
        cancelPremiumSubscription: (0, s.slot)(),
        createUserGroup: (0, s.slot)(),
        deleteUserGroup: (0, s.slot)(),
        renameUserGroup: (0, s.slot)(),
        inviteUserGroupMembers: (0, s.slot)(),
        revokeUserGroupMembers: (0, s.slot)(),
        updateUserGroupMembers: (0, s.slot)(),
        teamUpdated: (0, s.slot)(),
        createAccountStep1: (0, s.slot)(),
        createAccountStep2: (0, s.slot)(),
        checkLogin: (0, s.slot)(),
        savePersonalDataItem: (0, s.slot)(),
        removePersonalDataItem: (0, s.slot)(),
        savePaymentCard: (0, s.slot)(),
        getMasterPasswordResetDemandList: (0, s.slot)(),
        acceptMasterPasswordResetDemand: (0, s.slot)(),
        checkIfMasterPasswordIsValid: (0, s.slot)(),
        declineMasterPasswordResetDemand: (0, s.slot)(),
        getMembers: (0, s.slot)(),
        addTeamAdmin: (0, s.slot)(),
        removeTeamAdmin: (0, s.slot)(),
        setTeamSettings: (0, s.slot)(),
        updateWebOnboardingMode: (0, s.slot)(),
        checkDirectorySyncKeyResponse: (0, s.slot)(),
        queryStaticDataCollections: (0, s.slot)(),
        sendSharingResponse: (0, s.slot)(),
        getDataModel: (0, s.slot)(),
        getSharingSync: (0, s.slot)(),
        revokeSharing: (0, s.slot)(),
        getSharingData: (0, s.slot)(),
        updateSharingPermission: (0, s.slot)(),
        setPendingElementsAsSeen: (0, s.slot)(),
        isUserLastAdminOnItem: (0, s.slot)(),
        doesUserReceiveItemViaGroup: (0, s.slot)(),
        resumeSession: (0, s.slot)(),
        exceptionLog: (0, s.slot)()
      };
    },
    17317: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(28730), t), o(r(31291), t);
    },
    31291: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.RemovePersonalDataItemFailureReason = void 0),
        (function (e) {
          (e[(e.LEAVE_SHARING_FAILED = 0)] = "LEAVE_SHARING_FAILED"),
            (e[(e.FORBIDDEN_LAST_ADMIN = 1)] = "FORBIDDEN_LAST_ADMIN"),
            (e[(e.FORBIDDEN_GROUP_ITEM = 2)] = "FORBIDDEN_GROUP_ITEM"),
            (e[(e.NOT_AUTHORIZED = 3)] = "NOT_AUTHORIZED"),
            (e[(e.NOT_FOUND = 4)] = "NOT_FOUND"),
            (e[(e.INTERNAL_ERROR = 5)] = "INTERNAL_ERROR");
        })(t.RemovePersonalDataItemFailureReason || (t.RemovePersonalDataItemFailureReason = {}));
    },
    29182: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.eventLoggerCommandsSlots = void 0);
      const s = r(71796);
      t.eventLoggerCommandsSlots = { logEvent: (0, s.slot)(), logPageView: (0, s.slot)(), flushQueue: (0, s.slot)() };
    },
    15925: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(29182), t), o(r(40035), t);
    },
    40035: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.StyxApiResult = void 0),
        (function (e) {
          (e[(e.AllBatchesSent = 0)] = "AllBatchesSent"),
            (e[(e.SomeBatchesSent = 1)] = "SomeBatchesSent"),
            (e[(e.NoBatchesSent = 2)] = "NoBatchesSent");
        })(t.StyxApiResult || (t.StyxApiResult = {}));
    },
    63054: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.exceptionCommandsSlots = void 0);
      const s = r(71796);
      t.exceptionCommandsSlots = { logException: (0, s.slot)() };
    },
    68183: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(63054), t), o(r(96103), t);
    },
    96103: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.ExceptionCriticality = void 0),
        (function (e) {
          (e[(e.UNKNOWN = 0)] = "UNKNOWN"), (e[(e.WARNING = 1)] = "WARNING"), (e[(e.ERROR = 2)] = "ERROR");
        })(t.ExceptionCriticality || (t.ExceptionCriticality = {}));
    },
    87940: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.ApplicationBuildType = t.LoggingEventType = void 0);
      const s = r(50415);
      t.LoggingEventType = (0, s.Enum)("EXCEPTION_LOG");
      var o = r(90693);
      Object.defineProperty(t, "ApplicationBuildType", {
        enumerable: !0,
        get: function () {
          return o.ApplicationBuildType;
        }
      });
    },
    6768: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(65063), t), o(r(24309), t);
    },
    65063: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.loginCommandsSlots = void 0);
      const s = r(71796);
      t.loginCommandsSlots = {
        abortDeviceLimitFlow: (0, s.slot)(),
        loginViaSSO: (0, s.slot)(),
        unlinkPreviousDevice: (0, s.slot)(),
        unlinkMultipleDevices: (0, s.slot)()
      };
    },
    24309: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.LoginViaSsoCode = t.SsoMigrationServerMethod = t.LoginResultEnum = void 0),
        (function (e) {
          (e[(e.MasterPasswordMissing = 0)] = "MasterPasswordMissing"),
            (e[(e.DeviceAuthenticationMissing = 1)] = "DeviceAuthenticationMissing"),
            (e[(e.TokenMissing = 2)] = "TokenMissing"),
            (e[(e.OTPMissing = 3)] = "OTPMissing"),
            (e[(e.AskPersistData = 4)] = "AskPersistData"),
            (e[(e.LoggedIn = 5)] = "LoggedIn"),
            (e[(e.ExtraDeviceTokenMissing = 6)] = "ExtraDeviceTokenMissing"),
            (e[(e.SSOLogin = 7)] = "SSOLogin"),
            (e[(e.DeviceLimitFlow = 8)] = "DeviceLimitFlow"),
            (e[(e.DashlaneAuthenticatorApprovalMissing = 9)] = "DashlaneAuthenticatorApprovalMissing"),
            (e[(e.DashlaneAuthenticatorApprovalCancelled = 10)] = "DashlaneAuthenticatorApprovalCancelled"),
            (e[(e.MasterPasswordLess = 11)] = "MasterPasswordLess");
        })(t.LoginResultEnum || (t.LoginResultEnum = {})),
        (function (e) {
          (e.SSO = "sso"), (e.MP = "master_password");
        })(t.SsoMigrationServerMethod || (t.SsoMigrationServerMethod = {})),
        (function (e) {
          (e.SUCCESS = "SUCCESS"),
            (e.ASK_NEW_MP = "ASK_NEW_MP"),
            (e.EMPTY_LOGIN = "EMPTY_LOGIN"),
            (e.INNACTIVE_SESSION = "INNACTIVE_SESSION"),
            (e.SSO_VERIFICATION_FAILED = "SSO_VERIFICATION_FAILED"),
            (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
            (e.UNSUPPORTED_TRANSITION = "UNSUPPORTED_TRANSITION"),
            (e.WRONG_PASSWORD = "WRONG_PASSWORD");
        })(t.LoginViaSsoCode || (t.LoginViaSsoCode = {}));
    },
    58290: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(23903), t), o(r(53168), t);
    },
    53168: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.loginNotificationsLiveQueriesSlots = t.loginNotificationsQueriesSlots = t.loginNotificationsCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.loginNotificationsCommandsSlots = { addLoginNotification: (0, s.slot)(), clearAllStoredLoginNotification: (0, s.slot)() }),
        (t.loginNotificationsQueriesSlots = { getLoginNotifications: (0, s.slot)() }),
        (t.loginNotificationsLiveQueriesSlots = { liveLoginNotifications: (0, o.liveSlot)() });
    },
    23903: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.LoginNotificationType = void 0),
        (function (e) {
          (e.RELOGIN_NEEDED = "RELOGIN_NEEDED"),
            (e.SSO_FEATURE_BLOCKED = "SSO_FEATURE_BLOCKED"),
            (e.SSO_SETUP_ERROR = "SSO_SETUP_ERROR"),
            (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
            (e.TEAM_ACCEPTANCE_SUCCESS = "TEAM_ACCEPTANCE_SUCCESS"),
            (e.TEAM_ACCEPTANCE_ERROR = "TEAM_ACCEPTANCE_ERROR");
        })(t.LoginNotificationType || (t.LoginNotificationType = {}));
    },
    78779: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(12249), t), o(r(3455), t);
    },
    12249: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.loginStepInfoLiveQueriesSlots = t.loginStepInfoQueriesSlots = t.loginStepInfoCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.loginStepInfoCommandsSlots = { updateLoginStepInfo: (0, s.slot)(), resetLoginStepInfo: (0, s.slot)() }),
        (t.loginStepInfoQueriesSlots = { getLoginStepInfo: (0, s.slot)() }),
        (t.loginStepInfoLiveQueriesSlots = { liveLoginStepInfo: (0, o.liveSlot)() });
    },
    3455: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.LoginStep = void 0),
        (function (e) {
          (e.Email = "email"),
            (e.Welcome = "welcome"),
            (e.OTP1 = "OTP1"),
            (e.OTP2 = "OTP2"),
            (e.BackupCodeOTP1 = "backupCodeOTP1"),
            (e.BackupCodeOTP2 = "backupCodeOTP2"),
            (e.OTPToken = "token"),
            (e.Password = "password"),
            (e.SSO = "SSO"),
            (e.ActivateSSO = "activateSSO"),
            (e.WebAuthn = "webAuthn"),
            (e.WebAuthnError = "webAuthnError"),
            (e.DeviceLimitReached = "deviceLimitReached"),
            (e.DashlaneAuthenticator = "dashlaneAuthenticator"),
            (e.PasswordLess = "passwordLess");
        })(t.LoginStep || (t.LoginStep = {}));
    },
    66478: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    48905: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    25460: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.CarbonMaverickConnector = void 0);
      const s = r(71796);
      t.CarbonMaverickConnector = {
        savePersonalDataItem: (0, s.slot)(),
        filledDataItem: (0, s.slot)(),
        updateWebOnboardingMode: (0, s.slot)()
      };
    },
    98521: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(25460), t), o(r(58962), t);
    },
    58962: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    39687: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.MaverickDebugConnector = void 0);
      const s = r(71796);
      t.MaverickDebugConnector = {
        getState: (0, s.slot)(),
        analyseDom: (0, s.slot)(),
        processAnalyzedPage: (0, s.slot)(),
        loadDatabases: (0, s.slot)(),
        runCredentialSaveTest: (0, s.slot)(),
        openUrl: (0, s.slot)(),
        toggleLogTypes: (0, s.slot)(),
        actionProcessed: (0, s.slot)(),
        domReceived: (0, s.slot)(),
        domAnalysed: (0, s.slot)(),
        signalError: (0, s.slot)(),
        credentialSaveTestRan: (0, s.slot)(),
        log: (0, s.slot)(),
        signalTabOpened: (0, s.slot)(),
        sendAnalysisResults: (0, s.slot)(),
        signalTabClosed: (0, s.slot)(),
        signalDatabasesInitialized: (0, s.slot)()
      };
    },
    42739: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.MaverickDebugEventType = void 0);
      const s = r(50415);
      t.MaverickDebugEventType = (0, s.Enum)(
        "GET_STATE",
        "ANALYSE_DOM",
        "LOAD_DATABASES",
        "RUN_CREDENTAL_SAVE_TEST",
        "OPEN_URL",
        "TOGGLE_LOGS",
        "ACTION_PROCESSED",
        "DOM_RECEIVED",
        "DOM_ANALYSED",
        "SIGNAL_EXCEPTION",
        "CREDENTIAL_SAVE_RAN",
        "LOG"
      );
    },
    11733: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(39687), t), o(r(42739), t);
    },
    93645: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.MaverickWrapperConnector = void 0);
      const s = r(71796);
      t.MaverickWrapperConnector = { analyseDom: (0, s.slot)(), pageInfoComputed: (0, s.slot)(), signalError: (0, s.slot)() };
    },
    27707: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.ClickableElementTypes = t.LoginStatus = t.MaverickWrapperEventType = void 0);
      const s = r(50415);
      (t.MaverickWrapperEventType = (0, s.Enum)("COMPUTE_PAGE_INFO", "PAGE_INFO_COMPUTED", "SIGNAL_EXCEPTION")),
        (t.LoginStatus = (0, s.Enum)("LOGGED_IN", "LOGGED_OUT", "UNKNOWN")),
        (t.ClickableElementTypes = (0, s.Enum)("goToLoginPage", "goToChangePasswordPage", "goToResetPasswordPage"));
    },
    11889: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(93645), t), o(r(27707), t);
    },
    37174: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(5264), t), o(r(28155), t);
    },
    28155: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.notificationsLiveQueriesSlots = t.notificationsQueriesSlots = t.notificationsCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.notificationsCommandsSlots = {
        markNotificationAsInteracted: (0, s.slot)(),
        markNotificationAsSeen: (0, s.slot)(),
        markNotificationAsUnseen: (0, s.slot)()
      }),
        (t.notificationsQueriesSlots = { getNotificationStatus: (0, s.slot)() }),
        (t.notificationsLiveQueriesSlots = { liveNotificationStatus: (0, o.liveSlot)() });
    },
    5264: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.NotificationStatus = t.NotificationName = void 0),
        (function (e) {
          (e.PaymentFailureChurning = "paymentFailureChurning"),
            (e.PaymentFailureChurned = "paymentFailureChurned"),
            (e.SwitchToMlAnalysisEngine = "switchToMlAnalysisEngine"),
            (e.DWMb2bAutoEnrollTooltip = "dWMb2bAutoEnrollTooltip"),
            (e.VpnProviderIsNowHotspot = "vpnProviderIsNowHotspot"),
            (e.VpnHostpotshieldInstalled = "vpnHostpotshieldInstalled"),
            (e.PopupIncomingTabPayments = "popupIncomingTabPayments"),
            (e.PopupIncomingTabSecureNotes = "popupIncomingTabSecureNotes"),
            (e.PopupIncomingTabPersonalInfo = "popupIncomingTabPersonalInfo"),
            (e.PopupIncomingTabIDs = "popupIncomingTabIDs"),
            (e.NewAccountMenuTooltip = "newAccountMenuTooltip"),
            (e.TacGetTheExtensionBanner = "tacGetTheExtensionBanner"),
            (e.TacEnableAccountRecoveryBanner = "tacEnableAccountRecoveryBanner"),
            (e.TacOnlyOneAdminBanner = "tacOnlyOneAdminBanner"),
            (e.TacDarkWebInsightsNewBadge = "tacDarkWebInsightsNewBadge"),
            (e.PasswordHistoryBanner = "passwordHistoryBanner"),
            (e.SharingCenterDisabledBanner = "sharingCenterDisabledBanner"),
            (e.AccountRecoveryAvailableAdminTooltip = "accountRecoveryAvailableAdminTooltip"),
            (e.AccountRecoveryAvailableEmployeeDialog = "accountRecoveryAvailableEmployeeDialog"),
            (e.ActivateInviteLink = "activateInviteLink"),
            (e.TacGetStartedOpenVault = "tacGetStartedOpenVault"),
            (e.TacGetStartedDismissPage = "tacGetStartedDismissedPage"),
            (e.TacGetStartedSeenPage = "tacGetStartedSeenPage");
        })(t.NotificationName || (t.NotificationName = {})),
        (function (e) {
          (e.Interacted = "interacted"), (e.Seen = "seen"), (e.Unseen = "unseen");
        })(t.NotificationStatus || (t.NotificationStatus = {}));
    },
    36632: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(58355), t);
    },
    58355: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.WebOnboardingPopoverStep = t.WebOnboardingLeelooStep = void 0);
      const s = r(50415);
      (t.WebOnboardingLeelooStep = (0, s.Enum)(
        "SHOW_LOGIN_USING_EXTENSION_NOTIFICATION",
        "SHOW_SAVE_SITES_DIALOG",
        "SHOW_PASSWORD_SAVE_SUCCESS",
        "SHOW_WEB_SAVE_AND_AUTOLOGIN_COMPLETED",
        "SHOW_PASSWORD_IMPORT",
        "SHOW_GET_MOBILE_DIALOG"
      )),
        (t.WebOnboardingPopoverStep = (0, s.Enum)("SHOW_LOGIN_NOTIFICATION"));
    },
    24281: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.Platform = void 0),
        (function (e) {
          (e[(e.Android = 0)] = "Android"),
            (e[(e.CarbonTests = 1)] = "CarbonTests"),
            (e[(e.CarbonUnknown = 2)] = "CarbonUnknown"),
            (e[(e.DesktopLegacyMacOS = 3)] = "DesktopLegacyMacOS"),
            (e[(e.DesktopLegacyWindows = 4)] = "DesktopLegacyWindows"),
            (e[(e.DesktopUWP = 5)] = "DesktopUWP"),
            (e[(e.IPad = 6)] = "IPad"),
            (e[(e.IPhone = 7)] = "IPhone"),
            (e[(e.IPod = 8)] = "IPod"),
            (e[(e.StandaloneExtension = 9)] = "StandaloneExtension"),
            (e[(e.TeamAdminConsole = 10)] = "TeamAdminConsole"),
            (e[(e.WebApp = 11)] = "WebApp"),
            (e[(e.WebAppDev = 12)] = "WebAppDev");
        })(t.Platform || (t.Platform = {}));
    },
    68557: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.PlatformView = void 0),
        (function (e) {
          (e.Android = "android"),
            (e.DesktopMacOS = "macosx"),
            (e.DesktopWindows = "windows"),
            (e.IPad = "ipad"),
            (e.IPhone = "iphone"),
            (e.IPod = "ipod"),
            (e.Other = "other"),
            (e.StandaloneExtension = "saex"),
            (e.TeamAdminConsole = "tac"),
            (e.WebApp = "webapp");
        })(t.PlatformView || (t.PlatformView = {}));
    },
    54982: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.LoginDeviceLimitFlowStage = void 0),
        (function (e) {
          (e.OneDeviceLimitReached = "OneDeviceLimitReached"),
            (e.MultipleDevicesLimitReached = "MultipleDevicesLimitReached"),
            (e.UnlinkingAndOpeningSession = "UnlinkingAndOpeningSession"),
            (e.UnlinkingMultipleDevicesError = "UnlinkingMultipleDevicesError"),
            (e.RefreshingDeviceLimitStatus = "RefreshingDeviceLimitStatus"),
            (e.OpeningSessionAfterDeviceLimitRemoval = "OpeningSessionAfterDeviceLimitRemoval"),
            (e.DeviceLimitDone = "DeviceLimitDone");
        })(t.LoginDeviceLimitFlowStage || (t.LoginDeviceLimitFlowStage = {}));
    },
    38340: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    43556: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.AbortDeviceLimitFlowError = void 0),
        (function (e) {
          e.UnexpectedError = "UNEXPECTED_ERROR";
        })(t.AbortDeviceLimitFlowError || (t.AbortDeviceLimitFlowError = {}));
    },
    96197: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(43556), t),
        o(r(93522), t),
        o(r(44270), t),
        o(r(54982), t),
        o(r(38340), t),
        o(r(68557), t),
        o(r(61445), t),
        o(r(53240), t),
        o(r(24281), t);
    },
    93522: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.UNEXPECTED_ERROR = t.USER_STILL_OVERFLOWING = void 0),
        (t.USER_STILL_OVERFLOWING = "USER_STILL_OVERFLOWING"),
        (t.UNEXPECTED_ERROR = "UNEXPECTED_ERROR");
    },
    53240: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    44270: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.UnlinkPreviousDeviceError = void 0),
        (function (e) {
          e.UnexpectedError = "UNEXPECTED_ERROR";
        })(t.UnlinkPreviousDeviceError || (t.UnlinkPreviousDeviceError = {}));
    },
    61445: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    84369: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.deviceLimitLiveSlots = t.deviceLimitSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.deviceLimitSlots = { getLoginDeviceLimitFlow: (0, s.slot)() }),
        (t.deviceLimitLiveSlots = { liveLoginDeviceLimitFlow: (0, o.liveSlot)() });
    },
    76758: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(26749), t);
    },
    89391: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.twoFactorStatusLiveSlots = t.twoFactorStatusSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.twoFactorStatusSlots = { getTwoFactorAuthenticationInfo: (0, s.slot)() }),
        (t.twoFactorStatusLiveSlots = { liveTwoFactorAuthenticationInfo: (0, o.liveSlot)() });
    },
    26749: (e, t) => {
      var r;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.ENFORCE_TWO_FACTOR_AUTHENTICATION_ENABLED_VALUES =
          t.TwoFactorAuthenticationInfoRequestStatus =
          t.TwoFactorAuthenticationType =
            void 0),
        (function (e) {
          (e.EMAIL_TOKEN = "email_token"), (e.DEVICE_REGISTRATION = "totp_device_registration"), (e.LOGIN = "totp_login"), (e.SSO = "sso");
        })(t.TwoFactorAuthenticationType || (t.TwoFactorAuthenticationType = {})),
        (function (e) {
          (e[(e.UNKNOWN = 0)] = "UNKNOWN"), (e[(e.PENDING = 1)] = "PENDING"), (e[(e.ERROR = 2)] = "ERROR"), (e[(e.READY = 3)] = "READY");
        })(t.TwoFactorAuthenticationInfoRequestStatus || (t.TwoFactorAuthenticationInfoRequestStatus = {})),
        (function (e) {
          (e.LOGIN = "login"), (e.NEW_DEVICE = "newDevice"), (e.DISABLED = "disabled");
        })(r || (r = {})),
        (t.ENFORCE_TWO_FACTOR_AUTHENTICATION_ENABLED_VALUES = [r.LOGIN, r.NEW_DEVICE]);
    },
    60687: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(89884), t), o(r(22574), t), o(r(96197), t), o(r(76758), t);
    },
    22574: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.openSessionCommandsSlots = t.openSessionLiveQueriesSlots = t.openSessionQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345),
        n = r(84369),
        i = r(89391);
      (t.openSessionQueriesSlots = {
        getLoginStatus: (0, s.slot)(),
        getLocalAccounts: (0, s.slot)(),
        getIsSSOUser: (0, s.slot)(),
        getSSOMigrationInfo: (0, s.slot)(),
        getSessionInfo: (0, s.slot)(),
        getMasterPasswordAndServerKey: (0, s.slot)(),
        getUserCryptoSettings: (0, s.slot)(),
        getSyncInfo: (0, s.slot)(),
        getIsSyncInProgress: (0, s.slot)(),
        getPremiumStatus: (0, s.slot)(),
        getNodePremiumStatus: (0, s.slot)(),
        getSubscriptionInformation: (0, s.slot)(),
        getActiveSpaces: (0, s.slot)(),
        getIsAuthenticated: (0, s.slot)(),
        getSSOProviderInfo: (0, s.slot)(),
        getUserLogin: (0, s.slot)(),
        getPublicUserId: (0, s.slot)(),
        getAnalyticsInstallationId: (0, s.slot)(),
        getUserLoginStatus: (0, s.slot)(),
        getWebOnboardingMode: (0, s.slot)(),
        getPremiumChurningDismissDate: (0, s.slot)(),
        getIsPaymentFailureChurningDismissed: (0, s.slot)(),
        getCredentialSearchOrder: (0, s.slot)(),
        getDidOpen: (0, s.slot)(),
        getPlatformName: (0, s.slot)(),
        getAccountAuthenticationType: (0, s.slot)(),
        ...n.deviceLimitSlots,
        ...i.twoFactorStatusSlots
      }),
        (t.openSessionLiveQueriesSlots = {
          liveLoginStatus: (0, o.liveSlot)(),
          liveDidOpen: (0, o.liveSlot)(),
          liveIsSSOUser: (0, o.liveSlot)(),
          liveSSOMigrationInfo: (0, o.liveSlot)(),
          liveSessionInfo: (0, o.liveSlot)(),
          liveSyncInfo: (0, o.liveSlot)(),
          liveIsSyncInProgress: (0, o.liveSlot)(),
          livePremiumStatus: (0, o.liveSlot)(),
          liveServiceProviderUrl: (0, o.liveSlot)(),
          liveWebOnboardingMode: (0, o.liveSlot)(),
          liveSubscriptionInformation: (0, o.liveSlot)(),
          ...n.deviceLimitLiveSlots,
          ...i.twoFactorStatusLiveSlots
        }),
        (t.openSessionCommandsSlots = {
          validateToken: (0, s.slot)(),
          validateMasterPassword: (0, s.slot)(),
          resetProtectedItemAutofillTimer: (0, s.slot)(),
          forceSync: (0, s.slot)(),
          updatePremiumChurningDismissDate: (0, s.slot)(),
          setCredentialSearchOrder: (0, s.slot)(),
          refreshSubscriptionInformation: (0, s.slot)(),
          updateAccountRecoveryKeyPersonalSettings: (0, s.slot)()
        });
    },
    89884: (e, t) => {
      var r;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.CredentialSearchOrder =
          t.SSOMigrationType =
          t.SpaceStatus =
          t.SpaceTiers =
          t.B2CPlanFeatures =
          t.SyncStatuses =
          t.ServerSidePairingStatus =
          t.possibleAdminPermissions =
          t.groupPermissions =
          t.PlanTypes =
          t.PremiumLogTypes =
          t.CapabilityKeys =
          t.PremiumStatusCode =
            void 0),
        (function (e) {
          (e[(e.NO_PREMIUM = 0)] = "NO_PREMIUM"),
            (e[(e.PREMIUM = 1)] = "PREMIUM"),
            (e[(e.PREMIUM_CANCELLED = 2)] = "PREMIUM_CANCELLED"),
            (e[(e.OLD_ACCOUNT = 3)] = "OLD_ACCOUNT"),
            (e[(e.NEW_USER = 4)] = "NEW_USER"),
            (e[(e.GRACE_PERIOD = 5)] = "GRACE_PERIOD");
        })(t.PremiumStatusCode || (t.PremiumStatusCode = {})),
        (t.CapabilityKeys = [
          "autofillWithPhishingPrevention",
          "creditMonitoring",
          "dataLeak",
          "devicesLimit",
          "identityRestoration",
          "identityTheftProtection",
          "multipleAccounts",
          "passwordsLimit",
          "phoneSupport",
          "secureFiles",
          "secureNotes",
          "secureWiFi",
          "securityBreach",
          "sharingLimit",
          "sync",
          "yubikey",
          "scim",
          "sso",
          "collectionSharing"
        ]),
        (t.PremiumLogTypes = Object.freeze({
          freeTrialGranted: "free_trial_granted",
          premiumGranted: "premium_granted",
          renewed: "renewed",
          subscribed: "subscribed",
          crosssellPurchased: "crosssell_purchased",
          setAsLegacy: "set_as_legacy",
          familyCreated: "family_created",
          familyRenewed: "family_renewed"
        })),
        (t.PlanTypes = Object.freeze({
          Amazon: "amazon",
          FreeTrial: "free_trial",
          Invoice: "invoice",
          IOS: "ios",
          IOSRenewable: "ios_renewable",
          Legacy: "legacy",
          Mac: "mac",
          MacRenewable: "mac_renewable",
          Offer: "offer",
          Partner: "partner",
          Paypal: "paypal",
          PaypalRenewable: "paypal_renewable",
          Playstore: "playstore",
          PlaystoreRenewable: "playstore_renewable",
          Stripe: "stripe"
        })),
        (t.groupPermissions = ["GROUP_CREATE", "GROUP_DELETE", "GROUP_EDIT", "GROUP_READ"]),
        (t.possibleAdminPermissions = ["FULL", "BILLING", ...t.groupPermissions]),
        (function (e) {
          (e[(e.UNPAIRED = 0)] = "UNPAIRED"), (e[(e.PAIRED = 1)] = "PAIRED");
        })(t.ServerSidePairingStatus || (t.ServerSidePairingStatus = {})),
        (function (e) {
          (e.READY = "ready"), (e.IN_PROGRESS = "in_progress"), (e.SUCCESS = "success"), (e.FAILURE = "failure");
        })(t.SyncStatuses || (t.SyncStatuses = {})),
        (function (e) {
          (e.not_in_team = "not_in_team"), (e.proposed = "proposed"), (e.in_team = "in_team");
        })(r || (r = {})),
        (t.B2CPlanFeatures = Object.freeze({
          Premium: "premium",
          Essentials: "essentials",
          Premiumplus: "premiumplus",
          BackupForAll: "backup-for-all"
        })),
        (t.SpaceTiers = Object.freeze({
          Team: "team",
          Business: "business",
          Legacy: "legacy",
          Entreprise: "entreprise",
          Free: "free",
          Starter: "starter"
        })),
        (function (e) {
          (e.Accepted = "accepted"),
            (e.Pending = "pending"),
            (e.Proposed = "proposed"),
            (e.Refused = "refused"),
            (e.Removed = "removed"),
            (e.Revoked = "revoked"),
            (e.Unproposed = "unproposed");
        })(t.SpaceStatus || (t.SpaceStatus = {})),
        (function (e) {
          (e[(e.MP_TO_SSO = 0)] = "MP_TO_SSO"),
            (e[(e.MP_TO_SSO_WITH_INFO = 1)] = "MP_TO_SSO_WITH_INFO"),
            (e[(e.SSO_TO_MP = 2)] = "SSO_TO_MP");
        })(t.SSOMigrationType || (t.SSOMigrationType = {})),
        (function (e) {
          (e.NAME = "name"), (e.DATE = "date");
        })(t.CredentialSearchOrder || (t.CredentialSearchOrder = {}));
    },
    77277: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(20188), t), o(r(59417), t);
    },
    20188: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.passwordGeneratorQueriesSlots = t.passwordGeneratorCommandsSlots = void 0);
      const s = r(71796);
      (t.passwordGeneratorCommandsSlots = {
        generatePassword: (0, s.slot)(),
        generateAndSavePassword: (0, s.slot)(),
        savePasswordGenerationSettings: (0, s.slot)()
      }),
        (t.passwordGeneratorQueriesSlots = { getPasswordGenerationSettings: (0, s.slot)() });
    },
    59417: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    49106: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(54841), t), o(r(77492), t);
    },
    54841: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.paymentsQueriesSlots = t.paymentsCommandsSlots = void 0);
      const s = r(71796);
      (t.paymentsCommandsSlots = {
        cancelAutoRenew: (0, s.slot)(),
        downloadCustomerInvoice: (0, s.slot)(),
        fetchInvoiceList: (0, s.slot)(),
        requestRefund: (0, s.slot)()
      }),
        (t.paymentsQueriesSlots = { getInvoicesCount: (0, s.slot)(), getInvoiceList: (0, s.slot)(), getInvoiceListYears: (0, s.slot)() });
    },
    77492: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.OrderDir = void 0),
        (function (e) {
          (e.ascending = "ascending"), (e.descending = "descending");
        })(t.OrderDir || (t.OrderDir = {}));
    },
    68440: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(53379), t), o(r(84493), t);
    },
    53379: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.protectedItemsUnlockerLiveQueriesSlots = t.protectedItemsUnlockerQueriesSlots = t.protectedItemsUnlockerCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.protectedItemsUnlockerCommandsSlots = { disableCredentialProtection: (0, s.slot)(), unlockProtectedItems: (0, s.slot)() }),
        (t.protectedItemsUnlockerQueriesSlots = { areProtectedItemsUnlocked: (0, s.slot)() }),
        (t.protectedItemsUnlockerLiveQueriesSlots = { liveAreProtectedItemsUnlocked: (0, o.liveSlot)() });
    },
    84493: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DisableCredentialProtectionStatus = t.unlockProtectedItemsWrongPasswordError = t.UnlockProtectedItemsStatus = void 0),
        (function (e) {
          (e.SUCCESS = "success"), (e.ERROR = "error");
        })(t.UnlockProtectedItemsStatus || (t.UnlockProtectedItemsStatus = {})),
        (t.unlockProtectedItemsWrongPasswordError = "WRONG PASSWORD"),
        (function (e) {
          (e.SUCCESS = "success"), (e.ERROR = "error");
        })(t.DisableCredentialProtectionStatus || (t.DisableCredentialProtectionStatus = {}));
    },
    34852: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(36569), t), o(r(6461), t);
    },
    36569: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.recoveryLiveQueriesSlots = t.recoveryQueriesSlots = t.recoveryCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.recoveryCommandsSlots = {
        activateAccountRecovery: (0, s.slot)(),
        setupMasterPasswordForRecovery: (0, s.slot)(),
        deactivateAccountRecovery: (0, s.slot)(),
        registerDeviceForRecovery: (0, s.slot)(),
        startAccountRecovery: (0, s.slot)(),
        sendRecoveryRequest: (0, s.slot)(),
        cancelRecoveryRequest: (0, s.slot)(),
        checkRecoveryRequestStatus: (0, s.slot)(),
        recoverUserData: (0, s.slot)(),
        checkDoesLocalRecoveryKeyExist: (0, s.slot)(),
        isRecoveryRequestPending: (0, s.slot)()
      }),
        (t.recoveryQueriesSlots = {
          getRecoveryOptInSetting: (0, s.slot)(),
          getShouldShowFeatureActivationModal: (0, s.slot)(),
          getAccountRecoveryRequestCount: (0, s.slot)()
        }),
        (t.recoveryLiveQueriesSlots = { liveAccountRecoveryRequestCount: (0, o.liveSlot)() });
    },
    6461: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.RequestStatus = t.RecoveryApiErrorType = void 0),
        (function (e) {
          (e.CheckRecoveryStatusFailed = "CHECK_RECOVERY_STATUS_FAILED"),
            (e.RecoverySetupFailed = "RECOVERY_SETUP_FAILED"),
            (e.RecoveryDeactivationFailed = "RECOVERY_DEACTIVATION_FAILED"),
            (e.RecoveryRequestFailed = "RECOVERY_REQUEST_FAILED"),
            (e.RegisterDeviceFailed = "REGISTER_DEVICE_FAILED"),
            (e.SetupMasterPasswordForRecoveryFailed = "SETUP_MASTERPASSWORD_FOR_RECOVERY_FAILED"),
            (e.CancelRecoveryRequestFailed = "CANCEL_RECOVERY_REQUEST_FAILED"),
            (e.RecoverUserDataFailed = "RECOVER_REQUEST_FAILED"),
            (e.CheckLocalRecoveryKeyFailed = "CHECK_LOCAL_RECOVERY_KEY_FAILED"),
            (e.StartAccountRecoveryFailed = "START_ACCOUNT_RECOVERY_FAILED"),
            (e.AccountRecoveryNotAvailableError = "ACCOUNT_RECOVERY_NOT_AVAILABLE_ERROR"),
            (e.IsRecoveryRequestPendingFailed = "IS_RECOVERY_REQUEST_PENDING_FAILED");
        })(t.RecoveryApiErrorType || (t.RecoveryApiErrorType = {})),
        (function (e) {
          (e.PENDING = "PENDING"),
            (e.APPROVED = "APPROVED"),
            (e.REFUSED = "REFUSED"),
            (e.OVERRIDDEN = "OVERRIDDEN"),
            (e.CANCELED = "CANCELED");
        })(t.RequestStatus || (t.RequestStatus = {}));
    },
    54205: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isPIPersonalWebsiteEvent =
          t.isPIEmailEvent =
          t.isPICompanyEvent =
          t.isPIAddressEvent =
          t.isPIPhoneEvent =
          t.isPIIdentityEvent =
          t.isPersonalInfoEvent =
          t.SaveOrigin =
            void 0),
        (function (e) {
          (e.MANUAL = "MANUAL"),
            (e.MAV_DATACAPTURE = "MAV_DATACAPTURE"),
            (e.MAV_SAVE_CREDENTIAL = "MAV_SAVE_CREDENTIAL"),
            (e.IMPORT = "IMPORT");
        })(t.SaveOrigin || (t.SaveOrigin = {})),
        (t.isPersonalInfoEvent = function (e) {
          return ["KWCompany", "KWEmail", "KWPersonalWebsite", "KWIdentity", "KWAddress", "KWPhone"].some(
            (t) => Boolean(e) && e.kwType === t
          );
        }),
        (t.isPIIdentityEvent = function (e) {
          return Boolean(e) && "KWIdentity" === e.kwType;
        }),
        (t.isPIPhoneEvent = function (e) {
          return Boolean(e) && "KWPhone" === e.kwType;
        }),
        (t.isPIAddressEvent = function (e) {
          return Boolean(e) && "KWAddress" === e.kwType;
        }),
        (t.isPICompanyEvent = function (e) {
          return Boolean(e) && "KWCompany" === e.kwType;
        }),
        (t.isPIEmailEvent = function (e) {
          return Boolean(e) && "KWEmail" === e.kwType;
        }),
        (t.isPIPersonalWebsiteEvent = function (e) {
          return Boolean(e) && "KWPersonalWebsite" === e.kwType;
        });
    },
    19635: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(54205), t);
    },
    12891: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    99714: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.UpdateSharingPermissionFailureReason =
          t.RevokeSharingFailureReason =
          t.SharingResponseStatus =
          t.ShareItemFailureReason =
          t.isGroupRecipient =
          t.isUserRecipient =
            void 0),
        (t.isUserRecipient = function (e) {
          return Boolean(e) && "user" === e.type;
        }),
        (t.isGroupRecipient = function (e) {
          return Boolean(e) && "userGroup" === e.type;
        }),
        (function (e) {
          (e[(e.ITEM_DOESNT_EXIST = 0)] = "ITEM_DOESNT_EXIST"),
            (e[(e.LIMIT_EXCEEDED = 1)] = "LIMIT_EXCEEDED"),
            (e[(e.ITEM_HAS_ATTACHMENTS = 2)] = "ITEM_HAS_ATTACHMENTS"),
            (e[(e.SHARING_FAILED = 3)] = "SHARING_FAILED");
        })(t.ShareItemFailureReason || (t.ShareItemFailureReason = {})),
        (function (e) {
          (e[(e.Accept = 0)] = "Accept"), (e[(e.Refuse = 1)] = "Refuse");
        })(t.SharingResponseStatus || (t.SharingResponseStatus = {})),
        (function (e) {
          (e[(e.FORBIDDEN = 0)] = "FORBIDDEN"), (e[(e.NOT_FOUND = 1)] = "NOT_FOUND"), (e[(e.REVOKE_FAILED = 2)] = "REVOKE_FAILED");
        })(t.RevokeSharingFailureReason || (t.RevokeSharingFailureReason = {})),
        (function (e) {
          (e[(e.FORBIDDEN = 0)] = "FORBIDDEN"), (e[(e.NOT_FOUND = 1)] = "NOT_FOUND"), (e[(e.UPDATE_FAILED = 2)] = "UPDATE_FAILED");
        })(t.UpdateSharingPermissionFailureReason || (t.UpdateSharingPermissionFailureReason = {}));
    },
    18497: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    59296: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    82130: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(59296), t), o(r(18497), t), o(r(99714), t);
    },
    31525: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(82130), t), o(r(57926), t), o(r(75841), t);
    },
    57926: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.sharingCommandsSlots = t.sharingLiveQueriesSlots = t.sharingQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.sharingQueriesSlots = {
        getAllSharedItemIds: (0, s.slot)(),
        getMyAcceptedItemGroupUserMembers: (0, s.slot)(),
        getMyAcceptedUserGroups: (0, s.slot)(),
        getSharingCapacity: (0, s.slot)(),
        isAllowedToShare: (0, s.slot)(),
        getUserGroups: (0, s.slot)(),
        getUserGroup: (0, s.slot)(),
        getUserGroupPermissionLevel: (0, s.slot)(),
        getUserGroupMembers: (0, s.slot)(),
        getSharingUsers: (0, s.slot)(),
        getSharingUserPermissionLevel: (0, s.slot)()
      }),
        (t.sharingLiveQueriesSlots = {
          liveAllSharedItemIds: (0, o.liveSlot)(),
          liveMyAcceptedItemGroupUserMembers: (0, o.liveSlot)(),
          liveMyAcceptedUserGroups: (0, o.liveSlot)(),
          liveSharingCapacity: (0, o.liveSlot)(),
          liveUserGroups: (0, o.liveSlot)(),
          liveUserGroupPermissionLevel: (0, o.liveSlot)(),
          liveSharingUsers: (0, o.liveSlot)(),
          liveSharingUserPermissionLevel: (0, o.liveSlot)()
        }),
        (t.sharingCommandsSlots = { convertItemToDashlaneXml: (0, s.slot)(), shareItem: (0, s.slot)() });
    },
    75841: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    58575: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    84470: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    74226: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    60292: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.StaticDataQueryType = void 0),
        (function (e) {
          (e[(e.CALLING_CODES = 0)] = "CALLING_CODES"), (e[(e.GEOGRAPHIC_STATES = 1)] = "GEOGRAPHIC_STATES");
        })(t.StaticDataQueryType || (t.StaticDataQueryType = {}));
    },
    58462: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.GeographicStateLevel = void 0),
        (function (e) {
          (e[(e.LEVEL_0 = 0)] = "LEVEL_0"), (e[(e.LEVEL_1 = 1)] = "LEVEL_1");
        })(t.GeographicStateLevel || (t.GeographicStateLevel = {}));
    },
    98655: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.StaticDataQueryType = void 0);
      var n = r(60292);
      Object.defineProperty(t, "StaticDataQueryType", {
        enumerable: !0,
        get: function () {
          return n.StaticDataQueryType;
        }
      }),
        o(r(74226), t),
        o(r(58462), t),
        o(r(35324), t),
        o(r(78017), t);
    },
    78017: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.staticDataQueriesSlots = void 0);
      const s = r(71796);
      t.staticDataQueriesSlots = {
        getAllBanks: (0, s.slot)(),
        getAllCallingCodes: (0, s.slot)(),
        getBanks: (0, s.slot)(),
        getSecureDocumentsExtensionsList: (0, s.slot)()
      };
    },
    35324: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    1659: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    9987: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(84797), t), o(r(77030), t);
    },
    84797: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.teamCommandsSlots = t.teamQueriesSlots = void 0);
      const s = r(71796);
      (t.teamQueriesSlots = { getIsRecoveryEnabled: (0, s.slot)() }),
        (t.teamCommandsSlots = {
          getTeamInfo: (0, s.slot)(),
          getMidCycleTierUpgradePrice: (0, s.slot)(),
          getExpectedTaxInformation: (0, s.slot)(),
          changeTierMidCycle: (0, s.slot)(),
          computePlanPricing: (0, s.slot)(),
          addSeats: (0, s.slot)()
        });
    },
    77030: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.AddSeatsErrorType =
          t.ComputePlanPricingErrorType =
          t.ChangeTierMidCycleErrorType =
          t.GetExpectedTaxInformationErrorType =
          t.GetMidCycleTierUpgradePriceErrorType =
            void 0);
      !(function (e) {
        e.GetMidCycleTierUpgradePriceFailed = "GET_MID_CYCLE_TIER_UPGRADE_PRICE_FAILED";
      })(t.GetMidCycleTierUpgradePriceErrorType || (t.GetMidCycleTierUpgradePriceErrorType = {})),
        (function (e) {
          e.GetExpectedTaxInformationFailed = "GET_EXPECTED_TAX_INFORMATION_FAILED";
        })(t.GetExpectedTaxInformationErrorType || (t.GetExpectedTaxInformationErrorType = {})),
        (function (e) {
          (e.ChangeTierMidCycleFailed = "CHANGE_TIER_MID_CYCLE_FAILED"),
            (e.PaymentMeanIsNotCreditcard = "PAYMENT_MEAN_IS_NOT_CREDITCARD"),
            (e.CurrentPlanStartDateInFuture = "CURRENT_PLAN_START_DATE_IN_FUTURE"),
            (e.ChangeTierMidCycleError = "CHANGE_TIER_MID_CYCLE_ERROR"),
            (e.PaymentMeanIsNotInvoice = "PAYMENT_MEAN_IS_NOT_INVOICE"),
            (e.ChangeTierAmountTooExpensive = "CHANGE_TIER_AMOUNT_TOO_EXPENSIVE"),
            (e.ErrorCalculatingTierChangeDiscount = "ERROR_CALCULATING_TIER_CHANGE_DISCOUNT"),
            (e.InsufficientAmount = "INSUFFICIENT_AMOUNT"),
            (e.AssignedPlanSameTierAsCurrentPlan = "ASSIGNED_PLAN_SAME_TIER_AS_CURRENT_PLAN"),
            (e.SalesTaxMismatch = "SALES_TAX_MISMATCH"),
            (e.NotBillingAdmin = "NOT_BILLING_ADMIN");
        })(t.ChangeTierMidCycleErrorType || (t.ChangeTierMidCycleErrorType = {})),
        (function (e) {
          (e.ComputePlanPricingFailed = "COMPUTE_PLAN_PRICING_FAILED"), (e.NotBillingAdmin = "NOT_BILLING_ADMIN");
        })(t.ComputePlanPricingErrorType || (t.ComputePlanPricingErrorType = {})),
        (function (e) {
          (e.AddSeatsFailed = "ADD_SEATS_FAILED"),
            (e.CannotAddSeatDuringFreeTrial = "CANNOT_ADD_SEAT_DURING_FREE_TRIAL"),
            (e.CannotAddSeatDuringGracePeriod = "CANNOT_ADD_SEAT_DURING_GRACE_PERIOD"),
            (e.UnsupportedPaymentMean = "UNSUPPORTED_PAYMENT_MEAN"),
            (e.NotBillingAdmin = "NOT_BILLING_ADMIN"),
            (e.PaymentFailed = "PAYMENT_FAILED");
        })(t.AddSeatsErrorType || (t.AddSeatsErrorType = {}));
    },
    83891: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.GetAuditLogQueryResultsState = t.ApiAuditLogsErrorType = void 0),
        (function (e) {
          (e.StartAuditLogsQueryFailed = "START_AUDIT_LOGS_QUERY_FAILED"),
            (e.GetAuditLogQueryResultsFailed = "GET_AUDIT_LOG_QUERY_RESULTS_FAILED");
        })(t.ApiAuditLogsErrorType || (t.ApiAuditLogsErrorType = {})),
        (function (e) {
          (e.Queued = "QUEUED"), (e.Running = "RUNNING"), (e.Succeeded = "SUCCEEDED"), (e.Failed = "FAILED"), (e.Cancelled = "CANCELLED");
        })(t.GetAuditLogQueryResultsState || (t.GetAuditLogQueryResultsState = {}));
    },
    76198: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.TeamDevicePlatform = void 0),
        (function (e) {
          (e.SSO_CONNECTOR = "sso_connector"), (e.ENCRYPTION_SERVICE = "encryption_service"), (e.NITRO = "nitro_encryption_service");
        })(t.TeamDevicePlatform || (t.TeamDevicePlatform = {}));
    },
    56254: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    31197: (e, t) => {
      var r;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DomainStatus = t.DomainStatusResponse = void 0),
        (function (e) {
          (e.pending = "pending"), (e.valid = "valid"), (e.expired = "expired"), (e.invalid = "invalid");
        })((r = t.DomainStatusResponse || (t.DomainStatusResponse = {}))),
        (t.DomainStatus = r);
    },
    62236: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.EncryptionServiceRestartStatusCodes = void 0),
        (function (e) {
          (e.OK = "OK"),
            (e.ES_UNREACHABLE = "ES_UNREACHABLE"),
            (e.ES_CONFIG_RELOAD_FAILURE = "ES_CONFIG_RELOAD_FAILURE"),
            (e.ES_INTERNAL_NETWORK_ERROR = "ES_INTERNAL_NETWORK_ERROR");
        })(t.EncryptionServiceRestartStatusCodes || (t.EncryptionServiceRestartStatusCodes = {}));
    },
    59226: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DomainNotValidForTeam =
          t.DomainContainsNonTeamUsers =
          t.InvalidPublicDomain =
          t.DomainAlreadyExists =
          t.TeamDoesNotExist =
          t.ServerError =
          t.InsufficientTier =
          t.TeamDeviceEncryptedConfigNotFound =
          t.InvalidTeamDeviceLogin =
          t.InvalidRequestError =
          t.DeviceAccountMappingAlreadyExists =
          t.DeviceKeyNotFound =
          t.UnknownTeamAdminError =
          t.NotAdmin =
          t.DeactivatedTeamDevice =
          t.BasicConfigNotFound =
            void 0),
        (t.BasicConfigNotFound = "BASIC_CONFIGURATION_NOT_FOUND"),
        (t.DeactivatedTeamDevice = "DEACTIVATED_TEAM_DEVICE"),
        (t.NotAdmin = "NOT_ADMIN"),
        (t.UnknownTeamAdminError = "UNKNOWN_ERROR"),
        (t.DeviceKeyNotFound = "DEVICE_KEY_NOT_FOUND"),
        (t.DeviceAccountMappingAlreadyExists = "DEVICE_ACCOUNT_MAPPING_ALREADY_EXISTS"),
        (t.InvalidRequestError = "invalid_request_error"),
        (t.InvalidTeamDeviceLogin = "INVALID_TEAM_DEVICE_LOGIN"),
        (t.TeamDeviceEncryptedConfigNotFound = "TEAM_DEVICE_CONFIGURATION_NOT_FOUND"),
        (t.InsufficientTier = "INSUFFICIENT_TIER"),
        (t.ServerError = "server_error"),
        (t.TeamDoesNotExist = "TEAM_DOES_NOT_EXIST"),
        (t.DomainAlreadyExists = "DOMAIN_ALREADY_EXISTS"),
        (t.InvalidPublicDomain = "INVALID_PUBLIC_DOMAIN"),
        (t.DomainContainsNonTeamUsers = "DOMAIN_CONTAINS_EXISTING_NONTEAM_USERS"),
        (t.DomainNotValidForTeam = "DOMAIN_NOT_VALID_FOR_TEAM");
    },
    57369: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.UnknownTeamAdminError = t.TeamDeviceEncryptedConfigNotFound = void 0);
      var n = r(59226);
      Object.defineProperty(t, "TeamDeviceEncryptedConfigNotFound", {
        enumerable: !0,
        get: function () {
          return n.TeamDeviceEncryptedConfigNotFound;
        }
      }),
        Object.defineProperty(t, "UnknownTeamAdminError", {
          enumerable: !0,
          get: function () {
            return n.UnknownTeamAdminError;
          }
        }),
        o(r(9825), t),
        o(r(83891), t),
        o(r(76198), t),
        o(r(56254), t),
        o(r(31197), t),
        o(r(62236), t),
        o(r(36471), t),
        o(r(34059), t),
        o(r(17023), t),
        o(r(21310), t),
        o(r(15770), t),
        o(r(10434), t);
    },
    36471: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.InviteLinkResponseErrorCode = void 0),
        (function (e) {
          (e.NotAdmin = "not_admin"),
            (e.TeamKeyNotFound = "TEAM_KEY_NOT_FOUND"),
            (e.InviteLinkNotFound = "TEAM_INVITE_LINK_NOT_FOUND"),
            (e.UserInviteLinkNotFound = "USER_TEAM_INVITE_TOKEN_NOT_FOUND");
        })(t.InviteLinkResponseErrorCode || (t.InviteLinkResponseErrorCode = {}));
    },
    34059: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.GetRecoveryCodesAsTeamCaptainErrorCode = void 0),
        (function (e) {
          (e.NotAdmin = "not_billing_admin"), (e.InternalError = "internal_error"), (e.UnknownError = "UNKNOWN_ERROR");
        })(t.GetRecoveryCodesAsTeamCaptainErrorCode || (t.GetRecoveryCodesAsTeamCaptainErrorCode = {}));
    },
    17023: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.IDPMetadataParseErrors = t.IDPXmlParseErrors = void 0),
        (function (e) {
          e.XML_PARSE_FAILED = "xml_parse_failed";
        })(t.IDPXmlParseErrors || (t.IDPXmlParseErrors = {})),
        (function (e) {
          (e.KEY_DESCRIPTOR_NOT_FOUND = "key_descriptor_not_found"),
            (e.IDP_ENTRYPOINT_NOT_FOUND = "idp_entrypoint_not_found"),
            (e.INVALID_IDP_SSO_DESCRIPTOR = "invalid_idp_sso_descriptor"),
            (e.MISSING_CERTIFICATE = "missing_certificate"),
            (e.MULTIPLE_CERTIFICATES = "multiple_certificates"),
            (e.CERTIFICATE_TOO_SHORT = "certificate_too_short"),
            (e.CERTIFICATE_TOO_LONG = "certificate_too_long "),
            (e.CERTIFICATE_DECODE_FAILED = "certificate_decode_failed"),
            (e.INVALID_ENTRYPOINT = "invalid_entrypoint");
        })(t.IDPMetadataParseErrors || (t.IDPMetadataParseErrors = {}));
    },
    21310: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    10434: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.teamAdminCommandsSlots = t.teamAdminLiveQueriesSlots = t.teamAdminQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.teamAdminQueriesSlots = {
        getAdministrableUserGroup: (0, s.slot)(),
        getAdministrableUserGroups: (0, s.slot)(),
        isGroupNameAvailable: (0, s.slot)(),
        getAdminProvisioningKey: (0, s.slot)()
      }),
        (t.teamAdminLiveQueriesSlots = {
          liveAdministrableUserGroup: (0, o.liveSlot)(),
          liveAdministrableUserGroups: (0, o.liveSlot)(),
          liveAdminProvisioningKey: (0, o.liveSlot)()
        }),
        (t.teamAdminCommandsSlots = {
          registerTeamDomain: (0, s.slot)(),
          completeTeamDomainRegistration: (0, s.slot)(),
          deactivateTeamDomain: (0, s.slot)(),
          getTeamDomains: (0, s.slot)(),
          getTeamDevice: (0, s.slot)(),
          listTeamDevices: (0, s.slot)(),
          deactivateTeamDevice: (0, s.slot)(),
          registerTeamDevice: (0, s.slot)(),
          registerTeamDeviceAccount: (0, s.slot)(),
          getEncryptionServiceConfig: (0, s.slot)(),
          generateAndSaveEncryptionServiceConfig: (0, s.slot)(),
          clearSelfHostedESSettings: (0, s.slot)(),
          getTeamDeviceEncryptedConfig: (0, s.slot)(),
          updateTeamDeviceEncryptedConfig: (0, s.slot)(),
          updateTeamSettings: (0, s.slot)(),
          parseMetadataFields: (0, s.slot)(),
          persistAdminProvisioningKey: (0, s.slot)(),
          removeAdminProvisioningKey: (0, s.slot)(),
          createSSOConnectorConfig: (0, s.slot)(),
          generateSSOConnectorKey: (0, s.slot)(),
          startAuditLogsQuery: (0, s.slot)(),
          getAuditLogQueryResults: (0, s.slot)(),
          getRecoveryCodesAsTeamCaptain: (0, s.slot)(),
          createInviteLink: (0, s.slot)(),
          changeInviteLinkTeamKey: (0, s.slot)(),
          toggleInviteLink: (0, s.slot)(),
          getInviteLink: (0, s.slot)(),
          requestInviteLinkToken: (0, s.slot)(),
          getInviteLinkForAdmin: (0, s.slot)(),
          getLastADSyncDate: (0, s.slot)(),
          getSpecialUserGroupInviteValuesForMemberInTeam: (0, s.slot)(),
          getSpecialUserGroupRevision: (0, s.slot)()
        });
    },
    15770: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    9825: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.TeamMemberSSOStatus = void 0),
        (function (e) {
          (e.Activated = "activated"), (e.PendingActivation = "pending_activation"), (e.PendingDeactivation = "pending_deactivation");
        })(t.TeamMemberSSOStatus || (t.TeamMemberSSOStatus = {}));
    },
    22162: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(62485), t), o(r(86174), t);
    },
    62485: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.UserMessageTypes = void 0),
        (function (e) {
          (e.DEFAULT = "default"),
            (e.TRIAL_EXPIRED = "trial_expired"),
            (e.WEB_STORE = "web_store"),
            (e.DASHBOARD_UPRADE = "dashboard_upgrade"),
            (e.SHARING_CENTER_FAMILY = "sharing_center_family"),
            (e.SHARING_CENTER_WORK = "sharing_center_work");
        })(t.UserMessageTypes || (t.UserMessageTypes = {}));
    },
    86174: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.userMessagesCommandsSlots = t.userMessagesLiveQueriesSlots = t.userMessagesQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.userMessagesQueriesSlots = { getVisibleUserMessages: (0, s.slot)(), getUserMessages: (0, s.slot)() }),
        (t.userMessagesLiveQueriesSlots = { liveUserMessages: (0, o.liveSlot)(), liveVisibleUserMessages: (0, o.liveSlot)() }),
        (t.userMessagesCommandsSlots = { dismissUserMessages: (0, s.slot)(), addUserMessage: (0, s.slot)() });
    },
    31955: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(73955), t), o(r(25625), t);
    },
    73955: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.VpnDisabledReason = t.VpnAccountActivationErrorType = t.VpnAccountStatusType = void 0),
        (function (e) {
          (e.Activated = "Activated"), (e.Activating = "Activating"), (e.Error = "Error"), (e.NotFound = "NotFound"), (e.Ready = "Ready");
        })(t.VpnAccountStatusType || (t.VpnAccountStatusType = {})),
        (function (e) {
          (e.ServerError = "ServerError"), (e.AccountAlreadyExistError = "AccountAlreadyExist");
        })(t.VpnAccountActivationErrorType || (t.VpnAccountActivationErrorType = {})),
        (function (e) {
          (e.InTeam = "InTeam"), (e.NotPremium = "NotPremium"), (e.NoPayment = "NoPayment"), (e.Other = "Other");
        })(t.VpnDisabledReason || (t.VpnDisabledReason = {}));
    },
    25625: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.vpnCommandsSlots = t.vpnLiveQueriesSlots = t.vpnQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.vpnQueriesSlots = { getVpnAccount: (0, s.slot)(), getVpnCapabilitySetting: (0, s.slot)() }),
        (t.vpnLiveQueriesSlots = { liveVpnAccount: (0, o.liveSlot)() }),
        (t.vpnCommandsSlots = {
          activateVpnAccount: (0, s.slot)(),
          clearVpnAccountErrors: (0, s.slot)(),
          completeVpnAccountActivation: (0, s.slot)()
        });
    },
    13006: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
      const s = r(90693),
        o = r(97494),
        n = r(78924),
        i = r(56999),
        a = r(37284),
        c = r(65741),
        l = r(78536),
        d = r(29597),
        u = r(92137);
      s.taskTrackingApi,
        o.activityLogsApi,
        n.vaultItemsCrudApi,
        l.AuthenticationFlowContracts.authenticationFlowApi,
        l.DeviceTransferContracts.deviceTransferApi,
        d.sessionApi,
        u.masterPasswordSecurityApi,
        a.passwordHealthApi,
        c.carbonLegacyApi,
        d.changeMasterPasswordApi,
        i.sharingCollectionsApi,
        i.sharingInvitesApi,
        n.vaultOrganizationApi,
        s.featureFlipsApi,
        s.webServicesApi;
    },
    65741: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.carbonLegacyApi = void 0);
      const s = r(90693),
        o = r(99765),
        n = r(70314),
        i = r(78515);
      t.carbonLegacyApi = (0, s.defineModuleApi)({ name: "carbon-legacy", commands: o.commands, queries: i.queries, events: n.events });
    },
    49420: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.CarbonLegacyClient = void 0);
      const s = r(90693),
        o = r(65741);
      class n extends (0, s.defineModuleClient)(o.carbonLegacyApi) {}
      (t.CarbonLegacyClient = n), (0, s.registerModuleClient)(o.carbonLegacyApi, n);
    },
    99765: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.commands =
          t.commandsFromCarbonAPI =
          t.MitigationDeleteGrapheneUserDataCommand =
          t.CarbonLegacyLeelooCommand =
          t.CarbonCommand =
            void 0);
      const s = r(90693),
        o = r(72345),
        n = r(16229);
      class i extends (0, s.defineCarbonCommand)({ scope: s.UseCaseScope.Device }) {}
      t.CarbonCommand = i;
      class a extends (0, s.defineCarbonCommand)({ scope: s.UseCaseScope.Device }) {}
      t.CarbonLegacyLeelooCommand = a;
      class c extends (0, s.defineCommand)({ scope: s.UseCaseScope.Device }) {}
      (t.MitigationDeleteGrapheneUserDataCommand = c),
        (t.commandsFromCarbonAPI = (0, n.createCommandContractsFromConnector)(o.carbonCommandsSlots)),
        (t.commands = {
          ...t.commandsFromCarbonAPI,
          CarbonCommand: i,
          CarbonLegacyLeelooCommand: a,
          MitigationDeleteGrapheneUserDataCommand: c
        });
    },
    70314: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.events = t.CarbonLegacyDeviceRemotelyDeleted = t.CarbonLegacyEvent = t.CarbonCommandResultEvent = void 0);
      const s = r(90693);
      class o extends (0, s.defineEvent)({ scope: s.UseCaseScope.Device }) {}
      t.CarbonCommandResultEvent = o;
      class n extends (0, s.defineEvent)({ scope: s.UseCaseScope.Device }) {}
      t.CarbonLegacyEvent = n;
      class i extends (0, s.defineEvent)({ scope: s.UseCaseScope.Device }) {}
      (t.CarbonLegacyDeviceRemotelyDeleted = i),
        (t.events = { CarbonCommandResultEvent: o, CarbonLegacyEvent: n, CarbonLegacyDeviceRemotelyDeleted: i });
    },
    78515: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.queries = t.queriesFromCarbonAPI = t.CarbonStateListQuery = t.CarbonStateQuery = void 0);
      const s = r(90693),
        o = r(72345),
        n = r(16229);
      class i extends (0, s.defineQuery)({ scope: s.UseCaseScope.Device }) {}
      t.CarbonStateQuery = i;
      class a extends (0, s.defineQuery)({ scope: s.UseCaseScope.Device }) {}
      (t.CarbonStateListQuery = a),
        (t.queriesFromCarbonAPI = (0, n.createQueryContractsFromConnectors)(o.carbonQueriesSlots, o.carbonLiveQueriesSlots)),
        (t.queries = { ...t.queriesFromCarbonAPI, CarbonStateQuery: i, CarbonStateListQuery: a });
    },
    83496: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(78515), t),
        o(r(70314), t),
        o(r(99765), t),
        o(r(76931), t),
        o(r(65741), t),
        o(r(49420), t);
    },
    16229: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.createQueryContractsFromConnectors = t.createCommandContractsFromConnector = void 0);
      const s = r(90693);
      (t.createCommandContractsFromConnector = function (e) {
        return Object.keys(e).reduce(
          (e, t) => ({
            ...e,
            [`${t[0].toUpperCase().concat(t.substring(1))}Command`]: (0, s.defineCarbonCommand)({ scope: s.UseCaseScope.Device })
          }),
          {}
        );
      }),
        (t.createQueryContractsFromConnectors = function (e, t) {
          return [...Object.keys(e), ...Object.keys(t)].reduce(
            (e, t) => ({
              ...e,
              [`${t[0].toUpperCase().concat(t.substring(1))}Query`]: (0, s.defineQuery)({ scope: s.UseCaseScope.Device })
            }),
            {}
          );
        });
    },
    76931: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.LEGACY_CARBON_LEELOO_USED_COMMANDS = void 0);
      t.LEGACY_CARBON_LEELOO_USED_COMMANDS = [
        "lockSession",
        "closeSession",
        "cancelDashlaneAuthenticatorRegistration",
        "openSession",
        "openSessionWithMasterPassword",
        "openSessionWithDashlaneAuthenticator",
        "openSessionWithExtraDeviceToken",
        "openSessionWithOTP",
        "openSessionWithOTPForNewDevice",
        "openSessionWithToken",
        "openSessionResendToken",
        "removePersonalDataItem",
        "savePersonalDataItem",
        "sessionForceSync",
        "getLocalAccountsList"
      ];
    },
    37988: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.bankAccountCommandsSlots = t.bankAccountLiveQueriesSlots = t.bankAccountQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.bankAccountQueriesSlots = { getBankAccount: (0, s.slot)(), getBankAccounts: (0, s.slot)() }),
        (t.bankAccountLiveQueriesSlots = { liveBankAccount: (0, o.liveSlot)(), liveBankAccounts: (0, o.liveSlot)() }),
        (t.bankAccountCommandsSlots = {
          addBankAccount: (0, s.slot)(),
          updateBankAccount: (0, s.slot)(),
          deleteBankAccount: (0, s.slot)()
        });
    },
    23446: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(37988), t), o(r(5865), t);
    },
    5865: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.UpdateBankAccountResultErrorCode = t.AddBankAccountResultErrorCode = t.DeleteBankAccountErrorCode = void 0),
        (function (e) {
          (e[(e.NOT_AUTHORIZED = 0)] = "NOT_AUTHORIZED"),
            (e[(e.NOT_FOUND = 1)] = "NOT_FOUND"),
            (e[(e.INTERNAL_ERROR = 2)] = "INTERNAL_ERROR");
        })(t.DeleteBankAccountErrorCode || (t.DeleteBankAccountErrorCode = {})),
        (function (e) {
          e.EMPTY_BIC_AND_IBAN = "EMPTY_BIC_AND_IBAN";
        })(t.AddBankAccountResultErrorCode || (t.AddBankAccountResultErrorCode = {})),
        (function (e) {
          e.EMPTY_BIC_AND_IBAN = "EMPTY_BIC_AND_IBAN";
        })(t.UpdateBankAccountResultErrorCode || (t.UpdateBankAccountResultErrorCode = {}));
    },
    85530: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.breachesCommandsSlots = t.breachesLiveQueriesSlots = t.breachesQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.breachesQueriesSlots = {
        getBreach: (0, s.slot)(),
        getBreaches: (0, s.slot)(),
        getBreachesPage: (0, s.slot)(),
        getBreachesPaginationToken: (0, s.slot)(),
        getBreachesUpdateStatus: (0, s.slot)()
      }),
        (t.breachesLiveQueriesSlots = {
          liveBreach: (0, o.liveSlot)(),
          liveBreaches: (0, o.liveSlot)(),
          liveBreachesBatch: (0, o.liveSlot)(),
          liveBreachesUpdaterStatus: (0, o.liveSlot)()
        }),
        (t.breachesCommandsSlots = { updateBreachStatus: (0, s.slot)() });
    },
    59870: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(85530), t), o(r(56476), t);
    },
    56476: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.BreachesUpdaterStatus = t.BreachLeakedDataType = void 0),
        (function (e) {
          (e.Username = "username"),
            (e.Password = "password"),
            (e.Email = "email"),
            (e.CreditCard = "creditcard"),
            (e.Phone = "phone"),
            (e.Address = "address"),
            (e.SSN = "ssn"),
            (e.IP = "ip"),
            (e.Location = "geolocation"),
            (e.PersonalInfo = "personalinfo"),
            (e.SocialNetwork = "social");
        })(t.BreachLeakedDataType || (t.BreachLeakedDataType = {})),
        (function (e) {
          (e.UNKNOWN = "unknown"),
            (e.SYNCING = "syncing"),
            (e.SKIPPED = "skipped"),
            (e.UNCHANGED = "unchanged"),
            (e.UPDATED = "updated"),
            (e.ERROR = "error");
        })(t.BreachesUpdaterStatus || (t.BreachesUpdaterStatus = {}));
    },
    21528: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.collectionsCommandsSlots = void 0);
      const s = r(71796);
      t.collectionsCommandsSlots = {
        addCollection: (0, s.slot)(),
        deleteCollection: (0, s.slot)(),
        removeItemsFromCollections: (0, s.slot)(),
        updateCollection: (0, s.slot)()
      };
    },
    23328: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(21528), t), o(r(2868), t);
    },
    2868: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    40466: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(95331), t), o(r(347), t);
    },
    95331: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.credentialsLiveQueriesSlots = t.credentialsQueriesSlots = t.credentialsCommandsSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.credentialsCommandsSlots = {
        addCredential: (0, s.slot)(),
        deleteCredential: (0, s.slot)(),
        deleteCredentialsInBulk: (0, s.slot)(),
        updateCredential: (0, s.slot)(),
        updateLinkedWebsites: (0, s.slot)()
      }),
        (t.credentialsQueriesSlots = {
          canUserAddNewCredential: (0, s.slot)(),
          getCredential: (0, s.slot)(),
          getCredentialCategories: (0, s.slot)(),
          getCredentials: (0, s.slot)(),
          getCredentialsByDomain: (0, s.slot)(),
          getCredentialsCount: (0, s.slot)(),
          getCredentialLimitStatus: (0, s.slot)(),
          getCredentialsPage: (0, s.slot)(),
          getCredentialsPaginationToken: (0, s.slot)(),
          getDashlaneDefinedLinkedWebsites: (0, s.slot)(),
          getShouldShowRequireMasterPassword: (0, s.slot)()
        }),
        (t.credentialsLiveQueriesSlots = {
          liveCanUserAddNewCredential: (0, o.liveSlot)(),
          liveCredential: (0, o.liveSlot)(),
          liveCredentials: (0, o.liveSlot)(),
          liveCredentialsByDomain: (0, o.liveSlot)(),
          liveCredentialsBatch: (0, o.liveSlot)(),
          liveCredentialsCount: (0, o.liveSlot)(),
          liveCredentialLimitStatus: (0, o.liveSlot)()
        });
    },
    347: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.CredentialLimitStatus = void 0),
        (function (e) {
          (e.Unlimited = "unlimited"), (e.UnderLimit = "underLimit"), (e.NearLimit = "nearLimit"), (e.AtOrAboveLimit = "atOrAboveLimit");
        })(t.CredentialLimitStatus || (t.CredentialLimitStatus = {}));
    },
    55552: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.exportCommandsSlots = t.exportQueriesSlots = void 0);
      const s = r(71796);
      (t.exportQueriesSlots = { getIsForcedDomainsEnabled: (0, s.slot)() }),
        (t.exportCommandsSlots = { getPersonalDataExport: (0, s.slot)() });
    },
    10362: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(55552), t), o(r(82), t);
    },
    82: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.GetPersonalDataExportErrorMessage = void 0);
      !(function (e) {
        (e.UNSUPPORTED_DATATYPE_ERROR = "Unsupported Data Export Type"), (e.UNDEFINED_PASSWORD_ERROR = "Undefined Password");
      })(t.GetPersonalDataExportErrorMessage || (t.GetPersonalDataExportErrorMessage = {}));
    },
    86575: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.generatedPasswordsCommandsSlots = t.generatedPasswordsLiveQueriesSlots = t.generatedPasswordsQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.generatedPasswordsQueriesSlots = {
        getGeneratedPassword: (0, s.slot)(),
        getGeneratedPasswordsCount: (0, s.slot)(),
        getGeneratedPasswords: (0, s.slot)(),
        getGeneratedPasswordsPage: (0, s.slot)(),
        getGeneratedPasswordsPaginationToken: (0, s.slot)()
      }),
        (t.generatedPasswordsLiveQueriesSlots = {
          liveGeneratedPasswordsCount: (0, o.liveSlot)(),
          liveGeneratedPasswords: (0, o.liveSlot)()
        }),
        (t.generatedPasswordsCommandsSlots = { saveGeneratedPassword: (0, s.slot)() });
    },
    20703: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(86575), t), o(r(99308), t);
    },
    99308: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    25632: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.driverLicensesCommandsSlots = t.driverLicensesLiveQueriesSlots = t.driverLicensesQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.driverLicensesQueriesSlots = { getDriverLicense: (0, s.slot)(), getDriverLicenses: (0, s.slot)() }),
        (t.driverLicensesLiveQueriesSlots = { liveDriverLicense: (0, o.liveSlot)(), liveDriverLicenses: (0, o.liveSlot)() }),
        (t.driverLicensesCommandsSlots = {
          addDriverLicense: (0, s.slot)(),
          editDriverLicense: (0, s.slot)(),
          deleteDriverLicense: (0, s.slot)()
        });
    },
    57155: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(25632), t), o(r(93910), t);
    },
    93910: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    65671: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.fiscalsIdCommandsSlots = t.fiscalIdsLiveQueriesSlots = t.fiscalIdsQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.fiscalIdsQueriesSlots = { getFiscalId: (0, s.slot)(), getFiscalIds: (0, s.slot)() }),
        (t.fiscalIdsLiveQueriesSlots = { liveFiscalId: (0, o.liveSlot)(), liveFiscalIds: (0, o.liveSlot)() }),
        (t.fiscalsIdCommandsSlots = { addFiscalId: (0, s.slot)(), editFiscalId: (0, s.slot)(), deleteFiscalId: (0, s.slot)() });
    },
    49258: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(65671), t), o(r(83059), t);
    },
    83059: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    90232: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.idCardsCommandsSlots = t.idCardsLiveQueriesSlots = t.idCardsQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.idCardsQueriesSlots = { getIdCard: (0, s.slot)(), getIdCards: (0, s.slot)() }),
        (t.idCardsLiveQueriesSlots = { liveIdCard: (0, o.liveSlot)(), liveIdCards: (0, o.liveSlot)() }),
        (t.idCardsCommandsSlots = { addIdCard: (0, s.slot)(), editIdCard: (0, s.slot)(), deleteIdCard: (0, s.slot)() });
    },
    13538: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(90232), t), o(r(26328), t);
    },
    26328: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    61470: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(16281), t),
        o(r(57155), t),
        o(r(49258), t),
        o(r(13538), t),
        o(r(73758), t),
        o(r(74847), t),
        o(r(68955), t);
    },
    73758: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(4922), t), o(r(86924), t);
    },
    4922: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.passportsCommandsSlots = t.passportsLiveQueriesSlots = t.passportsQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.passportsQueriesSlots = { getPassport: (0, s.slot)(), getPassports: (0, s.slot)() }),
        (t.passportsLiveQueriesSlots = { livePassport: (0, o.liveSlot)(), livePassports: (0, o.liveSlot)() }),
        (t.passportsCommandsSlots = { addPassport: (0, s.slot)(), editPassport: (0, s.slot)(), deletePassport: (0, s.slot)() });
    },
    86924: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    16281: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.idsCommandsSlots = t.idsLiveQueriesSlots = t.idsQueriesSlots = void 0);
      const s = r(71796),
        o = r(57155),
        n = r(65671),
        i = r(13538),
        a = r(73758),
        c = r(74847);
      (t.idsQueriesSlots = (0, s.combineEvents)(
        o.driverLicensesQueriesSlots,
        n.fiscalIdsQueriesSlots,
        i.idCardsQueriesSlots,
        a.passportsQueriesSlots,
        c.socialSecurityIdsQueriesSlots
      )),
        (t.idsLiveQueriesSlots = (0, s.combineEvents)(
          o.driverLicensesLiveQueriesSlots,
          n.fiscalIdsLiveQueriesSlots,
          i.idCardsLiveQueriesSlots,
          a.passportsLiveQueriesSlots,
          c.socialSecurityIdsLiveQueriesSlots
        )),
        (t.idsCommandsSlots = (0, s.combineEvents)(
          o.driverLicensesCommandsSlots,
          n.fiscalsIdCommandsSlots,
          i.idCardsCommandsSlots,
          a.passportsCommandsSlots,
          c.socialSecurityIdsCommandsSlots
        ));
    },
    74847: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(44771), t), o(r(41022), t);
    },
    44771: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.socialSecurityIdsCommandsSlots = t.socialSecurityIdsLiveQueriesSlots = t.socialSecurityIdsQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.socialSecurityIdsQueriesSlots = { getSocialSecurityId: (0, s.slot)(), getSocialSecurityIds: (0, s.slot)() }),
        (t.socialSecurityIdsLiveQueriesSlots = { liveSocialSecurityId: (0, o.liveSlot)(), liveSocialSecurityIds: (0, o.liveSlot)() }),
        (t.socialSecurityIdsCommandsSlots = {
          addSocialSecurityId: (0, s.slot)(),
          editSocialSecurityId: (0, s.slot)(),
          deleteSocialSecurityId: (0, s.slot)()
        });
    },
    41022: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    68955: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.UpdateIdResultErrorCode = t.AddIdResultErrorCode = t.IdErrorCode = void 0),
        (function (e) {
          (e.INTERNAL_ERROR = "INTERNAL_ERROR"), (e.NOT_AUTHENTICATED = "NOT_AUTHENTICATED"), (e.NOT_FOUND = "NOT_FOUND");
        })(t.IdErrorCode || (t.IdErrorCode = {})),
        (function (e) {
          e.MISSING_ID_NUMBER = "MISSING_ID_NUMBER";
        })(t.AddIdResultErrorCode || (t.AddIdResultErrorCode = {})),
        (function (e) {
          e.MISSING_ID_NUMBER = "MISSING_ID_NUMBER";
        })(t.UpdateIdResultErrorCode || (t.UpdateIdResultErrorCode = {}));
    },
    60655: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.importCommandsSlots = t.importLiveQueriesSlots = t.importQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.importQueriesSlots = { getImportPersonalDataStatus: (0, s.slot)() }),
        (t.importLiveQueriesSlots = { liveImportPersonalDataStatus: (0, o.liveSlot)() }),
        (t.importCommandsSlots = {
          importPersonalData: (0, s.slot)(),
          previewPersonalData: (0, s.slot)(),
          dismissPersonalDataImportNotifications: (0, s.slot)()
        });
    },
    7716: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(60655), t), o(r(42393), t);
    },
    42393: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.PreviewPersonalDataErrorType =
          t.ImportPersonalDataStateType =
          t.ImportPersonalDataErrorType =
          t.ImportFormats =
          t.ImportSource =
          t.SupportedVaultTypes =
            void 0),
        (function (e) {
          (e.CREDENTIAL = "credentials"),
            (e.NOTE = "notes"),
            (e.PAYMENT_CARD = "paymentCards"),
            (e.BANK_ACCOUNT = "bankAccounts"),
            (e.COLLECTION = "collections");
        })(t.SupportedVaultTypes || (t.SupportedVaultTypes = {})),
        (function (e) {
          (e["1Password"] = "1password"),
            (e.Bitwarden = "bitwarden"),
            (e.Chrome = "chrome"),
            (e.Dash = "dash"),
            (e.Edge = "edge"),
            (e.Firefox = "firefox"),
            (e.Keepass = "keepass"),
            (e.Keeper = "keeper"),
            (e.Lastpass = "lastpass"),
            (e.Other = "other"),
            (e.Safari = "safari");
        })(t.ImportSource || (t.ImportSource = {})),
        (function (e) {
          (e.Csv = "csv"), (e.Dash = "dash");
        })(t.ImportFormats || (t.ImportFormats = {})),
        (function (e) {
          (e.Unavailable = "unavailable"), (e.Unknown = "unknown");
        })(t.ImportPersonalDataErrorType || (t.ImportPersonalDataErrorType = {})),
        (function (e) {
          (e.Idle = "idle"), (e.Processing = "processing"), (e.Success = "success"), (e.Error = "error");
        })(t.ImportPersonalDataStateType || (t.ImportPersonalDataStateType = {})),
        (function (e) {
          (e.BadPassword = "bad_password"), (e.Unavailable = "unavailable"), (e.InvalidFormat = "invalid"), (e.Unknown = "unknown");
        })(t.PreviewPersonalDataErrorType || (t.PreviewPersonalDataErrorType = {}));
    },
    30897: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(57882), t),
        o(r(88295), t),
        o(r(63571), t),
        o(r(23446), t),
        o(r(59870), t),
        o(r(23328), t),
        o(r(40466), t),
        o(r(10362), t),
        o(r(61470), t),
        o(r(7716), t),
        o(r(76354), t),
        o(r(13995), t),
        o(r(42366), t),
        o(r(27958), t),
        o(r(91480), t),
        o(r(44015), t),
        o(r(32487), t),
        o(r(62061), t),
        o(r(35643), t),
        o(r(48934), t),
        o(r(20703), t),
        o(r(34237), t);
    },
    76354: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(9092), t);
    },
    9092: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.UpdateLinkedWebsitesError = void 0),
        (function (e) {
          e.CredentialUpdateError = "credentialUpdateError";
        })(t.UpdateLinkedWebsitesError || (t.UpdateLinkedWebsitesError = {}));
    },
    62061: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(91583), t), o(r(1172), t);
    },
    91583: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.passkeyCommandsSlots = t.passkeyLiveQueriesSlots = t.passkeyQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.passkeyQueriesSlots = { getPasskey: (0, s.slot)(), getPasskeys: (0, s.slot)(), getPasskeysForDomain: (0, s.slot)() }),
        (t.passkeyLiveQueriesSlots = { livePasskey: (0, o.liveSlot)(), livePasskeys: (0, o.liveSlot)() }),
        (t.passkeyCommandsSlots = { addPasskey: (0, s.slot)(), updatePasskey: (0, s.slot)(), deletePasskey: (0, s.slot)() });
    },
    1172: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DeletePasskeyErrorCode = void 0),
        (function (e) {
          (e[(e.NOT_AUTHORIZED = 0)] = "NOT_AUTHORIZED"),
            (e[(e.NOT_FOUND = 1)] = "NOT_FOUND"),
            (e[(e.INTERNAL_ERROR = 2)] = "INTERNAL_ERROR");
        })(t.DeletePasskeyErrorCode || (t.DeletePasskeyErrorCode = {}));
    },
    35643: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(29477), t), o(r(38161), t);
    },
    29477: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.passwordHistoryLiveQueriesSlots = t.passwordHistoryQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.passwordHistoryQueriesSlots = {
        getPasswordHistory: (0, s.slot)(),
        getHasPasswordHistory: (0, s.slot)(),
        getPasswordHistoryPage: (0, s.slot)(),
        getPasswordHistoryPaginationToken: (0, s.slot)()
      }),
        (t.passwordHistoryLiveQueriesSlots = { livePasswordHistory: (0, o.liveSlot)(), livePasswordHistoryBatch: (0, o.liveSlot)() });
    },
    38161: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.PasswordHistoryItemType = void 0),
        (function (e) {
          (e.Credential = "credential"), (e.Generated = "generated");
        })(t.PasswordHistoryItemType || (t.PasswordHistoryItemType = {}));
    },
    48934: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(75161), t), o(r(40672), t);
    },
    75161: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.paymentCardCommandsSlots = t.paymentCardLiveQueriesSlots = t.paymentCardQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.paymentCardQueriesSlots = { getPaymentCard: (0, s.slot)(), getPaymentCards: (0, s.slot)() }),
        (t.paymentCardLiveQueriesSlots = { livePaymentCard: (0, o.liveSlot)(), livePaymentCards: (0, o.liveSlot)() }),
        (t.paymentCardCommandsSlots = {
          addPaymentCard: (0, s.slot)(),
          updatePaymentCard: (0, s.slot)(),
          deletePaymentCard: (0, s.slot)()
        });
    },
    40672: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DeletePaymentCardErrorCode = t.PaymentCardSaveResultErrorCode = void 0),
        (function (e) {
          (e.EMPTY_CARD_NUMBER_AND_SECURITY_CODE = "EMPTY_CARD_NUMBER_AND_SECURITY_CODE"), (e.NOT_FOUND = "NOT_FOUND");
        })(t.PaymentCardSaveResultErrorCode || (t.PaymentCardSaveResultErrorCode = {})),
        (function (e) {
          (e.NOT_AUTHORIZED = "NOT_AUTHORIZED"), (e.NOT_FOUND = "NOT_FOUND"), (e.INTERNAL_ERROR = "INTERNAL_ERROR");
        })(t.DeletePaymentCardErrorCode || (t.DeletePaymentCardErrorCode = {}));
    },
    30557: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.addressLiveQueriesSlots = t.addressQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.addressQueriesSlots = { getAddresses: (0, s.slot)(), getAddress: (0, s.slot)() }),
        (t.addressLiveQueriesSlots = { liveAddress: (0, o.liveSlot)(), liveAddresses: (0, o.liveSlot)() });
    },
    46329: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(30557), t), o(r(1721), t);
    },
    1721: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    97301: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.companyLiveQueriesSlots = t.companyQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.companyQueriesSlots = { getCompanies: (0, s.slot)(), getCompany: (0, s.slot)() }),
        (t.companyLiveQueriesSlots = { liveCompanies: (0, o.liveSlot)(), liveCompany: (0, o.liveSlot)() });
    },
    5746: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(97301), t), o(r(4249), t);
    },
    4249: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    24375: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.emailLiveQueriesSlots = t.emailQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.emailQueriesSlots = { getEmail: (0, s.slot)(), getEmails: (0, s.slot)() }),
        (t.emailLiveQueriesSlots = { liveEmail: (0, o.liveSlot)(), liveEmails: (0, o.liveSlot)() });
    },
    47413: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(24375), t), o(r(836), t);
    },
    836: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    83530: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.identityLiveQueriesSlots = t.identityQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.identityQueriesSlots = { getIdentities: (0, s.slot)(), getIdentitiesCount: (0, s.slot)(), getIdentity: (0, s.slot)() }),
        (t.identityLiveQueriesSlots = {
          liveIdentities: (0, o.liveSlot)(),
          liveIdentitiesCount: (0, o.liveSlot)(),
          liveIdentity: (0, o.liveSlot)()
        });
    },
    8400: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(83530), t), o(r(67369), t);
    },
    67369: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    63571: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(46329), t),
        o(r(5746), t),
        o(r(47413), t),
        o(r(8400), t),
        o(r(87893), t),
        o(r(60776), t),
        o(r(64682), t);
    },
    60776: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(68813), t), o(r(392), t);
    },
    392: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.phoneLiveQueriesSlots = t.phoneQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.phoneQueriesSlots = { getPhone: (0, s.slot)(), getPhones: (0, s.slot)() }),
        (t.phoneLiveQueriesSlots = { livePhone: (0, o.liveSlot)(), livePhones: (0, o.liveSlot)() });
    },
    68813: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    64682: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.personalInfoLiveQueriesSlots = t.personalInfoQueriesSlots = void 0);
      const s = r(71796),
        o = r(46329),
        n = r(5746),
        i = r(47413),
        a = r(8400),
        c = r(60776),
        l = r(87893);
      (t.personalInfoQueriesSlots = (0, s.combineEvents)(
        o.addressQueriesSlots,
        n.companyQueriesSlots,
        i.emailQueriesSlots,
        a.identityQueriesSlots,
        c.phoneQueriesSlots,
        l.websiteQueriesSlots
      )),
        (t.personalInfoLiveQueriesSlots = (0, s.combineEvents)(
          o.addressLiveQueriesSlots,
          n.companyLiveQueriesSlots,
          i.emailLiveQueriesSlots,
          a.identityLiveQueriesSlots,
          c.phoneLiveQueriesSlots,
          l.websiteLiveQueriesSlots
        ));
    },
    87893: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(63142), t), o(r(8598), t);
    },
    63142: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    8598: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.websiteLiveQueriesSlots = t.websiteQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.websiteQueriesSlots = { getPersonalWebsite: (0, s.slot)(), getPersonalWebsites: (0, s.slot)() }),
        (t.websiteLiveQueriesSlots = { livePersonalWebsite: (0, o.liveSlot)(), livePersonalWebsites: (0, o.liveSlot)() });
    },
    13995: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(30904), t), o(r(17013), t);
    },
    30904: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.secretCommandsSlots = t.secretLiveQueriesSlots = t.secretQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.secretQueriesSlots = {
        getSecret: (0, s.slot)(),
        getSecrets: (0, s.slot)(),
        getSecretsCount: (0, s.slot)(),
        getSecretsPage: (0, s.slot)(),
        getSecretsPaginationToken: (0, s.slot)()
      }),
        (t.secretLiveQueriesSlots = {
          liveSecret: (0, o.liveSlot)(),
          liveSecrets: (0, o.liveSlot)(),
          liveSecretsBatch: (0, o.liveSlot)(),
          liveSecretsCount: (0, o.liveSlot)()
        }),
        (t.secretCommandsSlots = { addSecret: (0, s.slot)(), updateSecret: (0, s.slot)(), deleteSecret: (0, s.slot)() });
    },
    17013: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DeleteSecretErrorCode = t.SecretSaveResultErrorCode = void 0),
        (function (e) {
          e.NOT_FOUND = "NOT_FOUND";
        })(t.SecretSaveResultErrorCode || (t.SecretSaveResultErrorCode = {})),
        (function (e) {
          (e.NOT_FOUND = "NOT_FOUND"),
            (e.INTERNAL_ERROR = "INTERNAL_ERROR"),
            (e.LEAVE_SHARING_FAILED = "LEAVE_SHARING_FAILED"),
            (e.LEAVE_SHARING_FORBIDDEN_LAST_ADMIN = "LEAVE_SHARING_FORBIDDEN_LAST_ADMIN"),
            (e.LEAVE_SHARING_FORBIDDEN_GROUP_ITEM = "LEAVE_SHARING_FORBIDDEN_GROUP_ITEM");
        })(t.DeleteSecretErrorCode || (t.DeleteSecretErrorCode = {}));
    },
    42366: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(70954), t), o(r(1376), t);
    },
    70954: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.secureFilesCommandsSlots = t.secureFilesLiveQueriesSlots = t.secureFilesQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.secureFilesQueriesSlots = {
        getSecureFilesQuota: (0, s.slot)(),
        getSecureFilesInfoList: (0, s.slot)(),
        getFileDownloadProgress: (0, s.slot)(),
        getFileUploadProgress: (0, s.slot)()
      }),
        (t.secureFilesLiveQueriesSlots = {
          liveSecureFilesQuota: (0, o.liveSlot)(),
          liveFileDownloadProgress: (0, o.liveSlot)(),
          liveFileUploadProgress: (0, o.liveSlot)()
        }),
        (t.secureFilesCommandsSlots = {
          downloadSecureFile: (0, s.slot)(),
          chunkTransferDone: (0, s.slot)(),
          deleteSecureFile: (0, s.slot)(),
          addSecureFile: (0, s.slot)(),
          validateSecureFile: (0, s.slot)(),
          commitSecureFile: (0, s.slot)(),
          initSecureFilesStorageInfo: (0, s.slot)(),
          clearSecureFileState: (0, s.slot)()
        });
    },
    1376: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.FileUploadStatus = t.FileDownloadStatus = t.SecureFileResultErrorCode = void 0),
        (function (e) {
          (e.MAX_CONTENT_LENGTH_EXCEEDED = "MAX_CONTENT_LENGTH_EXCEEDED"),
            (e.QUOTA_EXCEEDED = "QUOTA_EXCEEDED"),
            (e.INVALID_FILE_TYPE = "INVALID_FILE_TYPE"),
            (e.INTERNAL_ERROR = "INTERNAL_ERROR"),
            (e.SERVER_ERROR = "SERVER_ERROR"),
            (e.FILE_NOT_FOUND = "FILE_NOT_FOUND");
        })(t.SecureFileResultErrorCode || (t.SecureFileResultErrorCode = {})),
        (function (e) {
          (e.Initial = "Initial"),
            (e.Downloading = "Downloading"),
            (e.Deciphering = "Deciphering"),
            (e.Error = "Error"),
            (e.ChunkReady = "ChunkReady"),
            (e.ChunkDownloaded = "ChunkDownloaded"),
            (e.TransferComplete = "TransferComplete");
        })(t.FileDownloadStatus || (t.FileDownloadStatus = {})),
        (function (e) {
          (e.None = "None"),
            (e.Initial = "Initial"),
            (e.Uploading = "Uploading"),
            (e.Ciphering = "Ciphering"),
            (e.Done = "Done"),
            (e.Error = "Error");
        })(t.FileUploadStatus || (t.FileUploadStatus = {}));
    },
    27958: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(32376), t), o(r(20397), t);
    },
    32376: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.secureNoteCategoryCommandsSlots = void 0);
      const s = r(71796);
      t.secureNoteCategoryCommandsSlots = { setupDefaultNoteCategories: (0, s.slot)() };
    },
    20397: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    91480: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(47110), t), o(r(5721), t);
    },
    47110: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.noteCommandsSlots = t.noteLiveQueriesSlots = t.noteQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.noteQueriesSlots = {
        getNote: (0, s.slot)(),
        getNoteCategories: (0, s.slot)(),
        getNotes: (0, s.slot)(),
        getNotesCount: (0, s.slot)(),
        getNotesPage: (0, s.slot)(),
        getNotesPaginationToken: (0, s.slot)()
      }),
        (t.noteLiveQueriesSlots = {
          liveNote: (0, o.liveSlot)(),
          liveNotes: (0, o.liveSlot)(),
          liveNotesBatch: (0, o.liveSlot)(),
          liveNotesCount: (0, o.liveSlot)()
        }),
        (t.noteCommandsSlots = { addSecureNote: (0, s.slot)(), updateSecureNote: (0, s.slot)(), deleteSecureNote: (0, s.slot)() });
    },
    5721: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DeleteSecureNoteErrorCode = t.SecureNoteSaveResultErrorCode = void 0),
        (function (e) {
          e.NOT_FOUND = "NOT_FOUND";
        })(t.SecureNoteSaveResultErrorCode || (t.SecureNoteSaveResultErrorCode = {})),
        (function (e) {
          (e.NOT_FOUND = "NOT_FOUND"),
            (e.INTERNAL_ERROR = "INTERNAL_ERROR"),
            (e.LEAVE_SHARING_FAILED = "LEAVE_SHARING_FAILED"),
            (e.LEAVE_SHARING_FORBIDDEN_LAST_ADMIN = "LEAVE_SHARING_FORBIDDEN_LAST_ADMIN"),
            (e.LEAVE_SHARING_FORBIDDEN_GROUP_ITEM = "LEAVE_SHARING_FORBIDDEN_GROUP_ITEM");
        })(t.DeleteSecureNoteErrorCode || (t.DeleteSecureNoteErrorCode = {}));
    },
    44015: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(12451), t), o(r(76646), t);
    },
    12451: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.settingsCommandsSlots = t.settingsLiveQueriesSlots = t.settingsQueriesSlots = void 0);
      const s = r(71796),
        o = r(72345);
      (t.settingsQueriesSlots = {
        getAnonymousUserId: (0, s.slot)(),
        getIsUrlBanished: (0, s.slot)(),
        arePasswordsProtected: (0, s.slot)()
      }),
        (t.settingsLiveQueriesSlots = { liveArePasswordsProtected: (0, o.liveSlot)() }),
        (t.settingsCommandsSlots = {
          toggleDashlane: (0, s.slot)(),
          updateProtectPasswordsSetting: (0, s.slot)(),
          updateAutofillSettings: (0, s.slot)()
        });
    },
    76646: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    57882: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.dataManagementCommandsSlots = t.dataManagementLiveQueriesSlots = t.dataManagementQueriesSlots = void 0);
      const s = r(71796),
        o = r(23446),
        n = r(59870),
        i = r(23328),
        a = r(40466),
        c = r(10362),
        l = r(20703),
        d = r(61470),
        u = r(7716),
        p = r(62061),
        h = r(35643),
        m = r(48934),
        v = r(63571),
        g = r(42366),
        y = r(27958),
        f = r(91480),
        _ = r(44015),
        S = r(32487),
        E = r(34237),
        b = r(13995);
      (t.dataManagementQueriesSlots = (0, s.combineEvents)(
        o.bankAccountQueriesSlots,
        n.breachesQueriesSlots,
        a.credentialsQueriesSlots,
        c.exportQueriesSlots,
        l.generatedPasswordsQueriesSlots,
        d.idsQueriesSlots,
        u.importQueriesSlots,
        f.noteQueriesSlots,
        p.passkeyQueriesSlots,
        h.passwordHistoryQueriesSlots,
        m.paymentCardQueriesSlots,
        v.personalInfoQueriesSlots,
        b.secretQueriesSlots,
        g.secureFilesQueriesSlots,
        _.settingsQueriesSlots,
        S.spacesQueriesSlots,
        E.vaultQueriesSlots
      )),
        (t.dataManagementLiveQueriesSlots = (0, s.combineEvents)(
          o.bankAccountLiveQueriesSlots,
          n.breachesLiveQueriesSlots,
          a.credentialsLiveQueriesSlots,
          l.generatedPasswordsLiveQueriesSlots,
          d.idsLiveQueriesSlots,
          u.importLiveQueriesSlots,
          f.noteLiveQueriesSlots,
          p.passkeyLiveQueriesSlots,
          h.passwordHistoryLiveQueriesSlots,
          m.paymentCardLiveQueriesSlots,
          v.personalInfoLiveQueriesSlots,
          b.secretLiveQueriesSlots,
          g.secureFilesLiveQueriesSlots,
          _.settingsLiveQueriesSlots
        )),
        (t.dataManagementCommandsSlots = (0, s.combineEvents)(
          o.bankAccountCommandsSlots,
          n.breachesCommandsSlots,
          i.collectionsCommandsSlots,
          a.credentialsCommandsSlots,
          c.exportCommandsSlots,
          l.generatedPasswordsCommandsSlots,
          d.idsCommandsSlots,
          u.importCommandsSlots,
          f.noteCommandsSlots,
          p.passkeyCommandsSlots,
          m.paymentCardCommandsSlots,
          b.secretCommandsSlots,
          g.secureFilesCommandsSlots,
          y.secureNoteCategoryCommandsSlots,
          _.settingsCommandsSlots,
          E.vaultCommandsSlots
        ));
    },
    32487: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(3316), t), o(r(81774), t);
    },
    3316: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.spacesQueriesSlots = void 0);
      const s = r(71796);
      t.spacesQueriesSlots = { getSpace: (0, s.slot)(), getSpaces: (0, s.slot)() };
    },
    81774: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    88295: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    34237: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(52810), t), o(r(76417), t);
    },
    52810: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.VaultItemDisableProtectionMode = void 0),
        (function (e) {
          (e[(e.CannotDisable = 0)] = "CannotDisable"),
            (e[(e.DisableSpecificVaultItem = 1)] = "DisableSpecificVaultItem"),
            (e[(e.DisableGeneralSetting = 2)] = "DisableGeneralSetting");
        })(t.VaultItemDisableProtectionMode || (t.VaultItemDisableProtectionMode = {}));
    },
    76417: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.vaultCommandsSlots = t.vaultQueriesSlots = void 0);
      const s = r(71796);
      (t.vaultQueriesSlots = { getAutofillProtectionContext: (0, s.slot)() }),
        (t.vaultCommandsSlots = { disableVaultItemProtection: (0, s.slot)() });
    },
    32626: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(72345), t),
        o(r(28413), t),
        o(r(17317), t),
        o(r(98521), t),
        o(r(11733), t),
        o(r(80112), t),
        o(r(55334), t),
        o(r(91609), t),
        o(r(11889), t),
        o(r(99103), t),
        o(r(29004), t),
        o(r(90041), t),
        o(r(65722), t),
        o(r(25098), t),
        o(r(94372), t),
        o(r(15874), t),
        o(r(50459), t),
        o(r(14811), t),
        o(r(30897), t),
        o(r(88219), t),
        o(r(43245), t),
        o(r(65005), t),
        o(r(80898), t),
        o(r(29450), t),
        o(r(96035), t),
        o(r(6666), t),
        o(r(24875), t),
        o(r(87940), t),
        o(r(15925), t),
        o(r(68183), t),
        o(r(6768), t),
        o(r(58290), t),
        o(r(78779), t),
        o(r(39191), t),
        o(r(37174), t),
        o(r(60687), t),
        o(r(36632), t),
        o(r(77277), t),
        o(r(49106), t),
        o(r(68440), t),
        o(r(34852), t),
        o(r(31525), t),
        o(r(28249), t),
        o(r(33773), t),
        o(r(84470), t),
        o(r(58575), t),
        o(r(9987), t),
        o(r(57369), t),
        o(r(1659), t),
        o(r(48905), t),
        o(r(66478), t),
        o(r(12891), t),
        o(r(98655), t),
        o(r(44225), t),
        o(r(19635), t),
        o(r(22162), t),
        o(r(31955), t),
        o(r(83496), t),
        o(r(13006), t);
    },
    5933: (e, t, r) => {
      r.d(t, { KV: () => a, co: () => i, td: () => n });
      var s = r(71796),
        o = r(55432);
      const n = { participateToUserABTest: (0, s.slot)() },
        i = { getUserABTestVariant: (0, s.slot)() },
        a = { liveUserABTestVariant: (0, o.H)() };
    },
    16537: (e, t, r) => {
      r.d(t, { PG: () => i, PO: () => n, cN: () => a });
      var s = r(71796),
        o = r(55432);
      const n = { editContactInfo: (0, s.slot)() },
        i = { getContactInfo: (0, s.slot)() },
        a = { liveContactInfo: (0, o.H)() };
    },
    57317: (e, t, r) => {
      r.d(t, { E: () => n, b: () => i });
      var s = r(71796),
        o = r(55432);
      const n = { getSubscriptionCode: (0, s.slot)() },
        i = { liveSubscriptionCode: (0, o.H)() };
    },
    53927: (e, t, r) => {
      r.d(t, { zR: () => u, QR: () => h, ke: () => p });
      var s = r(71796),
        o = r(55432);
      const n = {
          refreshU2FDevicesList: (0, s.slot)(),
          removeU2FAuthenticator: (0, s.slot)(),
          refreshTwoFactorAuthenticationInfo: (0, s.slot)(),
          startTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
          stopTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
          continueTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
          backTwoFactorAuthenticationEnableFlow: (0, s.slot)(),
          startTwoFactorAuthenticationDisableFlow: (0, s.slot)(),
          stopTwoFactorAuthenticationDisableFlow: (0, s.slot)(),
          continueTwoFactorAuthenticationDisableFlow: (0, s.slot)(),
          backTwoFactorAuthenticationDisableFlow: (0, s.slot)()
        },
        i = {
          getU2FDevicesList: (0, s.slot)(),
          getTwoFactorAuthenticationEnableStage: (0, s.slot)(),
          getTwoFactorAuthenticationDisableStage: (0, s.slot)()
        },
        a = {
          liveU2FDevicesList: (0, o.H)(),
          liveTwoFactorAuthenticationEnableStage: (0, o.H)(),
          liveTwoFactorAuthenticationDisableStage: (0, o.H)()
        },
        c = {
          enableWebAuthnAuthentication: (0, s.slot)(),
          initEnableWebAuthnAuthentication: (0, s.slot)(),
          refreshAvailableWebAuthnAuthenticators: (0, s.slot)(),
          refreshWebAuthnAuthenticators: (0, s.slot)(),
          initRegisterWebAuthnAuthenticator: (0, s.slot)(),
          registerWebAuthnAuthenticator: (0, s.slot)(),
          initOpenSessionWithWebAuthnAuthenticator: (0, s.slot)(),
          openSessionWithWebAuthnAuthenticator: (0, s.slot)(),
          disableWebAuthnAuthentication: (0, s.slot)(),
          removeWebAuthnAuthenticator: (0, s.slot)(),
          initUserVerificationWithWebAuthn: (0, s.slot)()
        },
        l = { getWebAuthnAuthenticators: (0, s.slot)(), getWebAuthnAuthenticationOptedIn: (0, s.slot)() },
        d = { liveWebAuthnAuthenticators: (0, o.H)(), liveWebAuthnAuthenticationOptedIn: (0, o.H)() },
        u = (0, s.combineEvents)(
          {
            registerDevice: (0, s.slot)(),
            requestExtraDeviceToken: (0, s.slot)(),
            requestEmailToken: (0, s.slot)(),
            requestPaymentUpdateAuthenticationToken: (0, s.slot)(),
            setReactivationStatus: (0, s.slot)()
          },
          c,
          n
        ),
        p = (0, s.combineEvents)(
          {
            getHasOtp2Type: (0, s.slot)(),
            getUserOtpType: (0, s.slot)(),
            getReactivationStatus: (0, s.slot)(),
            getAvailableUserVerificationMethods: (0, s.slot)()
          },
          l,
          i
        ),
        h = (0, s.combineEvents)({ liveReactivationStatus: (0, o.H)() }, d, a);
    },
    22450: (e, t, r) => {
      r.d(t, { _V: () => i, jP: () => o });
      var s, o;
      !(function (e) {
        (e.DISABLED = "DISABLED"), (e.CLASSIC = "CLASSIC"), (e.WEBAUTHN = "WEBAUTHN");
      })(s || (s = {})),
        (function (e) {
          (e[(e.PERSIST_DATA_YES = 0)] = "PERSIST_DATA_YES"), (e[(e.PERSIST_DATA_NO = 1)] = "PERSIST_DATA_NO");
        })(o || (o = {}));
      Object.freeze({ MasterPassword: "masterPassword", Webauthn: "webauthn" });
      var n, i;
      !(function (e) {
        (e[(e.NO_OTP = 0)] = "NO_OTP"), (e[(e.OTP_NEW_DEVICE = 1)] = "OTP_NEW_DEVICE"), (e[(e.OTP_LOGIN = 2)] = "OTP_LOGIN");
      })(n || (n = {})),
        (function (e) {
          (e[(e.INVALID_LOGIN = 0)] = "INVALID_LOGIN"),
            (e[(e.EMPTY_LOGIN = 1)] = "EMPTY_LOGIN"),
            (e[(e.EMPTY_MASTER_PASSWORD = 2)] = "EMPTY_MASTER_PASSWORD"),
            (e[(e.EMPTY_ENCRYPTED_KEY = 3)] = "EMPTY_ENCRYPTED_KEY"),
            (e[(e.INVALID_ENCRYPTED_KEY = 4)] = "INVALID_ENCRYPTED_KEY"),
            (e[(e.EMPTY_TOKEN = 5)] = "EMPTY_TOKEN"),
            (e[(e.EMPTY_OTP = 6)] = "EMPTY_OTP"),
            (e[(e.SEND_TOKEN_FAILED = 7)] = "SEND_TOKEN_FAILED"),
            (e[(e.UKI_REGISTRATION_FAILED = 8)] = "UKI_REGISTRATION_FAILED"),
            (e[(e.REGISTER_DEVICE_FAILED = 9)] = "REGISTER_DEVICE_FAILED"),
            (e[(e.BUSINESS_ERROR = 10)] = "BUSINESS_ERROR"),
            (e[(e.USER_DOESNT_EXIST = 11)] = "USER_DOESNT_EXIST"),
            (e[(e.USER_DOESNT_EXIST_UNLIKELY_MX = 12)] = "USER_DOESNT_EXIST_UNLIKELY_MX"),
            (e[(e.USER_DOESNT_EXIST_INVALID_MX = 13)] = "USER_DOESNT_EXIST_INVALID_MX"),
            (e[(e.USER_UNAUTHORIZED = 14)] = "USER_UNAUTHORIZED"),
            (e[(e.WRONG_PASSWORD = 15)] = "WRONG_PASSWORD"),
            (e[(e.DATA_TAMPERED_ERROR = 16)] = "DATA_TAMPERED_ERROR"),
            (e[(e.LOGGEDIN = 17)] = "LOGGEDIN"),
            (e[(e.ASK_TOKEN = 18)] = "ASK_TOKEN"),
            (e[(e.ASK_OTP = 19)] = "ASK_OTP"),
            (e[(e.ASK_MASTER_PASSWORD = 20)] = "ASK_MASTER_PASSWORD"),
            (e[(e.USE_LOCAL_UKI = 21)] = "USE_LOCAL_UKI"),
            (e[(e.ASK_DASHLANE_AUTHENTICATOR = 22)] = "ASK_DASHLANE_AUTHENTICATOR"),
            (e[(e.OTP_NOT_VALID = 23)] = "OTP_NOT_VALID"),
            (e[(e.OTP_TOO_MANY_ATTEMPTS = 24)] = "OTP_TOO_MANY_ATTEMPTS"),
            (e[(e.OTP_ALREADY_USED = 25)] = "OTP_ALREADY_USED"),
            (e[(e.BACKUP_CODE_NOT_VALID = 26)] = "BACKUP_CODE_NOT_VALID"),
            (e[(e.TOKEN_NOT_VALID = 27)] = "TOKEN_NOT_VALID"),
            (e[(e.DASHLANE_AUTHENTICATOR_PUSH_NOTIFICATION_DENIED = 28)] = "DASHLANE_AUTHENTICATOR_PUSH_NOTIFICATION_DENIED"),
            (e[(e.SERVER_KEY_MISSING = 29)] = "SERVER_KEY_MISSING"),
            (e[(e.TOKEN_LOCKED = 30)] = "TOKEN_LOCKED"),
            (e[(e.TOKEN_TOO_MANY_ATTEMPTS = 31)] = "TOKEN_TOO_MANY_ATTEMPTS"),
            (e[(e.TOKEN_ACCOUNT_LOCKED = 32)] = "TOKEN_ACCOUNT_LOCKED"),
            (e[(e.TOKEN_EXPIRED = 33)] = "TOKEN_EXPIRED"),
            (e[(e.NO_ACTIVE_AUTHENTICATOR = 34)] = "NO_ACTIVE_AUTHENTICATOR"),
            (e[(e.FAILED_TO_CONTACT_AUTHENTICATOR_DEVICE = 35)] = "FAILED_TO_CONTACT_AUTHENTICATOR_DEVICE"),
            (e[(e.DASHLANE_AUTHENTICATOR_ASKED_FOR_LOCAL_SESSION = 36)] = "DASHLANE_AUTHENTICATOR_ASKED_FOR_LOCAL_SESSION"),
            (e[(e.DASHLANE_AUTHENTICATOR_LOGIN_CANCELLED = 37)] = "DASHLANE_AUTHENTICATOR_LOGIN_CANCELLED"),
            (e[(e.TOKEN_PROVIDED_FOR_LOCAL_SESSION = 38)] = "TOKEN_PROVIDED_FOR_LOCAL_SESSION"),
            (e[(e.DEVICE_ALREADY_REGISTERED = 39)] = "DEVICE_ALREADY_REGISTERED"),
            (e[(e.OTP_PROVIDED_FOR_LOCAL_NON_OTP_SESSION = 40)] = "OTP_PROVIDED_FOR_LOCAL_NON_OTP_SESSION"),
            (e[(e.DIFFERENT_LOGIN_PROVIDED_WITH_TOKEN_OR_OTP = 41)] = "DIFFERENT_LOGIN_PROVIDED_WITH_TOKEN_OR_OTP"),
            (e[(e.UNKNOWN_SYNC_ERROR = 42)] = "UNKNOWN_SYNC_ERROR"),
            (e[(e.INVALID_UKI = 43)] = "INVALID_UKI"),
            (e[(e.UNKNOWN_UKI = 44)] = "UNKNOWN_UKI"),
            (e[(e.UNKNOWN_ERROR = 45)] = "UNKNOWN_ERROR"),
            (e[(e.UNEXPECTED_OTP_TYPE = 46)] = "UNEXPECTED_OTP_TYPE"),
            (e[(e.UNAUTHORIZED = 47)] = "UNAUTHORIZED"),
            (e[(e.UNAUTHORIZED_NOT_VALID_CONTENT = 48)] = "UNAUTHORIZED_NOT_VALID_CONTENT"),
            (e[(e.NETWORK_ERROR = 49)] = "NETWORK_ERROR"),
            (e[(e.THROTTLED = 50)] = "THROTTLED"),
            (e[(e.SESSION_ALREADY_OPENED = 51)] = "SESSION_ALREADY_OPENED"),
            (e[(e.INVALID_SESSION = 52)] = "INVALID_SESSION"),
            (e[(e.DEVICE_NOT_REGISTERED = 53)] = "DEVICE_NOT_REGISTERED"),
            (e[(e.MISSING_APP_KEYS = 54)] = "MISSING_APP_KEYS"),
            (e[(e.PROVIDE_EXTRA_DEVICE_TOKEN = 55)] = "PROVIDE_EXTRA_DEVICE_TOKEN"),
            (e[(e.PROVIDE_MASTER_PASSWORD_FOR_EXTRA_DEVICE = 56)] = "PROVIDE_MASTER_PASSWORD_FOR_EXTRA_DEVICE"),
            (e[(e.PROVIDE_MASTER_PASSWORD_AND_SERVER_KEY_FOR_EXTRA_DEVICE = 57)] =
              "PROVIDE_MASTER_PASSWORD_AND_SERVER_KEY_FOR_EXTRA_DEVICE"),
            (e[(e.ASK_OTP_FOR_NEW_DEVICE = 58)] = "ASK_OTP_FOR_NEW_DEVICE"),
            (e[(e.TEAM_GENERIC_ERROR = 59)] = "TEAM_GENERIC_ERROR"),
            (e[(e.SSO_LOGIN_BYPASS = 60)] = "SSO_LOGIN_BYPASS"),
            (e[(e.SSO_VERIFICATION_FAILED = 61)] = "SSO_VERIFICATION_FAILED"),
            (e[(e.SSO_BLOCKED = 62)] = "SSO_BLOCKED"),
            (e[(e.CLIENT_VERSION_DOES_NOT_SUPPORT_SSO_MIGRATION = 63)] = "CLIENT_VERSION_DOES_NOT_SUPPORT_SSO_MIGRATION"),
            (e[(e.USER_DOESNT_EXIST_SSO = 64)] = "USER_DOESNT_EXIST_SSO");
        })(i || (i = {}));
    },
    49594: (e, t, r) => {
      r.d(t, { X: () => a });
      var s = r(71796),
        o = r(66302),
        n = r(38344),
        i = r(33820);
      const a = (0, s.combineEvents)(o.z, n.r, i.z);
    },
    66302: (e, t, r) => {
      r.d(t, { z: () => N });
      var s = r(71796),
        o = r(5933),
        n = r(16537),
        i = r(53927),
        a = r(38429),
        c = r(61045);
      const l = { getDarkWebInsightsReportResults: (0, s.slot)(), getDarkWebInsightsSummary: (0, s.slot)() };
      var d = r(13149);
      const u = {
        getFamilyDetails: (0, s.slot)(),
        joinFamily: (0, s.slot)(),
        leaveFamily: (0, s.slot)(),
        removeFamilyMember: (0, s.slot)(),
        resetFamilyJoinToken: (0, s.slot)()
      };
      var p = r(64128);
      const h = { setGlobalExtensionSettings: (0, s.slot)(), getGlobalExtensionSettings: (0, s.slot)() },
        m = { evaluatePassword: (0, s.slot)() },
        v = { logEvent: (0, s.slot)(), logPageView: (0, s.slot)(), flushQueue: (0, s.slot)() },
        g = { logException: (0, s.slot)() },
        y = {
          abortDeviceLimitFlow: (0, s.slot)(),
          loginViaSSO: (0, s.slot)(),
          unlinkPreviousDevice: (0, s.slot)(),
          unlinkMultipleDevices: (0, s.slot)()
        };
      var f = r(94883),
        _ = r(22955),
        S = r(8755),
        E = r(52215),
        b = r(38578),
        w = r(73298),
        A = r(52860),
        T = r(77507),
        C = r(27794),
        I = r(73762),
        O = r(77253),
        P = r(89210),
        R = r(71316),
        D = r(92753);
      const N = (0, s.combineEvents)(
        o.td,
        i.zR,
        a.v,
        n.PO,
        c.rU,
        l,
        d.fv,
        v,
        g,
        u,
        h,
        m,
        y,
        f._m,
        _.vq,
        S.U$,
        E.of,
        b.r,
        w._,
        A.gQ,
        T.$k,
        p.H9,
        C.uG,
        I.b,
        O.hO,
        P.Kr,
        R.lp,
        D.n
      );
    },
    33820: (e, t, r) => {
      r.d(t, { z: () => C });
      var s = r(71796),
        o = r(5933),
        n = r(16537),
        i = r(57317),
        a = r(55432);
      const c = { liveAccountCreated: (0, a.H)() },
        l = { livePhishingURLList: (0, a.H)() };
      var d = r(53927),
        u = r(13149),
        p = r(38429),
        h = r(61045),
        m = r(64128),
        v = r(64001),
        g = r(94883),
        y = r(22955),
        f = r(8755),
        _ = r(52215),
        S = r(52860),
        E = r(77507),
        b = r(27794),
        w = r(77253),
        A = r(89210),
        T = r(71316);
      const C = (0, s.combineEvents)(
        o.KV,
        c,
        l,
        d.QR,
        p.F,
        n.cN,
        h.vF,
        u.QX,
        v.b,
        g.Rj,
        y._1,
        f.iX,
        _.K1,
        S.qN,
        E.EX,
        m.YW,
        b.Ll,
        i.b,
        w.dN,
        A.kh,
        T.fD
      );
    },
    38344: (e, t, r) => {
      r.d(t, { r: () => P });
      var s = r(71796),
        o = r(5933),
        n = r(16537),
        i = r(57317),
        a = r(53927);
      const c = {
        getSingleAddressForAutofill: (0, s.slot)(),
        getMultipleAddressesForAutofill: (0, s.slot)(),
        getSingleBankAccountForAutofill: (0, s.slot)(),
        getMultipleBankAccountsForAutofill: (0, s.slot)(),
        getSingleCompanyForAutofill: (0, s.slot)(),
        getMultipleCompaniesForAutofill: (0, s.slot)(),
        getSingleCredentialForAutofill: (0, s.slot)(),
        getMultipleCredentialsForAutofill: (0, s.slot)(),
        getSingleDriverLicenseForAutofill: (0, s.slot)(),
        getMultipleDriverLicensesForAutofill: (0, s.slot)(),
        getSingleEmailForAutofill: (0, s.slot)(),
        getMultipleEmailsForAutofill: (0, s.slot)(),
        getSingleFiscalIdForAutofill: (0, s.slot)(),
        getMultipleFiscalIdsForAutofill: (0, s.slot)(),
        getSingleGeneratedPasswordForAutofill: (0, s.slot)(),
        getMultipleGeneratedPasswordsForAutofill: (0, s.slot)(),
        getSingleIdCardForAutofill: (0, s.slot)(),
        getMultipleIdCardsForAutofill: (0, s.slot)(),
        getSingleIdentityForAutofill: (0, s.slot)(),
        getMultipleIdentitiesForAutofill: (0, s.slot)(),
        getSingleNoteForAutofill: (0, s.slot)(),
        getMultipleNotesForAutofill: (0, s.slot)(),
        getSinglePasskeyForAutofill: (0, s.slot)(),
        getSinglePassportForAutofill: (0, s.slot)(),
        getMultiplePassportsForAutofill: (0, s.slot)(),
        getSinglePaymentCardForAutofill: (0, s.slot)(),
        getMultiplePaymentCardsForAutofill: (0, s.slot)(),
        getSinglePersonalWebsiteForAutofill: (0, s.slot)(),
        getMultiplePersonalWebsitesForAutofill: (0, s.slot)(),
        getSinglePhoneForAutofill: (0, s.slot)(),
        getMultiplePhonesForAutofill: (0, s.slot)(),
        getSingleSocialSecurityIdForAutofill: (0, s.slot)(),
        getMultipleSocialSecurityIdsForAutofill: (0, s.slot)(),
        getAutofillSettingOnUrlForAutofill: (0, s.slot)()
      };
      var l = r(13149),
        d = r(61045),
        u = r(92753);
      const p = { getHasFeature: (0, s.slot)(), getFeatures: (0, s.slot)() };
      var h = r(64128),
        m = r(64001),
        v = r(94883),
        g = r(22955),
        y = r(8755),
        f = r(52215),
        _ = r(38578),
        S = r(73298),
        E = r(52860),
        b = r(77507);
      const w = {
        getAllBanks: (0, s.slot)(),
        getAllCallingCodes: (0, s.slot)(),
        getBanks: (0, s.slot)(),
        getSecureDocumentsExtensionsList: (0, s.slot)()
      };
      var A = r(27794),
        T = r(73762),
        C = r(77253),
        I = r(89210),
        O = r(71316);
      const P = (0, s.combineEvents)(
        o.co,
        a.ke,
        c,
        n.PG,
        d.kQ,
        l.pz,
        u.C,
        p,
        m.c,
        v.Xz,
        g.xP,
        y.Ie,
        f.A2,
        _.H,
        S.P,
        E.UW,
        b.q9,
        h.JQ,
        A.i1,
        w,
        i.E,
        T.N,
        C.XJ,
        I.Vz,
        O.T4
      );
    },
    55432: (e, t, r) => {
      r.d(t, { H: () => n });
      var s = r(71796);
      const o = { noBuffer: !0 },
        n = () => (0, s.slot)(o);
    },
    62029: (e, t, r) => {
      r.d(t, { o: () => o });
      var s = r(71796);
      const o = { log: (0, s.slot)(), info: (0, s.slot)(), warning: (0, s.slot)(), error: (0, s.slot)() };
    },
    38429: (e, t, r) => {
      r.d(t, { F: () => i, v: () => n });
      var s = r(71796),
        o = r(55432);
      const n = { changeMasterPassword: (0, s.slot)() },
        i = { liveChangeMasterPasswordStatus: (0, o.H)() };
    },
    61045: (e, t, r) => {
      r.d(t, { kQ: () => i, rU: () => n, vF: () => a });
      var s = r(71796),
        o = r(55432);
      const n = { changeUserCrypto: (0, s.slot)() },
        i = { getCanUserChangeCrypto: (0, s.slot)(), getUserDerivationMethod: (0, s.slot)() },
        a = { liveUserDerivationMethod: (0, o.H)() };
    },
    18952: (e, t, r) => {
      r.d(t, { z: () => s });
      const s = (0, r(50415).Enum)(
        "PHONE_TYPE_ANY",
        "PHONE_TYPE_MOBILE",
        "PHONE_TYPE_LANDLINE",
        "PHONE_TYPE_FAX",
        "PHONE_TYPE_WORK_MOBILE",
        "PHONE_TYPE_WORK_LANDLINE",
        "PHONE_TYPE_WORK_FAX"
      );
    },
    92753: (e, t, r) => {
      r.d(t, { C: () => o, n: () => n });
      var s = r(71796);
      const o = { getAnonymousComputerId: (0, s.slot)(), getPlatformInfo: (0, s.slot)() },
        n = { cleanRemotelyRemovedProfiles: (0, s.slot)() };
    },
    98558: (e, t, r) => {
      r.d(t, { D: () => s });
      const s = { deviceLimitCapabilityUpdated: (0, r(71796).slot)() };
    },
    98052: (e, t, r) => {
      r.d(t, { z: () => o });
      var s = r(71796);
      const o = {
        loginStatusChanged: (0, s.slot)({ noBuffer: !0 }),
        localAccountsListUpdated: (0, s.slot)({ noBuffer: !0 }),
        openSessionProgressChanged: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPForNewDeviceRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionAskMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenWarning: (0, s.slot)({ noBuffer: !0 }),
        openSessionExtraDeviceTokenRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionMasterPasswordLess: (0, s.slot)({ noBuffer: !0 }),
        openSessionSsoRedirectionToIdpRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionFailed: (0, s.slot)({ noBuffer: !0 }),
        sessionSyncStatus: (0, s.slot)({ noBuffer: !0 }),
        deactivateDeviceResult: (0, s.slot)({ noBuffer: !0 }),
        changeDeviceNameResult: (0, s.slot)({ noBuffer: !0 }),
        accountInfoChanged: (0, s.slot)({ noBuffer: !0 }),
        dataModelUpdated: (0, s.slot)({ noBuffer: !0 }),
        accountFeaturesChanged: (0, s.slot)({ noBuffer: !0 }),
        webOnboardingModeUpdated: (0, s.slot)({ noBuffer: !0 }),
        askWebsiteInfo: (0, s.slot)({ noBuffer: !0 }),
        getAccountInfo: (0, s.slot)({ noBuffer: !0 }),
        getAnonymousLogsMetadata: (0, s.slot)({ noBuffer: !0 }),
        checkIfMasterPasswordIsValid: (0, s.slot)({ noBuffer: !0 }),
        openSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        cancelDashlaneAuthenticatorRegistration: (0, s.slot)(),
        openSessionWithOTP: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithOTPForNewDevice: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openExtraDeviceSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithExtraDeviceToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionResendToken: (0, s.slot)({ noBuffer: !0 }),
        sessionForceSync: (0, s.slot)({ noBuffer: !0 }),
        closeSession: (0, s.slot)({ noBuffer: !0 }),
        lockSession: (0, s.slot)({ noBuffer: !0 }),
        exceptionLog: (0, s.slot)({ noBuffer: !0 }),
        getDevicesList: (0, s.slot)({ noBuffer: !0 }),
        getLocalAccountsList: (0, s.slot)({ noBuffer: !0 }),
        deactivateDevice: (0, s.slot)({ noBuffer: !0 }),
        changeDeviceName: (0, s.slot)({ noBuffer: !0 }),
        updateWebOnboardingMode: (0, s.slot)({ noBuffer: !0 })
      };
    },
    64128: (e, t, r) => {
      r.d(t, { H9: () => n, JQ: () => i, YW: () => a });
      var s = r(71796),
        o = r(55432);
      const n = { decipherRemoteFile: (0, s.slot)() },
        i = { getFileContent: (0, s.slot)() },
        a = { liveFileMeta: (0, o.H)() };
    },
    64001: (e, t, r) => {
      r.d(t, { b: () => i, c: () => n });
      var s = r(71796),
        o = r(55432);
      const n = {
          getIsBrazeContentDisabled: (0, s.slot)(),
          getIsLoginFlowMigrationDisabled: (0, s.slot)(),
          getIsAutoSSOLoginDisabled: (0, s.slot)()
        },
        i = {
          liveIsBrazeContentDisabled: (0, o.H)(),
          liveIsLoginFlowMigrationDisabled: (0, o.H)(),
          liveIsAutoSSOLoginDisabled: (0, o.H)()
        };
    },
    92486: (e, t, r) => {
      r.d(t, { N: () => o });
      var s = r(71796);
      const o = {
        abTestingChanged: (0, s.slot)(),
        loginStatusChanged: (0, s.slot)({ noBuffer: !0 }),
        openSessionProgressChanged: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPSent: (0, s.slot)({ noBuffer: !0 }),
        openSessionOTPForNewDeviceRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionAskMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openSessionTokenWarning: (0, s.slot)({ noBuffer: !0 }),
        openSessionExtraDeviceTokenRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionSsoRedirectionToIdpRequired: (0, s.slot)({ noBuffer: !0 }),
        openSessionMasterPasswordLess: (0, s.slot)({ noBuffer: !0 }),
        openSessionFailed: (0, s.slot)({ noBuffer: !0 }),
        sessionSyncStatus: (0, s.slot)({ noBuffer: !0 }),
        localAccountsListUpdated: (0, s.slot)(),
        spaceDataUpdated: (0, s.slot)(),
        teamAdminDataUpdated: (0, s.slot)(),
        credentialLoginUrlRetrieved: (0, s.slot)(),
        deactivateDeviceResult: (0, s.slot)(),
        changeDeviceNameResult: (0, s.slot)(),
        accountInfoChanged: (0, s.slot)(),
        accountFeaturesChanged: (0, s.slot)(),
        updatePaymentCardTokenResult: (0, s.slot)(),
        webOnboardingModeUpdated: (0, s.slot)(),
        currentLocationUpdated: (0, s.slot)(),
        checkDirectorySyncKeyRequest: (0, s.slot)(),
        encryptSettingsResultUpdated: (0, s.slot)(),
        confirmCreateAccountResultUpdated: (0, s.slot)(),
        sendSharingResponseResult: (0, s.slot)(),
        serverSidePairingStatusChanged: (0, s.slot)(),
        getUki: (0, s.slot)(),
        getAccountInfo: (0, s.slot)(),
        getDevicesList: (0, s.slot)(),
        getLocalAccountsList: (0, s.slot)(),
        getTemporaryToken: (0, s.slot)(),
        deactivateDevice: (0, s.slot)(),
        changeDeviceName: (0, s.slot)(),
        getInvoices: (0, s.slot)(),
        getPersonalSettings: (0, s.slot)(),
        openSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithDashlaneAuthenticator: (0, s.slot)({ noBuffer: !0 }),
        cancelDashlaneAuthenticatorRegistration: (0, s.slot)(),
        openSessionWithOTP: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithOTPForNewDevice: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithMasterPassword: (0, s.slot)({ noBuffer: !0 }),
        openExtraDeviceSession: (0, s.slot)({ noBuffer: !0 }),
        openSessionWithExtraDeviceToken: (0, s.slot)({ noBuffer: !0 }),
        openSessionResendToken: (0, s.slot)({ noBuffer: !0 }),
        sessionForceSync: (0, s.slot)(),
        closeSession: (0, s.slot)(),
        lockSession: (0, s.slot)({ noBuffer: !0 }),
        cancelPremiumSubscription: (0, s.slot)(),
        createUserGroup: (0, s.slot)(),
        deleteUserGroup: (0, s.slot)(),
        renameUserGroup: (0, s.slot)(),
        inviteUserGroupMembers: (0, s.slot)(),
        revokeUserGroupMembers: (0, s.slot)(),
        updateUserGroupMembers: (0, s.slot)(),
        teamUpdated: (0, s.slot)(),
        createAccountStep1: (0, s.slot)(),
        createAccountStep2: (0, s.slot)(),
        checkLogin: (0, s.slot)(),
        savePersonalDataItem: (0, s.slot)(),
        removePersonalDataItem: (0, s.slot)(),
        savePaymentCard: (0, s.slot)(),
        getMasterPasswordResetDemandList: (0, s.slot)(),
        acceptMasterPasswordResetDemand: (0, s.slot)(),
        checkIfMasterPasswordIsValid: (0, s.slot)(),
        declineMasterPasswordResetDemand: (0, s.slot)(),
        getMembers: (0, s.slot)(),
        addTeamAdmin: (0, s.slot)(),
        removeTeamAdmin: (0, s.slot)(),
        setTeamSettings: (0, s.slot)(),
        updateWebOnboardingMode: (0, s.slot)(),
        checkDirectorySyncKeyResponse: (0, s.slot)(),
        queryStaticDataCollections: (0, s.slot)(),
        sendSharingResponse: (0, s.slot)(),
        getDataModel: (0, s.slot)(),
        getSharingSync: (0, s.slot)(),
        revokeSharing: (0, s.slot)(),
        getSharingData: (0, s.slot)(),
        updateSharingPermission: (0, s.slot)(),
        setPendingElementsAsSeen: (0, s.slot)(),
        isUserLastAdminOnItem: (0, s.slot)(),
        doesUserReceiveItemViaGroup: (0, s.slot)(),
        resumeSession: (0, s.slot)(),
        exceptionLog: (0, s.slot)()
      };
    },
    94883: (e, t, r) => {
      r.d(t, { Rj: () => a, Xz: () => i, _m: () => n });
      var s = r(71796),
        o = r(55432);
      const n = { addLoginNotification: (0, s.slot)(), clearAllStoredLoginNotification: (0, s.slot)() },
        i = { getLoginNotifications: (0, s.slot)() },
        a = { liveLoginNotifications: (0, o.H)() };
    },
    22955: (e, t, r) => {
      r.d(t, { _1: () => a, vq: () => n, xP: () => i });
      var s = r(71796),
        o = r(55432);
      const n = { updateLoginStepInfo: (0, s.slot)(), resetLoginStepInfo: (0, s.slot)() },
        i = { getLoginStepInfo: (0, s.slot)() },
        a = { liveLoginStepInfo: (0, o.H)() };
    },
    35096: (e, t, r) => {
      r.d(t, { I: () => o });
      var s = r(71796);
      const o = { savePersonalDataItem: (0, s.slot)(), filledDataItem: (0, s.slot)(), updateWebOnboardingMode: (0, s.slot)() };
    },
    8755: (e, t, r) => {
      r.d(t, { Ie: () => i, U$: () => n, iX: () => a });
      var s = r(71796),
        o = r(55432);
      const n = {
          markNotificationAsInteracted: (0, s.slot)(),
          markNotificationAsSeen: (0, s.slot)(),
          markNotificationAsUnseen: (0, s.slot)()
        },
        i = { getNotificationStatus: (0, s.slot)() },
        a = { liveNotificationStatus: (0, o.H)() };
    },
    52215: (e, t, r) => {
      r.d(t, { of: () => u, K1: () => d, A2: () => l });
      var s = r(71796),
        o = r(55432);
      const n = { getLoginDeviceLimitFlow: (0, s.slot)() },
        i = { liveLoginDeviceLimitFlow: (0, o.H)() },
        a = { getTwoFactorAuthenticationInfo: (0, s.slot)() },
        c = { liveTwoFactorAuthenticationInfo: (0, o.H)() },
        l = {
          getLoginStatus: (0, s.slot)(),
          getLocalAccounts: (0, s.slot)(),
          getIsSSOUser: (0, s.slot)(),
          getSSOMigrationInfo: (0, s.slot)(),
          getSessionInfo: (0, s.slot)(),
          getMasterPasswordAndServerKey: (0, s.slot)(),
          getUserCryptoSettings: (0, s.slot)(),
          getSyncInfo: (0, s.slot)(),
          getIsSyncInProgress: (0, s.slot)(),
          getPremiumStatus: (0, s.slot)(),
          getNodePremiumStatus: (0, s.slot)(),
          getSubscriptionInformation: (0, s.slot)(),
          getActiveSpaces: (0, s.slot)(),
          getIsAuthenticated: (0, s.slot)(),
          getSSOProviderInfo: (0, s.slot)(),
          getUserLogin: (0, s.slot)(),
          getPublicUserId: (0, s.slot)(),
          getAnalyticsInstallationId: (0, s.slot)(),
          getUserLoginStatus: (0, s.slot)(),
          getWebOnboardingMode: (0, s.slot)(),
          getPremiumChurningDismissDate: (0, s.slot)(),
          getIsPaymentFailureChurningDismissed: (0, s.slot)(),
          getCredentialSearchOrder: (0, s.slot)(),
          getDidOpen: (0, s.slot)(),
          getPlatformName: (0, s.slot)(),
          getAccountAuthenticationType: (0, s.slot)(),
          ...n,
          ...a
        },
        d = {
          liveLoginStatus: (0, o.H)(),
          liveDidOpen: (0, o.H)(),
          liveIsSSOUser: (0, o.H)(),
          liveSSOMigrationInfo: (0, o.H)(),
          liveSessionInfo: (0, o.H)(),
          liveSyncInfo: (0, o.H)(),
          liveIsSyncInProgress: (0, o.H)(),
          livePremiumStatus: (0, o.H)(),
          liveServiceProviderUrl: (0, o.H)(),
          liveWebOnboardingMode: (0, o.H)(),
          liveSubscriptionInformation: (0, o.H)(),
          ...i,
          ...c
        },
        u = {
          validateToken: (0, s.slot)(),
          validateMasterPassword: (0, s.slot)(),
          resetProtectedItemAutofillTimer: (0, s.slot)(),
          forceSync: (0, s.slot)(),
          updatePremiumChurningDismissDate: (0, s.slot)(),
          setCredentialSearchOrder: (0, s.slot)(),
          refreshSubscriptionInformation: (0, s.slot)(),
          updateAccountRecoveryKeyPersonalSettings: (0, s.slot)()
        };
    },
    43956: (e, t, r) => {
      var s;
      r.d(t, { fE: () => a, vX: () => c }),
        (function (e) {
          (e[(e.NO_PREMIUM = 0)] = "NO_PREMIUM"),
            (e[(e.PREMIUM = 1)] = "PREMIUM"),
            (e[(e.PREMIUM_CANCELLED = 2)] = "PREMIUM_CANCELLED"),
            (e[(e.OLD_ACCOUNT = 3)] = "OLD_ACCOUNT"),
            (e[(e.NEW_USER = 4)] = "NEW_USER"),
            (e[(e.GRACE_PERIOD = 5)] = "GRACE_PERIOD");
        })(s || (s = {}));
      Object.freeze({
        freeTrialGranted: "free_trial_granted",
        premiumGranted: "premium_granted",
        renewed: "renewed",
        subscribed: "subscribed",
        crosssellPurchased: "crosssell_purchased",
        setAsLegacy: "set_as_legacy",
        familyCreated: "family_created",
        familyRenewed: "family_renewed"
      }),
        Object.freeze({
          Amazon: "amazon",
          FreeTrial: "free_trial",
          Invoice: "invoice",
          IOS: "ios",
          IOSRenewable: "ios_renewable",
          Legacy: "legacy",
          Mac: "mac",
          MacRenewable: "mac_renewable",
          Offer: "offer",
          Partner: "partner",
          Paypal: "paypal",
          PaypalRenewable: "paypal_renewable",
          Playstore: "playstore",
          PlaystoreRenewable: "playstore_renewable",
          Stripe: "stripe"
        });
      var o, n, i;
      !(function (e) {
        (e[(e.UNPAIRED = 0)] = "UNPAIRED"), (e[(e.PAIRED = 1)] = "PAIRED");
      })(o || (o = {})),
        (function (e) {
          (e.READY = "ready"), (e.IN_PROGRESS = "in_progress"), (e.SUCCESS = "success"), (e.FAILURE = "failure");
        })(n || (n = {})),
        (function (e) {
          (e.not_in_team = "not_in_team"), (e.proposed = "proposed"), (e.in_team = "in_team");
        })(i || (i = {}));
      Object.freeze({ Premium: "premium", Essentials: "essentials", Premiumplus: "premiumplus", BackupForAll: "backup-for-all" }),
        Object.freeze({ Team: "team", Business: "business", Legacy: "legacy", Entreprise: "entreprise", Free: "free", Starter: "starter" });
      var a, c, l;
      !(function (e) {
        (e.Accepted = "accepted"),
          (e.Pending = "pending"),
          (e.Proposed = "proposed"),
          (e.Refused = "refused"),
          (e.Removed = "removed"),
          (e.Revoked = "revoked"),
          (e.Unproposed = "unproposed");
      })(a || (a = {})),
        (function (e) {
          (e[(e.MP_TO_SSO = 0)] = "MP_TO_SSO"),
            (e[(e.MP_TO_SSO_WITH_INFO = 1)] = "MP_TO_SSO_WITH_INFO"),
            (e[(e.SSO_TO_MP = 2)] = "SSO_TO_MP");
        })(c || (c = {})),
        (function (e) {
          (e.NAME = "name"), (e.DATE = "date");
        })(l || (l = {}));
    },
    38578: (e, t, r) => {
      r.d(t, { H: () => n, r: () => o });
      var s = r(71796);
      const o = { generatePassword: (0, s.slot)(), generateAndSavePassword: (0, s.slot)(), savePasswordGenerationSettings: (0, s.slot)() },
        n = { getPasswordGenerationSettings: (0, s.slot)() };
    },
    73298: (e, t, r) => {
      r.d(t, { P: () => n, _: () => o });
      var s = r(71796);
      const o = {
          cancelAutoRenew: (0, s.slot)(),
          downloadCustomerInvoice: (0, s.slot)(),
          fetchInvoiceList: (0, s.slot)(),
          requestRefund: (0, s.slot)()
        },
        n = { getInvoicesCount: (0, s.slot)(), getInvoiceList: (0, s.slot)(), getInvoiceListYears: (0, s.slot)() };
    },
    52860: (e, t, r) => {
      r.d(t, { UW: () => i, gQ: () => n, qN: () => a });
      var s = r(71796),
        o = r(55432);
      const n = { disableCredentialProtection: (0, s.slot)(), unlockProtectedItems: (0, s.slot)() },
        i = { areProtectedItemsUnlocked: (0, s.slot)() },
        a = { liveAreProtectedItemsUnlocked: (0, o.H)() };
    },
    77507: (e, t, r) => {
      r.d(t, { $k: () => n, EX: () => a, q9: () => i });
      var s = r(71796),
        o = r(55432);
      const n = {
          activateAccountRecovery: (0, s.slot)(),
          setupMasterPasswordForRecovery: (0, s.slot)(),
          deactivateAccountRecovery: (0, s.slot)(),
          registerDeviceForRecovery: (0, s.slot)(),
          startAccountRecovery: (0, s.slot)(),
          sendRecoveryRequest: (0, s.slot)(),
          cancelRecoveryRequest: (0, s.slot)(),
          checkRecoveryRequestStatus: (0, s.slot)(),
          recoverUserData: (0, s.slot)(),
          checkDoesLocalRecoveryKeyExist: (0, s.slot)(),
          isRecoveryRequestPending: (0, s.slot)()
        },
        i = {
          getRecoveryOptInSetting: (0, s.slot)(),
          getShouldShowFeatureActivationModal: (0, s.slot)(),
          getAccountRecoveryRequestCount: (0, s.slot)()
        },
        a = { liveAccountRecoveryRequestCount: (0, o.H)() };
    },
    27794: (e, t, r) => {
      r.d(t, { Ll: () => i, i1: () => n, uG: () => a });
      var s = r(71796),
        o = r(55432);
      const n = {
          getAllSharedItemIds: (0, s.slot)(),
          getMyAcceptedItemGroupUserMembers: (0, s.slot)(),
          getMyAcceptedUserGroups: (0, s.slot)(),
          getSharingCapacity: (0, s.slot)(),
          isAllowedToShare: (0, s.slot)(),
          getUserGroups: (0, s.slot)(),
          getUserGroup: (0, s.slot)(),
          getUserGroupPermissionLevel: (0, s.slot)(),
          getUserGroupMembers: (0, s.slot)(),
          getSharingUsers: (0, s.slot)(),
          getSharingUserPermissionLevel: (0, s.slot)()
        },
        i = {
          liveAllSharedItemIds: (0, o.H)(),
          liveMyAcceptedItemGroupUserMembers: (0, o.H)(),
          liveMyAcceptedUserGroups: (0, o.H)(),
          liveSharingCapacity: (0, o.H)(),
          liveUserGroups: (0, o.H)(),
          liveUserGroupPermissionLevel: (0, o.H)(),
          liveSharingUsers: (0, o.H)(),
          liveSharingUserPermissionLevel: (0, o.H)()
        },
        a = { convertItemToDashlaneXml: (0, s.slot)(), shareItem: (0, s.slot)() };
    },
    73762: (e, t, r) => {
      r.d(t, { N: () => o, b: () => n });
      var s = r(71796);
      const o = { getIsRecoveryEnabled: (0, s.slot)() },
        n = {
          getTeamInfo: (0, s.slot)(),
          getMidCycleTierUpgradePrice: (0, s.slot)(),
          getExpectedTaxInformation: (0, s.slot)(),
          changeTierMidCycle: (0, s.slot)(),
          computePlanPricing: (0, s.slot)(),
          addSeats: (0, s.slot)()
        };
    },
    77253: (e, t, r) => {
      r.d(t, { XJ: () => n, dN: () => i, hO: () => a });
      var s = r(71796),
        o = r(55432);
      const n = {
          getAdministrableUserGroup: (0, s.slot)(),
          getAdministrableUserGroups: (0, s.slot)(),
          isGroupNameAvailable: (0, s.slot)(),
          getAdminProvisioningKey: (0, s.slot)()
        },
        i = { liveAdministrableUserGroup: (0, o.H)(), liveAdministrableUserGroups: (0, o.H)(), liveAdminProvisioningKey: (0, o.H)() },
        a = {
          registerTeamDomain: (0, s.slot)(),
          completeTeamDomainRegistration: (0, s.slot)(),
          deactivateTeamDomain: (0, s.slot)(),
          getTeamDomains: (0, s.slot)(),
          getTeamDevice: (0, s.slot)(),
          listTeamDevices: (0, s.slot)(),
          deactivateTeamDevice: (0, s.slot)(),
          registerTeamDevice: (0, s.slot)(),
          registerTeamDeviceAccount: (0, s.slot)(),
          getEncryptionServiceConfig: (0, s.slot)(),
          generateAndSaveEncryptionServiceConfig: (0, s.slot)(),
          clearSelfHostedESSettings: (0, s.slot)(),
          getTeamDeviceEncryptedConfig: (0, s.slot)(),
          updateTeamDeviceEncryptedConfig: (0, s.slot)(),
          updateTeamSettings: (0, s.slot)(),
          parseMetadataFields: (0, s.slot)(),
          persistAdminProvisioningKey: (0, s.slot)(),
          removeAdminProvisioningKey: (0, s.slot)(),
          createSSOConnectorConfig: (0, s.slot)(),
          generateSSOConnectorKey: (0, s.slot)(),
          startAuditLogsQuery: (0, s.slot)(),
          getAuditLogQueryResults: (0, s.slot)(),
          getRecoveryCodesAsTeamCaptain: (0, s.slot)(),
          createInviteLink: (0, s.slot)(),
          changeInviteLinkTeamKey: (0, s.slot)(),
          toggleInviteLink: (0, s.slot)(),
          getInviteLink: (0, s.slot)(),
          requestInviteLinkToken: (0, s.slot)(),
          getInviteLinkForAdmin: (0, s.slot)(),
          getLastADSyncDate: (0, s.slot)(),
          getSpecialUserGroupInviteValuesForMemberInTeam: (0, s.slot)(),
          getSpecialUserGroupRevision: (0, s.slot)()
        };
    },
    89210: (e, t, r) => {
      r.d(t, { Kr: () => a, Vz: () => n, kh: () => i });
      var s = r(71796),
        o = r(55432);
      const n = { getVisibleUserMessages: (0, s.slot)(), getUserMessages: (0, s.slot)() },
        i = { liveUserMessages: (0, o.H)(), liveVisibleUserMessages: (0, o.H)() },
        a = { dismissUserMessages: (0, s.slot)(), addUserMessage: (0, s.slot)() };
    },
    71316: (e, t, r) => {
      r.d(t, { T4: () => n, fD: () => i, lp: () => a });
      var s = r(71796),
        o = r(55432);
      const n = { getVpnAccount: (0, s.slot)(), getVpnCapabilitySetting: (0, s.slot)() },
        i = { liveVpnAccount: (0, o.H)() },
        a = { activateVpnAccount: (0, s.slot)(), clearVpnAccountErrors: (0, s.slot)(), completeVpnAccountActivation: (0, s.slot)() };
    },
    6936: (e, t, r) => {
      r.d(t, { W: () => E });
      var s = r(86952),
        o = r(74354),
        n = r(25029),
        i = r(66302),
        a = r(99059);
      class c extends (0, o.A)({ scope: n.F.Device }) {}
      class l extends (0, o.A)({ scope: n.F.Device }) {}
      class d extends (0, o.g)({ scope: n.F.Device }) {}
      var u;
      const p = {
        ...((u = i.z),
        Object.keys(u).reduce(
          (e, t) => ({ ...e, [`${t[0].toUpperCase().concat(t.substring(1))}Command`]: (0, o.A)({ scope: n.F.Device }) }),
          {}
        )),
        CarbonCommand: c,
        CarbonLegacyLeelooCommand: l,
        MitigationDeleteGrapheneUserDataCommand: d
      };
      var h = r(23326),
        m = r(38344),
        v = r(33820);
      class g extends (0, a.k)({ scope: n.F.Device }) {}
      class y extends (0, a.k)({ scope: n.F.Device }) {}
      var f, _;
      const S = {
          ...((f = m.r),
          (_ = v.z),
          [...Object.keys(f), ...Object.keys(_)].reduce(
            (e, t) => ({ ...e, [`${t[0].toUpperCase().concat(t.substring(1))}Query`]: (0, a.k)({ scope: n.F.Device }) }),
            {}
          )),
          CarbonStateQuery: g,
          CarbonStateListQuery: y
        },
        E = (0, s.Q)({ name: "carbon-legacy", commands: p, queries: S, events: h.U3 });
    },
    86252: (e, t, r) => {
      r.d(t, { _: () => n });
      var s = r(67837),
        o = r(6936);
      class n extends (0, s.E)(o.W) {}
      (0, s.K)(o.W, n);
    },
    23326: (e, t, r) => {
      r.d(t, { Dj: () => i, E1: () => a, U3: () => c });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.Device }) {}
      class i extends (0, s.d)({ scope: o.F.Device }) {}
      class a extends (0, s.d)({ scope: o.F.Device }) {}
      const c = { CarbonCommandResultEvent: n, CarbonLegacyEvent: i, CarbonLegacyDeviceRemotelyDeleted: a };
    },
    13149: (e, t, r) => {
      r.d(t, { fv: () => Ie, QX: () => Ce, pz: () => Te });
      var s = r(71796),
        o = r(55432);
      const n = { getBankAccount: (0, s.slot)(), getBankAccounts: (0, s.slot)() },
        i = { liveBankAccount: (0, o.H)(), liveBankAccounts: (0, o.H)() },
        a = { addBankAccount: (0, s.slot)(), updateBankAccount: (0, s.slot)(), deleteBankAccount: (0, s.slot)() },
        c = {
          getBreach: (0, s.slot)(),
          getBreaches: (0, s.slot)(),
          getBreachesPage: (0, s.slot)(),
          getBreachesPaginationToken: (0, s.slot)(),
          getBreachesUpdateStatus: (0, s.slot)()
        },
        l = { liveBreach: (0, o.H)(), liveBreaches: (0, o.H)(), liveBreachesBatch: (0, o.H)(), liveBreachesUpdaterStatus: (0, o.H)() },
        d = { updateBreachStatus: (0, s.slot)() },
        u = {
          addCollection: (0, s.slot)(),
          deleteCollection: (0, s.slot)(),
          removeItemsFromCollections: (0, s.slot)(),
          updateCollection: (0, s.slot)()
        },
        p = {
          addCredential: (0, s.slot)(),
          deleteCredential: (0, s.slot)(),
          deleteCredentialsInBulk: (0, s.slot)(),
          updateCredential: (0, s.slot)(),
          updateLinkedWebsites: (0, s.slot)()
        },
        h = {
          canUserAddNewCredential: (0, s.slot)(),
          getCredential: (0, s.slot)(),
          getCredentialCategories: (0, s.slot)(),
          getCredentials: (0, s.slot)(),
          getCredentialsByDomain: (0, s.slot)(),
          getCredentialsCount: (0, s.slot)(),
          getCredentialLimitStatus: (0, s.slot)(),
          getCredentialsPage: (0, s.slot)(),
          getCredentialsPaginationToken: (0, s.slot)(),
          getDashlaneDefinedLinkedWebsites: (0, s.slot)(),
          getShouldShowRequireMasterPassword: (0, s.slot)()
        },
        m = {
          liveCanUserAddNewCredential: (0, o.H)(),
          liveCredential: (0, o.H)(),
          liveCredentials: (0, o.H)(),
          liveCredentialsByDomain: (0, o.H)(),
          liveCredentialsBatch: (0, o.H)(),
          liveCredentialsCount: (0, o.H)(),
          liveCredentialLimitStatus: (0, o.H)()
        },
        v = { getIsForcedDomainsEnabled: (0, s.slot)() },
        g = { getPersonalDataExport: (0, s.slot)() },
        y = {
          getGeneratedPassword: (0, s.slot)(),
          getGeneratedPasswordsCount: (0, s.slot)(),
          getGeneratedPasswords: (0, s.slot)(),
          getGeneratedPasswordsPage: (0, s.slot)(),
          getGeneratedPasswordsPaginationToken: (0, s.slot)()
        },
        f = { liveGeneratedPasswordsCount: (0, o.H)(), liveGeneratedPasswords: (0, o.H)() },
        _ = { saveGeneratedPassword: (0, s.slot)() },
        S = { getDriverLicense: (0, s.slot)(), getDriverLicenses: (0, s.slot)() },
        E = { liveDriverLicense: (0, o.H)(), liveDriverLicenses: (0, o.H)() },
        b = { addDriverLicense: (0, s.slot)(), editDriverLicense: (0, s.slot)(), deleteDriverLicense: (0, s.slot)() },
        w = { getFiscalId: (0, s.slot)(), getFiscalIds: (0, s.slot)() },
        A = { liveFiscalId: (0, o.H)(), liveFiscalIds: (0, o.H)() },
        T = { addFiscalId: (0, s.slot)(), editFiscalId: (0, s.slot)(), deleteFiscalId: (0, s.slot)() },
        C = { getIdCard: (0, s.slot)(), getIdCards: (0, s.slot)() },
        I = { liveIdCard: (0, o.H)(), liveIdCards: (0, o.H)() },
        O = { addIdCard: (0, s.slot)(), editIdCard: (0, s.slot)(), deleteIdCard: (0, s.slot)() },
        P = { getPassport: (0, s.slot)(), getPassports: (0, s.slot)() },
        R = { livePassport: (0, o.H)(), livePassports: (0, o.H)() },
        D = { addPassport: (0, s.slot)(), editPassport: (0, s.slot)(), deletePassport: (0, s.slot)() },
        N = { getSocialSecurityId: (0, s.slot)(), getSocialSecurityIds: (0, s.slot)() },
        U = { liveSocialSecurityId: (0, o.H)(), liveSocialSecurityIds: (0, o.H)() },
        L = { addSocialSecurityId: (0, s.slot)(), editSocialSecurityId: (0, s.slot)(), deleteSocialSecurityId: (0, s.slot)() },
        F = (0, s.combineEvents)(S, w, C, P, N),
        M = (0, s.combineEvents)(E, A, I, R, U),
        x = (0, s.combineEvents)(b, T, O, D, L),
        k = { getImportPersonalDataStatus: (0, s.slot)() },
        G = { liveImportPersonalDataStatus: (0, o.H)() },
        K = {
          importPersonalData: (0, s.slot)(),
          previewPersonalData: (0, s.slot)(),
          dismissPersonalDataImportNotifications: (0, s.slot)()
        },
        V = { getPasskey: (0, s.slot)(), getPasskeys: (0, s.slot)(), getPasskeysForDomain: (0, s.slot)() },
        j = { livePasskey: (0, o.H)(), livePasskeys: (0, o.H)() },
        B = { addPasskey: (0, s.slot)(), updatePasskey: (0, s.slot)(), deletePasskey: (0, s.slot)() },
        W = {
          getPasswordHistory: (0, s.slot)(),
          getHasPasswordHistory: (0, s.slot)(),
          getPasswordHistoryPage: (0, s.slot)(),
          getPasswordHistoryPaginationToken: (0, s.slot)()
        },
        H = { livePasswordHistory: (0, o.H)(), livePasswordHistoryBatch: (0, o.H)() },
        z = { getPaymentCard: (0, s.slot)(), getPaymentCards: (0, s.slot)() },
        Q = { livePaymentCard: (0, o.H)(), livePaymentCards: (0, o.H)() },
        q = { addPaymentCard: (0, s.slot)(), updatePaymentCard: (0, s.slot)(), deletePaymentCard: (0, s.slot)() },
        Y = { getAddresses: (0, s.slot)(), getAddress: (0, s.slot)() },
        $ = { liveAddress: (0, o.H)(), liveAddresses: (0, o.H)() },
        X = { getCompanies: (0, s.slot)(), getCompany: (0, s.slot)() },
        Z = { liveCompanies: (0, o.H)(), liveCompany: (0, o.H)() },
        J = { getEmail: (0, s.slot)(), getEmails: (0, s.slot)() },
        ee = { liveEmail: (0, o.H)(), liveEmails: (0, o.H)() },
        te = { getIdentities: (0, s.slot)(), getIdentitiesCount: (0, s.slot)(), getIdentity: (0, s.slot)() },
        re = { liveIdentities: (0, o.H)(), liveIdentitiesCount: (0, o.H)(), liveIdentity: (0, o.H)() },
        se = { getPhone: (0, s.slot)(), getPhones: (0, s.slot)() },
        oe = { livePhone: (0, o.H)(), livePhones: (0, o.H)() },
        ne = { getPersonalWebsite: (0, s.slot)(), getPersonalWebsites: (0, s.slot)() },
        ie = { livePersonalWebsite: (0, o.H)(), livePersonalWebsites: (0, o.H)() },
        ae = (0, s.combineEvents)(Y, X, J, te, se, ne),
        ce = (0, s.combineEvents)($, Z, ee, re, oe, ie),
        le = {
          getSecureFilesQuota: (0, s.slot)(),
          getSecureFilesInfoList: (0, s.slot)(),
          getFileDownloadProgress: (0, s.slot)(),
          getFileUploadProgress: (0, s.slot)()
        },
        de = { liveSecureFilesQuota: (0, o.H)(), liveFileDownloadProgress: (0, o.H)(), liveFileUploadProgress: (0, o.H)() },
        ue = {
          downloadSecureFile: (0, s.slot)(),
          chunkTransferDone: (0, s.slot)(),
          deleteSecureFile: (0, s.slot)(),
          addSecureFile: (0, s.slot)(),
          validateSecureFile: (0, s.slot)(),
          commitSecureFile: (0, s.slot)(),
          initSecureFilesStorageInfo: (0, s.slot)(),
          clearSecureFileState: (0, s.slot)()
        },
        pe = { setupDefaultNoteCategories: (0, s.slot)() },
        he = {
          getNote: (0, s.slot)(),
          getNoteCategories: (0, s.slot)(),
          getNotes: (0, s.slot)(),
          getNotesCount: (0, s.slot)(),
          getNotesPage: (0, s.slot)(),
          getNotesPaginationToken: (0, s.slot)()
        },
        me = { liveNote: (0, o.H)(), liveNotes: (0, o.H)(), liveNotesBatch: (0, o.H)(), liveNotesCount: (0, o.H)() },
        ve = { addSecureNote: (0, s.slot)(), updateSecureNote: (0, s.slot)(), deleteSecureNote: (0, s.slot)() },
        ge = { getAnonymousUserId: (0, s.slot)(), getIsUrlBanished: (0, s.slot)(), arePasswordsProtected: (0, s.slot)() },
        ye = { liveArePasswordsProtected: (0, o.H)() },
        fe = { toggleDashlane: (0, s.slot)(), updateProtectPasswordsSetting: (0, s.slot)(), updateAutofillSettings: (0, s.slot)() },
        _e = { getSpace: (0, s.slot)(), getSpaces: (0, s.slot)() },
        Se = { getAutofillProtectionContext: (0, s.slot)() },
        Ee = { disableVaultItemProtection: (0, s.slot)() },
        be = {
          getSecret: (0, s.slot)(),
          getSecrets: (0, s.slot)(),
          getSecretsCount: (0, s.slot)(),
          getSecretsPage: (0, s.slot)(),
          getSecretsPaginationToken: (0, s.slot)()
        },
        we = { liveSecret: (0, o.H)(), liveSecrets: (0, o.H)(), liveSecretsBatch: (0, o.H)(), liveSecretsCount: (0, o.H)() },
        Ae = { addSecret: (0, s.slot)(), updateSecret: (0, s.slot)(), deleteSecret: (0, s.slot)() },
        Te = (0, s.combineEvents)(n, c, h, v, y, F, k, he, V, W, z, ae, be, le, ge, _e, Se),
        Ce = (0, s.combineEvents)(i, l, m, f, M, G, me, j, H, Q, ce, we, de, ye),
        Ie = (0, s.combineEvents)(a, d, u, p, g, _, x, K, ve, B, q, Ae, ue, pe, fe, Ee);
    },
    61476: (e, t, r) => {
      r.d(t, { J: () => a });
      var s = r(86952),
        o = r(46047),
        n = r(70219),
        i = r(26331);
      const a = (0, s.Q)({
        name: "permissions",
        commands: { addGroupManager: o.B, removeGroupManager: n.d },
        events: {},
        queries: { userPermissions: i.l }
      });
    },
    46047: (e, t, r) => {
      r.d(t, { B: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    70219: (e, t, r) => {
      r.d(t, { d: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    26331: (e, t, r) => {
      r.d(t, { l: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    43897: (e, t, r) => {
      r.d(t, { B: () => T });
      var s,
        o = r(88802),
        n = r(99634),
        i = r(61476),
        a = r(93850),
        c = r(63663),
        l = r(46047),
        d = r(60399),
        u = r(57924),
        p = r(87113),
        h = r(86252),
        m = r(87279),
        v = r(48844);
      !(function (e) {
        e[(e.GroupManager = 0)] = "GroupManager";
      })(s || (s = {}));
      let g = class {
        constructor(e, t) {
          (this.serverApiClient = e), (this.carbonLegacyClient = t);
        }
        async addRole({ role: e, params: t }) {
          if (e === s.GroupManager) return await this.addGroupManager(t);
        }
        async removeRole({ role: e, params: t }) {
          if (e === s.GroupManager) return await this.removeGroupManager(t);
        }
        async getSpecialUserGroupRevision(e) {
          const {
              commands: { carbon: t }
            } = this.carbonLegacyClient,
            r = await t({ name: "getSpecialUserGroupRevision", args: [{ teamId: e }] });
          let s;
          if (!(0, m.d6)(r)) throw r.error.error;
          {
            const { carbonResult: e } = r.data,
              { specialUserGroupRevision: t } = e;
            s = t;
          }
          return s;
        }
        async removeGroupManager({ memberLogin: e, teamId: t }) {
          const r = await this.getSpecialUserGroupRevision(t);
          return await (0, d.z)(
            this.serverApiClient.v1.teams.removeGroupManager({ memberLogin: e, userGroupRevision: r }).pipe(
              (0, v.DZ)((e) => {
                throw new Error(e.message);
              }),
              (0, v.lk)((e) => {
                if (e.data) return (0, m.Vp)(void 0);
                throw new Error("Unknown server error occurred while attempting to remove group manager");
              })
            )
          );
        }
        async addGroupManager({ memberLogin: e, teamId: t }) {
          const r = await this.getSpecialUserGroupRevision(t),
            {
              commands: { carbon: s }
            } = this.carbonLegacyClient,
            o = await s({ name: "getSpecialUserGroupInviteValuesForMemberInTeam", args: [{ memberLogin: e, teamId: t }] });
          let n = "",
            i = "";
          if (!(0, m.d6)(o)) throw o.error.error;
          {
            const { carbonResult: e } = o.data,
              { groupKey: t, proposeSignature: r } = e;
            (n = t), (i = r);
          }
          return await (0, d.z)(
            this.serverApiClient.v1.teams.addGroupManager({ memberLogin: e, groupKey: n, proposeSignature: i, userGroupRevision: r }).pipe(
              (0, v.DZ)((e) => {
                throw new Error(e.message);
              }),
              (0, v.lk)((e) => {
                if (e.data) return (0, m.Vp)(void 0);
                throw new Error("Unknown server error occurred while attempting to add group manager");
              })
            )
          );
        }
      };
      g = (0, o.__decorate)([(0, u.GS)(), (0, o.__metadata)("design:paramtypes", [p.l, h._])], g);
      let y = class {
        constructor(e) {
          this.roleService = e;
        }
        async execute({ body: e }) {
          return await this.roleService.addRole({ role: s.GroupManager, params: e });
        }
      };
      y = (0, o.__decorate)([(0, c.W)(l.B), (0, o.__metadata)("design:paramtypes", [g])], y);
      var f = r(70219);
      let _ = class {
        constructor(e) {
          this.roleService = e;
        }
        async execute({ body: e }) {
          return await this.roleService.removeRole({ role: s.GroupManager, params: e });
        }
      };
      _ = (0, o.__decorate)([(0, c.W)(f.d), (0, o.__metadata)("design:paramtypes", [g])], _);
      var S = r(26331),
        E = r(20754);
      const b = r(7165).z.enum(["ALL", "BILLING_EDIT", "BILLING_READ", "GROUP_CREATE", "GROUP_DELETE", "GROUP_EDIT", "GROUP_READ"]);
      let w = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        getActiveUserPermissions() {
          return this.serverApiClient.v1.teams.getUserPermissions().pipe(
            (0, v.DZ)((e) => {
              throw new Error(`getUserPermissions failed with error: ${e}`);
            }),
            (0, v.lk)((e) => (0, m.Vp)(this.serverToDomainPermissionsMapper(e.data.permissions)))
          );
        }
        serverToDomainPermissionsMapper(e) {
          return e.filter((e) => b.safeParse(e).success);
        }
      };
      w = (0, o.__decorate)([(0, u.GS)(), (0, o.__metadata)("design:paramtypes", [p.l])], w);
      let A = class {
        constructor(e) {
          this.permissionsService = e;
        }
        execute() {
          return this.permissionsService.getActiveUserPermissions();
        }
      };
      A = (0, o.__decorate)([(0, E.e)(S.l), (0, o.__metadata)("design:paramtypes", [w])], A);
      let T = class {};
      T = (0, o.__decorate)(
        [
          (0, n.Y)({
            api: i.J,
            imports: [a.n],
            providers: [w, g],
            handlers: { commands: { addGroupManager: y, removeGroupManager: _ }, events: {}, queries: { userPermissions: A } }
          })
        ],
        T
      );
    },
    18183: (e, t, r) => {
      r.d(t, { j: () => S });
      var s = r(86952),
        o = r(13060),
        n = r(22481),
        i = r(74593),
        a = r(23823),
        c = r(78519),
        l = r(6790),
        d = r(78548),
        u = r(60017),
        p = r(24662),
        h = r(77539),
        m = r(22632),
        v = r(14074),
        g = r(40956),
        y = r(22618),
        f = r(36261),
        _ = r(80448);
      const S = (0, s.Q)({
        name: "accountRecoveryKey",
        commands: {
          goToActivationNextStep: o.Z,
          goToActivationPrevStep: n.H,
          requestActivation: i.e,
          cancelActivation: a.w,
          cancelGeneration: c.r,
          confirmActivation: l.W,
          confirmNewPassword: d.v,
          deactivate: u.E,
          submitRecoveryKey: p.Y,
          tryAgainRecovery: h.d,
          cancelRecoveryFlow: m.b,
          startRecoveryFlow: v.Q
        },
        queries: { activationFlowStatus: g.S, accountRecoveryKeyStatus: y.D, recoveryFlowStatus: f.y, recoveryMethodsInfo: _.V },
        events: {}
      });
    },
    23823: (e, t, r) => {
      r.d(t, { w: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    78519: (e, t, r) => {
      r.d(t, { r: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    22632: (e, t, r) => {
      r.d(t, { b: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    6790: (e, t, r) => {
      r.d(t, { W: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    78548: (e, t, r) => {
      r.d(t, { v: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    60017: (e, t, r) => {
      r.d(t, { E: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    13060: (e, t, r) => {
      r.d(t, { Z: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    22481: (e, t, r) => {
      r.d(t, { H: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    74593: (e, t, r) => {
      r.d(t, { e: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    14074: (e, t, r) => {
      r.d(t, { Q: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    24662: (e, t, r) => {
      r.d(t, { Y: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    77539: (e, t, r) => {
      r.d(t, { d: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    22618: (e, t, r) => {
      r.d(t, { D: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    40956: (e, t, r) => {
      r.d(t, { S: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    36261: (e, t, r) => {
      r.d(t, { y: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    80448: (e, t, r) => {
      r.d(t, { V: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    32537: (e, t, r) => {
      r.d(t, { D: () => yt });
      var s = r(88802),
        o = r(18183),
        n = r(11433),
        i = r(99634),
        a = r(38679),
        c = r(9671),
        l = r(93850),
        d = r(37935),
        u = r(80310),
        p = r(87279),
        h = r(63663),
        m = r(13060),
        v = r(78065),
        g = r(24966),
        y = r(57924),
        f = r(53446),
        _ = r(37294),
        S = r(65865),
        E = r(18275),
        b = r(60399),
        w = r(30523),
        A = r(87065),
        T = r(86252),
        C = r(87113),
        I = r(48844),
        O = r(18533),
        P = r(20195),
        R = r(25029),
        D = r(95681),
        N = r(23347);
      const U = (e) => !(!e || "object" != typeof e) && "isEnabled" in e;
      class L extends (0, D.Q)({
        initialValue: { isEnabled: void 0, login: void 0 },
        persist: !1,
        scope: R.F.Device,
        storeName: "account-recovery-key",
        storeTypeGuard: U,
        capacity: N.Y._001KB
      }) {}
      const F = ["email_token", "totp", "duo_push", "dashlane_authenticator"],
        M = (e) => "object" == typeof e && "type" in e;
      var x,
        k = r(96168);
      !(function (e) {
        (e.GENERIC_ERROR = "GENERIC_ERROR"),
          (e.NETWORK_ERROR = "NETWORK_ERROR"),
          (e.INITIALIZE_MACHINE_ERROR = "INITIALIZE_MACHINE_ERROR"),
          (e.WRONG_RECOVERY_KEY_ERROR = "WRONG_RECOVERY_KEY_ERROR"),
          (e.CHANGE_MASTER_PASSWORD_ERROR = "CHANGE_MASTER_PASSWORD_ERROR");
      })(x || (x = {}));
      class G extends (0, k.Hu)(x.NETWORK_ERROR, "There is an issue with your connection") {}
      let K = class {
        constructor(e, t, r) {
          (this.store = e), (this.serverApiClient = t), (this.carbon = r);
        }
        getAuthTicketInfo() {
          const { carbonState: e } = this.carbon.queries;
          return (0, b.z)(
            e({ path: "userSession.authTicketInfo" }).pipe(
              (0, I.nb)({
                success: (e) => e,
                failure: () => {
                  throw new Error("Failure getting auth ticket info");
                }
              })
            )
          );
        }
        retrieveLocalAccounts() {
          const { carbonState: e } = this.carbon.queries;
          return (0, b.z)(
            e({ path: "authentication.localAccounts" }).pipe(
              (0, w.h)(p.d6),
              (0, w.h)((e) => e.data.accountsListInitialized),
              (0, A.U)((e) => e.data.accountsList)
            )
          );
        }
        async getCurrentPersonalSettings() {
          const { carbonStateList: e } = this.carbon.queries;
          return await (0, b.z)(
            e({ paths: ["userSession.personalSettings.AccountRecoveryKey", "userSession.personalSettings.AccountRecoveryKeyId"] }).pipe(
              (0, I.nb)({
                success: ([e, t]) => ({ AccountRecoveryKey: e, AccountRecoveryKeyId: t }),
                failure: () => {
                  throw new Error("Failure getting state list");
                }
              })
            )
          );
        }
        getLastAuthenticatedUserRecoveryData() {
          return this.store.state$.pipe((0, A.U)((e) => ({ isEnabled: e.isEnabled, login: e.login })));
        }
        async updateLastAuthenticatedUserRecoveryStatus(e) {
          if (!e) throw new Error("No user login provided");
          const t = await (0, b.z)(this.serverApiClient.v1.accountrecovery.getStatus({ login: e }));
          if ((0, p.hx)(t)) throw new Error("Server call failed");
          await this.store.set({ isEnabled: t.data.data.enabled, login: e });
        }
        async generateRecoveryKey() {
          const { carbon: e } = this.carbon.commands,
            t = { length: 28, digits: !0, letters: !0, avoidAmbiguous: !0, symbols: !1 };
          return await e({ name: "generatePassword", args: [{ settings: t }] });
        }
        async setPersonalSettings(e) {
          const { carbon: t } = this.carbon.commands;
          return await t({ name: "updateAccountRecoveryKeyPersonalSettings", args: [e] });
        }
        async getAccountInfo(e) {
          return await (0, b.z)(
            this.serverApiClient.v1.authentication.getAuthenticationMethodsForDevice({ login: e, methods: F }).pipe(
              (0, I.DZ)((e) =>
                (0, O.EQ)(e, {
                  BusinessError: () => {
                    throw new Error(x.GENERIC_ERROR);
                  },
                  FetchFailedError: () => new G(),
                  InternalServerError: P.j,
                  InvalidRequest: P.j,
                  RateLimited: P.j,
                  ServiceUnavailable: P.j,
                  UnspecifiedBadStatus: P.j
                })
              ),
              (0, I.lk)((e) => {
                const t = e.data.verifications.find(M);
                if (t) return (0, p.Vp)({ verificationMethod: t, accountType: e.data.accountType });
                throw new Error("Unsupported authentication method");
              })
            )
          );
        }
        async requestActivation(e) {
          return await (0, b.z)(
            this.serverApiClient.v1.accountrecovery.requestActivation({ encryptedVaultKey: e }).pipe(
              (0, I.DZ)((e) =>
                (0, O.EQ)(e, {
                  BusinessError: () => {
                    throw new Error(x.GENERIC_ERROR);
                  },
                  FetchFailedError: () => new G(),
                  UnspecifiedBadStatus: P.j,
                  InternalServerError: P.j,
                  InvalidRequest: P.j,
                  RateLimited: P.j,
                  ServiceUnavailable: P.j
                })
              ),
              (0, I.lk)((e) => {
                if (e.data.recoveryId) return (0, p.Vp)(e.data.recoveryId);
                throw new Error(x.GENERIC_ERROR);
              })
            )
          );
        }
        async confirmActivation(e) {
          return await (0, b.z)(
            this.serverApiClient.v1.accountrecovery.confirmActivation({ recoveryId: e }).pipe(
              (0, I.DZ)((e) =>
                (0, O.EQ)(e, {
                  BusinessError: () => {
                    throw new Error(x.GENERIC_ERROR);
                  },
                  FetchFailedError: () => new G(),
                  UnspecifiedBadStatus: P.j,
                  InternalServerError: P.j,
                  InvalidRequest: P.j,
                  RateLimited: P.j,
                  ServiceUnavailable: P.j
                })
              ),
              (0, I.lk)(() => (0, p.Vp)(void 0))
            )
          );
        }
        async deactivate(e) {
          return await (0, b.z)(
            this.serverApiClient.v1.accountrecovery.deactivate({ reason: e }).pipe(
              (0, I.DZ)((e) =>
                (0, O.EQ)(e, {
                  BusinessError: () => {
                    throw new Error(x.GENERIC_ERROR);
                  },
                  FetchFailedError: () => new G(),
                  UnspecifiedBadStatus: P.j,
                  InternalServerError: P.j,
                  InvalidRequest: P.j,
                  RateLimited: P.j,
                  ServiceUnavailable: P.j
                })
              ),
              (0, I.lk)(() => (0, p.Vp)(void 0))
            )
          );
        }
        async getEncryptedVaultKey(e, t) {
          return await (0, b.z)(
            this.serverApiClient.v1.accountrecovery.getEncryptedVaultKey({ login: e, authTicket: t }).pipe(
              (0, I.DZ)((e) =>
                (0, O.EQ)(e, {
                  BusinessError: () => {
                    throw new Error(x.GENERIC_ERROR);
                  },
                  FetchFailedError: () => new G(),
                  UnspecifiedBadStatus: P.j,
                  InternalServerError: P.j,
                  InvalidRequest: P.j,
                  RateLimited: P.j,
                  ServiceUnavailable: P.j
                })
              ),
              (0, I.lk)((e) => {
                const { encryptedVaultKey: t, recoveryId: r } = e.data;
                if (t && r) return (0, p.Vp)({ encryptedVaultKey: t, recoveryId: r });
                throw new Error(x.GENERIC_ERROR);
              })
            )
          );
        }
      };
      K = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [L, C.l, T._])], K);
      let V = class {
        constructor(e) {
          this.recoveryKeyService = e;
        }
        async execute() {
          try {
            const e = await (0, b.z)(this.recoveryKeyService.getLastAuthenticatedUserRecoveryData());
            return Promise.resolve({ isFeatureEnabled: e.isEnabled, recoveryKey: "", recoveryId: "", encryptedVaultKey: "" });
          } catch (e) {
            return Promise.reject(new Error("Unable to retrieve initialization data"));
          }
        }
      };
      V = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [K])], V);
      var j = r(54066),
        B = r(10370),
        W = r(89685),
        H = r(56268),
        z = r(66122),
        Q = r(94805),
        q = r(16698);
      let Y = class {
        constructor(e, t) {
          (this.carbon = e), (this.flexibleEncryptor = t);
        }
        makeDerivationConfig(e) {
          const [, , t] = e.split("$");
          return "pbkdf2" === t ? Q.E1 : Q.mr;
        }
        async getUserCryptoConfig() {
          const { carbonStateList: e } = this.carbon.queries;
          return await (0, b.z)(
            e({ paths: ["userSession.personalSettings.CryptoFixedSalt", "userSession.personalSettings.CryptoUserPayload"] }).pipe(
              (0, I.nb)({
                success: ([e, t]) => {
                  if ("string" != typeof e) throw new Error("Fixed salt is not a string");
                  if ("string" != typeof t) throw new Error("Marker is not a string");
                  return { fixedSalt: e, derivationConfig: this.makeDerivationConfig(t) };
                },
                failure: () => {
                  throw new Error("Failure getting state list");
                }
              })
            )
          );
        }
        async getUserMasterPassword() {
          const { carbonState: e } = this.carbon.queries;
          return await (0, b.z)(
            e({ path: "userSession.session.masterPassword" }).pipe(
              (0, A.U)((e) => {
                if (!(0, p.d6)(e)) throw new Error("Error when fetching master password from session");
                const t = e.data;
                if ("string" != typeof t) throw new Error("Result data is not a string");
                return (0, j.u)(t);
              })
            )
          );
        }
        async encrypt(e) {
          const t = await this.getUserMasterPassword(),
            { derivationConfig: r, fixedSalt: s } = await this.getUserCryptoConfig();
          return await this.flexibleEncryptor.encrypt(e, t, r, q.Nw, { salt: (0, z.R)(s) });
        }
      };
      Y = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [T._, H._])], Y);
      let $ = class {
        constructor(e, t) {
          (this.accountRecoveryKeyService = e), (this.recoveryKeyEncryptor = t);
        }
        async executeWithParams(e) {
          if (e.recoveryKey)
            return (0, p.Vp)({ recoveryKey: e.recoveryKey, encryptedVaultKey: e.encryptedVaultKey, recoveryId: e.recoveryId });
          const t = await this.accountRecoveryKeyService.generateRecoveryKey();
          if ((0, p.hx)(t)) return (0, p.Rn)({ tag: x.GENERIC_ERROR });
          const r = (0, j.u)(t.data.carbonResult.password.toUpperCase()),
            s = await this.recoveryKeyEncryptor.encrypt(r),
            o = (0, B.s)(s),
            n = await this.accountRecoveryKeyService.requestActivation(o);
          return (0, p.hx)(n)
            ? (0, p.Rn)({ tag: n.error.tag })
            : (0, p.Vp)({ recoveryKey: (0, W.v)(r), encryptedVaultKey: o, recoveryId: n.data });
        }
      };
      $ = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [K, Y])], $);
      var X = r(93039),
        Z = r(76183),
        J = r(89358);
      let ee = class {
        constructor(e, t, r) {
          (this.accountRecoveryKeyService = e), (this.syncService = t), (this.session = r);
        }
        async executeWithParams(e, t) {
          const r = await this.accountRecoveryKeyService.getCurrentPersonalSettings(),
            s = { AccountRecoveryKey: e, AccountRecoveryKeyId: t };
          if (
            (await this.accountRecoveryKeyService.setPersonalSettings(s),
            (0, p.hx)(await this.syncService.waitForSync(X.Trigger.SettingsChange)))
          )
            return await this.accountRecoveryKeyService.setPersonalSettings(r), (0, p.Rn)({ tag: x.GENERIC_ERROR });
          const o = await this.accountRecoveryKeyService.confirmActivation(t);
          if ((0, p.hx)(o))
            return (
              await this.accountRecoveryKeyService.setPersonalSettings(r),
              (0, p.hx)(await this.syncService.waitForSync(X.Trigger.SettingsChange))
                ? (0, p.Rn)({ tag: x.GENERIC_ERROR })
                : (0, p.Rn)({ tag: o.error.tag })
            );
          const n = await (0, b.z)(this.session.queries.selectedOpenedSession());
          if (!(0, p.d6)(n) || !n.data) throw new Error("No users logged in");
          return await this.accountRecoveryKeyService.updateLastAuthenticatedUserRecoveryStatus(n.data), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      ee = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [K, Z._, J.x])], ee);
      var te = r(48038);
      let re = class {
        constructor(e, t, r) {
          (this.initializeMachineService = e), (this.requestActivationService = t), (this.confirmActivationService = r);
        }
        desc() {
          const e = {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              initial: "Starting",
              id: "ActivationFlowMachine",
              context: { isFeatureEnabled: !1, recoveryKey: "", recoveryId: "", encryptedVaultKey: "" },
              states: {
                Starting: {
                  invoke: {
                    src: "initializeMachine",
                    onDone: [
                      { actions: ["assignInitialContext"], target: "InitAccountRecoveryKeyActivation", cond: "isActivationFlow" },
                      { actions: ["assignInitialContext"], target: "GenerateNewAccountRecoveryKey" }
                    ]
                  }
                },
                InitAccountRecoveryKeyActivation: { on: { REQUEST_ACTIVATION: { target: "RequestingActivation" } } },
                RequestingActivation: {
                  invoke: {
                    src: "requestActivation",
                    onDone: [
                      { cond: "isFunctionalError", actions: ["assignFunctionalError"], target: "AccountRecoveryKeyActivationError" },
                      { actions: ["assignKeys"], target: "DisplayAccountRecoveryKey" }
                    ],
                    onError: { actions: ["assignGenericError"], target: "AccountRecoveryKeyActivationError" }
                  }
                },
                DisplayAccountRecoveryKey: { on: { GO_TO_NEXT_STEP: { target: "ConfirmAccountRecoveryKey" } } },
                ConfirmAccountRecoveryKey: {
                  on: {
                    GO_TO_NEXT_STEP: { target: "FinalisingAccountRecoveryKeyActivation" },
                    GO_TO_PREV_STEP: { target: "DisplayAccountRecoveryKey" }
                  }
                },
                FinalisingAccountRecoveryKeyActivation: {
                  invoke: {
                    src: "confirmActivation",
                    onDone: [
                      { cond: "isFunctionalError", actions: ["assignFunctionalError"], target: "AccountRecoveryKeyActivationError" },
                      { target: "AccountRecoveryKeyActivationDone" }
                    ],
                    onError: { actions: ["assignGenericError"], target: "AccountRecoveryKeyActivationError" }
                  }
                },
                AccountRecoveryKeyActivationDone: {},
                GenerateNewAccountRecoveryKey: {
                  on: {
                    REQUEST_ACTIVATION: { target: "RequestingActivation" },
                    CANCEL_GENERATION: { target: "CancelNewAccountRecoveryKey" }
                  }
                },
                CancelNewAccountRecoveryKey: { on: { GO_TO_PREV_STEP: { target: "GenerateNewAccountRecoveryKey" } } },
                AccountRecoveryKeyActivationError: {}
              },
              on: { RESET_FLOW: { actions: ["clearContext"], target: "Starting" } }
            },
            options: {
              actions: {
                assignInitialContext: (0, S.f0)({
                  encryptedVaultKey: (e, t) => t.data.encryptedVaultKey,
                  recoveryKey: (e, t) => t.data.recoveryKey,
                  recoveryId: (e, t) => t.data.recoveryId,
                  isFeatureEnabled: (e, t) => t.data.isFeatureEnabled
                }),
                assignKeys: (0, S.f0)({
                  recoveryKey: (e, t) => t.data.data.recoveryKey,
                  encryptedVaultKey: (e, t) => t.data.data.encryptedVaultKey,
                  recoveryId: (e, t) => t.data.data.recoveryId
                }),
                assignFunctionalError: (0, S.f0)({ error: (e, t) => t.data.error.tag }),
                assignGenericError: (0, S.f0)({ error: () => x.GENERIC_ERROR }),
                clearContext: (0, S.f0)({ encryptedVaultKey: () => "", recoveryKey: () => "", recoveryId: () => "", error: () => {} })
              },
              services: {
                initializeMachine: () => this.initializeMachineService.execute(),
                requestActivation: (e) => this.requestActivationService.executeWithParams(e),
                confirmActivation: (e) => this.confirmActivationService.executeWithParams(e.recoveryKey, e.recoveryId)
              },
              guards: {
                isActivationFlow: (e, t) =>
                  (function (e) {
                    return e.type.startsWith("done.invoke.ActivationFlowMachine.Starting");
                  })(t) && !t.data.isFeatureEnabled,
                isFunctionalError: (e, t) =>
                  ((function (e) {
                    return e.type.startsWith("done.invoke.ActivationFlowMachine.RequestingActivation");
                  })(t) ||
                    (function (e) {
                      return e.type.startsWith("done.invoke.ActivationFlowMachine.FinalisingAccountRecoveryKeyActivation");
                    })(t)) &&
                  (0, p.hx)(t.data)
              }
            }
          };
          return (0, te.G)(e.config), e;
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, E.C)(e, t);
        }
      };
      re = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [V, $, ee])], re);
      var se = r(8362);
      const oe = (e) => !0;
      class ne extends (0, D.Q)({
        initialValue: void 0,
        persist: !1,
        scope: R.F.Device,
        storeName: "activation-flow-machine",
        storeTypeGuard: oe
      }) {}
      let ie = class {
        constructor(e, t, r) {
          (this.activationMachineStore = t), (this.allowedToFail = r), (this.activationMachineStore = t);
          const s = e.create();
          this.interpreter = v
            .kJ(s)
            .onTransition((0, f.V)(this.allowedToFail))
            .onEvent((0, _.V)(this.allowedToFail))
            .onTransition(async () => {
              const e = this.interpreter?.getSnapshot();
              e &&
                (await (async (e, t) => {
                  await e.set(JSON.stringify(t));
                })(this.activationMachineStore, e));
            });
        }
        async prepare() {
          if (this.interpreter)
            try {
              const e = await (async (e) => {
                const t = await e.getState();
                return t ? se.ZM.create(JSON.parse(t)) : void 0;
              })(this.activationMachineStore);
              try {
                this.interpreter.start(e);
              } catch (e) {
                console.error("[ARK Activation] Unable to reuse the stored state: ", e), this.interpreter.start();
              }
            } catch (e) {
              console.error("[ARK Activation] Unable to start machine", e);
            }
        }
        ready() {
          return new g.X(!0);
        }
        continue(e) {
          if (!this.interpreter) throw new Error("Activation flow not started");
          this.interpreter.send(e);
        }
        stop() {
          this.isStarted() && (this.interpreter = void 0);
        }
        isStarted() {
          return Boolean(this.interpreter);
        }
      };
      ie = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [re, ne, c.J])], ie);
      let ae = class {
        constructor(e) {
          this.activationFlow = e;
        }
        execute() {
          return this.activationFlow.continue({ type: "GO_TO_NEXT_STEP" }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      ae = (0, s.__decorate)([(0, h.W)(m.Z), (0, s.__metadata)("design:paramtypes", [ie])], ae);
      var ce = r(22481);
      let le = class {
        constructor(e) {
          this.activationFlow = e;
        }
        execute() {
          return this.activationFlow.continue({ type: "GO_TO_PREV_STEP" }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      le = (0, s.__decorate)([(0, h.W)(ce.H), (0, s.__metadata)("design:paramtypes", [ie])], le);
      var de = r(74593);
      let ue = class {
        constructor(e) {
          this.activationFlow = e;
        }
        execute() {
          return this.activationFlow.continue({ type: "REQUEST_ACTIVATION" }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      ue = (0, s.__decorate)([(0, h.W)(de.e), (0, s.__metadata)("design:paramtypes", [ie])], ue);
      var pe = r(23823);
      let he = class {
        constructor(e) {
          this.activationFlow = e;
        }
        execute() {
          return this.activationFlow.continue({ type: "RESET_FLOW" }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      he = (0, s.__decorate)([(0, h.W)(pe.w), (0, s.__metadata)("design:paramtypes", [ie])], he);
      var me = r(78519);
      let ve = class {
        constructor(e) {
          this.activationFlow = e;
        }
        execute() {
          return this.activationFlow.continue({ type: "CANCEL_GENERATION" }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      ve = (0, s.__decorate)([(0, h.W)(me.r), (0, s.__metadata)("design:paramtypes", [ie])], ve);
      var ge = r(6790);
      let ye = class {
        constructor(e) {
          this.activationFlow = e;
        }
        execute() {
          return this.activationFlow.continue({ type: "GO_TO_NEXT_STEP" }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      ye = (0, s.__decorate)([(0, h.W)(ge.W), (0, s.__metadata)("design:paramtypes", [ie])], ye);
      var fe = r(78548);
      let _e = class {
        constructor(e) {
          this.recoveryKeyService = e;
        }
        async executeWithParams(e) {
          try {
            const { authTicket: t } = await this.recoveryKeyService.getAuthTicketInfo(),
              r = await this.recoveryKeyService.getAccountInfo(e);
            if ((0, p.hx)(r)) throw new Error("Unable to retrieve verifications methods for login");
            return Promise.resolve({ authTiket: t ?? "", accountType: r.data.accountType, verificationMethod: r.data.verificationMethod });
          } catch (e) {
            return Promise.reject(new Error("Unable to retrieve initialization data"));
          }
        }
      };
      _e = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [K])], _e);
      var Se = r(25594);
      let Ee = class {
        constructor(e) {
          this.flexibleDecryptor = e;
        }
        async decrypt(e, t) {
          return await this.flexibleDecryptor.decrypt(e, t);
        }
      };
      Ee = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [Se.a])], Ee);
      let be = class {
        constructor(e, t) {
          (this.accountRecoveryKeyService = e), (this.recoveryKeyDecryptor = t);
        }
        async executeWithParams({ login: e, authTicket: t, recoveryKey: r }) {
          try {
            const s = await this.accountRecoveryKeyService.getEncryptedVaultKey(e, t);
            if ((0, p.hx)(s)) return Promise.reject(x.GENERIC_ERROR);
            const o = (0, j.u)(r),
              n = (0, z.R)(s.data.encryptedVaultKey),
              i = await this.recoveryKeyDecryptor.decrypt(o, n),
              a = (0, B.s)(i),
              c = atob(a);
            return Promise.resolve({ oldPassword: c });
          } catch (e) {
            return (s = e) instanceof Error && s.message.includes("Signature cannot be verified")
              ? Promise.reject(x.WRONG_RECOVERY_KEY_ERROR)
              : Promise.reject(x.GENERIC_ERROR);
          }
          var s;
        }
      };
      be = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [K, Ee])], be);
      var we = r(25565);
      let Ae = class {
        constructor(e, t) {
          (this.carbon = e), (this.deviceRegistration = t);
        }
        async executeWithParams(e) {
          const { commands: t, queries: r } = this.carbon;
          try {
            const { cleanRemotelyRemovedProfiles: r, registerDevice: s } = this.deviceRegistration.commands,
              { localAccounts: o } = this.deviceRegistration.queries;
            await r();
            const n = await (0, b.z)(o());
            if ((0, p.hx)(n)) return Promise.reject(new Error(`[ARK] - Error while fetching local accounts: ${n.error}`));
            n.data.localAccounts.some((t) => t.login === e.login) ||
              (await s({ with: "authTicket", login: e.login, authTicket: e.authTicket }));
            const i = await t.carbonLegacyLeeloo({
              name: "openSessionWithMasterPassword",
              arg: [{ login: e.login, password: e.oldPassword, rememberPassword: !1, requiredPermissions: void 0 }]
            });
            if ((0, p.hx)(i))
              return Promise.reject(new Error(`[ARK] - Error while trying to open session with deciphered recovery key: ${i.error}`));
            const a = await t.carbon({
              name: "changeMasterPassword",
              args: [{ newPassword: e.newPassword, currentPassword: e.oldPassword, flow: "ACCOUNT_RECOVERY_KEY" }]
            });
            return (0, p.hx)(a)
              ? Promise.reject(new Error(`[ARK] - Error while changing user Master Password: ${a.error}`))
              : Promise.resolve(void 0);
          } catch (e) {
            const s = await (0, b.z)(r.carbonState({ path: "userSession.account.isAuthenticated" }));
            return (
              (0, p.d6)(s) && s.data && (await t.carbonLegacyLeeloo({ name: "closeSession", arg: [{}] })),
              Promise.reject(new Error(`[ARK] - Unable to change user Master Password: ${e}`))
            );
          }
        }
      };
      Ae = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [T._, we.z])], Ae);
      var Te = r(81822);
      let Ce = class {
        constructor(e) {
          (this.identityVerification = e), (this.identityVerification = e);
        }
        executeWithParams(e, t) {
          try {
            return (
              this.identityVerification.commands.startIdentityVerification({ login: e, verificationMethod: t.type }),
              Promise.resolve(void 0)
            );
          } catch (e) {
            return Promise.reject(new Error("Something went wrong..."));
          }
        }
      };
      Ce = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [Te.l])], Ce);
      var Ie = r(26457);
      let Oe = class {
        constructor(e, t, r, s, o) {
          (this.accountRecoveryKeyService = e),
            (this.activationFlow = t),
            (this.syncService = r),
            (this.logger = s),
            (this.allowedToFail = o);
        }
        async executeWithParams(e, t) {
          const r = await this.accountRecoveryKeyService.deactivate(t);
          return (0, p.hx)(r)
            ? (this.logger.trace("Deactivate ARK: " + r.error.message), (0, p.Rn)({ tag: r.error.tag }))
            : (await this.accountRecoveryKeyService.updateLastAuthenticatedUserRecoveryStatus(e),
              this.activationFlow.continue({ type: "RESET_FLOW" }),
              await this.accountRecoveryKeyService.setPersonalSettings({ AccountRecoveryKey: void 0, AccountRecoveryKeyId: void 0 }),
              await this.allowedToFail.doOne(async () => await this.syncService.waitForSync(X.Trigger.SettingsChange), "waitForSync"),
              (0, p.Vp)(void 0));
        }
      };
      Oe = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [K, ie, Z._, Ie.V, c.J])], Oe);
      let Pe = class {
        constructor(e, t, r) {
          (this.carbon = e), (this.deactivateArk = t), (this.deviceRegistration = r);
        }
        async executeWithParams(e) {
          const { commands: t, queries: r } = this.carbon;
          try {
            const { cleanRemotelyRemovedProfiles: r, registerDevice: s } = this.deviceRegistration.commands,
              { localAccounts: o } = this.deviceRegistration.queries;
            await r();
            const n = await (0, b.z)(o());
            if ((0, p.hx)(n)) return Promise.reject(new Error(`[ARK] - Error while fetching local accounts: ${n.error}`));
            n.data.localAccounts.some((t) => t.login === e.login) ||
              (await s({ with: "authTicket", login: e.login, authTicket: e.authTicket }));
            const i = await t.carbonLegacyLeeloo({
              name: "openSessionWithMasterPassword",
              arg: [{ login: e.login, password: e.oldPassword, rememberPassword: !1, requiredPermissions: void 0 }]
            });
            if ((0, p.hx)(i))
              return Promise.reject(new Error(`[ARK] - Error while trying to open session with deciphered recovery key: ${i.error}`));
            const a = await this.deactivateArk.executeWithParams(e.login, "KEY_USED");
            return (0, p.hx)(a) ? Promise.reject(x.GENERIC_ERROR) : Promise.resolve(void 0);
          } catch (e) {
            const s = await (0, b.z)(r.carbonState({ path: "userSession.account.isAuthenticated" }));
            return (
              (0, p.d6)(s) && s.data && (await t.carbonLegacyLeeloo({ name: "closeSession", arg: [{}] })), Promise.reject(x.GENERIC_ERROR)
            );
          }
        }
      };
      Pe = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [T._, Oe, we.z])], Pe);
      let Re = class {
        constructor(e, t, r, s, o) {
          (this.initializeMachineService = e),
            (this.checkAccountRecoveryKeyService = t),
            (this.changeMasterPasswordService = r),
            (this.triggerIdentityVerificationService = s),
            (this.openSessionPasswordLessService = o);
        }
        desc() {
          const e = {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              initial: "Idle",
              id: "RecoveryFlowMachine",
              context: { login: "", authTicket: "", newPassword: "", recoveryKey: "", oldPassword: "", encryptedVaultKey: "" },
              states: {
                Idle: { entry: ["clearContext"], on: { START_RECOVERY_FLOW: { target: "Starting", actions: ["assignAccountEmail"] } } },
                Starting: {
                  invoke: {
                    src: "initializeMachine",
                    onDone: [
                      { actions: ["assignInitialContext"], target: "IdentityVerification", cond: "isAuthTicketNeeded" },
                      { actions: ["assignInitialContext"], target: "EnterRecoveryKey" }
                    ]
                  }
                },
                IdentityVerification: { entry: ["triggerIdentityVerification"] },
                EnterRecoveryKey: { on: { SUBMIT_RECOVERY_KEY: { actions: ["assignRecoveryKey"], target: "CheckAccountRecoveryKey" } } },
                CheckAccountRecoveryKey: {
                  invoke: {
                    src: "checkAccountRecoveryKey",
                    onDone: [
                      { target: "OpenPasswordlessSession", actions: ["assignOldPassword"], cond: "isPasswordlessUser" },
                      { actions: ["assignOldPassword"], target: "ChangeMasterPassword" }
                    ],
                    onError: { actions: ["assignError"], target: "RecoveryError" }
                  }
                },
                OpenPasswordlessSession: {
                  invoke: {
                    src: "openSession",
                    onDone: { target: "RecoverySuccess" },
                    onError: { actions: ["assignError"], target: "RecoveryError" }
                  }
                },
                ChangeMasterPassword: { on: { CONFIRM_NEW_PASSWORD: { actions: ["assignNewPassword"], target: "FinalisingRecovery" } } },
                FinalisingRecovery: {
                  invoke: {
                    src: "changeMasterPassword",
                    onDone: { target: "RecoverySuccess" },
                    onError: { actions: ["assignError"], target: "RecoveryError" }
                  }
                },
                RecoveryError: {
                  on: {
                    TRY_AGAIN: [
                      { actions: ["clearError"], target: "EnterRecoveryKey", cond: "isPasswordlessUser" },
                      { actions: ["clearError"], target: "ChangeMasterPassword" }
                    ]
                  }
                },
                RecoverySuccess: { type: "final" }
              },
              on: {
                CLEAR_ERROR: { actions: ["clearError"] },
                IDENTITY_VERIFICATION_COMPLETE: { actions: ["assignAuthTicket"], target: "EnterRecoveryKey" },
                CANCEL_RECOVERY_FLOW: { target: "Idle" }
              }
            },
            options: {
              actions: {
                assignAccountEmail: (0, S.f0)({ login: (e, t) => t.login }),
                assignInitialContext: (0, S.f0)({
                  authTicket: (e, t) => t.data.authTiket,
                  accountType: (e, t) => t.data.accountType,
                  verificationMethod: (e, t) => t.data.verificationMethod
                }),
                assignAuthTicket: (0, S.f0)({ authTicket: (e, t) => t.authTicket }),
                assignNewPassword: (0, S.f0)({ newPassword: (e, t) => t.password }),
                assignRecoveryKey: (0, S.f0)({ recoveryKey: (e, t) => t.recoveryKey }),
                assignOldPassword: (0, S.f0)({ oldPassword: (e, t) => t.data.oldPassword }),
                assignError: (0, S.f0)({ error: (e, t) => t.data }),
                clearError: (0, S.f0)({ error: () => {} }),
                triggerIdentityVerification: (e) => {
                  if (!e.verificationMethod) throw new Error("No verification method found, initialization went wrong");
                  return this.triggerIdentityVerificationService.executeWithParams(e.login, e.verificationMethod);
                },
                clearContext: (0, S.f0)({
                  login: () => "",
                  newPassword: () => "",
                  localAccounts: () => [],
                  recoveryKey: () => "",
                  oldPassword: () => "",
                  encryptedVaultKey: () => "",
                  authTicket: () => ""
                })
              },
              services: {
                initializeMachine: (e) => this.initializeMachineService.executeWithParams(e.login),
                checkAccountRecoveryKey: (e) => this.checkAccountRecoveryKeyService.executeWithParams(e),
                changeMasterPassword: (e) => this.changeMasterPasswordService.executeWithParams(e),
                openSession: (e) => this.openSessionPasswordLessService.executeWithParams(e)
              },
              guards: {
                isAuthTicketNeeded: (e, t) => !t.data.authTiket,
                isPasswordlessUser: (e) => "invisibleMasterPassword" === e.accountType
              }
            }
          };
          return (0, te.G)(e.config), e;
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, E.C)(e, t);
        }
      };
      Re = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [_e, be, Ae, Ce, Pe])], Re);
      const De = (e) => !0;
      class Ne extends (0, D.Q)({
        initialValue: void 0,
        persist: !1,
        scope: R.F.Device,
        storeName: "recovery-flow-machine",
        storeTypeGuard: De
      }) {}
      let Ue = class {
        constructor(e, t, r) {
          (this.recoveryMachineStore = t), (this.allowedToFail = r), (this.recoveryMachineStore = t);
          const s = e.create();
          this.interpreter = v
            .kJ(s)
            .onTransition((0, f.V)(this.allowedToFail))
            .onEvent((0, _.V)(this.allowedToFail))
            .onTransition(async () => {
              const e = this.interpreter?.getSnapshot();
              e &&
                (await (async (e, t) => {
                  await e.set(JSON.stringify(t));
                })(this.recoveryMachineStore, e));
            });
        }
        async prepare() {
          if (this.interpreter)
            try {
              const e = await (async (e) => {
                const t = await e.getState();
                return t ? se.ZM.create(JSON.parse(t)) : void 0;
              })(this.recoveryMachineStore);
              try {
                this.interpreter.start(e);
              } catch (e) {
                console.error("[ARK Recovery] Unable to reuse the stored state: ", e), this.interpreter.start();
              }
            } catch (e) {
              console.error("[ARK Recovery] Unable to start machine", e);
            }
        }
        ready() {
          return new g.X(!0);
        }
        continue(e) {
          if (!this.interpreter) throw new Error("Recovery flow not started");
          this.interpreter.send(e);
        }
        stop() {
          this.isStarted() && (this.interpreter = void 0);
        }
        isStarted() {
          return Boolean(this.interpreter);
        }
      };
      Ue = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [Re, Ne, c.J])], Ue);
      let Le = class {
        constructor(e) {
          (this.recoveryFlow = e), (this.recoveryFlow = e);
        }
        execute(e) {
          return (
            this.recoveryFlow.continue({ type: "CONFIRM_NEW_PASSWORD", password: e.body.password }), Promise.resolve((0, p.Vp)(void 0))
          );
        }
      };
      Le = (0, s.__decorate)([(0, h.W)(fe.v), (0, s.__metadata)("design:paramtypes", [Ue])], Le);
      var Fe = r(60017);
      let Me = class {
        constructor(e, t, r, s, o, n) {
          (this.accountRecoveryKeyService = e),
            (this.activationFlow = t),
            (this.syncService = r),
            (this.logger = s),
            (this.allowedToFail = o),
            (this.session = n);
        }
        async execute(e) {
          const { reason: t } = e.body,
            r = await this.accountRecoveryKeyService.deactivate(t);
          if ((0, p.hx)(r)) return this.logger.trace("Deactivate ARK: " + r.error.message), (0, p.Rn)({ tag: r.error.tag });
          const s = await (0, b.z)(this.session.queries.selectedOpenedSession());
          return (0, p.hx)(s) || !s.data
            ? (this.logger.trace("Deactivate ARK: No user login provided"), (0, p.Rn)({ tag: x.GENERIC_ERROR }))
            : (await this.accountRecoveryKeyService.updateLastAuthenticatedUserRecoveryStatus(s.data),
              this.activationFlow.continue({ type: "RESET_FLOW" }),
              await this.accountRecoveryKeyService.setPersonalSettings({ AccountRecoveryKey: void 0, AccountRecoveryKeyId: void 0 }),
              await this.allowedToFail.doOne(async () => await this.syncService.waitForSync(X.Trigger.SettingsChange), "waitForSync"),
              (0, p.Vp)(void 0));
        }
      };
      Me = (0, s.__decorate)([(0, h.W)(Fe.E), (0, s.__metadata)("design:paramtypes", [K, ie, Z._, Ie.V, c.J, J.x])], Me);
      var xe = r(24662);
      let ke = class {
        constructor(e) {
          this.recoveryFlow = e;
        }
        execute(e) {
          return (
            this.recoveryFlow.continue({ type: "SUBMIT_RECOVERY_KEY", recoveryKey: e.body.recoveryKey }), Promise.resolve((0, p.Vp)(void 0))
          );
        }
      };
      ke = (0, s.__decorate)([(0, h.W)(xe.Y), (0, s.__metadata)("design:paramtypes", [Ue])], ke);
      var Ge = r(77539);
      let Ke = class {
        constructor(e) {
          this.recoveryFlow = e;
        }
        execute() {
          return this.recoveryFlow.continue({ type: "TRY_AGAIN" }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      Ke = (0, s.__decorate)([(0, h.W)(Ge.d), (0, s.__metadata)("design:paramtypes", [Ue])], Ke);
      var Ve = r(22632),
        je = r(94189);
      let Be = class {
        constructor(e, t) {
          (this.recoveryFlow = e), (this.cqrsClient = t), (this.recoveryFlow = e);
        }
        execute() {
          return (
            this.recoveryFlow.continue({ type: "CANCEL_RECOVERY_FLOW" }),
            this.cqrsClient.getClient(n.i).commands.cancelIdentityVerification(),
            Promise.resolve((0, p.Vp)(void 0))
          );
        }
      };
      Be = (0, s.__decorate)([(0, h.W)(Ve.b), (0, s.__metadata)("design:paramtypes", [Ue, je.w])], Be);
      var We = r(14074);
      let He = class {
        constructor(e) {
          (this.recoveryFlow = e), (this.recoveryFlow = e);
        }
        execute(e) {
          const { login: t } = e.body;
          return this.recoveryFlow.continue({ type: "START_RECOVERY_FLOW", login: t }), Promise.resolve((0, p.Vp)(void 0));
        }
      };
      He = (0, s.__decorate)([(0, h.W)(We.Q), (0, s.__metadata)("design:paramtypes", [Ue])], He);
      var ze,
        Qe,
        qe = r(85390),
        Ye = r(6136),
        $e = r(20754),
        Xe = r(40956),
        Ze = r(69885),
        Je = r(6220);
      !(function (e) {
        (e[(e.InitActivation = 0)] = "InitActivation"),
          (e[(e.RequestActivation = 1)] = "RequestActivation"),
          (e[(e.DisplayKey = 2)] = "DisplayKey"),
          (e[(e.ConfirmKey = 3)] = "ConfirmKey"),
          (e[(e.FinaliseActivation = 4)] = "FinaliseActivation"),
          (e[(e.ActivationDone = 5)] = "ActivationDone"),
          (e[(e.ShowError = 6)] = "ShowError"),
          (e[(e.GenerateNewKey = 7)] = "GenerateNewKey"),
          (e[(e.CancelGenerateNewKey = 8)] = "CancelGenerateNewKey");
      })(ze || (ze = {})),
        (function (e) {
          (e[(e.InitRecovery = 0)] = "InitRecovery"),
            (e[(e.IdentityVerification = 1)] = "IdentityVerification"),
            (e[(e.EnterRecoveryKey = 2)] = "EnterRecoveryKey"),
            (e[(e.ChangeMasterPassword = 3)] = "ChangeMasterPassword"),
            (e[(e.Finalising = 4)] = "Finalising"),
            (e[(e.Success = 5)] = "Success"),
            (e[(e.Failure = 6)] = "Failure");
        })(Qe || (Qe = {}));
      const et = (e) =>
          (0, Ze.of)(
            (0, p.Vp)(
              (function (e) {
                if (!e.matches("Starting"))
                  return e.matches("InitAccountRecoveryKeyActivation")
                    ? { step: ze.InitActivation }
                    : e.matches("RequestingActivation")
                    ? { step: ze.RequestActivation }
                    : e.matches("DisplayAccountRecoveryKey")
                    ? { step: ze.DisplayKey, recoveryKey: e.context.recoveryKey }
                    : e.matches("ConfirmAccountRecoveryKey")
                    ? { step: ze.ConfirmKey, recoveryKey: e.context.recoveryKey }
                    : e.matches("FinalisingAccountRecoveryKeyActivation")
                    ? { step: ze.FinaliseActivation }
                    : e.matches("AccountRecoveryKeyActivationDone")
                    ? { step: ze.ActivationDone, isFeatureEnabled: e.context.isFeatureEnabled }
                    : e.matches("AccountRecoveryKeyActivationError")
                    ? { step: ze.ShowError, error: e.context.error }
                    : e.matches("GenerateNewAccountRecoveryKey")
                    ? { step: ze.GenerateNewKey }
                    : e.matches("CancelNewAccountRecoveryKey")
                    ? { step: ze.CancelGenerateNewKey }
                    : void console.warn("[ARK Activation] - No view associated to state ", e.value);
              })(e)
            )
          ),
        tt = (e) => e.pipe((0, Je.z)(et));
      var rt = r(52800);
      const st = (e, t) => {
        const r = t.matches(e.value),
          s = (0, rt.Z)(e.context, t.context);
        return r && s;
      };
      let ot = class {
        constructor(e, t) {
          (this.activationFlow = e), (this.activationFlowMachineStore = t);
        }
        execute() {
          return (0, qe.a)(
            [
              ((e = this.activationFlowMachineStore), e.state$.pipe((0, A.U)((e) => (e ? se.ZM.create(JSON.parse(e)) : void 0)))),
              this.activationFlow.ready()
            ],
            (e, t) => {
              if (e && t) return e;
            }
          ).pipe(
            (0, w.h)(Boolean),
            (0, Ye.x)((e, t) => st(e, t)),
            tt
          );
          var e;
        }
      };
      ot = (0, s.__decorate)([(0, $e.e)(Xe.S), (0, s.__metadata)("design:paramtypes", [ie, ne])], ot);
      var nt = r(43978),
        it = r(22618);
      let at = class {
        constructor(e) {
          this.accountRecoveryKeyService = e;
        }
        execute({ body: e }) {
          const { login: t } = e;
          return "" === t
            ? (0, Ze.of)((0, p.Vp)({ isEnabled: !1 }))
            : this.accountRecoveryKeyService.getLastAuthenticatedUserRecoveryData().pipe(
                (0, nt.w)(
                  async (e) => (
                    (void 0 !== e.isEnabled && t === e.login) ||
                      (await this.accountRecoveryKeyService.updateLastAuthenticatedUserRecoveryStatus(t)),
                    e
                  )
                ),
                (0, A.U)((e) => (0, p.Vp)({ isEnabled: e.isEnabled }))
              );
        }
      };
      at = (0, s.__decorate)([(0, $e.e)(it.D), (0, s.__metadata)("design:paramtypes", [K])], at);
      var ct = r(80448);
      let lt = class {
        constructor(e, t, r) {
          (this.accountRecoveryKeyService = e), (this.carbonLegacyClient = t), (this.session = r);
        }
        execute() {
          const e = this.session.queries.selectedOpenedSession().pipe(
              (0, nt.w)((e) => {
                if (!(0, p.d6)(e) || !e.data) throw new Error("no user provided ");
                return this.accountRecoveryKeyService.updateLastAuthenticatedUserRecoveryStatus(e.data);
              }),
              (0, nt.w)(() => this.carbonLegacyClient.queries.carbonState({ path: "userSession.personalSettings.RecoveryOptIn" })),
              (0, w.h)(p.d6),
              (0, A.U)((e) => "boolean" == typeof e.data && e.data)
            ),
            t = this.accountRecoveryKeyService
              .getLastAuthenticatedUserRecoveryData()
              .pipe((0, A.U)((e) => void 0 !== e.isEnabled && e.isEnabled));
          return (0, qe.a)([e, t]).pipe((0, A.U)(([e, t]) => (0, p.Vp)({ adminAssistedRecovery: e, accountRecoveryKey: t })));
        }
      };
      lt = (0, s.__decorate)([(0, $e.e)(ct.V), (0, s.__metadata)("design:paramtypes", [K, T._, J.x])], lt);
      var dt = r(36261);
      const ut = (e) =>
          (0, Ze.of)(
            (0, p.Vp)(
              (function (e) {
                return e.matches("Starting")
                  ? { step: Qe.InitRecovery, error: e.context.error }
                  : e.matches("IdentityVerification")
                  ? { step: Qe.IdentityVerification, login: e.context.login }
                  : e.matches("EnterRecoveryKey") || e.matches("CheckAccountRecoveryKey")
                  ? { step: Qe.EnterRecoveryKey, error: e.context.error, accountType: e.context.accountType }
                  : e.matches("ChangeMasterPassword")
                  ? { step: Qe.ChangeMasterPassword, error: e.context.error }
                  : e.matches("FinalisingRecovery") || e.matches("OpenPasswordlessSession")
                  ? { step: Qe.Finalising }
                  : e.matches("RecoverySuccess")
                  ? { step: Qe.Success }
                  : e.matches("RecoveryError")
                  ? { step: Qe.Failure }
                  : void console.warn("[ARK Recovery] - No view associated to state ", e.value);
              })(e)
            )
          ),
        pt = (e) => e.pipe((0, Je.z)(ut));
      let ht = class {
        constructor(e, t) {
          (this.recoveryFlow = e), (this.recoveryFlowMachineStore = t);
        }
        execute() {
          return (0, qe.a)(
            [
              ((e = this.recoveryFlowMachineStore), e.state$.pipe((0, A.U)((e) => (e ? se.ZM.create(JSON.parse(e)) : void 0)))),
              this.recoveryFlow.ready()
            ],
            (e, t) => {
              if (e && t) return e;
            }
          ).pipe(
            (0, w.h)(Boolean),
            (0, Ye.x)((e, t) => st(e, t)),
            pt
          );
          var e;
        }
      };
      ht = (0, s.__decorate)([(0, $e.e)(dt.y), (0, s.__metadata)("design:paramtypes", [Ue, Ne])], ht);
      var mt = r(68307),
        vt = r(13089);
      let gt = class {
        constructor(e) {
          (this.recoveryFlow = e), (this.recoveryFlow = e);
        }
        handle(e) {
          const { authTicket: t } = e.body;
          return this.recoveryFlow.continue({ type: "IDENTITY_VERIFICATION_COMPLETE", authTicket: t }), Promise.resolve();
        }
      };
      gt = (0, s.__decorate)([(0, mt.b)(vt.w), (0, s.__metadata)("design:paramtypes", [Ue])], gt);
      let yt = class {};
      yt = (0, s.__decorate)(
        [
          (0, i.Y)({
            api: o.j,
            stores: [ne, Ne, L],
            imports: [l.n, d.D, u.R],
            handlers: {
              commands: {
                goToActivationNextStep: ae,
                goToActivationPrevStep: le,
                requestActivation: ue,
                cancelActivation: he,
                cancelGeneration: ve,
                confirmActivation: ye,
                confirmNewPassword: Le,
                deactivate: Me,
                submitRecoveryKey: ke,
                tryAgainRecovery: Ke,
                cancelRecoveryFlow: Be,
                startRecoveryFlow: He
              },
              events: { ...(0, i.g)(n.i, { identityVerificationCompleted: gt }) },
              queries: { activationFlowStatus: ot, accountRecoveryKeyStatus: at, recoveryMethodsInfo: lt, recoveryFlowStatus: ht }
            },
            providers: [
              ...(0, a.H)(ie, {
                inject: [re, ne, c.J],
                asyncFactory: async (e, t, r) => {
                  const s = new ie(e, t, r);
                  return await s.prepare(), s;
                }
              }),
              ...(0, a.H)(Ue, {
                inject: [Re, Ne, c.J],
                asyncFactory: async (e, t, r) => {
                  const s = new Ue(e, t, r);
                  return await s.prepare(), s;
                }
              }),
              re,
              Re,
              V,
              _e,
              be,
              Ce,
              K,
              $,
              ee,
              Ee,
              Y,
              Ae,
              Pe,
              Oe
            ]
          })
        ],
        yt
      );
    },
    24452: (e, t, r) => {
      r.d(t, { l: () => i });
      var s = r(86952),
        o = r(39129),
        n = r(55398);
      const i = (0, s.Q)({ name: "accountReferral", commands: { inviteByEmail: n.P }, events: {}, queries: { getSharingLink: o.h } });
    },
    55398: (e, t, r) => {
      r.d(t, { P: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    39129: (e, t, r) => {
      r.d(t, { h: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    10901: (e, t, r) => {
      r.d(t, { d: () => c });
      var s = r(86952),
        o = r(3993),
        n = r(85715),
        i = r(75456),
        a = r(95843);
      const c = (0, s.Q)({
        name: "deleteOrResetAccount",
        commands: { completeFlow: i.I, initiateFlow: a.O },
        events: {},
        queries: { userAuthenticationMethod: o.c, isFlowCompleted: n.h }
      });
    },
    75456: (e, t, r) => {
      r.d(t, { I: () => a, O: () => s });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(7165);
      !(function (e) {
        (e.INVALID_OTP_ALREADY_USED = "INVALID_OTP_ALREADY_USED"),
          (e.INVALID_OTP_BLOCKED = "INVALID_OTP_BLOCKED"),
          (e.VERIFICATION_FAILED = "VERIFICATION_FAILED"),
          (e.ACCOUNT_BLOCKED_CONTACT_SUPPORT = "ACCOUNT_BLOCKED_CONTACT_SUPPORT"),
          (e.VERIFICATION_REQUIRES_REQUEST = "VERIFICATION_REQUIRES_REQUEST"),
          (e.VERIFICATION_TIMEOUT = "VERIFICATION_TIMEOUT");
      })(s || (s = {}));
      i.z.object({ tag: i.z.nativeEnum(s) });
      class a extends (0, o.g)({ scope: n.F.Device }) {}
    },
    95843: (e, t, r) => {
      r.d(t, { O: () => a, U: () => s });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(7165);
      !(function (e) {
        (e.UNKNOWN_USER = "user_not_found"), (e.SSO_BLOCKED = "SSO_BLOCKED");
      })(s || (s = {}));
      i.z.object({ tag: i.z.nativeEnum(s) });
      class a extends (0, o.g)({ scope: n.F.Device }) {}
    },
    85715: (e, t, r) => {
      r.d(t, { h: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    3993: (e, t, r) => {
      r.d(t, { c: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    2301: (e, t, r) => {
      r.d(t, { o: () => b });
      var s = r(88802),
        o = r(99634),
        n = r(24452),
        i = r(93850),
        a = r(34987),
        c = r(20754),
        l = r(39129),
        d = r(87113),
        u = r(48844),
        p = r(86252);
      let h = class {
        constructor(e, t) {
          (this.serverApiClient = e), (this.carbon = t);
        }
        execute() {
          return this.carbon.queries.getSubscriptionCode().pipe(
            (0, a.b)((e) =>
              this.serverApiClient.v1.invitation.getSharingLink({ userKey: "success" === e.tag ? e.data : "" }).pipe(
                (0, u.Qn)((e) => e.data),
                (0, u.DZ)((e) => {
                  throw new Error(e.message);
                })
              )
            )
          );
        }
      };
      h = (0, s.__decorate)([(0, c.e)(l.h), (0, s.__metadata)("design:paramtypes", [d.l, p._])], h);
      var m = r(60399),
        v = r(63663),
        g = r(55398),
        y = r(87279),
        f = r(87065),
        _ = r(57924);
      let S = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        async getIsExistingLogin(e) {
          const t = this.serverApiClient.v1.authentication.get2FaStatusUnauthenticated({ login: e });
          return await (0, m.z)(t.pipe((0, f.U)((e) => (0, y.d6)(e))));
        }
      };
      S = (0, s.__decorate)([(0, _.GS)(), (0, s.__metadata)("design:paramtypes", [d.l])], S);
      let E = class {
        constructor(e, t, r) {
          (this.serverApiClient = e), (this.carbon = t), (this.accountExistsService = r);
        }
        async execute({ body: { email: e } }) {
          try {
            const t = await (0, m.z)(this.carbon.queries.getSubscriptionCode());
            if (await this.accountExistsService.getIsExistingLogin(e)) {
              const e = "InviteByEmailCommand";
              return (0, y.Rn)({ tag: e });
            }
            const r = await (0, m.z)(
              this.serverApiClient.v1.invitation.invite({ userKey: (0, y.d6)(t) ? t.data : "", identifiers: [e], type: "mail" })
            );
            if ((0, y.hx)(r)) throw new Error("InviteByEmailCommand failure: something went wrong in call to /invitation/invite");
            return (0, y.Vp)(void 0);
          } catch (e) {
            throw new Error("InviteByEmailCommand failure: something went wrong in execute method");
          }
        }
      };
      E = (0, s.__decorate)([(0, v.W)(g.P), (0, s.__metadata)("design:paramtypes", [d.l, p._, S])], E);
      let b = class {};
      b = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.l,
            imports: [i.n],
            handlers: { commands: { inviteByEmail: E }, events: {}, queries: { getSharingLink: h } },
            providers: [S]
          })
        ],
        b
      );
    },
    77993: (e, t, r) => {
      r.d(t, { T: () => D });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(10901),
        a = r(60399),
        c = r(87065),
        l = r(95843),
        d = r(75456),
        u = r(57924),
        p = r(87113),
        h = r(48844),
        m = r(18533),
        v = r(20195),
        g = r(87279);
      let y = class {
        constructor(e) {
          (this.serverApiClient = e),
            (this.getFunctionalError = (e) => {
              switch (e) {
                case l.U.UNKNOWN_USER:
                  return { tag: l.U.UNKNOWN_USER };
                case l.U.SSO_BLOCKED:
                  return { tag: l.U.SSO_BLOCKED };
                default:
                  throw new Error(`GetAuthenticationMethodsForReset: error ${e}`);
              }
            });
        }
        getAuthenticationMethodsForReset(e) {
          return this.serverApiClient.v1.authentication
            .getAuthenticationMethodsForReset({ login: e, methods: ["email_token", "totp"] })
            .pipe(
              (0, h.DZ)((e) =>
                (0, m.EQ)(e, {
                  BusinessError: (e) => this.getFunctionalError(e.code),
                  FetchFailedError: () => {
                    throw new Error("Fetch Failed error");
                  },
                  BadStatus: v.j,
                  InternalServerError: v.j,
                  InvalidRequest: v.j,
                  RateLimited: v.j,
                  ServiceUnavailable: v.j,
                  UnspecifiedBadStatus: v.j
                })
              ),
              (0, h.Qn)((e) => {
                if (e.data.verifications.length >= 1) return e.data.verifications[0].type;
                throw new Error("GetAuthenticationMethodsForReset: couldn't retrieve any method");
              })
            );
        }
        requestEmailTokenVerificationSending(e) {
          return (0, a.z)(
            this.serverApiClient.v1.authentication.requestEmailTokenVerification({ login: e }).pipe((0, c.U)((e) => (0, g.d6)(e)))
          );
        }
        getVerifyTokenFunctionalError(e) {
          switch (e) {
            case "invalid_otp_already_used":
              return { tag: d.O.INVALID_OTP_ALREADY_USED };
            case "invalid_otp_blocked":
              return { tag: d.O.INVALID_OTP_BLOCKED };
            case "verification_failed":
              return { tag: d.O.VERIFICATION_FAILED };
            case "account_blocked_contact_support":
              return { tag: d.O.ACCOUNT_BLOCKED_CONTACT_SUPPORT };
            case "verification_requires_request":
              return { tag: d.O.VERIFICATION_REQUIRES_REQUEST };
            case "verification_timeout":
              return { tag: d.O.VERIFICATION_TIMEOUT };
            default:
              throw new Error("performTokenVerification: Business error not handled");
          }
        }
        verifyTOTPToken(e, t) {
          return (0, a.z)(
            this.serverApiClient.v1.authentication.performTotpVerification({ login: e, otp: t, intent: "account_delete_or_reset" }).pipe(
              (0, h.DZ)((e) =>
                (0, m.EQ)(e, {
                  BusinessError: (e) => this.getVerifyTokenFunctionalError(e.code),
                  FetchFailedError: v.j,
                  BadStatus: v.j,
                  InternalServerError: v.j,
                  InvalidRequest: v.j,
                  RateLimited: v.j,
                  ServiceUnavailable: v.j,
                  UnspecifiedBadStatus: v.j
                })
              ),
              (0, h.Qn)((e) => e.data.authTicket)
            )
          );
        }
        verifyEmailToken(e, t) {
          return (0, a.z)(
            this.serverApiClient.v1.authentication
              .performEmailTokenVerification({ login: e, token: t, intent: "account_delete_or_reset" })
              .pipe(
                (0, h.DZ)((e) =>
                  (0, m.EQ)(e, {
                    BusinessError: (e) => this.getVerifyTokenFunctionalError(e.code),
                    FetchFailedError: v.j,
                    BadStatus: v.j,
                    InternalServerError: v.j,
                    InvalidRequest: v.j,
                    RateLimited: v.j,
                    ServiceUnavailable: v.j,
                    UnspecifiedBadStatus: v.j
                  })
                ),
                (0, h.Qn)((e) => e.data.authTicket)
              )
          );
        }
        deleteOrResetAccount(e, t, r = !0) {
          return (0, a.z)(
            this.serverApiClient.v1.account.deleteOrResetAccount({ authTicket: t, isDelete: r, login: e }).pipe(
              (0, h.DZ)((e) =>
                (0, m.EQ)(e, {
                  BusinessError: v.j,
                  FetchFailedError: v.j,
                  BadStatus: v.j,
                  InternalServerError: v.j,
                  InvalidRequest: v.j,
                  RateLimited: v.j,
                  ServiceUnavailable: v.j,
                  UnspecifiedBadStatus: v.j
                })
              ),
              (0, h.Qn)(() => !0)
            )
          );
        }
      };
      y = (0, s.__decorate)([(0, u.GS)(), (0, s.__metadata)("design:paramtypes", [p.l])], y);
      var f = r(20754),
        _ = r(3993),
        S = r(25029),
        E = r(95681),
        b = r(23347);
      class w extends (0, E.Q)({
        persist: !1,
        scope: S.F.Device,
        storeName: "account-deletion",
        initialValue: { login: "", userAuthenticationMethod: null, isFlowCompleted: !1 },
        capacity: b.Y._001KB
      }) {}
      let A = class {
        constructor(e) {
          this.deleteOrResetAccountStore = e;
        }
        execute() {
          return this.deleteOrResetAccountStore.state$.pipe((0, c.U)((e) => (0, g.Vp)(e.userAuthenticationMethod)));
        }
      };
      A = (0, s.__decorate)([(0, f.e)(_.c), (0, s.__metadata)("design:paramtypes", [w])], A);
      var T = r(85715);
      let C = class {
        constructor(e) {
          this.deleteOrResetAccountStore = e;
        }
        execute() {
          return this.deleteOrResetAccountStore.state$.pipe((0, c.U)((e) => (0, g.Vp)(e.isFlowCompleted)));
        }
      };
      var I;
      (C = (0, s.__decorate)([(0, f.e)(T.h), (0, s.__metadata)("design:paramtypes", [w])], C)),
        (function (e) {
          (e.EMAIL = "EMAIL"), (e.TOTP = "TOTP");
        })(I || (I = {}));
      var O = r(63663);
      let P = class {
        constructor(e, t) {
          (this.deleteOrResetAccountStore = e), (this.deleteOrResetAccountService = t);
        }
        async execute({ body: e }) {
          const { token: t, isDelete: r } = e,
            s = await this.deleteOrResetAccountStore.getState(),
            { userAuthenticationMethod: o, login: n } = s,
            i =
              o === I.EMAIL
                ? await this.deleteOrResetAccountService.verifyEmailToken(n, t)
                : await this.deleteOrResetAccountService.verifyTOTPToken(n, t);
          if ((0, g.hx)(i)) return Promise.resolve(i);
          const a = await this.deleteOrResetAccountService.deleteOrResetAccount(n, i.data, r);
          if ((0, g.hx)(a)) throw new Error("CompleteFlowCommand : error while deleting the account");
          return this.deleteOrResetAccountStore.set({ ...s, isFlowCompleted: !0 }), Promise.resolve((0, g.Vp)(void 0));
        }
      };
      P = (0, s.__decorate)([(0, O.W)(d.I), (0, s.__metadata)("design:paramtypes", [w, y])], P);
      let R = class {
        constructor(e, t) {
          (this.deleteOrResetAccountStore = e), (this.deleteOrResetAccountService = t);
        }
        async execute({ body: e }) {
          const { login: t } = e,
            r = await (0, a.z)(
              this.deleteOrResetAccountService
                .getAuthenticationMethodsForReset(t)
                .pipe((0, h.Qn)((e) => ("email_token" === e ? I.EMAIL : I.TOTP)))
            );
          if ((0, g.hx)(r)) return Promise.resolve(r);
          r.data === I.EMAIL && this.deleteOrResetAccountService.requestEmailTokenVerificationSending(t);
          const s = await this.deleteOrResetAccountStore.getState();
          return (
            await this.deleteOrResetAccountStore.set({ ...s, login: t, userAuthenticationMethod: r.data }),
            Promise.resolve((0, g.Vp)(void 0))
          );
        }
      };
      R = (0, s.__decorate)([(0, O.W)(l.O), (0, s.__metadata)("design:paramtypes", [w, y])], R);
      let D = class {};
      D = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.d,
            handlers: {
              commands: { completeFlow: P, initiateFlow: R },
              events: {},
              queries: { userAuthenticationMethod: A, isFlowCompleted: C }
            },
            stores: [w],
            imports: [n.n],
            providers: [y]
          })
        ],
        D
      );
    },
    1534: (e, t, r) => {
      r.d(t, { D: () => n });
      var s = r(86952),
        o = r(65446);
      const n = (0, s.Q)({ name: "overrides", commands: {}, events: {}, queries: { OverridesQuery: o.N } });
    },
    65446: (e, t, r) => {
      r.d(t, { N: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    5540: (e, t, r) => {
      r.d(t, { x: () => O });
      var s = r(88802),
        o = r(99634);
      var n = r(1534),
        i = r(57924),
        a = r(26457),
        c = r(43702),
        l = r(25859),
        d = r(6220),
        u = r(30523),
        p = r(87065),
        h = r(39995);
      class m {
        constructor(e, t, r, s) {
          (this.settings = e), (this.store = t), (this.appLogger = r), (this.rfuDispatcher = s);
          const { fileName: o } = e;
          (this.jsonSerializerCodec = new c.b()),
            (this.newlyUpdatedFiles$ = (0, l.P)(async () => {
              const e = await this.store.getState();
              return { [o]: e.revision };
            }).pipe((0, d.z)((e) => this.rfuDispatcher.fileSubscription(e))));
        }
        initFileObservation() {
          this.newlyUpdatedFiles$.subscribe(this._handleRFUDownload.bind(this));
        }
        streamFileUpdate() {
          return this.store.state$.pipe(
            (0, u.h)((e) => 0 !== e.revision),
            (0, p.U)((e) => e.data),
            (0, u.h)((e) => this.settings.typeguard(e))
          );
        }
        async _handleRFUDownload(e) {
          const { fileName: t } = this.settings;
          if (!(t in e)) return;
          const r = e[t],
            s = this.jsonSerializerCodec.decode(r.buffer);
          this.settings.typeguard(s) &&
            (await this.store.set({ filename: r.fileName, data: s, revision: r.revision, lastDownloadTimestamp: r.lastDownloadTimestamp }),
            this.rfuDispatcher.fileSubscription({ [t]: r.revision }));
        }
      }
      var v = r(73881),
        g = r(95681),
        y = r(23347),
        f = r(10722),
        _ = r(25029);
      const S = (e) =>
          !("object" != typeof e || null === e) &&
          "filename" in e &&
          null !== e.filename &&
          void 0 !== e.filename &&
          "string" == typeof e.filename &&
          "revision" in e &&
          null !== e.revision &&
          void 0 !== e.revision &&
          "number" == typeof e.revision,
        E = (e) => ({ filename: e, revision: 0, data: {}, lastDownloadTimestamp: Date.now() });
      let b = class {
        constructor(e) {
          this.rfuClient = e;
        }
        onFrameworkInit() {
          this.rfuClient.initFileObservation();
        }
      };
      b = (0, s.__decorate)([(0, i.ar)(), (0, s.__metadata)("design:paramtypes", [m])], b);
      var w = r(20754),
        A = r(65446),
        T = r(87279);
      let C = class {
        constructor(e) {
          this.rfuClient = e;
        }
        execute() {
          return this.rfuClient.streamFileUpdate().pipe((0, p.U)((e) => (0, T.Vp)({ overrides: e })));
        }
      };
      C = (0, s.__decorate)([(0, w.e)(A.N), (0, s.__metadata)("design:paramtypes", [m])], C);
      const I = ((e, t) => {
        const r = ((e) =>
          class extends (0, g.Q)({
            storeName: "RFUStore",
            persist: !0,
            storage: { schemaVersion: 1, initialValue: E(e), typeGuard: S },
            codec: f.E,
            storeTypeGuard: S,
            capacity: y.Y._010KB,
            scope: _.F.Device,
            isCache: !0
          }) {})(e);
        var s;
        return {
          providers: [
            {
              token: m,
              asyncFactory: (e, t, r) => Promise.resolve(new m(s, e, t, r)),
              inject: [(s = { fileName: e, storeClass: r, typeguard: t }).storeClass, a.V, h.Q]
            }
          ],
          onFrameworkInit: [b],
          imports: [v.Q],
          stores: [r]
        };
      })(
        "overrides.json",
        (e) =>
          null != e &&
          "object" == typeof e &&
          Object.values(e).every(
            (e) =>
              Array.isArray(e) &&
              e.every((e) =>
                ((e) => {
                  if (!e || "object" != typeof e) return !1;
                  const t = "type" in e && void 0 !== e.type && ("startsWith" === e.type || "regexp" === e.type),
                    r =
                      "value" in e &&
                      void 0 !== e.value &&
                      ((Array.isArray(e.value) && e.value.every((e) => "string" == typeof e)) || "string" == typeof e.value),
                    s =
                      "conditions" in e &&
                      void 0 !== e.conditions &&
                      Array.isArray(e.conditions) &&
                      e.conditions.every((e) =>
                        ((e) => {
                          const t = "type" in e && void 0 !== e.type && ("css" === e.type || "xpath" === e.type),
                            r = "selector" in e && void 0 !== e.selector && "string" == typeof e.selector;
                          return t && r;
                        })(e)
                      ),
                    o =
                      "actions" in e &&
                      void 0 !== e.actions &&
                      Array.isArray(e.actions) &&
                      e.actions.every((e) =>
                        ((e) => {
                          const t = "type" in e && void 0 !== e.type && ("set" === e.type || "ignore" === e.type),
                            r = "cssSelector" in e && void 0 !== e.cssSelector && "string" == typeof e.cssSelector;
                          return t && r;
                        })(e)
                      );
                  return t && r && s && o;
                })(e)
              )
          )
      );
      let O = class {};
      O = (0, s.__decorate)([(0, o.Y)({ api: n.D, composes: [I], handlers: { commands: {}, events: {}, queries: { overrides: C } } })], O);
    },
    36636: (e, t, r) => {
      r.d(t, { e: () => n });
      var s = r(67837),
        o = r(29986);
      class n extends (0, s.E)(o.V) {}
      (0, s.K)(o.V, n);
    },
    29986: (e, t, r) => {
      r.d(t, { V: () => i });
      var s = r(86952),
        o = r(28096),
        n = r(75203);
      const i = (0, s.Q)({
        name: "authenticationFlow",
        commands: {
          changeLogin: n.hW,
          changeTwoFactorAuthenticationOtpType: n.eG,
          clearError: n.jq,
          cancelDeviceTransferRequest: n.Yc,
          resendEmailToken: n.Gc,
          resendPushNotification: n.rF,
          sendAccountEmail: n.A,
          sendMasterPassword: n.rT,
          submitBackupCode: n.sH,
          submitEmailToken: n.XH,
          submitTotp: n.ad,
          switchToDashlaneAuthenticator: n.K1,
          switchToEmailToken: n.v5,
          retryWebAuthnAuthentication: n.M6,
          useMasterPassword: n.Cc,
          webAuthnAuthenticationFail: n.O3,
          logout: n.N5,
          lockSession: n.Y$,
          loginViaSSO: n.yv,
          initiateLoginWithSSO: n.Hr,
          initiateAutologinWithSSOCommand: n.x2
        },
        queries: { authenticationFlowStatus: o.DW, getSsoUserSettings: o.Dc, getProviderInfo: o.L2 },
        events: {}
      });
    },
    75203: (e, t, r) => {
      r.d(t, {
        A: () => n,
        Cc: () => f,
        Gc: () => p,
        Hr: () => w,
        K1: () => a,
        M6: () => y,
        N5: () => S,
        O3: () => _,
        XH: () => c,
        Y$: () => E,
        Yc: () => T,
        ad: () => l,
        eG: () => u,
        hW: () => i,
        jq: () => g,
        rF: () => m,
        rT: () => h,
        sH: () => d,
        v5: () => v,
        x2: () => A,
        yv: () => b
      });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
      class i extends (0, s.g)({ scope: o.F.Device }) {}
      class a extends (0, s.g)({ scope: o.F.Device }) {}
      class c extends (0, s.g)({ scope: o.F.Device }) {}
      class l extends (0, s.g)({ scope: o.F.Device }) {}
      class d extends (0, s.g)({ scope: o.F.Device }) {}
      class u extends (0, s.g)({ scope: o.F.Device }) {}
      class p extends (0, s.g)({ scope: o.F.Device }) {}
      class h extends (0, s.g)({ scope: o.F.Device }) {}
      class m extends (0, s.g)({ scope: o.F.Device }) {}
      class v extends (0, s.g)({ scope: o.F.Device }) {}
      class g extends (0, s.g)({ scope: o.F.Device }) {}
      class y extends (0, s.g)({ scope: o.F.Device }) {}
      class f extends (0, s.g)({ scope: o.F.Device }) {}
      class _ extends (0, s.g)({ scope: o.F.Device }) {}
      class S extends (0, s.g)({ scope: o.F.Device }) {}
      class E extends (0, s.g)({ scope: o.F.Device }) {}
      class b extends (0, s.g)({ scope: o.F.Device }) {}
      class w extends (0, s.g)({ scope: o.F.Device }) {}
      class A extends (0, s.g)({ scope: o.F.Device }) {}
      class T extends (0, s.g)({ scope: o.F.Device }) {}
    },
    28096: (e, t, r) => {
      r.d(t, { DW: () => n, Dc: () => i, L2: () => a });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
      class i extends (0, s.k)({ scope: o.F.Device }) {}
      class a extends (0, s.k)({ scope: o.F.Device }) {}
    },
    64496: (e, t, r) => {
      var s, o, n;
      r.d(t, { E6: () => o, UY: () => n, ao: () => i, hr: () => s, vX: () => a }),
        (function (e) {
          (e.SSO = "sso"), (e.MP = "master_password");
        })(s || (s = {})),
        (function (e) {
          (e.WaitingForTransferRequest = "WaitingForTransferRequest"),
            (e.DisplayInstructions = "DisplayInstructions"),
            (e.LoadingPassphrase = "LoadingPassphrase"),
            (e.DisplayPassphrase = "DisplayPassphrase"),
            (e.LoadingAccount = "LoadingAccount"),
            (e.Error = "Error"),
            (e.DeviceRegistered = "DeviceRegistered");
        })(o || (o = {})),
        (function (e) {
          (e.GENERIC_ERROR = "GENERIC_ERROR"),
            (e.TIMEOUT = "TIMEOUT"),
            (e.REQUEST_REJECTED = "REQUEST_REJECTED"),
            (e.ACCOUNT_ERROR = "ACCOUNT_ERROR"),
            (e.RATE_LIMIT = "RATE_LIMIT");
        })(n || (n = {}));
      const i = (e) => Object.values(n).includes(e);
      var a;
      !(function (e) {
        (e[(e.MP_TO_SSO = 0)] = "MP_TO_SSO"),
          (e[(e.MP_TO_SSO_WITH_INFO = 1)] = "MP_TO_SSO_WITH_INFO"),
          (e[(e.SSO_TO_MP = 2)] = "SSO_TO_MP");
      })(a || (a = {}));
    },
    42853: (e, t, r) => {
      r.d(t, { G: () => a });
      var s = r(86952),
        o = r(319),
        n = r(96782),
        i = r(59463);
      const a = (0, s.Q)({
        name: "deviceRegistration",
        commands: { cleanRemotelyRemovedProfiles: o.L, registerDevice: n.J },
        events: {},
        queries: { localAccounts: i.a }
      });
    },
    25565: (e, t, r) => {
      r.d(t, { z: () => n });
      var s = r(67837),
        o = r(42853);
      class n extends (0, s.E)(o.G) {}
      (0, s.K)(o.G, n);
    },
    319: (e, t, r) => {
      r.d(t, { L: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    96782: (e, t, r) => {
      r.d(t, { J: () => a, Y: () => i });
      var s = r(74354),
        o = r(25029),
        n = r(7165);
      const i = n.z.discriminatedUnion("with", [
        n.z.object({
          with: n.z.literal("token"),
          login: n.z.string(),
          token: n.z.string(),
          deviceName: n.z.optional(n.z.string()),
          ignoreAlreadyRegisteredError: n.z.optional(n.z.boolean())
        }),
        n.z.object({
          with: n.z.literal("authTicket"),
          login: n.z.string(),
          authTicket: n.z.string(),
          deviceName: n.z.optional(n.z.string()),
          ignoreAlreadyRegisteredError: n.z.optional(n.z.boolean())
        })
      ]);
      class a extends (0, s.g)({ scope: o.F.Device }) {}
    },
    59463: (e, t, r) => {
      r.d(t, { a: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    6218: (e, t, r) => {
      r.d(t, { F: () => u });
      var s = r(86952),
        o = r(53835),
        n = r(33969),
        i = r(97891),
        a = r(87041),
        c = r(55870),
        l = r(48214),
        d = r(81540);
      const u = (0, s.Q)({
        name: "deviceTransfer",
        commands: {
          refreshRequest: n.V,
          cancelRequest: i.b,
          approveRequest: a.G,
          rejectRequest: c.a,
          submitPassphraseChallenge: l.I,
          returnToDeviceSetupCommand: d.n
        },
        events: {},
        queries: { trustedDeviceFlowStatus: o.N }
      });
    },
    87041: (e, t, r) => {
      r.d(t, { G: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    97891: (e, t, r) => {
      r.d(t, { b: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    33969: (e, t, r) => {
      r.d(t, { V: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    55870: (e, t, r) => {
      r.d(t, { a: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    81540: (e, t, r) => {
      r.d(t, { n: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    48214: (e, t, r) => {
      r.d(t, { I: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    53835: (e, t, r) => {
      r.d(t, { N: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    70486: (e, t, r) => {
      var s, o;
      r.d(t, { S: () => s, T: () => o }),
        (function (e) {
          (e.GENERIC_ERROR = "GENERIC_ERROR"),
            (e.INVALID_PASSPHRASE = "INVALID_PASSPHRASE"),
            (e.TIMEOUT = "TIMEOUT"),
            (e.PASSPHRASE_ATTEMPTS_LIMIT = "PASSPHRASE_ATTEMPTS_LIMIT");
        })(s || (s = {})),
        (function (e) {
          (e[(e.WaitingForNewDeviceRequest = 0)] = "WaitingForNewDeviceRequest"),
            (e[(e.NewDeviceRequestAvailable = 1)] = "NewDeviceRequestAvailable"),
            (e[(e.DisplayPassphraseChallenge = 2)] = "DisplayPassphraseChallenge"),
            (e[(e.DeviceTransferComplete = 3)] = "DeviceTransferComplete"),
            (e[(e.LoadingChallenge = 4)] = "LoadingChallenge"),
            (e[(e.DeviceTransferRejected = 5)] = "DeviceTransferRejected"),
            (e[(e.Error = 6)] = "Error");
        })(o || (o = {}));
    },
    11433: (e, t, r) => {
      r.d(t, { i: () => a });
      var s = r(86952),
        o = r(41025),
        n = r(13744),
        i = r(13089);
      const a = (0, s.Q)({
        name: "identityVerificationFlow",
        commands: {
          changeTwoFactorAuthenticationOtpType: n.eG,
          clearError: n.$5,
          resendEmailToken: n.Gc,
          resendPushNotification: n.rF,
          submitBackupCode: n.sH,
          submitEmailToken: n.XH,
          submitTotp: n.ad,
          switchToDashlaneAuthenticator: n.K1,
          switchToEmailToken: n.v5,
          startIdentityVerification: n.qw,
          cancelIdentityVerification: n.Vs
        },
        queries: { identityVerificationFlowStatus: o.O },
        events: { identityVerificationCompleted: i.w }
      });
    },
    13744: (e, t, r) => {
      r.d(t, {
        $5: () => i,
        Gc: () => a,
        K1: () => p,
        Vs: () => v,
        XH: () => l,
        ad: () => u,
        eG: () => n,
        qw: () => m,
        rF: () => c,
        sH: () => d,
        v5: () => h
      });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
      class i extends (0, s.g)({ scope: o.F.Device }) {}
      class a extends (0, s.g)({ scope: o.F.Device }) {}
      class c extends (0, s.g)({ scope: o.F.Device }) {}
      class l extends (0, s.g)({ scope: o.F.Device }) {}
      class d extends (0, s.g)({ scope: o.F.Device }) {}
      class u extends (0, s.g)({ scope: o.F.Device }) {}
      class p extends (0, s.g)({ scope: o.F.Device }) {}
      class h extends (0, s.g)({ scope: o.F.Device }) {}
      class m extends (0, s.g)({ scope: o.F.Device }) {}
      class v extends (0, s.g)({ scope: o.F.Device }) {}
    },
    13089: (e, t, r) => {
      r.d(t, { w: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.Device }) {}
    },
    41025: (e, t, r) => {
      r.d(t, { O: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    81822: (e, t, r) => {
      r.d(t, { l: () => n });
      var s = r(67837),
        o = r(11433);
      class n extends (0, s.E)(o.i) {}
      (0, s.K)(o.i, n);
    },
    78536: (e, t, r) => {
      r.r(t),
        r.d(t, {
          AuthenticationFlowContracts: () => s,
          CleanRemotelyRemovedProfilesCommand: () => P.L,
          DeviceRegistrationClient: () => N.z,
          DeviceTransferContracts: () => n,
          IdentityVerificationFlowContracts: () => o,
          LocalAccountsQuery: () => D.a,
          RegisterDeviceCommand: () => R.J,
          Request2FaCodesByPhoneCommand: () => C.x,
          Request2FaCodesByPhoneErrorCodes: () => I.A,
          ValidateWebauthnAssertionCommand: () => C.L,
          deviceRegistrationApi: () => O.G,
          registrationSchema: () => R.Y,
          userVerificationApi: () => T.M
        });
      var s = {};
      r.r(s),
        r.d(s, {
          AuthenticationFlowClient: () => d.e,
          AuthenticationFlowStatusQuery: () => c.DW,
          CancelDeviceTransferRequestCommand: () => a.Yc,
          ChangeAccountEmailCommand: () => a.hW,
          ChangeTwoFactorAuthenticationOtpTypeCommand: () => a.eG,
          ClearErrorCommand: () => a.jq,
          DeviceToDeviceAuthenticationErrors: () => l.UY,
          DeviceToDeviceAuthenticationFlowStep: () => l.E6,
          GetSsoProviderInfoQuery: () => c.L2,
          GetSsoUserSettingsQuery: () => c.Dc,
          InitiateAutologinWithSSOCommand: () => a.x2,
          InitiateLoginWithSSOCommand: () => a.Hr,
          LockCommand: () => a.Y$,
          LoginViaSSOCommand: () => a.yv,
          LogoutCommand: () => a.N5,
          ResendEmailTokenCommand: () => a.Gc,
          ResendPushNotificationCommand: () => a.rF,
          RetryWebAuthnAuthenticationCommand: () => a.M6,
          SSOMigrationType: () => l.vX,
          SendAccountEmailCommand: () => a.A,
          SendMasterPasswordCommand: () => a.rT,
          SsoMigrationServerMethod: () => l.hr,
          SubmitBackupCodeCommand: () => a.sH,
          SubmitEmailTokenCommand: () => a.XH,
          SubmitTotpCommand: () => a.ad,
          SwitchToDashlaneAuthenticatorCommand: () => a.K1,
          SwitchToEmailTokenCommand: () => a.v5,
          UseMasterPasswordCommand: () => a.Cc,
          WebAuthnAuthenticationFailCommand: () => a.O3,
          authenticationFlowApi: () => i.V,
          isDeviceToDeviceAuthenticationError: () => l.ao
        });
      var o = {};
      r.r(o),
        r.d(o, {
          CancelIdentityVerificationCommand: () => p.Vs,
          ChangeTwoFactorAuthenticationOtpTypeCommand: () => p.eG,
          ClearIdentityVerificationErrorCommand: () => p.$5,
          IdentityVerificationClient: () => m.l,
          IdentityVerificationCompletedEvent: () => v.w,
          IdentityVerificationFlowStatusQuery: () => h.O,
          ResendEmailTokenCommand: () => p.Gc,
          ResendPushNotificationCommand: () => p.rF,
          StartIdentityVerificationCommand: () => p.qw,
          SubmitBackupCodeCommand: () => p.sH,
          SubmitEmailTokenCommand: () => p.XH,
          SubmitTotpCommand: () => p.ad,
          SwitchToDashlaneAuthenticatorCommand: () => p.K1,
          SwitchToEmailTokenCommand: () => p.v5,
          identityVerificationFlowApi: () => u.i
        });
      var n = {};
      r.r(n),
        r.d(n, {
          ApproveDeviceTransferRequestCommand: () => f.G,
          CancelRequestCommand: () => E.b,
          RefreshRequestCommand: () => y.V,
          RejectDeviceTransferRequestCommand: () => _.a,
          ReturnToDeviceSetupCommand: () => b.n,
          SubmitPassphraseChallengeCommand: () => S.I,
          TrustedDeviceFlowErrors: () => A.S,
          TrustedDeviceFlowStatusQuery: () => w.N,
          TrustedDeviceFlowStep: () => A.T,
          deviceTransferApi: () => g.F
        });
      var i = r(29986),
        a = r(75203),
        c = r(28096),
        l = r(64496),
        d = r(36636),
        u = r(11433),
        p = r(13744),
        h = r(41025),
        m = r(81822),
        v = r(13089),
        g = r(6218),
        y = r(33969),
        f = r(87041),
        _ = r(55870),
        S = r(48214),
        E = r(97891),
        b = r(81540),
        w = r(53835),
        A = r(70486),
        T = r(69401),
        C = r(11088),
        I = r(83853),
        O = r(42853),
        P = r(319),
        R = r(96782),
        D = r(59463),
        N = r(25565);
    },
    83853: (e, t, r) => {
      var s;
      r.d(t, { A: () => s }),
        (function (e) {
          (e.AccountNotEligible = "AccountNotEligible"), (e.NetworkError = "NetworkError");
        })(s || (s = {}));
    },
    69401: (e, t, r) => {
      r.d(t, { M: () => n });
      var s = r(86952),
        o = r(11088);
      const n = (0, s.Q)({
        name: "userVerification",
        commands: { validateWebauthnAssertion: o.L, request2FaCodesByPhone: o.x },
        queries: {},
        events: {}
      });
    },
    11088: (e, t, r) => {
      r.d(t, { L: () => n, x: () => i });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
      class i extends (0, s.g)({ scope: o.F.Device }) {}
    },
    65589: (e, t, r) => {
      r.d(t, { c: () => Rt });
      var s = r(88802),
        o = r(99634),
        n = r(38679),
        i = r(9671),
        a = r(6936),
        c = r(86252),
        l = r(29986),
        d = r(93850),
        u = r(43673),
        p = r(8362),
        h = r(25029),
        m = r(95681),
        v = r(87065);
      const g = (e) => !0;
      class y extends (0, m.Q)({
        initialValue: void 0,
        persist: !1,
        scope: h.F.Device,
        storeName: "authentication-flow-machine",
        storeTypeGuard: g
      }) {}
      var f = r(23347),
        _ = r(10722);
      const S = (e) => !(!e || "object" != typeof e) && "rememberMeForSSOPreference" in e;
      class E extends (0, m.Q)({
        codec: _.E,
        persist: !0,
        storage: { initialValue: { rememberMeForSSOPreference: !0 }, schemaVersion: 1, typeGuard: S },
        scope: h.F.Device,
        storeName: "sso-info",
        storeTypeGuard: S,
        capacity: f.Y._001KB
      }) {}
      const b = (e) => !0;
      class w extends (0, m.Q)({
        persist: !1,
        initialValue: {},
        scope: h.F.Device,
        storeName: "sso-provider-info",
        storeTypeGuard: b,
        capacity: f.Y._001KB
      }) {}
      var A = r(87279),
        T = r(63663),
        C = r(75203),
        I = r(78065),
        O = r(20916),
        P = r(57924),
        R = r(53446),
        D = r(37294);
      class N {
        constructor(e, t) {
          (this.interpreter = e), (this.carbon = t);
        }
        execute() {
          try {
            const { carbonState: e } = this.carbon.queries;
            e({ path: "userSession.loginDeviceLimitFlow.flow" })
              .pipe(
                (0, v.U)((e) => {
                  if ("success" === e.tag) return e.data;
                })
              )
              .subscribe((e) => {
                Boolean(this.lastDeviceLimitFlowValue) && !e && this.interpreter.send({ type: "DEVICE_LIMIT_ABORTED" }),
                  (this.lastDeviceLimitFlowValue = e);
              });
          } catch (e) {
            return Promise.reject(new Error("Unable to subscribe to loginDeviceLimitFlow state"));
          }
        }
      }
      var U = r(65865),
        L = r(18275),
        F = r(48038),
        M = r(15187);
      class x extends M.x {}
      var k = r(89358),
        G = r(60399);
      let K = class {
        constructor(e, t) {
          (this.carbon = e), (this.session = t);
        }
        async executeWithParams({ login: e, masterPassword: t, isRememberMeEnabled: r, serverKey: s }) {
          const o = await (0, G.z)(this.session.queries.createdSessionsState());
          if ((0, A.hx)(o)) throw new Error("coudltn get sessions");
          if (e in o.data)
            try {
              return await this.session.commands.openUserSession({
                email: e,
                rememberPassword: r,
                sessionKey: { type: "mp", masterPassword: t, secondaryKey: s }
              });
            } catch (e) {
              return Promise.reject(new Error("UNKNOWN_ERROR"));
            }
          try {
            return (
              await this.carbon.commands.carbonLegacyLeeloo({
                name: "openSessionWithMasterPassword",
                arg: [{ login: e, password: t, rememberPassword: r, requiredPermissions: void 0 }]
              }),
              Promise.resolve()
            );
          } catch (e) {}
        }
      };
      K = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._, k.x])], K);
      let V = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async execute() {
          try {
            const e = await this.carbonLegacy.commands.carbon({ name: "checkDoesLocalRecoveryKeyExist", args: [] });
            if (!(0, A.d6)(e)) throw new Error("Carbon command failed");
            return { isAccountRecoveryAvailable: e.data.carbonResult.doesExist };
          } catch (e) {
            return { isAccountRecoveryAvailable: !1 };
          }
        }
      };
      V = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], V);
      var j = r(48844),
        B = r(87113),
        W = r(64496);
      const H = (e) => "object" == typeof e && "type" in e,
        z = (e) => {
          if (e)
            switch (e) {
              case "sso_member_to_admin":
              case "sso_member_to_mp_user":
                return W.vX.SSO_TO_MP;
              case "mp_user_to_sso_member":
                return W.vX.MP_TO_SSO;
              default:
                return;
            }
        };
      let Q = class {
        constructor(e, t) {
          (this.ssoProviderInfoStore = e), (this.serverApiClient = t), (this.ssoProviderInfoStore = e), (this.serverApiClient = t);
        }
        async getSsoMigration(e) {
          const t = await (0, G.z)(
            this.serverApiClient.v1.authentication
              .getAuthenticationMethodsForDevice({
                login: e,
                methods: ["email_token", "totp", "duo_push", "dashlane_authenticator", "u2f"]
              })
              .pipe(
                (0, j.DZ)((e) => {
                  throw new Error(e.message);
                }),
                (0, j.lk)((e) => {
                  const t = e.data.verifications.find(H);
                  if (t) return (0, A.Vp)(t);
                  throw new Error("Unsupported authentication method");
                })
              )
          );
          if ((0, A.hx)(t)) throw new Error("Retrieve of verificationMethods failed ");
          if ("sso" === t.data.type)
            return {
              serviceProviderUrl: t.data.ssoInfo.serviceProviderUrl,
              isNitroProvider: t.data.ssoInfo.isNitroProvider,
              migration: t.data.ssoInfo.migration
            };
        }
        async executeWithParams({ login: e }) {
          const t = await this.getSsoMigration(e);
          if (t)
            return (
              await this.ssoProviderInfoStore.set({
                isNitroProvider: t.isNitroProvider ?? !1,
                serviceProviderUrl: t.serviceProviderUrl,
                migrationType: z(t.migration)
              }),
              { serviceProviderRedirectUrl: t.serviceProviderUrl, isNitroProvider: t.isNitroProvider }
            );
        }
      };
      Q = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [w, B.l])], Q);
      let q = class {
        constructor(e) {
          this.session = e;
        }
        async executeWithParams(e) {
          const t = await (0, G.z)(
            this.session.queries.checkSessionKey({
              email: e.login,
              sessionKey: { type: "mp", masterPassword: e.masterPassword, secondaryKey: e.serverKey }
            })
          );
          if (!(0, A.d6)(t)) throw new Error("Error verifying SK");
          if (t.data) return !0;
          throw new x();
        }
      };
      q = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [k.x])], q);
      let Y = class {
        constructor(e, t, r, s) {
          (this.accountRecoveryStatusService = e),
            (this.masterPasswordService = t),
            (this.checkIsMigrationNeededService = r),
            (this.mpVerificationService = s);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              initial: "CheckingAccountRecoveryStatus",
              id: "MasterPasswordFlowMachine",
              context: { isRememberMeEnabled: !1, isAccountRecoveryAvailable: !1 },
              states: {
                CheckingAccountRecoveryStatus: {
                  invoke: {
                    src: "checkAccountRecoveryStatus",
                    onDone: { target: "WaitingForMasterPassword", actions: ["assignAccountRecoveryStatus"] }
                  }
                },
                WaitingForMasterPassword: {
                  on: { INPUT_MASTER_PASSWORD: { target: "ValidatingMasterPassword", actions: ["assignMasterPassword"] } }
                },
                ValidatingMasterPassword: {
                  invoke: {
                    src: "validateMasterPassword",
                    onDone: { target: "OpeningSessionWithMasterpassword" },
                    onError: { actions: ["assignMpError"], target: "WaitingForMasterPassword" }
                  }
                },
                OpeningSessionWithMasterpassword: {
                  invoke: {
                    src: "authenticateWithMasterPassword",
                    onError: { actions: ["assignGenericServiceError"] },
                    onDone: { target: "CheckingMigrationNeeded" }
                  },
                  on: {
                    CARBON_LEGACY_ERROR: { target: "WaitingForMasterPassword", actions: ["assignError"] },
                    DEVICE_LIMIT_ABORTED: { target: "DeviceLimitAborted" }
                  }
                },
                CheckingMigrationNeeded: {
                  invoke: {
                    src: "checkIsMigrationNeeded",
                    onDone: { target: "MasterPasswordDone", actions: ["assignSSOMigrationStatus"] },
                    onError: { target: "WaitingForMasterPassword", actions: ["assignGenericServiceError"] }
                  },
                  on: { CARBON_LEGACY_ERROR: { target: "WaitingForMasterPassword", actions: ["assignError"] } }
                },
                DeviceLimitAborted: { type: "final", data: { shouldResetAuthenticationFlow: !0 } },
                MasterPasswordDone: { type: "final", data: { shouldResetAuthenticationFlow: !1 } }
              }
            },
            options: {
              actions: {
                assignMasterPassword: (0, U.f0)({
                  masterPassword: (e, t) => t.masterPassword,
                  isRememberMeEnabled: (e, t) => t.rememberMe
                }),
                assignAccountRecoveryStatus: (0, U.f0)({ isAccountRecoveryAvailable: (e, t) => t.data.isAccountRecoveryAvailable }),
                assignError: (0, U.f0)({ error: (e, t) => ({ code: "unknown_error", data: { message: t.error } }) }),
                assignGenericServiceError: (0, U.f0)({ error: () => ({ code: "unknown_error", data: { message: "UNKNOWN_ERROR" } }) }),
                assignMpError: (0, U.f0)({
                  error: (e, t) => ({ code: "unknown_error", data: { message: t.data instanceof x ? "WRONG_PASSWORD" : "UNKNOWN_ERROR" } })
                }),
                assignSSOMigrationStatus: (0, U.f0)({
                  serviceProviderRedirectUrl: (e, t) => t.data?.serviceProviderRedirectUrl,
                  isNitroProvider: (e, t) => t.data?.isNitroProvider
                })
              },
              services: {
                authenticateWithMasterPassword: (e) => {
                  const { login: t, masterPassword: r, isRememberMeEnabled: s, serverKey: o } = e;
                  return this.masterPasswordService.executeWithParams({
                    login: t ?? "",
                    masterPassword: r ?? "",
                    isRememberMeEnabled: s,
                    serverKey: o
                  });
                },
                checkAccountRecoveryStatus: () => this.accountRecoveryStatusService.execute(),
                checkIsMigrationNeeded: (e) => this.checkIsMigrationNeededService.executeWithParams({ login: e.login ?? "" }),
                validateMasterPassword: ({ login: e, masterPassword: t, serverKey: r }) =>
                  this.mpVerificationService.executeWithParams({ login: e ?? "", masterPassword: t ?? "", serverKey: r })
              }
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      Y = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [V, K, Q, q])], Y);
      let $ = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async execute(e) {
          try {
            return (
              await this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "openSessionResendToken", arg: [{ login: e.login ?? "" }] }),
              Promise.resolve()
            );
          } catch (e) {}
        }
      };
      $ = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], $);
      let X = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async requestCodeAgainstServer() {}
        async execute({ login: e }) {
          return (
            await this.carbonLegacy.commands.carbonLegacyLeeloo({
              name: "openSessionWithDashlaneAuthenticator",
              arg: [{ login: e, password: null, persistData: !0, deviceName: "" }]
            }),
            Promise.resolve()
          );
        }
        async cancel() {
          return (
            await this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "cancelDashlaneAuthenticatorRegistration", arg: [] }),
            Promise.resolve()
          );
        }
      };
      X = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], X);
      let Z = class {
        constructor(e, t) {
          (this.dashlaneAuthenticatorService = e), (this.sendEmailToken = t);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "AuthenticatorMachine",
              context: { isDashlaneAuthenticatorAvailable: !1 },
              initial: "RequestingServerPush",
              states: {
                RequestingServerPush: {
                  entry: ["updateDashlaneAuthenticatorAvailability"],
                  invoke: { src: "authenticateWithDashlaneAuthenticator" },
                  on: {
                    CARBON_LEGACY_ERROR: { actions: ["assignError", "updateDashlaneAuthenticatorAvailability"] },
                    RESEND_PUSH_NOTIFICATION: { target: "RequestingServerPush", actions: ["clearError"] },
                    SWITCH_TO_EMAIL_TOKEN: { actions: ["cancelDashlaneAuthenticator", "clearError"], target: "EmailTokenRequested" }
                  }
                },
                AuthenticatorPushValidated: { type: "final", data: { switchToEmailToken: !1 } },
                EmailTokenRequested: { entry: ["sendEmailToken"], type: "final", data: { switchToEmailToken: !0 } }
              }
            },
            options: {
              actions: {
                clearError: (0, U.f0)({ error: () => {} }),
                assignError: (0, U.f0)({ error: (e, t) => ({ code: "unknown_error", data: { message: t.error } }) }),
                switchToEmailToken: (0, U.f0)({ switchToEmailToken: () => !0 }),
                updateDashlaneAuthenticatorAvailability: (0, U.f0)({ isDashlaneAuthenticatorAvailable: !0 }),
                cancelDashlaneAuthenticator: () => {
                  this.dashlaneAuthenticatorService.cancel();
                },
                sendEmailToken: (e) => {
                  const { login: t } = e;
                  this.sendEmailToken.execute({ login: t });
                }
              },
              services: {
                authenticateWithDashlaneAuthenticator: (e) => {
                  const { login: t } = e;
                  return this.dashlaneAuthenticatorService.execute({ login: t });
                }
              },
              guards: {}
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      Z = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [X, $])], Z);
      let J = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async execute(e) {
          try {
            await this.carbonLegacy.commands.carbonLegacyLeeloo({
              name: "openSessionWithToken",
              arg: [{ login: e.login ?? "", password: null, token: e.emailToken ?? "", persistData: !0, deviceName: e.deviceName }]
            });
          } catch (e) {}
        }
      };
      J = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], J);
      let ee = class {
        constructor(e, t) {
          (this.authenticateWithEmailToken = e), (this.sendEmailToken = t);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "EmailTokenMachine",
              context: { login: "", emailToken: "", deviceName: "" },
              initial: "WaitingForEmailToken",
              states: {
                SendEmailToken: {
                  invoke: { src: "sendEmailToken", onError: { target: "WaitingForEmailToken" }, onDone: { target: "WaitingForEmailToken" } }
                },
                WaitingForEmailToken: {
                  on: {
                    INPUT_EMAIL_TOKEN: { target: "ValidatingEmailToken", actions: ["assignEmailToken"] },
                    RESEND_EMAIL_TOKEN: { target: "SendEmailToken", actions: ["clearError"] }
                  }
                },
                ValidatingEmailToken: {
                  entry: ["authenticateWithEmailToken"],
                  on: { CARBON_LEGACY_ERROR: { target: "WaitingForEmailToken", actions: ["assignError"] } }
                },
                FinishingEmailToken: { type: "final", data: { switchToDashlaneAuthenticator: !1 } },
                DashlaneAuthenticatorRequested: { type: "final", data: { switchToDashlaneAuthenticator: !0 } }
              },
              on: { SWITCH_TO_DASHLANE_AUTHENTICATOR: { target: ".DashlaneAuthenticatorRequested", internal: !0, actions: ["clearError"] } }
            },
            options: {
              actions: {
                clearError: (0, U.f0)({ error: () => {} }),
                assignError: (0, U.f0)({ error: (e, t) => ({ code: "unknown_error", data: { message: t.error } }) }),
                assignEmailToken: (0, U.f0)({ emailToken: (e, t) => t.emailToken }),
                authenticateWithEmailToken: (e) => {
                  const { deviceName: t, emailToken: r, login: s } = e;
                  return this.authenticateWithEmailToken.execute({ deviceName: t, emailToken: r, login: s });
                }
              },
              services: {
                sendEmailToken: (e) => {
                  const { login: t } = e;
                  return this.sendEmailToken.execute({ login: t });
                }
              },
              guards: {}
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      ee = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [J, $])], ee);
      const te = (e) => ({ initial: e.initial, states: e.states, on: e.on ?? {} });
      let re = class {
        constructor(e, t) {
          (this.authenticatorMachine = e), (this.emailTokenMachine = t);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {}, guards: {} },
              id: "DeviceRegistrationMachine",
              context: {
                ...this.authenticatorMachine.desc().config.context,
                ...this.emailTokenMachine.desc().config.context,
                registrationMethod: void 0
              },
              initial: "StartDeviceRegistration",
              states: {
                StartDeviceRegistration: {
                  always: [
                    { target: "EmailToken", cond: "isRegistrationMethodEmailToken" },
                    { target: "DashlaneAuthenticator", cond: "isRegistrationMethodAuthenticator" },
                    { target: "TwoFactorAuthentication", cond: "isRegistrationMethodOTP" }
                  ]
                },
                DashlaneAuthenticator: {
                  ...te(this.authenticatorMachine.desc().config),
                  onDone: [{ target: "EmailToken", cond: "shouldSwitchToEmailToken" }, { target: "DeviceRegistrationDone" }]
                },
                EmailToken: {
                  ...te(this.emailTokenMachine.desc().config),
                  onDone: [{ target: "DashlaneAuthenticator", cond: "shouldSwitchToAuthenticator" }, { target: "DeviceRegistrationDone" }]
                },
                TwoFactorAuthentication: { onDone: { target: "DeviceRegistrationDone" } },
                DeviceRegistrationDone: { type: "final" }
              }
            },
            options: {
              actions: {
                ...this.authenticatorMachine.desc().options.actions,
                ...this.emailTokenMachine.desc().options.actions,
                assignUnknownDeviceRegistrationError: (0, U.f0)({
                  error: () => ({ code: "unknown_error", data: { message: "Unknown device registration error" } })
                })
              },
              services: { ...this.authenticatorMachine.desc().options.services, ...this.emailTokenMachine.desc().options.services },
              guards: {
                ...this.authenticatorMachine.desc().options.guards,
                ...this.emailTokenMachine.desc().options.guards,
                isRegistrationMethodEmailToken: (e) => "email_token" === e.registrationMethod,
                isRegistrationMethodOTP: (e) => "otp" === e.registrationMethod,
                isRegistrationMethodAuthenticator: (e) => "dashlane_authenticator" === e.registrationMethod,
                shouldSwitchToEmailToken: (e, t) => t.data.switchToEmailToken,
                shouldSwitchToAuthenticator: (e, t) => t.data.switchToDashlaneAuthenticator
              }
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      re = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [Z, ee])], re);
      let se = class {
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "WebAuthnMachine",
              context: {},
              initial: "InitWebAuthnAuthentication",
              states: {
                InitWebAuthnAuthentication: {
                  on: { WEBAUTHN_AUTHENTICATION_FAIL: { target: "WebAuthnAuthenticationFailed", actions: ["assignWebAuthnError"] } }
                },
                WebAuthnAuthenticationFailed: {
                  on: { RETRY_WEBAUTHN_AUTHENTICATION: { target: "InitWebAuthnAuthentication", actions: ["clearError"] } }
                },
                WebAuthnAuthenticationDone: { type: "final", data: { switchToMasterPassword: !1 } },
                MasterPasswordRequested: { type: "final", data: { switchToMasterPassword: !0 } }
              },
              on: { USE_MASTER_PASSWORD: { actions: ["clearError"], target: ".MasterPasswordRequested", internal: !0 } }
            },
            options: {
              actions: { clearError: (0, U.f0)({ error: () => {} }), assignWebAuthnError: (0, U.f0)({ error: (e, t) => t.error }) },
              services: {},
              guards: {}
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      se = (0, s.__decorate)([(0, P.GS)()], se);
      let oe = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        executeWithParams({
          login: e,
          masterPassword: t,
          otp: r,
          twoFactorAuthenticationOtpType: s,
          otpVerificationMode: o,
          deviceName: n
        }) {
          const i = { login: e, password: t ?? null, otp: r, withBackupCode: "backupCode" === s, persistData: !0 };
          try {
            "otp2" === o
              ? this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "openSessionWithOTP", arg: [{ ...i, deviceName: n }] })
              : "otp1" === o && this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "openSessionWithOTPForNewDevice", arg: [i] });
          } catch (e) {}
          return Promise.resolve();
        }
      };
      oe = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], oe);
      let ne = class {
        constructor(e) {
          this.twoFactorAuthenticationService = e;
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "WebAuthnMachine",
              context: { twoFactorAuthenticationOtpType: "totp" },
              initial: "WaitingForTotp",
              states: {
                WaitingForTotp: {
                  on: {
                    INPUT_TOTP: { target: "ValidatingTwoFactorAuthenticationOtp", actions: ["assignTwoFactorAuthenticationOtpValue"] },
                    SWITCH_TWO_FACTOR_AUTHENTICATION_TYPE: {
                      target: "WaitingForBackupCode",
                      actions: ["assignTwoFactorAuthenticationOtpType", "clearError"]
                    }
                  }
                },
                WaitingForBackupCode: {
                  on: {
                    INPUT_BACKUP_CODE: {
                      target: "ValidatingTwoFactorAuthenticationOtp",
                      actions: ["assignTwoFactorAuthenticationOtpValue"]
                    },
                    SWITCH_TWO_FACTOR_AUTHENTICATION_TYPE: {
                      target: "WaitingForTotp",
                      actions: ["assignTwoFactorAuthenticationOtpType", "clearError"]
                    }
                  }
                },
                ValidatingTwoFactorAuthenticationOtp: {
                  entry: ["authenticateWithTwoFactorAuthentication"],
                  on: {
                    CARBON_LEGACY_ERROR: [
                      { target: "WaitingForBackupCode", cond: "isBackupCode", actions: ["assignError"] },
                      { target: "WaitingForTotp", actions: ["assignError"] }
                    ]
                  }
                },
                TwoFactorAuthenticationDone: { type: "final" }
              }
            },
            options: {
              actions: {
                assignError: (0, U.f0)({ error: (e, t) => ({ code: "unknown_error", data: { message: t.error } }) }),
                clearError: (0, U.f0)({ error: () => {} }),
                assignTwoFactorAuthenticationOtpValue: (0, U.f0)({
                  twoFactorAuthenticationOtpValue: (e, t) => t.twoFactorAuthenticationOtpValue
                }),
                assignTwoFactorAuthenticationOtpType: (0, U.f0)({
                  twoFactorAuthenticationOtpType: (e, t) => t.twoFactorAuthenticationOtpType
                }),
                authenticateWithTwoFactorAuthentication: (e) => {
                  const t = {
                    login: e.login ?? "",
                    masterPassword: e.masterPassword ?? null,
                    otp: e.twoFactorAuthenticationOtpValue,
                    twoFactorAuthenticationOtpType: e.twoFactorAuthenticationOtpType,
                    persistData: !0,
                    otpVerificationMode: e.otpVerificationMode,
                    deviceName: e.deviceName
                  };
                  this.twoFactorAuthenticationService.executeWithParams(t);
                }
              },
              services: {},
              guards: { isBackupCode: (e) => "backupCode" === e.twoFactorAuthenticationOtpType }
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      ne = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [oe])], ne);
      var ie = r(10430),
        ae = r(10551),
        ce = r(16053);
      let le = class {
        constructor(e) {
          this.d2dAuthenticationService = e;
        }
        async execute({ login: e }) {
          const t = ae.getDefaultDeviceName();
          if (!e || !t) throw new ie.z("No user login/device name", W.UY.GENERIC_ERROR);
          const r = await this.d2dAuthenticationService.requestTransfer(e, t);
          if ((0, A.hx)(r)) throw new ie.z("Request transfer error", W.UY.GENERIC_ERROR);
          const { transferId: s, expireDateUnix: o } = r.data;
          return Promise.resolve({ transferId: s, expireDateUnix: o });
        }
      };
      le = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [ce.C])], le);
      var de = r(15652);
      let ue = class {
        constructor(e, t) {
          (this.d2dCryptoService = e), (this.d2dAuthenticationService = t);
        }
        async execute({ transferId: e }) {
          if (!e) throw new ie.z("No transferId in context", W.UY.GENERIC_ERROR);
          const { privateKey: t, publicKey: r } = this.d2dCryptoService.generateKeyPair(),
            s = this.d2dCryptoService.hash(r),
            o = await this.d2dAuthenticationService.startReceiverKeyExchange(e, s);
          if ((0, A.hx)(o)) return Promise.reject(o.error);
          const { senderPublicKey: n } = o.data;
          return Promise.resolve({ receiverPrivateKey: t, receiverPublicKey: r, senderPublicKey: n });
        }
      };
      ue = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [de.q, ce.C])], ue);
      let pe = class {
        constructor(e) {
          this.d2dAuthenticationService = e;
        }
        async execute(e) {
          if (!e.transferId || !e.login) throw new ie.z("No transferId or user login in the machine context", W.UY.GENERIC_ERROR);
          const t = await this.d2dAuthenticationService.startTransfer(e.transferId);
          return (0, A.hx)(t) ? Promise.reject(t.error) : Promise.resolve(t.data);
        }
      };
      pe = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [ce.C])], pe);
      let he = class {
        constructor(e, t) {
          (this.d2dCryptoService = e), (this.d2dAuthenticationService = t);
        }
        async execute(e) {
          if (!e.transferId || !e.login) throw new ie.z("No transferId or user login in the machine context", W.UY.GENERIC_ERROR);
          if (!e.receiverPrivateKey || !e.receiverPublicKey || !e.senderPublicKey)
            throw new ie.z("Missing keys/data in context", W.UY.GENERIC_ERROR);
          if (!e.sharedSecret) throw new ie.z("Missing sharedSecret in context", W.UY.GENERIC_ERROR);
          if (!e.encryptedData || !e.nonce) throw new ie.z("Missing transfer data in context", W.UY.GENERIC_ERROR);
          const t = this.d2dCryptoService.generateSymmetricKey(e.login, e.transferId, e.sharedSecret),
            r = this.d2dCryptoService.decryptInvisibleMasterPassword(e.encryptedData, e.nonce, t);
          await this.d2dAuthenticationService.openSession(r.login, r.token, r.key.value, e.deviceName);
        }
      };
      he = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [de.q, ce.C])], he);
      var me = r(69605);
      let ve = class {
        constructor(e, t, r) {
          (this.d2dCryptoService = e), (this.d2dAuthenticationService = t), (this.passphraseService = r);
        }
        async execute(e) {
          if (!e.receiverPrivateKey || !e.receiverPublicKey || !e.senderPublicKey)
            throw new ie.z("Keys not found in the state machine context", W.UY.GENERIC_ERROR);
          if (!e.transferId) throw new ie.z("TransferId not found in the state machine context/store", W.UY.GENERIC_ERROR);
          if (!e.login) throw new ie.z("User login not found in state machine context/store", W.UY.GENERIC_ERROR);
          const t = await this.d2dAuthenticationService.completeKeyExchange(e.transferId, e.receiverPublicKey);
          if ((0, A.hx)(t)) throw new ie.z("Error with completeKeyExchange", W.UY.GENERIC_ERROR);
          const r = this.d2dCryptoService.generateReceiverSharedSecret(e.receiverPublicKey, e.receiverPrivateKey, e.senderPublicKey),
            s = this.d2dCryptoService.generateVisualCheckSeed(e.login, e.transferId, r),
            { passphrase: o } = await this.passphraseService.generatePassphraseChallenge(s);
          return Promise.resolve({ sharedSecret: r, passphrase: o });
        }
      };
      ve = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [de.q, ce.C, me.Kp])], ve);
      let ge = class {
        constructor(e, t, r, s, o) {
          (this.requestDeviceTransfer = e),
            (this.startReceiverKeyExchange = t),
            (this.completeKeyExchangeAndGeneratePassphrase = r),
            (this.startTransfer = s),
            (this.openSession = o);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "DeviceToDeviceAuthenticationFlow",
              initial: "WaitingForTransferRequest",
              context: { transferId: void 0 },
              states: {
                WaitingForTransferRequest: {
                  invoke: {
                    src: "requestDeviceTransfer",
                    onDone: { target: "DisplayInstructions", actions: ["assignTransferId"] },
                    onError: { actions: ["assignDeviceToDeviceError"], target: "DeviceTransferError" }
                  }
                },
                DisplayInstructions: {
                  invoke: {
                    src: "startReceiverKeyExchange",
                    onDone: { actions: ["assignKeys"], target: "GeneratePassphrase" },
                    onError: { actions: ["assignDeviceToDeviceError"], target: "DeviceTransferError" }
                  }
                },
                GeneratePassphrase: {
                  invoke: {
                    src: "completeKeyExchangeAndGeneratePassphrase",
                    onDone: { actions: ["assignPassphrase"], target: "StartTransfer" },
                    onError: { actions: ["assignDeviceToDeviceError"], target: "DeviceTransferError" }
                  }
                },
                StartTransfer: {
                  invoke: {
                    src: "startTransfer",
                    onDone: { actions: ["assignTransferData"], target: "OpenSession" },
                    onError: { actions: ["assignDeviceToDeviceError"], target: "DeviceTransferError" }
                  }
                },
                OpenSession: {
                  invoke: {
                    src: "openSession",
                    onDone: { target: "DeviceRegistered" },
                    onError: { actions: ["assignDeviceToDeviceError"], target: "DeviceTransferError" }
                  }
                },
                DeviceTransferError: {},
                DeviceRegistered: { type: "final" }
              }
            },
            options: {
              actions: {
                assignTransferId: (0, U.f0)({ transferId: (e, t) => t.data.transferId }),
                assignKeys: (0, U.f0)({
                  receiverPublicKey: (e, t) => t.data.receiverPublicKey,
                  receiverPrivateKey: (e, t) => t.data.receiverPrivateKey,
                  senderPublicKey: (e, t) => t.data.senderPublicKey
                }),
                assignPassphrase: (0, U.f0)({ passphrase: (e, t) => t.data.passphrase, sharedSecret: (e, t) => t.data.sharedSecret }),
                assignTransferData: (0, U.f0)({ encryptedData: (e, t) => t.data.encryptedData, nonce: (e, t) => t.data.nonce }),
                clearContext: (0, U.f0)({
                  deviceName: () => {},
                  transferId: () => {},
                  receiverPublicKey: () => {},
                  receiverPrivateKey: () => {},
                  senderPublicKey: () => {},
                  sharedSecret: () => {},
                  passphrase: () => {}
                }),
                assignDeviceToDeviceError: (0, U.f0)({ error: (e, t) => (t.data instanceof ie.z ? t.data.code : W.UY.GENERIC_ERROR) })
              },
              services: {
                requestDeviceTransfer: (e) => this.requestDeviceTransfer.execute(e),
                startReceiverKeyExchange: (e) => this.startReceiverKeyExchange.execute(e),
                completeKeyExchangeAndGeneratePassphrase: (e) => this.completeKeyExchangeAndGeneratePassphrase.execute(e),
                startTransfer: (e) => this.startTransfer.execute(e),
                openSession: (e) => this.openSession.execute(e)
              }
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      ge = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [le, ue, ve, pe, he])], ge);
      var ye = r(30523);
      let fe = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        retrieveLocalAccounts(e) {
          return (0, G.z)(
            e.queries.carbonState({ path: "authentication.localAccounts" }).pipe(
              (0, ye.h)(A.d6),
              (0, ye.h)((e) => e.data.accountsListInitialized),
              (0, v.U)((e) => e.data.accountsList)
            )
          );
        }
        async execute() {
          try {
            const e = await this.retrieveLocalAccounts(this.carbonLegacy),
              t = e?.find((e) => e.isLastSuccessfulLogin);
            return {
              localAccounts: e ?? [],
              lastUsedLogin: t?.login ?? "",
              shouldAskMasterPassword: t?.shouldAskMasterPassword ?? !1,
              shouldAskOTP: t?.hasLoginOtp ?? !1,
              rememberMeType: t?.rememberMeType ?? "disabled"
            };
          } catch (e) {
            return Promise.reject(new Error("Unable to retrieve initialization data"));
          }
        }
      };
      fe = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], fe);
      let _e = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async execute(e) {
          await this.carbonLegacy.commands.carbon({ name: "loginViaSSO", args: [e] });
        }
      };
      _e = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], _e);
      let Se = class {
        constructor(e) {
          (this.ssoProviderInfoStore = e), (this.ssoProviderInfoStore = e);
        }
        async execute({ isNitroProvider: e, serviceProviderRedirectUrl: t }) {
          await this.ssoProviderInfoStore.set({ isNitroProvider: e, serviceProviderUrl: t });
        }
      };
      Se = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [w])], Se);
      let Ee = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async execute({ login: e }) {
          return await this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "openSession", arg: [{ login: e ?? "" }] }), Promise.resolve();
        }
      };
      Ee = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], Ee);
      let be = class {
        constructor(e, t, r, s, o, n, i, a, c) {
          (this.deviceRegistrationMachine = e),
            (this.masterPasswordFlowMachine = t),
            (this.twoFactorAuthenticationMachine = r),
            (this.webAuthnMachine = s),
            (this.deviceToDeviceAuthenticationMachine = o),
            (this.initializeMachineService = n),
            (this.legacySSOLoginService = i),
            (this.requestAuthenticationMethodForLogin = a),
            (this.storeSSOInfoService = c);
        }
        desc() {
          const e = {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              initial: "Starting",
              id: "AuthenticationFlowMachine",
              context: {
                ...this.deviceRegistrationMachine.desc().config.context,
                ...this.masterPasswordFlowMachine.desc().config.context,
                ...this.twoFactorAuthenticationMachine.desc().config.context,
                ...this.webAuthnMachine.desc().config.context,
                ...this.deviceToDeviceAuthenticationMachine.desc().config.context,
                ready: !1,
                shouldAskMasterPassword: !1,
                shouldAskOTP: !1
              },
              states: {
                Starting: {
                  invoke: {
                    src: "initializeMachine",
                    onDone: { actions: ["assignInitializationResults"], target: "RememberMeRedirection" }
                  }
                },
                RememberMeRedirection: {
                  always: [
                    { target: "MasterPassword", cond: "shouldAskMasterPassword" },
                    { target: "CheckSessionForOtp2", cond: "shouldAskOTP" },
                    { target: "WebAuthn", cond: "rememberMeIsWebAuthn" },
                    { target: "WaitingForEmail" }
                  ]
                },
                CheckSessionForOtp2: { entry: ["requestAuthenticationMethodForLogin"] },
                WaitingForEmail: {
                  on: { INPUT_ACCOUNT_EMAIL: { target: "ValidatingEmail", actions: ["assignAccountEmail", "clearError"] } }
                },
                ValidatingEmail: {
                  entry: ["requestAuthenticationMethodForLogin"],
                  on: { CARBON_LEGACY_ERROR: { target: "WaitingForEmail", actions: ["assignError"] } }
                },
                DeviceRegistration: { ...te(this.deviceRegistrationMachine.desc().config) },
                WebAuthn: {
                  ...te(this.webAuthnMachine.desc().config),
                  onDone: [
                    { target: "MasterPassword", cond: "shouldSwitchToMasterPassword" },
                    { target: "MasterPasswordBasedAuthenticationDone" }
                  ]
                },
                TwoFactorAuthentication: {
                  ...te(this.twoFactorAuthenticationMachine.desc().config),
                  onDone: { target: "MasterPasswordBasedAuthenticationDone" }
                },
                SSOAuthentication: { entry: ["legacySSOLogin"] },
                SSORedirectionToIdp: { entry: ["assignServiceProviderInfo", "storeSSOInfo"] },
                DeviceToDeviceAuthentication: {
                  ...te(this.deviceToDeviceAuthenticationMachine.desc().config),
                  onDone: { target: "DeviceToDeviceAuthenticationDone" }
                },
                MasterPassword: {
                  ...te(this.masterPasswordFlowMachine.desc().config),
                  onDone: [
                    { target: "WaitingForEmail", cond: "shouldResetAuthenticationFlow" },
                    { target: "MasterPasswordBasedAuthenticationDone" }
                  ]
                },
                DeviceToDeviceAuthenticationDone: { type: "final" },
                MasterPasswordBasedAuthenticationDone: { on: { CARBON_LEGACY_LOGGED_OUT: { target: "Starting" } } }
              },
              on: {
                CHANGE_ACCOUNT_EMAIL: [
                  { target: "ValidatingEmail", actions: ["clearError", "assignAccountEmail"], cond: "isAccountLoginAvailable" },
                  { target: "WaitingForEmail", actions: ["clearError", "clearEmail"] }
                ],
                CARBON_LEGACY_ASK_MASTER_PASSWORD: { target: "MasterPassword", actions: ["assignServerKey", "clearError"] },
                CARBON_LEGACY_OPEN_SESSION_TOKEN_SENT: [
                  {
                    target: "DeviceRegistration.EmailToken",
                    actions: ["assignAccountEmail", "clearError"],
                    cond: "isGrapheneDeviceRegistrationFlow"
                  },
                  { target: "DeviceRegistration.EmailToken", actions: ["assignAccountEmail", "clearError"] }
                ],
                CARBON_LEGACY_OPEN_SESSION_DASHLANE_AUTHENTICATOR: {
                  target: "DeviceRegistration.DashlaneAuthenticator",
                  actions: ["clearError"]
                },
                CARBON_LEGACY_OPEN_SESSION_SSO_REDIRECTION_TO_IDP_REQUIRED: { target: "SSORedirectionToIdp", actions: ["clearError"] },
                CARBON_LEGACY_SSO_LOGIN_BYPASS: { target: "SSOAuthentication", actions: ["assignSsoData"] },
                CARBON_LEGACY_OPEN_SESSION_OTP_SENT: {
                  target: "TwoFactorAuthentication",
                  actions: ["assignOtpVerificationMode", "clearError"]
                },
                CARBON_LEGACY_OPEN_SESSION_DEVICE_TO_DEVICE: { target: "DeviceToDeviceAuthentication" },
                CLEAR_ERROR: { actions: ["clearError"] }
              }
            },
            options: {
              actions: {
                ...this.deviceRegistrationMachine.desc().options.actions,
                ...this.masterPasswordFlowMachine.desc().options.actions,
                ...this.twoFactorAuthenticationMachine.desc().options.actions,
                ...this.webAuthnMachine.desc().options.actions,
                ...this.deviceToDeviceAuthenticationMachine.desc().options.actions,
                assignInitializationResults: (0, U.f0)({
                  login: (e, t) => t.data.lastUsedLogin,
                  localAccounts: (e, t) => t.data.localAccounts,
                  shouldAskMasterPassword: (e, t) => t.data.shouldAskMasterPassword,
                  shouldAskOTP: (e, t) => t.data.shouldAskOTP,
                  rememberMeType: (e, t) => t.data.rememberMeType,
                  ready: () => !0
                }),
                assignAccountEmail: (0, U.f0)({ login: (e, t) => t.login }),
                assignError: (0, U.f0)({ error: (e, t) => ({ code: "unknown_error", data: { message: t.error } }) }),
                assignOtpVerificationMode: (0, U.f0)({ otpVerificationMode: (e, t) => t.otpVerificationMode }),
                assignSsoData: (0, U.f0)({ ssoData: (e, t) => t }),
                assignServiceProviderInfo: (0, U.f0)({
                  serviceProviderRedirectUrl: (e, t) => t.serviceProviderRedirectUrl,
                  isNitroProvider: (e, t) => t.isNitroProvider,
                  rememberMeForSSOPreference: (e, t) => t.rememberMeForSSOPreference
                }),
                assignServerKey: (0, U.f0)({ serverKey: (e, t) => t.serverKey }),
                clearEmail: (0, U.f0)({ login: void 0 }),
                clearError: (0, U.f0)({ error: () => {} }),
                clearContext: (0, U.f0)({
                  login: () => "",
                  shouldAskOTP: () => !1,
                  shouldAskMasterPassword: () => !1,
                  twoFactorAuthenticationOtpType: () => "totp",
                  registrationMethod: () => {},
                  emailToken: () => "",
                  deviceName: () => "",
                  isDashlaneAuthenticatorAvailable: () => !1,
                  isRememberMeEnabled: () => !1,
                  isAccountRecoveryAvailable: () => !1
                }),
                legacySSOLogin: (e, t) => this.legacySSOLoginService.execute(t),
                requestAuthenticationMethodForLogin: (e) => this.requestAuthenticationMethodForLogin.execute(e),
                storeSSOInfo: (e, t) => this.storeSSOInfoService.execute(t)
              },
              services: {
                ...this.deviceRegistrationMachine.desc().options.services,
                ...this.masterPasswordFlowMachine.desc().options.services,
                ...this.twoFactorAuthenticationMachine.desc().options.services,
                ...this.webAuthnMachine.desc().options.services,
                ...this.deviceToDeviceAuthenticationMachine.desc().options.services,
                initializeMachine: () => this.initializeMachineService.execute()
              },
              guards: {
                ...this.deviceRegistrationMachine.desc().options.guards,
                ...this.twoFactorAuthenticationMachine.desc().options.guards,
                ...this.webAuthnMachine.desc().options.guards,
                isAccountLoginAvailable: (e, t) => Boolean(t.login),
                shouldAskMasterPassword: (e) => !!e.shouldAskMasterPassword && e.shouldAskMasterPassword,
                shouldAskOTP: (e) => !!e.shouldAskOTP && e.shouldAskOTP,
                shouldSwitchToMasterPassword: (e, t) => t.data.switchToMasterPassword,
                shouldResetAuthenticationFlow: (e, t) => t.data.shouldResetAuthenticationFlow,
                rememberMeIsWebAuthn: (e) => void 0 !== e.rememberMeType && "webauthn" === e.rememberMeType,
                isGrapheneDeviceRegistrationFlow: (e) => !!e.login && e.login.includes("kw_test_newdevice")
              }
            }
          };
          return (0, F.G)(e.config), e;
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, L.C)(e, t);
        }
      };
      be = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [re, Y, ne, se, ge, fe, _e, Ee, Se])], be);
      let we = class {
        constructor(e, t, r, s) {
          (this.carbon = r), (this.allowedToFail = s), (this.loginMachineStore = t);
          const o = e.create();
          (this.interpreter = I.kJ(o)
            .onTransition((0, R.V)(this.allowedToFail))
            .onEvent((0, D.V)(this.allowedToFail))
            .onTransition(async () => {
              const e = this.interpreter.getSnapshot();
              await (async (e, t) => {
                await e.set(JSON.stringify(t));
              })(this.loginMachineStore, e);
            })),
            (this.abortDeviceLimitEventHandler = new N(this.interpreter, this.carbon));
        }
        async prepare() {
          await this.abortDeviceLimitEventHandler.execute();
          const e = await (async (e) => {
            const t = await e.getState();
            return t ? p.ZM.create(JSON.parse(t)) : void 0;
          })(this.loginMachineStore);
          if (!e) {
            const e = this.interpreter.start();
            return void (await (0, O.x)(e, (e) => e.context.ready));
          }
          let t;
          await this.allowedToFail.doOne(() => {
            if (e.done) throw new Error("Restarting a machine which is already in its final state. Starting from scratch instead.");
            t = this.interpreter.start(e);
          }, "Resuming state machine"),
            t || (t = this.interpreter.start()),
            await (0, O.x)(t, (e) => e.context.ready);
        }
        continue(e) {
          this.interpreter.send(e);
        }
      };
      we = (0, s.__decorate)([(0, P.GS)(), (0, s.__metadata)("design:paramtypes", [be, y, c._, i.J])], we);
      let Ae = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { login: t } = e.body;
          return this.authenticationFlow.continue({ type: "CHANGE_ACCOUNT_EMAIL", login: t }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Ae = (0, s.__decorate)([(0, T.W)(C.hW), (0, s.__metadata)("design:paramtypes", [we])], Ae);
      let Te = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { twoFactorAuthenticationOtpType: t } = e.body;
          return (
            this.authenticationFlow.continue({ type: "SWITCH_TWO_FACTOR_AUTHENTICATION_TYPE", twoFactorAuthenticationOtpType: t }),
            Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      Te = (0, s.__decorate)([(0, T.W)(C.eG), (0, s.__metadata)("design:paramtypes", [we])], Te);
      let Ce = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "CLEAR_ERROR" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Ce = (0, s.__decorate)([(0, T.W)(C.jq), (0, s.__metadata)("design:paramtypes", [we])], Ce);
      let Ie = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "CANCEL_DEVICE_TRANSFER_REQUEST" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Ie = (0, s.__decorate)([(0, T.W)(C.Yc), (0, s.__metadata)("design:paramtypes", [we])], Ie);
      let Oe = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "RESEND_EMAIL_TOKEN" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Oe = (0, s.__decorate)([(0, T.W)(C.Gc), (0, s.__metadata)("design:paramtypes", [we])], Oe);
      let Pe = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "RESEND_PUSH_NOTIFICATION" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Pe = (0, s.__decorate)([(0, T.W)(C.rF), (0, s.__metadata)("design:paramtypes", [we])], Pe);
      let Re = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { login: t } = e.body;
          return this.authenticationFlow.continue({ type: "INPUT_ACCOUNT_EMAIL", login: t }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Re = (0, s.__decorate)([(0, T.W)(C.A), (0, s.__metadata)("design:paramtypes", [we])], Re);
      let De = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { masterPassword: t, rememberMe: r } = e.body;
          return (
            this.authenticationFlow.continue({ type: "INPUT_MASTER_PASSWORD", masterPassword: t, rememberMe: r }),
            Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      De = (0, s.__decorate)([(0, T.W)(C.rT), (0, s.__metadata)("design:paramtypes", [we])], De);
      let Ne = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { twoFactorAuthenticationOtpValue: t } = e.body;
          return (
            this.authenticationFlow.continue({ type: "INPUT_BACKUP_CODE", twoFactorAuthenticationOtpValue: t }),
            Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      Ne = (0, s.__decorate)([(0, T.W)(C.sH), (0, s.__metadata)("design:paramtypes", [we])], Ne);
      let Ue = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { emailToken: t, deviceName: r } = e.body;
          return (
            this.authenticationFlow.continue({ type: "INPUT_EMAIL_TOKEN", emailToken: t, deviceName: r }),
            Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      Ue = (0, s.__decorate)([(0, T.W)(C.XH), (0, s.__metadata)("design:paramtypes", [we])], Ue);
      let Le = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { twoFactorAuthenticationOtpValue: t } = e.body;
          return (
            this.authenticationFlow.continue({ type: "INPUT_TOTP", twoFactorAuthenticationOtpValue: t }), Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      Le = (0, s.__decorate)([(0, T.W)(C.ad), (0, s.__metadata)("design:paramtypes", [we])], Le);
      let Fe = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "SWITCH_TO_DASHLANE_AUTHENTICATOR" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Fe = (0, s.__decorate)([(0, T.W)(C.K1), (0, s.__metadata)("design:paramtypes", [we])], Fe);
      let Me = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "SWITCH_TO_EMAIL_TOKEN" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Me = (0, s.__decorate)([(0, T.W)(C.v5), (0, s.__metadata)("design:paramtypes", [we])], Me);
      let xe = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "RETRY_WEBAUTHN_AUTHENTICATION" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      xe = (0, s.__decorate)([(0, T.W)(C.M6), (0, s.__metadata)("design:paramtypes", [we])], xe);
      let ke = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute() {
          return this.authenticationFlow.continue({ type: "USE_MASTER_PASSWORD" }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      ke = (0, s.__decorate)([(0, T.W)(C.Cc), (0, s.__metadata)("design:paramtypes", [we])], ke);
      let Ge = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          const { webAuthnError: t } = e.body;
          return this.authenticationFlow.continue({ type: "WEBAUTHN_AUTHENTICATION_FAIL", error: t }), Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Ge = (0, s.__decorate)([(0, T.W)(C.O3), (0, s.__metadata)("design:paramtypes", [we])], Ge);
      var Ke = r(26457);
      let Ve = class {
        constructor(e, t) {
          (this.carbonLegacy = e), (this.logger = t);
        }
        async execute() {
          try {
            await this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "closeSession", arg: [{}] });
          } catch (e) {
            this.logger.trace("Logout Command error :" + e);
          }
          return Promise.resolve((0, A.Vp)(void 0));
        }
      };
      Ve = (0, s.__decorate)([(0, T.W)(C.N5), (0, s.__metadata)("design:paramtypes", [c._, Ke.V])], Ve);
      let je = class {
        constructor(e, t) {
          (this.carbonLegacy = e), (this.logger = t);
        }
        async execute() {
          try {
            await this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "lockSession", arg: [{}] });
          } catch (e) {
            this.logger.trace("LockSession command handler: " + e);
          }
          return Promise.resolve((0, A.Vp)(void 0));
        }
      };
      je = (0, s.__decorate)([(0, T.W)(C.Y$), (0, s.__metadata)("design:paramtypes", [c._, Ke.V])], je);
      let Be = class {
        constructor(e) {
          this.authenticationFlow = e;
        }
        execute(e) {
          return (
            this.authenticationFlow.continue({ type: "CARBON_LEGACY_SSO_LOGIN_BYPASS", ...e.body }), Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      Be = (0, s.__decorate)([(0, T.W)(C.yv), (0, s.__metadata)("design:paramtypes", [we])], Be);
      var We = r(28489),
        He = r(94189),
        ze = r(95082);
      class Qe {}
      let qe = class {
        constructor(e, t, r, s) {
          (this.carbonLegacyClient = e), (this.ssoUserSettingsStore = r), (this.client = t), (this.authenticationFlowInfraContext = s);
        }
        async retrieveSSOInfo() {
          const e = await (0, G.z)(
            this.carbonLegacyClient.queries.carbonState({ path: "userSession.ssoSettings" }).pipe(
              (0, v.U)((e) => {
                if (
                  !(
                    (0, A.d6)(e) &&
                    ((t = e.data), t && "object" == typeof t && (0, We.l$)(t, "ssoUser") && (0, We.l$)(t, "serviceProviderUrl"))
                  )
                )
                  throw new Error("SsoSettings is not of the expected type");
                var t;
                return e.data;
              })
            )
          );
          return { isNitroProvider: e.isNitroProvider ?? !1, serviceProviderUrl: e.serviceProviderUrl };
        }
        async execute(e) {
          const { loginUserWithEnclaveSSO: t } = this.client.getClient(ze.y).commands,
            r = await this.retrieveSSOInfo(),
            { login: s, rememberMeForSSOPreference: o } = e.body;
          return (
            await this.ssoUserSettingsStore.set({ rememberMeForSSOPreference: o }),
            r.isNitroProvider
              ? await t({ userEmailAddress: s })
              : this.authenticationFlowInfraContext.redirectUserToExternalUrl({ externalUrl: r.serviceProviderUrl, tabFocus: !0 }),
            Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      qe = (0, s.__decorate)([(0, T.W)(C.Hr), (0, s.__metadata)("design:paramtypes", [c._, He.w, E, Qe])], qe);
      var Ye = r(46420);
      const $e = (e) => !!e && "object" == typeof e && (0, We.l$)(e, "type") && "sso" === e.type;
      let Xe = class {
        constructor(e, t, r, s, o) {
          (this.allowToFail = o),
            (this.client = t),
            (this.carbonLegacyClient = e),
            (this.authenticationFlowInfraContext = r),
            (this.serverApiClient = s);
        }
        getDeviceAccessKeys(e) {
          return this.carbonLegacyClient.queries.carbonState({ path: "authentication.localUsers" }).pipe(
            (0, ye.h)(A.d6),
            (0, v.U)((t) => t.data[e])
          );
        }
        async checkSSOInfo(e) {
          const t = (
            await (0, G.z)(
              this.getDeviceAccessKeys(e).pipe(
                (0, v.U)((t) =>
                  this.serverApiClient.v1.authentication.getAuthenticationMethodsForLogin({
                    login: e,
                    deviceAccessKey: t.deviceAccessKey,
                    methods: ["email_token", "totp", "duo_push", "dashlane_authenticator"]
                  })
                ),
                (0, Ye.J)(),
                (0, ye.h)(A.d6),
                (0, v.U)((e) => e.data.data)
              )
            )
          ).verifications.find($e);
          if (t) {
            const e = t.ssoInfo;
            return { isNitroProvider: e.isNitroProvider, serviceProviderUrl: e.serviceProviderUrl };
          }
          throw new Error("No SSO authentication available for the user");
        }
        async execute(e) {
          const { login: t } = e.body,
            { loginUserWithEnclaveSSO: r } = this.client.getClient(ze.y).commands;
          return (
            await this.allowToFail.doOne(async () => {
              const e = await this.checkSSOInfo(t);
              e.isNitroProvider
                ? await r({ userEmailAddress: t })
                : this.authenticationFlowInfraContext.redirectUserToExternalUrl({ externalUrl: e.serviceProviderUrl, tabFocus: !1 });
            }, "InitiateAutologinWithSSOCommandHandler.execute"),
            Promise.resolve((0, A.Vp)(void 0))
          );
        }
      };
      Xe = (0, s.__decorate)([(0, T.W)(C.x2), (0, s.__metadata)("design:paramtypes", [c._, He.w, Qe, B.l, i.J])], Xe);
      var Ze = r(68307),
        Je = r(23326);
      let et = class {
        constructor(e, t, r) {
          (this.authenticationFlow = e), (this.ssoUserSettingsStore = t), (this.carbon = r);
        }
        getLoginFlowMigrationKillswitch() {
          return (0, G.z)(
            this.carbon.queries.carbonState({ path: "device.killswitch.disableLoginFlowMigration" }).pipe(
              (0, ye.h)(A.d6),
              (0, v.U)((e) => e)
            )
          );
        }
        async handle(e) {
          const t = await this.getLoginFlowMigrationKillswitch();
          let r = !1;
          if ("undefined" != typeof self && self.localStorage) {
            const e = self.localStorage.getItem("extng.loginFlow.forceLegacyFallback");
            r = Boolean(e) && "true" === e;
          }
          if (("success" === t.tag && t.data) || r)
            return (
              console.warn("[Authentication-flow] Ignoring carbon event due to legacy login fallback", {
                isKillSwitchEnabled: t,
                isForceLoginFlowFallbackOptionEnabled: r
              }),
              Promise.resolve()
            );
          switch (e.body.eventName) {
            case "openSessionMasterPasswordLess":
              this.authenticationFlow.continue({ type: "CARBON_LEGACY_OPEN_SESSION_DEVICE_TO_DEVICE" });
              break;
            case "openSessionTokenSent":
              if (
                !e.body.eventData ||
                "object" != typeof e.body.eventData ||
                !("login" in e.body.eventData) ||
                "string" != typeof e.body.eventData.login
              )
                throw new Error("login not in eventData");
              this.authenticationFlow.continue({ type: "CARBON_LEGACY_OPEN_SESSION_TOKEN_SENT", login: e.body.eventData.login });
              break;
            case "openSessionAskMasterPassword":
              {
                const e = await (0, G.z)(this.carbon.queries.getMasterPasswordAndServerKey());
                if ((0, A.hx)(e)) throw new Error("Failed to get  server key from carbon");
                const { serverKey: t } = e.data;
                this.authenticationFlow.continue({ type: "CARBON_LEGACY_ASK_MASTER_PASSWORD", serverKey: t });
              }
              break;
            case "openSessionDashlaneAuthenticator":
              this.authenticationFlow.continue({ type: "CARBON_LEGACY_OPEN_SESSION_DASHLANE_AUTHENTICATOR" });
              break;
            case "openSessionOTPSent":
            case "openSessionOTPForNewDeviceRequired":
              this.authenticationFlow.continue({
                type: "CARBON_LEGACY_OPEN_SESSION_OTP_SENT",
                otpVerificationMode: "openSessionOTPSent" === e.body.eventName ? "otp2" : "otp1"
              });
              break;
            case "openSessionSsoRedirectionToIdpRequired":
              {
                const t = e.body.eventData,
                  { rememberMeForSSOPreference: r } = await this.ssoUserSettingsStore.getState();
                this.authenticationFlow.continue({
                  type: "CARBON_LEGACY_OPEN_SESSION_SSO_REDIRECTION_TO_IDP_REQUIRED",
                  serviceProviderRedirectUrl: t.serviceProviderRedirectUrl,
                  isNitroProvider: t.isNitroProvider,
                  rememberMeForSSOPreference: r
                });
              }
              break;
            case "openSessionFailed":
              {
                const t = e.body.eventData;
                this.authenticationFlow.continue({ type: "CARBON_LEGACY_ERROR", error: t.errorCode });
              }
              break;
            case "loginStatusChanged":
              e.body.eventData.loggedIn || this.authenticationFlow.continue({ type: "CARBON_LEGACY_LOGGED_OUT" });
          }
          return Promise.resolve();
        }
      };
      et = (0, s.__decorate)([(0, Ze.b)(Je.Dj), (0, s.__metadata)("design:paramtypes", [we, E, c._])], et);
      var tt = r(6136),
        rt = r(20754),
        st = r(28096),
        ot = r(69885),
        nt = r(6220);
      const it = (e) => ({
          step: "EmailStep",
          loginEmail: e.context.login,
          localAccounts: e.context.localAccounts ?? [],
          isLoading: e.matches("ValidatingEmail") && !e.context.error,
          error: e.context.error?.data?.message
        }),
        at = (e) => ({
          step: "DeviceToDeviceAuthenticationStep",
          deviceToDeviceStep: W.E6.WaitingForTransferRequest,
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          error: e.context.error
        }),
        ct = (e) => ({
          step: "DeviceToDeviceAuthenticationStep",
          deviceToDeviceStep: W.E6.DisplayInstructions,
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          error: e.context.error
        }),
        lt = (e) => ({
          step: "DeviceToDeviceAuthenticationStep",
          deviceToDeviceStep: W.E6.LoadingPassphrase,
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          error: e.context.error
        }),
        dt = (e) => ({
          step: "DeviceToDeviceAuthenticationStep",
          deviceToDeviceStep: W.E6.DisplayPassphrase,
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          passphrase: e.context.passphrase?.split(me.iy) || [],
          error: e.context.error
        }),
        ut = (e) => ({
          step: "DeviceToDeviceAuthenticationStep",
          deviceToDeviceStep: W.E6.LoadingAccount,
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          error: e.context.error
        }),
        pt = (e) => ({
          step: "DeviceToDeviceAuthenticationStep",
          deviceToDeviceStep: W.E6.Error,
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          error: e.context.error ?? W.UY.GENERIC_ERROR
        }),
        ht = (e) => ({
          step: "DeviceToDeviceAuthenticationStep",
          deviceToDeviceStep: W.E6.DeviceRegistered,
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          error: e.context.error
        }),
        mt = (e) => ({
          step: "EmailTokenStep",
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          isLoading: e.matches({ DeviceRegistration: { EmailToken: "ValidatingEmailToken" } }) && !e.context.error,
          error: e.context.error?.data?.message,
          emailToken: e.context.emailToken,
          isDashlaneAuthenticatorAvailable: e.context.isDashlaneAuthenticatorAvailable
        }),
        vt = (e) => ({
          step: "DashlaneAuthenticatorStep",
          localAccounts: e.context.localAccounts ?? [],
          isLoading: e.matches({ DeviceRegistration: { DashlaneAuthenticator: "RequestingServerPush" } }) && !e.context.error,
          error: e.context.error?.data?.message
        }),
        gt = (e) => ({
          step: "TwoFactorAuthenticationOtpStep",
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          isLoading: e.matches({ TwoFactorAuthentication: "ValidatingTwoFactorAuthenticationOtp" }) && !e.context.error,
          error: e.context.error?.data?.message,
          twoFactorAuthenticationOtpValue: e.context.twoFactorAuthenticationOtpValue,
          twoFactorAuthenticationOtpType: e.context.twoFactorAuthenticationOtpType
        }),
        yt = (e) => ({
          step: "WebAuthnStep",
          localAccounts: e.context.localAccounts ?? [],
          loginEmail: e.context.login,
          isLoading: e.matches({ WebAuthn: "InitWebAuthnAuthentication" }) && !e.context.error,
          error: e.context.error?.data?.message
        }),
        ft = (e) => ({
          step: "SSORedirectionToIdpStep",
          loginEmail: e.context.login,
          serviceProviderRedirectUrl: e.context.serviceProviderRedirectUrl ?? "",
          isNitroProvider: e.context.isNitroProvider ?? !1,
          rememberMeForSSOPreference: e.context.rememberMeForSSOPreference,
          isLoading: e.matches({ SSORedirectionToIdp: "InitSSOAuthentication" }) && !e.context.error,
          error: e.context.error?.data?.message,
          localAccounts: e.context.localAccounts ?? []
        }),
        _t = (e, t) => ({
          step: "MasterPasswordStep",
          loginEmail: e.context.login ?? "",
          localAccounts: e.context.localAccounts ?? [],
          isLoading:
            (e.matches({ MasterPassword: "ValidatingMasterPassword" }) ||
              e.matches({ MasterPassword: "CheckingMigrationNeeded" }) ||
              e.matches({ MasterPassword: "OpeningSessionWithMasterpassword" }) ||
              e.matches("MasterPasswordBasedAuthenticationDone")) &&
            !e.context.error,
          isAccountRecoveryAvailable: e.context.isAccountRecoveryAvailable,
          error: e.context.error?.data?.message,
          serviceProviderRedirectUrl: e.context.serviceProviderRedirectUrl,
          isNitroProvider: e.context.isNitroProvider ?? !1,
          isAuthenticationDone: t
        }),
        St = (e) => ({ step: "StartingStep", localAccounts: e.context.localAccounts ?? [] });
      const Et = (e) =>
          (0, ot.of)(
            (0, A.Vp)(
              (function (e) {
                return e.matches("Starting")
                  ? St(e)
                  : e.matches("WaitingForEmail") || e.matches("ValidatingEmail")
                  ? it(e)
                  : e.matches({ DeviceRegistration: { EmailToken: "SendEmailToken" } }) ||
                    e.matches({ DeviceRegistration: { EmailToken: "WaitingForEmailToken" } }) ||
                    e.matches({ DeviceRegistration: { EmailToken: "ValidatingEmailToken" } }) ||
                    e.matches({ DeviceRegistration: { EmailToken: "FinishingEmailToken" } })
                  ? mt(e)
                  : e.matches({ DeviceRegistration: { DashlaneAuthenticator: "RequestingServerPush" } }) ||
                    e.matches({ DeviceRegistration: { DashlaneAuthenticator: "AuthenticatorPushFailed" } }) ||
                    e.matches({ DeviceRegistration: { DashlaneAuthenticator: "AuthenticatorPushValidated" } })
                  ? vt(e)
                  : e.matches({ TwoFactorAuthentication: "WaitingForTotp" }) ||
                    e.matches({ TwoFactorAuthentication: "WaitingForBackupCode" }) ||
                    e.matches({ TwoFactorAuthentication: "ValidatingTwoFactorAuthenticationOtp" }) ||
                    e.matches({ TwoFactorAuthentication: "FinishingTwoFactorAuthenticationOtp" })
                  ? gt(e)
                  : e.matches({ WebAuthn: "InitWebAuthnAuthentication" }) ||
                    e.matches({ WebAuthn: "WebAuthnAuthenticationFailed" }) ||
                    e.matches({ WebAuthn: "WebAuthnAuthenticationValidated" })
                  ? yt(e)
                  : e.matches("SSORedirectionToIdp")
                  ? ft(e)
                  : e.matches({ DeviceToDeviceAuthentication: "WaitingForTransferRequest" })
                  ? at(e)
                  : e.matches({ DeviceToDeviceAuthentication: "DisplayInstructions" })
                  ? ct(e)
                  : e.matches({ DeviceToDeviceAuthentication: "GeneratePassphrase" })
                  ? lt(e)
                  : e.matches({ DeviceToDeviceAuthentication: "StartTransfer" })
                  ? dt(e)
                  : e.matches({ DeviceToDeviceAuthentication: "OpenSession" })
                  ? ut(e)
                  : e.matches({ DeviceToDeviceAuthentication: "DeviceTransferError" })
                  ? pt(e)
                  : e.matches({ DeviceToDeviceAuthentication: "DeviceRegistered" }) || e.matches("DeviceToDeviceAuthenticationDone")
                  ? ht(e)
                  : e.matches({ MasterPassword: "CheckingAccountRecoveryStatus" }) ||
                    e.matches({ MasterPassword: "WaitingForMasterPassword" }) ||
                    e.matches({ MasterPassword: "ValidatingMasterPassword" }) ||
                    e.matches({ MasterPassword: "OpeningSessionWithMasterpassword" }) ||
                    e.matches({ MasterPassword: "CheckingMigrationNeeded" }) ||
                    e.matches({ MasterPassword: "OpeningSessionWithMasterpassword" })
                  ? _t(e)
                  : e.matches("MasterPasswordBasedAuthenticationDone")
                  ? _t(e, !0)
                  : void console.warn("[Auth] - No view associated to state ", JSON.stringify(e.value));
              })(e)
            )
          ),
        bt = (e) => e.pipe((0, nt.z)(Et));
      var wt = r(30045);
      let At = class {
        constructor(e, t) {
          (this.authenticationFlow = e), (this.loginMachineStore = t);
        }
        execute() {
          return ((e = this.loginMachineStore), e.state$.pipe((0, v.U)((e) => (e ? p.ZM.create(JSON.parse(e)) : void 0)))).pipe(
            (0, ye.h)(Boolean),
            (0, tt.x)((e, t) =>
              ((e, t) => {
                const r = t.matches(e.value),
                  s = (0, wt.Z)(e.context, t.context);
                return r && s;
              })(e, t)
            ),
            bt
          );
          var e;
        }
      };
      At = (0, s.__decorate)([(0, rt.e)(st.DW), (0, s.__metadata)("design:paramtypes", [we, y])], At);
      let Tt = class {
        constructor(e) {
          (this.ssoUserSettingsStore = e), (this.ssoUserSettingsStore = e);
        }
        execute() {
          return this.ssoUserSettingsStore.state$.pipe(
            (0, v.U)((e) => (0, A.Vp)({ rememberMeForSSOPreference: e.rememberMeForSSOPreference }))
          );
        }
      };
      Tt = (0, s.__decorate)([(0, rt.e)(st.Dc), (0, s.__metadata)("design:paramtypes", [E])], Tt);
      let Ct = class {
        constructor(e) {
          (this.ssoProviderInfoStore = e), (this.ssoProviderInfoStore = e);
        }
        execute() {
          return this.ssoProviderInfoStore.state$.pipe(
            (0, v.U)((e) =>
              (0, A.Vp)({ serviceProviderUrl: e.serviceProviderUrl, isNitroProvider: e.isNitroProvider, migrationType: e.migrationType })
            )
          );
        }
      };
      Ct = (0, s.__decorate)([(0, rt.e)(st.L2), (0, s.__metadata)("design:paramtypes", [w])], Ct);
      const It = (e) => !0;
      class Ot extends (0, m.Q)({
        initialValue: void 0,
        persist: !1,
        scope: h.F.Device,
        storeName: "device-registration-flow-store",
        storeTypeGuard: It
      }) {}
      var Pt = r(3786);
      let Rt = class {};
      Rt = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: l.V,
            handlers: {
              commands: {
                changeLogin: Ae,
                changeTwoFactorAuthenticationOtpType: Te,
                clearError: Ce,
                cancelDeviceTransferRequest: Ie,
                resendEmailToken: Oe,
                resendPushNotification: Pe,
                sendAccountEmail: Re,
                sendMasterPassword: De,
                submitBackupCode: Ne,
                submitEmailToken: Ue,
                submitTotp: Le,
                switchToDashlaneAuthenticator: Fe,
                switchToEmailToken: Me,
                retryWebAuthnAuthentication: xe,
                useMasterPassword: ke,
                webAuthnAuthenticationFail: Ge,
                logout: Ve,
                lockSession: je,
                loginViaSSO: Be,
                initiateLoginWithSSO: qe,
                initiateAutologinWithSSO: Xe
              },
              events: { ...(0, o.g)(a.W, { carbonLegacy: et }) },
              queries: { authenticationFlowStatus: At, getSsoUserSettings: Tt, getProviderInfo: Ct }
            },
            configurations: { authenticationFlowContextInfrastructure: { token: Qe } },
            providers: [
              Z,
              re,
              ee,
              se,
              Y,
              ne,
              ge,
              ...(0, n.H)(we, {
                inject: [be, y, c._, i.J],
                asyncFactory: async (e, t, r, s) => {
                  const o = new we(e, t, r, s);
                  return await o.prepare(), o;
                }
              }),
              be,
              fe,
              _e,
              V,
              Q,
              X,
              J,
              K,
              oe,
              Ee,
              $,
              Se,
              le,
              q,
              ue,
              ve,
              pe,
              he,
              de.q,
              ce.C,
              me.Kp,
              me.Ny
            ],
            stores: [y, Ot, E, w],
            imports: [d.n, u.i, Pt.I]
          })
        ],
        Rt
      );
    },
    10430: (e, t, r) => {
      r.d(t, { z: () => s });
      class s extends Error {
        constructor(e, t) {
          super(e), (this.code = t);
        }
      }
    },
    59550: (e, t, r) => {
      r.d(t, { Q: () => g });
      var s = r(88802),
        o = r(60399),
        n = r(87065),
        i = r(86252),
        a = r(28489),
        c = r(87279),
        l = r(57924);
      function d(e) {
        const t = e.split("-");
        if (t.length > 0) {
          const [r] = t;
          return { accessKey: r, secretKey: e };
        }
        throw new Error("Invalid UKI format");
      }
      function u(e) {
        return (
          !!(e && "object" == typeof e && (0, a.l$)(e, "accessKey") && (0, a.l$)(e, "secretKey")) &&
          "string" == typeof e.accessKey &&
          "string" == typeof e.secretKey
        );
      }
      function p(e) {
        return "string" == typeof e;
      }
      const h = "authentication.currentUser.deviceKeys",
        m = "userSession.localSettings.uki",
        v = "userSession.account.login";
      let g = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        getDeviceCredentialsForUser(e) {
          const {
            queries: { carbonStateList: t }
          } = this.carbonLegacyClient;
          return (0, o.z)(
            t({ paths: [h, m, v] }).pipe(
              (0, n.U)((e) => {
                if ((0, c.hx)(e)) throw new Error("Failed to get credentials from carbon");
                return (0, c.db)(e);
              }),
              (0, n.U)(this.carbonStateToRequestUserDeviceCredentials(e))
            )
          );
        }
        getSessionCredentialsForUser(e) {
          const {
            queries: { carbonStateList: t }
          } = this.carbonLegacyClient;
          return (0, o.z)(
            t({ paths: [h, m, v, "userSession.session.sessionKeys"] }).pipe(
              (0, n.U)((e) => {
                if ((0, c.hx)(e)) throw new Error("Failed to get credentials from carbon");
                return (0, c.db)(e);
              }),
              (0, n.U)(this.carbonStateToRequestUserSessionCredentials(e))
            )
          );
        }
        carbonStateToRequestUserDeviceCredentials(e) {
          return ([t, r, s]) => {
            if ((!t && !r) || s !== e) throw new Error("No user device credentials available for active user");
            let o;
            if (r) {
              if (!p(r)) throw new Error("Unexpected UKI state shape received from carbon");
              o = d(r);
            } else {
              if (!u(t)) throw new Error("Unexpected user device state shape received from carbon");
              o = t;
            }
            return { login: e, deviceAccessKey: o.accessKey, deviceSecretKey: o.secretKey };
          };
        }
        carbonStateToRequestUserSessionCredentials(e) {
          return ([t, r, s, o]) => {
            if ((!t && !r) || s !== e) throw new Error("No user device credentials available for active user");
            if (!o) throw new Error("No session credentials available for active user");
            let n;
            if (r) {
              if (!p(r)) throw new Error("Unexpected UKI state shape received from carbon");
              n = d(r);
            } else {
              if (!u(t)) throw new Error("Unexpected user device state shape received from carbon");
              n = t;
            }
            if (
              !(
                (i = o) &&
                "object" == typeof i &&
                "accessKey" in i &&
                "secretKey" in i &&
                "expirationTimeSeconds" in i &&
                "string" == typeof i.accessKey &&
                "string" == typeof i.secretKey &&
                "number" == typeof i.expirationTimeSeconds
              )
            )
              throw new Error("Unexpected session keys state shape received from carbon");
            var i;
            return { login: e, deviceAccessKey: n.accessKey, sessionAccessKey: o.accessKey, sessionSecretKey: o.secretKey };
          };
        }
      };
      g = (0, s.__decorate)([(0, l.GS)(), (0, s.__metadata)("design:paramtypes", [i._])], g);
    },
    38487: (e, t, r) => {
      r.d(t, { _: () => U });
      var s = r(88802),
        o = r(99634),
        n = r(42853),
        i = r(162),
        a = r(87065),
        c = r(20754),
        l = r(87279),
        d = r(59463),
        u = r(86252);
      let p = class {
        constructor(e) {
          this.carbon = e;
        }
        isLocalAccounts(e) {
          if (!Array.isArray(e)) return !1;
          if (0 === e.length) return !0;
          const t = e[0];
          return "object" == typeof t && "login" in t;
        }
        isCarbonLocalAccountResult(e) {
          return !(!e || "object" != typeof e || !("localAccounts" in e)) && this.isLocalAccounts(e.localAccounts);
        }
        execute() {
          return (0, i.D)(this.carbon.commands.carbonLegacyLeeloo({ name: "getLocalAccountsList", arg: [] })).pipe(
            (0, a.U)((e) => {
              if ((0, l.hx)(e)) throw new Error("Unable to retrieve local accounts list");
              const t = (0, l.db)(e).carbonResult;
              if (!this.isCarbonLocalAccountResult(t)) throw new Error("Carbon result is not of type local accounts");
              return (0, l.Vp)({ localAccounts: t.localAccounts });
            })
          );
        }
      };
      p = (0, s.__decorate)([(0, c.e)(d.a), (0, s.__metadata)("design:paramtypes", [u._])], p);
      var h = r(63663),
        m = r(319);
      let v = class {
        constructor(e) {
          this.carbon = e;
        }
        async execute() {
          const e = await this.carbon.commands.cleanRemotelyRemovedProfiles();
          if ((0, l.hx)(e)) throw new Error("clean remotely removed profiles failed");
          return (0, l.Vp)(void 0);
        }
      };
      v = (0, s.__decorate)([(0, h.W)(m.L), (0, s.__metadata)("design:paramtypes", [u._])], v);
      var g = r(96782),
        y = r(18533),
        f = r(60399),
        _ = r(22450),
        S = r(57924),
        E = r(87113),
        b = r(96168);
      const w = "ZZ";
      const A = "und";
      function T(e) {
        return e ? e.replace(/https?:\/\//g, " ") : e;
      }
      var C = r(10551);
      class I extends (0, b.Hu)("InvalidToken", "") {}
      let O = class {
        constructor(e, t) {
          (this.serverApiClient = e), (this.carbon = t);
        }
        async hasRegisteredDevice(e) {
          const t = await (0, f.z)(this.carbon.queries.getLocalAccounts());
          if ((0, l.hx)(t)) throw new Error("Failed to query carbon");
          return t.data.some((t) => t.login === e);
        }
        async registerDeviceWithToken(e, t, r) {
          const s = await (0, f.z)(this.serverApiClient.v1.authentication.performExtraDeviceVerification({ login: e, token: t }));
          if (!(0, l.d6)(s)) return (0, l.Rn)(new I());
          const { authTicket: o } = s.data.data;
          return this.registerDeviceWithTicket(e, o, r);
        }
        async registerDeviceWithTicket(e, t, r) {
          const s = await (0, f.z)(this.carbon.queries.getPlatformInfo());
          if (!(0, l.d6)(s)) throw new Error("Failed to get status from carbon");
          const o = s.data;
          if ("server_carbon_unknown" === o.platformName) throw new Error("unexpected server_carbon_unknown");
          const n = {
            deviceName: T(r ?? C.getDefaultDeviceName()),
            appVersion: o.appVersion,
            platform: o.platformName,
            osCountry: ((a = o.country), !a || a.length < 2 || a.length > 5 ? w : a),
            osLanguage: ((i = o.lang), !i || i.length < 2 || i.length > 5 ? A : i),
            temporary: !1
          };
          var i, a;
          const c = await (0, f.z)(
            this.serverApiClient.v1.authentication.completeDeviceRegistrationWithAuthTicket({ authTicket: t, login: e, device: n })
          );
          if (!(0, l.d6)(c)) throw new Error("Failed to register on server");
          const {
              deviceAccessKey: d,
              deviceAnalyticsId: u,
              deviceSecretKey: p,
              settings: h,
              serverKey: m,
              publicUserId: v,
              userAnalyticsId: g
            } = c.data.data,
            y = await this.carbon.commands.registerDevice({
              deviceAccessKey: d,
              deviceAnalyticsId: u,
              deviceSecretKey: p,
              settings: h,
              serverKey: m,
              publicUserId: v,
              userAnalyticsId: g,
              isDataPersisted: _.jP.PERSIST_DATA_YES
            });
          if ((0, l.hx)(y)) throw new Error("Failed to register in carbon");
          return (0, l.Vp)(void 0);
        }
      };
      O = (0, s.__decorate)([(0, S.GS)(), (0, s.__metadata)("design:paramtypes", [E.l, u._])], O);
      const P = { tag: "DeviceAlreadyRegistered" },
        R = { tag: "InvalidTokenError" };
      let D = class {
        constructor(e) {
          this.service = e;
        }
        async execute({ body: e }) {
          const { login: t, ignoreAlreadyRegisteredError: r, deviceName: s } = e;
          if (!r) {
            if (await this.service.hasRegisteredDevice(t)) return (0, l.Rn)(P);
          }
          const o =
            "token" === e.with
              ? await this.service.registerDeviceWithToken(t, e.token, s)
              : await this.service.registerDeviceWithTicket(t, e.authTicket, s);
          return (0, y.EQ)(o, {
            success: () => (0, l.Vp)(void 0),
            failure: (e) => (0, y.EQ)(e.error, { InvalidToken: () => (0, l.Rn)(R) })
          });
        }
      };
      D = (0, s.__decorate)([(0, h.W)(g.J), (0, s.__metadata)("design:paramtypes", [O])], D);
      var N = r(93850);
      let U = class {};
      U = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.G,
            imports: [N.n],
            handlers: { commands: { cleanRemotelyRemovedProfiles: v, registerDevice: D }, events: {}, queries: { localAccounts: p } },
            providers: [O]
          })
        ],
        U
      );
    },
    65871: (e, t, r) => {
      r.d(t, { E: () => a, V: () => c });
      var s = r(88802),
        o = r(56695),
        n = r.n(o),
        i = r(57924);
      let a = class {
        constructor(e) {
          this.sodium = e;
        }
        generateNonce() {
          return this.sodium.randombytes_buf(this.sodium.crypto_box_NONCEBYTES);
        }
        generateKeyPair() {
          return this.sodium.crypto_kx_keypair();
        }
        hash(e, t) {
          return this.sodium.crypto_generichash(this.sodium.crypto_secretbox_KEYBYTES, e, t);
        }
        compare(e, t) {
          return this.sodium.memcmp(e, t);
        }
        generateClientSharedSecret(e, t, r) {
          return this.sodium.crypto_kx_client_session_keys(e, t, r);
        }
        generateServerSharedSecret(e, t, r) {
          return this.sodium.crypto_kx_server_session_keys(e, t, r);
        }
        encrypt(e, t, r) {
          return this.sodium.crypto_secretbox_easy(e, t, r);
        }
        decrypt(e, t, r) {
          return this.sodium.crypto_secretbox_open_easy(e, t, r);
        }
      };
      function c() {
        return {
          token: a,
          asyncFactory: async () => {
            await n().ready;
            const e = n();
            return new a(e);
          }
        };
      }
      a = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [Object])], a);
    },
    46484: (e, t, r) => {
      r.d(t, { KF: () => o, dJ: () => n });
      var s = r(15187);
      const o = 3;
      class n extends s.x {
        constructor(e, t) {
          super(e), (this.code = t);
        }
      }
    },
    3786: (e, t, r) => {
      r.d(t, { I: () => ie });
      var s = r(88802),
        o = r(6218),
        n = r(99634),
        i = r(38679),
        a = r(93850),
        c = r(65871),
        l = r(8362),
        d = r(87065),
        u = r(25029),
        p = r(95681);
      const h = (e) => !0;
      class m extends (0, p.Q)({
        initialValue: void 0,
        persist: !1,
        scope: u.F.Device,
        storeName: "trusted-device-flow-machine",
        storeTypeGuard: h
      }) {}
      const v = (e) => e.state$.pipe((0, d.U)((e) => (e ? l.ZM.create(JSON.parse(e)) : void 0)));
      var g = r(78065),
        y = r(24966),
        f = r(57924),
        _ = r(18275),
        S = r(65865),
        E = r(70486),
        b = r(46484),
        w = r(87279),
        A = r(16053);
      let T = class {
        constructor(e) {
          this.d2dAuthenticationService = e;
        }
        async execute() {
          const e = await this.d2dAuthenticationService.getKeyExchangeTransferInfo();
          if ((0, w.hx)(e)) throw new Error("Error with getKeyExchangeTransferInfo");
          const { transferId: t, receiver: r } = e.data.transfer;
          return Promise.resolve({
            transferId: t,
            requestTimestamp: r.requestedAtDateUnix,
            untrustedDeviceName: r.deviceName,
            untrustedDeviceLocation: `${r.city}, ${r.countryCode}`,
            untrustedDeviceHashedPublicKey: r.hashedPublicKey
          });
        }
      };
      T = (0, s.__decorate)([(0, f.GS)(), (0, s.__metadata)("design:paramtypes", [A.C])], T);
      var C = r(15652),
        I = r(69605);
      let O = class {
        constructor(e, t, r) {
          (this.d2dCryptoService = e), (this.d2dAuthenticationService = t), (this.passphraseService = r);
        }
        async execute(e) {
          const { privateKey: t, publicKey: r } = this.d2dCryptoService.generateKeyPair(),
            s = await this.d2dAuthenticationService.startSenderKeyExchange(r);
          if ((0, w.hx)(s)) return Promise.reject(s.error);
          const { receiverPublicKey: o } = s.data,
            n = e.untrustedDeviceHashedPublicKey;
          if (!this.d2dCryptoService.verifyUntrustedDevicePublicKey(n, o)) throw new Error("Receiver public key doesn't match");
          const i = this.d2dCryptoService.generateSenderSharedSecret(r, t, o),
            a = await this.d2dAuthenticationService.getCurrentUserLogin();
          if ((0, w.hx)(a) || !a.data || !e.transferId) throw new Error("No user login or transferId in context");
          const c = this.d2dCryptoService.generateVisualCheckSeed(a.data, e.transferId, i),
            { passphrase: l, missingWordIndex: d } = await this.passphraseService.generatePassphraseChallenge(c);
          return { sharedSecret: i, passphrase: l, passhraseMissingWordIndex: d };
        }
      };
      O = (0, s.__decorate)([(0, f.GS)(), (0, s.__metadata)("design:paramtypes", [C.q, A.C, I.Kp])], O);
      let P = class {
        constructor(e, t, r) {
          (this.passphraseService = e), (this.d2dCryptoService = t), (this.d2dAuthenticationService = r);
        }
        async execute(e) {
          if (!this.passphraseService.verifyChallenge(e.passphrase, e.passphraseGuess))
            throw new b.dJ("Passphrase incorrect", e.passphraseAttemptsLeft > 1 ? E.S.INVALID_PASSPHRASE : E.S.PASSPHRASE_ATTEMPTS_LIMIT);
          const t = await this.d2dAuthenticationService.getCurrentUserLogin();
          if ((0, w.hx)(t) || !t.data || !e.transferId) throw new Error("No user login or no transferId");
          const r = await this.d2dAuthenticationService.getUserInvisibleMasterPassword(),
            s = await this.d2dAuthenticationService.requestAuthTicket();
          if ((0, w.hx)(s)) throw new Error("Couldn't get authTicket");
          const { encryptedData: o, nonce: n } = this.d2dCryptoService.encryptInvisibleMasterPassword(
              t.data,
              s.data,
              r,
              e.transferId,
              e.sharedSecret
            ),
            i = await this.d2dAuthenticationService.completeTransfer(o, n, e.transferId);
          return (0, w.hx)(i) ? Promise.reject(i.error) : Promise.resolve();
        }
      };
      P = (0, s.__decorate)([(0, f.GS)(), (0, s.__metadata)("design:paramtypes", [I.Kp, C.q, A.C])], P);
      let R = class {
        constructor(e, t, r) {
          (this.getPendingDeviceTransferRequestService = e),
            (this.approveDeviceTransferRequestService = t),
            (this.verifyPassphraseChallengeService = r);
        }
        create() {
          return (0, _.C)(
            {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              initial: "WaitingForNewDeviceTransferRequest",
              id: "TrustedDeviceFlowMachine",
              context: {
                transferId: void 0,
                untrustedDeviceName: "",
                untrustedDeviceHashedPublicKey: "",
                untrustedDeviceLocation: "",
                sharedSecret: "",
                passphrase: "",
                passphraseGuess: "",
                passphraseMissingWordIndex: -1,
                passphraseAttemptsLeft: b.KF
              },
              states: {
                Idle: { on: { REFRESH_REQUEST: { target: "WaitingForNewDeviceTransferRequest" } } },
                WaitingForNewDeviceTransferRequest: {
                  invoke: {
                    src: "getPendingDeviceTransferRequest",
                    onDone: [
                      {
                        actions: ["assignUntrustedDeviceData"],
                        cond: "isDeviceTransferRequestAvailable",
                        target: "NewDeviceTransferRequest"
                      },
                      { target: "Idle" }
                    ],
                    onError: { actions: ["assignTrustedDeviceFlowError"], target: "Idle" }
                  }
                },
                NewDeviceTransferRequest: {
                  on: {
                    APPROVE_REQUEST: { target: "HandlingDeviceTransferRequest" },
                    REJECT_REQUEST: { actions: ["clearContext"], target: "DeviceTransferRejected" },
                    RETURN_TO_DEVICE_SETUP: { actions: ["clearContext"], target: "Idle" }
                  }
                },
                HandlingDeviceTransferRequest: {
                  invoke: {
                    src: "approveDeviceTransferRequest",
                    onDone: { actions: ["assignPassphraseChallengeData"], target: "DisplayPassphraseChallenge" },
                    onError: { actions: ["assignTrustedDeviceFlowError"], target: "DeviceTransferFailed" }
                  }
                },
                DisplayPassphraseChallenge: {
                  on: {
                    SUBMIT_PASSPHRASE_CHALLENGE: {
                      actions: ["assignPassphraseGuess", "clearError"],
                      target: "VerifyingPassphraseChallenge"
                    },
                    CANCEL_REQUEST: { actions: ["clearContext"], target: "Idle" }
                  }
                },
                VerifyingPassphraseChallenge: {
                  invoke: {
                    src: "verifyPassphraseChallenge",
                    onDone: { target: "DeviceTransferComplete" },
                    onError: [
                      {
                        actions: ["assignTrustedDeviceFlowError", "updatePassphraseAttempts"],
                        target: "DisplayPassphraseChallenge",
                        cond: "isInvalidPassphraseError"
                      },
                      { actions: ["assignTrustedDeviceFlowError", "updatePassphraseAttempts"], target: "DeviceTransferFailed" }
                    ]
                  }
                },
                DeviceTransferComplete: { on: { RETURN_TO_DEVICE_SETUP: { actions: ["clearContext"], target: "Idle" } } },
                DeviceTransferRejected: { on: { RETURN_TO_DEVICE_SETUP: { target: "Idle" } } },
                DeviceTransferFailed: { on: { RETURN_TO_DEVICE_SETUP: { actions: ["clearContext"], target: "Idle" } } }
              }
            },
            {
              actions: {
                assignUntrustedDeviceData: (0, S.f0)({
                  transferId: (e, t) => t.data.transferId,
                  untrustedDeviceName: (e, t) => t.data.untrustedDeviceName,
                  untrustedDeviceHashedPublicKey: (e, t) => t.data.untrustedDeviceHashedPublicKey,
                  untrustedDeviceLocation: (e, t) => t.data.untrustedDeviceLocation,
                  requestTimestamp: (e, t) => t.data.requestTimestamp
                }),
                clearContext: (0, S.f0)({
                  transferId: () => {},
                  untrustedDeviceName: () => "",
                  untrustedDeviceHashedPublicKey: () => "",
                  untrustedDeviceLocation: () => "",
                  sharedSecret: () => "",
                  passphrase: () => "",
                  passphraseGuess: () => "",
                  passphraseMissingWordIndex: () => -1,
                  passphraseAttemptsLeft: () => b.KF,
                  error: () => {}
                }),
                clearError: (0, S.f0)({ error: () => {} }),
                assignTrustedDeviceFlowError: (0, S.f0)({ error: (e, t) => (t.data instanceof b.dJ ? t.data.code : E.S.GENERIC_ERROR) }),
                assignPassphraseChallengeData: (0, S.f0)({
                  sharedSecret: (e, t) => t.data.sharedSecret,
                  passphrase: (e, t) => t.data.passphrase,
                  passphraseMissingWordIndex: (e, t) => t.data.passhraseMissingWordIndex
                }),
                assignPassphraseGuess: (0, S.f0)({ passphraseGuess: (e, t) => t.passphraseChallenge }),
                updatePassphraseAttempts: (0, S.f0)({
                  passphraseAttemptsLeft: (e, t) =>
                    t.data instanceof b.dJ && t.data.code === E.S.INVALID_PASSPHRASE
                      ? e.passphraseAttemptsLeft - 1
                      : e.passphraseAttemptsLeft
                })
              },
              services: {
                getPendingDeviceTransferRequest: () => this.getPendingDeviceTransferRequestService.execute(),
                approveDeviceTransferRequest: (e) => this.approveDeviceTransferRequestService.execute(e),
                verifyPassphraseChallenge: (e) => this.verifyPassphraseChallengeService.execute(e)
              },
              guards: {
                isDeviceTransferRequestAvailable: (e, t) => !!t.data.transferId,
                isInvalidPassphraseError: (e, t) => t.data instanceof b.dJ && "INVALID_PASSPHRASE" === t.data.code
              }
            }
          );
        }
      };
      R = (0, s.__decorate)([(0, f.GS)(), (0, s.__metadata)("design:paramtypes", [T, O, P])], R);
      let D = class {
        constructor(e, t) {
          this.trustedDeviceMachineStore = t;
          const r = e.create();
          this.interpreter = g.kJ(r).onTransition(async (e) => {
            e.changed ||
              "xstate.init" === e.event.type ||
              console.warn(
                `[D2D Trusted Device Flow] State is unchanged. Unexpected transition on ${JSON.stringify(e.value)} with event ${
                  e.event.type
                } `
              );
            try {
              const e = this.interpreter?.getSnapshot();
              e &&
                (await (async (e, t) => {
                  await e.set(JSON.stringify(t));
                })(this.trustedDeviceMachineStore, e));
            } catch (e) {
              console.warn("[D2D Trusted Device Flow] Unable to get snapshot", e);
            }
          });
        }
        async prepare() {
          if (this.interpreter)
            try {
              const e = await (async (e) => {
                const t = await e.getState();
                return t ? l.ZM.create(JSON.parse(t)) : void 0;
              })(this.trustedDeviceMachineStore);
              try {
                this.interpreter.start(e);
              } catch (e) {
                console.error("[D2D Trusted Device Flow] Unable to reuse the stored state: ", e), this.interpreter.start();
              }
            } catch (e) {
              console.error("[D2D Trusted Device Flow] Unable to start machine", e);
            }
        }
        ready() {
          return new y.X(!0);
        }
        continue(e) {
          if (!this.interpreter) throw new Error("TrustedDevice flow not started");
          this.interpreter.send(e);
        }
        stop() {
          this.isStarted() && (this.interpreter = void 0);
        }
        isStarted() {
          return Boolean(this.interpreter);
        }
      };
      D = (0, s.__decorate)([(0, f.GS)(), (0, s.__metadata)("design:paramtypes", [R, m])], D);
      var N = r(43978),
        U = r(90171),
        L = r(83695),
        F = r(85390),
        M = r(30523),
        x = r(6136),
        k = r(30045),
        G = r(20754),
        K = r(53835),
        V = r(69885),
        j = r(6220),
        B = r(69126);
      const W = (e) =>
          (0, V.of)(
            (0, w.Vp)(
              (function (e) {
                if (e.matches("Idle") || e.matches("WaitingForNewDeviceTransferRequest")) return { step: E.T.WaitingForNewDeviceRequest };
                if (e.matches("NewDeviceTransferRequest"))
                  return (0, B.Xn)(e.context.requestTimestamp) <= 0
                    ? { step: E.T.Error, errorCode: E.S.TIMEOUT }
                    : {
                        step: E.T.NewDeviceRequestAvailable,
                        untrustedDeviceName: e.context.untrustedDeviceName,
                        untrustedDeviceLocation: e.context.untrustedDeviceLocation,
                        requestTimestamp: e.context.requestTimestamp
                      };
                if (e.matches("HandlingDeviceTransferRequest")) return { step: E.T.LoadingChallenge };
                if (e.matches("DisplayPassphraseChallenge") || e.matches("VerifyingPassphraseChallenge")) {
                  const { passphrase: t, passphraseMissingWordIndex: r, untrustedDeviceName: s, error: o } = e.context,
                    n = t.split(I.iy).map((e, t) => (t === r ? "" : e));
                  return { step: E.T.DisplayPassphraseChallenge, untrustedDeviceName: s, passphrase: n, error: o };
                }
                if (e.matches("DeviceTransferComplete"))
                  return { step: E.T.DeviceTransferComplete, untrustedDeviceName: e.context.untrustedDeviceName };
                if (e.matches("DeviceTransferRejected"))
                  return { step: E.T.DeviceTransferRejected, untrustedDeviceName: e.context.untrustedDeviceName };
                if (e.matches("DeviceTransferFailed")) return { step: E.T.Error, errorCode: e.context.error };
                throw new Error("[D2D Trusted Device] - No view associated to state");
              })(e)
            )
          ),
        H = (e) => e.pipe((0, j.z)(W));
      let z = class {
        constructor(e, t) {
          (this.trustedDeviceFlow = e), (this.trustedDeviceFlowMachineStore = t);
        }
        execute() {
          const e = v(this.trustedDeviceFlowMachineStore)
            .pipe(
              (0, M.h)(Boolean),
              (0, d.U)((e) => (e.context.requestTimestamp ? (0, B.Xn)(e.context.requestTimestamp) : 0))
            )
            .pipe(
              (0, N.w)((e) => (0, U.H)(e)),
              (0, L.O)(0)
            );
          return (0, F.a)([v(this.trustedDeviceFlowMachineStore), this.trustedDeviceFlow.ready(), e], (e, t, r) => {
            if (e && t) return e;
          }).pipe(
            (0, M.h)(Boolean),
            H,
            (0, x.x)((e, t) => (0, k.Z)(e, t))
          );
        }
      };
      z = (0, s.__decorate)([(0, G.e)(K.N), (0, s.__metadata)("design:paramtypes", [D, m])], z);
      var Q = r(63663),
        q = r(87041);
      let Y = class {
        constructor(e) {
          (this.trustedDeviceFlow = e), (this.trustedDeviceFlow = e);
        }
        execute() {
          return this.trustedDeviceFlow.continue({ type: "APPROVE_REQUEST" }), Promise.resolve((0, w.Vp)(void 0));
        }
      };
      Y = (0, s.__decorate)([(0, Q.W)(q.G), (0, s.__metadata)("design:paramtypes", [D])], Y);
      var $ = r(33969);
      let X = class {
        constructor(e) {
          (this.trustedDeviceFlow = e), (this.trustedDeviceFlow = e);
        }
        execute() {
          return this.trustedDeviceFlow.continue({ type: "REFRESH_REQUEST" }), Promise.resolve((0, w.Vp)(void 0));
        }
      };
      X = (0, s.__decorate)([(0, Q.W)($.V), (0, s.__metadata)("design:paramtypes", [D])], X);
      var Z = r(55870);
      let J = class {
        constructor(e) {
          (this.trustedDeviceFlow = e), (this.trustedDeviceFlow = e);
        }
        execute() {
          return this.trustedDeviceFlow.continue({ type: "REJECT_REQUEST" }), Promise.resolve((0, w.Vp)(void 0));
        }
      };
      J = (0, s.__decorate)([(0, Q.W)(Z.a), (0, s.__metadata)("design:paramtypes", [D])], J);
      var ee = r(97891);
      let te = class {
        constructor(e) {
          (this.trustedDeviceFlow = e), (this.trustedDeviceFlow = e);
        }
        execute() {
          return this.trustedDeviceFlow.continue({ type: "CANCEL_REQUEST" }), Promise.resolve((0, w.Vp)(void 0));
        }
      };
      te = (0, s.__decorate)([(0, Q.W)(ee.b), (0, s.__metadata)("design:paramtypes", [D])], te);
      var re = r(48214);
      let se = class {
        constructor(e) {
          (this.trustedDeviceFlow = e), (this.trustedDeviceFlow = e);
        }
        execute(e) {
          const { passphraseChallenge: t } = e.body;
          return (
            this.trustedDeviceFlow.continue({ type: "SUBMIT_PASSPHRASE_CHALLENGE", passphraseChallenge: t }),
            Promise.resolve((0, w.Vp)(void 0))
          );
        }
      };
      se = (0, s.__decorate)([(0, Q.W)(re.I), (0, s.__metadata)("design:paramtypes", [D])], se);
      var oe = r(81540);
      let ne = class {
        constructor(e) {
          (this.trustedDeviceFlow = e), (this.trustedDeviceFlow = e);
        }
        execute() {
          return this.trustedDeviceFlow.continue({ type: "RETURN_TO_DEVICE_SETUP" }), Promise.resolve((0, w.Vp)(void 0));
        }
      };
      ne = (0, s.__decorate)([(0, Q.W)(oe.n), (0, s.__metadata)("design:paramtypes", [D])], ne);
      let ie = class {};
      ie = (0, s.__decorate)(
        [
          (0, n.Y)({
            api: o.F,
            stores: [m],
            imports: [a.n],
            exports: [C.q, c.E],
            providers: [
              (0, c.V)(),
              ...(0, i.H)(D, {
                inject: [R, m],
                asyncFactory: async (e, t) => {
                  const r = new D(e, t);
                  return await r.prepare(), r;
                }
              }),
              c.E,
              I.Kp,
              C.q,
              A.C,
              T,
              O,
              P,
              R,
              I.Ny
            ],
            handlers: {
              commands: {
                approveRequest: Y,
                refreshRequest: X,
                rejectRequest: J,
                cancelRequest: te,
                submitPassphraseChallenge: se,
                returnToDeviceSetup: ne
              },
              events: {},
              queries: { trustedDeviceFlowStatus: z }
            }
          })
        ],
        ie
      );
    },
    16053: (e, t, r) => {
      r.d(t, { C: () => E });
      var s = r(88802),
        o = r(60399),
        n = r(10551),
        i = r(22450),
        a = r(86252),
        c = r(87113),
        l = r(25994),
        d = r(57924),
        u = r(48844),
        p = r(87279),
        h = r(18533),
        m = r(20195),
        v = r(89358),
        g = r(64496),
        y = r(70486),
        f = r(69126),
        _ = r(10430),
        S = r(46484);
      let E = class {
        constructor(e, t, r) {
          (this.serverApiClient = e), (this.sessionClient = t), (this.carbon = r);
        }
        async getCurrentUserLogin() {
          return await (0, o.z)(
            this.sessionClient.queries.selectedOpenedSession().pipe(
              (0, u.DZ)(() => (0, p.Rn)(new Error("No user login found"))),
              (0, u.lk)((e) => (0, p.Vp)(e))
            )
          );
        }
        getUserInvisibleMasterPassword() {
          const { carbonState: e } = this.carbon.queries;
          return (0, o.z)(
            e({ path: "userSession.session.masterPassword" }).pipe(
              (0, u.nb)({
                success: (e) => e,
                failure: () => {
                  throw new Error("Failure getting user invisible master password info");
                }
              })
            )
          );
        }
        async requestAuthTicket() {
          return await (0, o.z)(
            this.serverApiClient.v1.authentication.requestExtraDeviceRegistration({ tokenType: "googleAccountNewDevice" }).pipe(
              (0, u.DZ)((e) =>
                (0, h.EQ)(e, {
                  BusinessError: () => (0, p.Rn)(e),
                  FetchFailedError: () => (0, p.Rn)(e),
                  UnspecifiedBadStatus: () => (0, p.Rn)(e),
                  InternalServerError: m.j,
                  InvalidRequest: m.j,
                  RateLimited: m.j,
                  ServiceUnavailable: m.j
                })
              ),
              (0, u.lk)((e) => (0, p.Vp)(e.data.token))
            )
          );
        }
        async getKeyExchangeTransferInfo() {
          return await (0, o.z)(
            this.serverApiClient.v1.secretTransfer.getKeyExchangeTransferInfo({}).pipe(
              (0, u.DZ)((e) =>
                (0, h.EQ)(e, {
                  BusinessError: () => (0, p.Rn)(e),
                  FetchFailedError: () => (0, p.Rn)(e),
                  UnspecifiedBadStatus: () => (0, p.Rn)(e),
                  InternalServerError: m.j,
                  InvalidRequest: m.j,
                  RateLimited: m.j,
                  ServiceUnavailable: m.j
                })
              ),
              (0, u.lk)((e) => (0, p.Vp)(e.data))
            )
          );
        }
        async startReceiverKeyExchange(e, t) {
          return await (0, o.z)(
            this.serverApiClient.v1.secretTransfer.startReceiverKeyExchange({ transferId: e, receiverHashedPublicKey: t }).pipe(
              (0, u.DZ)((e) =>
                (0, h.EQ)(e, {
                  BusinessError: m.j,
                  FetchFailedError: () => {
                    throw new _.z("User offline or request timeout", g.UY.TIMEOUT);
                  },
                  UnspecifiedBadStatus: ({ response: t }) => {
                    if (t.status === l.W.GatewayTimeout) return new _.z("Request has timed out", g.UY.TIMEOUT);
                    (0, m.j)(e);
                  },
                  InternalServerError: m.j,
                  InvalidRequest: m.j,
                  RateLimited: m.j,
                  ServiceUnavailable: m.j
                })
              ),
              (0, u.lk)((e) => (0, p.Vp)(e.data))
            )
          );
        }
        async completeKeyExchange(e, t) {
          return await (0, o.z)(
            this.serverApiClient.v1.secretTransfer.completeKeyExchange({ receiverPublicKey: t, transferId: e }).pipe(
              (0, u.DZ)((e) =>
                (0, h.EQ)(e, {
                  BusinessError: () => (0, p.Rn)(e),
                  FetchFailedError: () => (0, p.Rn)(e),
                  UnspecifiedBadStatus: () => (0, p.Rn)(e),
                  InternalServerError: m.j,
                  InvalidRequest: m.j,
                  RateLimited: m.j,
                  ServiceUnavailable: m.j
                })
              ),
              (0, u.lk)((e) => (0, p.Vp)(e.data))
            )
          );
        }
        async startTransfer(e) {
          return await (0, o.z)(
            this.serverApiClient.v1.secretTransfer.startTransfer({ transferId: e, transferType: "universal" }).pipe(
              (0, u.DZ)((e) =>
                (0, h.EQ)(e, {
                  BusinessError: m.j,
                  FetchFailedError: m.j,
                  UnspecifiedBadStatus: ({ response: t }) =>
                    t.status === l.W.GatewayTimeout ? new _.z("Request has timed out", g.UY.TIMEOUT) : (0, m.j)(e),
                  InternalServerError: m.j,
                  InvalidRequest: m.j,
                  RateLimited: m.j,
                  ServiceUnavailable: m.j
                })
              ),
              (0, u.lk)((e) => (0, p.Vp)(e.data))
            )
          );
        }
        async requestTransfer(e, t) {
          return await (0, o.z)(
            this.serverApiClient.v1.secretTransfer
              .requestTransfer({ transfer: { login: e, receiverDeviceName: t, transferType: "universal" } })
              .pipe(
                (0, u.DZ)((e) =>
                  (0, h.EQ)(e, {
                    BusinessError: () => {
                      throw new Error("[D2D]: Business Error");
                    },
                    FetchFailedError: () => {
                      throw new Error("[D2D]: Network error");
                    },
                    UnspecifiedBadStatus: m.j,
                    InternalServerError: m.j,
                    InvalidRequest: m.j,
                    RateLimited: m.j,
                    ServiceUnavailable: m.j
                  })
                ),
                (0, u.lk)((e) => (0, p.Vp)(e.data))
              )
          );
        }
        async startSenderKeyExchange(e) {
          return await (0, o.z)(
            this.serverApiClient.v1.secretTransfer.startSenderKeyExchange({ senderPublicKey: e }).pipe(
              (0, u.DZ)((e) =>
                (0, h.EQ)(e, {
                  BusinessError: (e) => {
                    if ("TRANSFER_DOES_NOT_EXISTS" === e.code) throw new S.dJ("Transfer request has expired", y.S.TIMEOUT);
                    throw new Error("[D2D]: Business Error");
                  },
                  FetchFailedError: () => {
                    throw new Error("[D2D]: Network error");
                  },
                  UnspecifiedBadStatus: ({ response: e }) => {
                    if (e.status === l.W.GatewayTimeout) return new S.dJ("Request has timed out", y.S.TIMEOUT);
                    throw new Error("[D2D]: Bad status error");
                  },
                  InternalServerError: m.j,
                  InvalidRequest: m.j,
                  RateLimited: m.j,
                  ServiceUnavailable: m.j
                })
              ),
              (0, u.lk)((e) => (0, p.Vp)(e.data))
            )
          );
        }
        async completeTransfer(e, t, r) {
          return await (0, o.z)(
            this.serverApiClient.v1.secretTransfer
              .completeTransfer({ transfer: { encryptedData: e, nonce: t, transferId: r, transferType: "universal" } })
              .pipe(
                (0, u.DZ)((e) =>
                  (0, h.EQ)(e, {
                    BusinessError: (e) => {
                      if ("TRANSFER_DOES_NOT_EXISTS" === e.error.code) return new S.dJ("Request timed out", y.S.TIMEOUT);
                      throw new Error("[D2D]: Business Error");
                    },
                    FetchFailedError: () => {
                      throw new Error("[D2D]: Network error");
                    },
                    UnspecifiedBadStatus: m.j,
                    InternalServerError: m.j,
                    InvalidRequest: m.j,
                    RateLimited: m.j,
                    ServiceUnavailable: m.j
                  })
                ),
                (0, u.lk)((e) => (0, p.Vp)(e.data))
              )
          );
        }
        async openSession(e, t, r, s) {
          const a = await (0, o.z)(this.serverApiClient.v1.authentication.performExtraDeviceVerification({ login: e, token: t }));
          if (!(0, p.d6)(a)) throw new _.z("Perform extra device verification failed", g.UY.ACCOUNT_ERROR);
          const { authTicket: c } = a.data.data,
            l = await (0, o.z)(this.carbon.queries.getPlatformInfo());
          if (!(0, p.d6)(l)) throw new _.z("No platform info available", g.UY.ACCOUNT_ERROR);
          const d = l.data,
            u = {
              deviceName: (0, f.$f)(s || n.getDefaultDeviceName()),
              appVersion: d.appVersion,
              platform: d.platformName,
              osCountry: (0, f.Yb)(d.country),
              osLanguage: (0, f._$)(d.lang),
              temporary: !1
            },
            h = await (0, o.z)(
              this.serverApiClient.v1.authentication.completeDeviceRegistrationWithAuthTicket({ authTicket: c, login: e, device: u })
            );
          if (!(0, p.d6)(h)) throw new _.z("Device registration with authTicket failed", g.UY.ACCOUNT_ERROR);
          const {
            deviceAccessKey: m,
            deviceAnalyticsId: v,
            deviceSecretKey: y,
            settings: S,
            serverKey: E,
            publicUserId: b,
            userAnalyticsId: w
          } = h.data.data;
          await this.carbon.commands.registerDevice({
            deviceAccessKey: m,
            deviceAnalyticsId: v,
            deviceSecretKey: y,
            settings: S,
            serverKey: E,
            publicUserId: b,
            userAnalyticsId: w,
            isDataPersisted: i.jP.PERSIST_DATA_YES
          });
          const A = await this.carbon.commands.carbonLegacyLeeloo({
            name: "openSessionWithMasterPassword",
            arg: [{ login: e, password: r, rememberPassword: !0, requiredPermissions: void 0, serverKey: "" }]
          });
          if (!(0, p.d6)(A)) throw new _.z("Open session with deciphered password failed", g.UY.ACCOUNT_ERROR);
        }
      };
      E = (0, s.__decorate)([(0, d.GS)(), (0, s.__metadata)("design:paramtypes", [c.l, v.x, a._])], E);
    },
    15652: (e, t, r) => {
      r.d(t, { q: () => c });
      var s = r(88802),
        o = r(10370),
        n = r(57924),
        i = r(65871),
        a = r(69126);
      let c = class {
        constructor(e) {
          this.cryptoToolboxService = e;
        }
        verifyUntrustedDevicePublicKey(e, t) {
          return this.cryptoToolboxService.compare((0, a.tp)(e), (0, a.tp)(this.hash(t)));
        }
        generateReceiverSharedSecret(e, t, r) {
          return (0, o.s)(this.cryptoToolboxService.generateClientSharedSecret((0, a.tp)(e), (0, a.tp)(t), (0, a.tp)(r)).sharedRx);
        }
        generateSenderSharedSecret(e, t, r) {
          return (0, o.s)(this.cryptoToolboxService.generateServerSharedSecret((0, a.tp)(e), (0, a.tp)(t), (0, a.tp)(r)).sharedTx);
        }
        generateSymmetricKey(e, t, r) {
          return (0, o.s)(
            this.cryptoToolboxService.hash(new TextEncoder().encode(`DASHLANE_D2D_SYMMETRIC_KEY${e.length}${e}${t}`), (0, a.tp)(r))
          );
        }
        hash(e) {
          return (0, o.s)(this.cryptoToolboxService.hash((0, a.tp)(e)));
        }
        generateKeyPair() {
          const e = this.cryptoToolboxService.generateKeyPair();
          return { publicKey: (0, o.s)(e.publicKey), privateKey: (0, o.s)(e.privateKey) };
        }
        generateVisualCheckSeed(e, t, r) {
          return (0, o.s)(
            this.cryptoToolboxService.hash(new TextEncoder().encode(`DASHLANE_D2D_SAS_SEED${e.length}${e}${t}`), (0, a.tp)(r))
          );
        }
        encryptInvisibleMasterPassword(e, t, r, s, n) {
          const i = ((e) => new TextEncoder().encode(JSON.stringify(e)))({
              login: e,
              key: { type: "invisible_master_password", value: r },
              token: t,
              version: 1
            }),
            c = this.generateSymmetricKey(e, s, n),
            l = this.cryptoToolboxService.generateNonce(),
            d = this.cryptoToolboxService.encrypt(i, l, (0, a.tp)(c));
          return { encryptedData: (0, o.s)(d), nonce: (0, o.s)(l) };
        }
        decryptInvisibleMasterPassword(e, t, r) {
          const s = this.cryptoToolboxService.decrypt((0, a.tp)(e), (0, a.tp)(t), (0, a.tp)(r)),
            o = new TextDecoder("utf-8").decode(s);
          return JSON.parse(o);
        }
      };
      c = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [i.E])], c);
    },
    69605: (e, t, r) => {
      r.d(t, { Kp: () => u, Ny: () => d, iy: () => c });
      var s = r(88802),
        o = r(67978),
        n = r(57924),
        i = r(75994),
        a = r(69126);
      const c = " ",
        l = Math.pow(2, 32) - 1;
      let d = class extends o.K {
        constructor(e) {
          super("assets/eff_large_wordlist.json", e);
        }
        loadResource(e) {
          if (!e || !Array.isArray(e)) throw new Error("Failed to load word list");
          return e;
        }
      };
      d = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [i.X])], d);
      let u = class {
        constructor(e) {
          this.fetcher = e;
        }
        getWordList() {
          return this.fetcher.get();
        }
        async generatePassphraseChallenge(e) {
          const t = await this.getWordList(),
            r = [],
            s = Math.floor(l / t.length) * t.length;
          for (let o = 0; o < e.length; o += 4) {
            const { buffer: n, byteOffset: i } = new Uint8Array((0, a.tp)(e).slice(o, o + 4)),
              c = new DataView(n).getUint32(i, !0);
            if (c < s) {
              const e = t[c % t.length];
              r.push(e);
            }
            if (5 === r.length) break;
          }
          return { passphrase: r.join(c), missingWordIndex: Math.floor(5 * Math.random()) };
        }
        verifyChallenge(e, t) {
          if (!e) throw new Error("[DEVICE-TRANSFER]: Passphrase challenge not generated yet");
          if (!t) throw new Error("[DEVICE-TRANSFER]: Passphrase guess not saved to machine context");
          return e === t;
        }
      };
      u = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [d])], u);
    },
    69126: (e, t, r) => {
      r.d(t, { $f: () => d, Xn: () => o, Yb: () => a, _$: () => l, tp: () => n });
      var s = r(66122);
      const o = (e) => 1e3 * e + 6e4 - Date.now(),
        n = (e) => new Uint8Array((0, s.R)(e)),
        i = "ZZ";
      function a(e) {
        return !e || e.length < 2 || e.length > 5 ? i : e;
      }
      const c = "und";
      function l(e) {
        return !e || e.length < 2 || e.length > 5 ? c : e;
      }
      function d(e) {
        return e ? e.replace(/https?:\/\//g, " ") : e;
      }
    },
    99600: (e, t, r) => {
      r.d(t, { f: () => Re });
      var s,
        o,
        n,
        i,
        a,
        c = r(88802),
        l = r(99634),
        d = r(38679),
        u = r(93850),
        p = r(11433),
        h = r(57924),
        m = r(65865),
        v = r(18275),
        g = r(87279),
        y = r(60399),
        f = r(87113),
        _ = r(48844),
        S = r(18533),
        E = r(95087),
        b = r(20195),
        w = r(96168);
      !(function (e) {
        (e.VERIFICATION_FAILED = "verification_failed"),
          (e.VERIFICATION_TIMEOUT = "verification_timeout"),
          (e.VERIFICATION_REQUIRES_REQUEST = "verification_requires_request"),
          (e.ACCOUNT_BLOCKED_CONTACT_SUPPORT = "account_blocked_contact_support"),
          (e.INVALID_OTP_ALREADY_USED = "invalid_otp_already_used"),
          (e.INVALID_OTP_BLOCKED = "invalid_otp_blocked");
      })(s || (s = {}));
      class A extends (0, w.Hu)(s.VERIFICATION_FAILED, "") {}
      class T extends (0, w.Hu)(s.VERIFICATION_TIMEOUT, "") {}
      class C extends (0, w.Hu)(s.VERIFICATION_REQUIRES_REQUEST, "") {}
      class I extends (0, w.Hu)(s.ACCOUNT_BLOCKED_CONTACT_SUPPORT, "") {}
      class O extends (0, w.Hu)(s.INVALID_OTP_ALREADY_USED, "") {}
      class P extends (0, w.Hu)(s.INVALID_OTP_BLOCKED, "") {}
      class R extends (0, w.Hu)("network_error", "") {}
      !(function (e) {
        (e.TOKEN_NOT_VALID = "TOKEN_NOT_VALID"),
          (e.TOKEN_EXPIRED = "TOKEN_EXPIRED"),
          (e.TOKEN_TOO_MANY_ATTEMPTS = "TOKEN_TOO_MANY_ATTEMPTS"),
          (e.TOKEN_ACCOUNT_LOCKED = "TOKEN_ACCOUNT_LOCKED");
      })(o || (o = {})),
        (function (e) {
          (e.OTP_NOT_VALID = "OTP_NOT_VALID"),
            (e.OTP_TOO_MANY_ATTEMPTS = "OTP_TOO_MANY_ATTEMPTS"),
            (e.OTP_ALREADY_USED = "OTP_ALREADY_USED"),
            (e.BACKUP_CODE_NOT_VALID = "BACKUP_CODE_NOT_VALID");
        })(n || (n = {})),
        (function (e) {
          (e.DASHLANE_AUTHENTICATOR_PUSH_NOTIFICATION_DENIED = "DASHLANE_AUTHENTICATOR_PUSH_NOTIFICATION_DENIED"),
            (e.TOKEN_EXPIRED = "TOKEN_EXPIRED");
        })(i || (i = {})),
        (function (e) {
          (e.NETWORK_ERROR = "NETWORK_ERROR"), (e.UNKNOWN_ERROR = "UNKNOWN_ERROR");
        })(a || (a = {}));
      let D = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        async performEmailTokenVerification(e, t) {
          return await (0, y.z)(
            this.serverApiClient.v1.authentication.performEmailTokenVerification({ login: e, token: t }).pipe(
              (0, _.DZ)((e) =>
                (0, S.EQ)(e, {
                  BusinessError: (e) => {
                    switch (e.code) {
                      case s.VERIFICATION_FAILED:
                        return new A();
                      case s.VERIFICATION_TIMEOUT:
                        return new T();
                      case s.VERIFICATION_REQUIRES_REQUEST:
                        return new C();
                      case s.ACCOUNT_BLOCKED_CONTACT_SUPPORT:
                        return new I();
                      default:
                        (0, E.U)(e.code);
                    }
                  },
                  FetchFailedError: () => new R(),
                  UnspecifiedBadStatus: b.j,
                  InternalServerError: b.j,
                  InvalidRequest: b.j,
                  RateLimited: b.j,
                  ServiceUnavailable: b.j
                })
              ),
              (0, _.lk)((e) => (0, g.Vp)(e.data.authTicket))
            )
          );
        }
        async performTotpVerification(e, t) {
          return await (0, y.z)(
            this.serverApiClient.v1.authentication.performTotpVerification({ login: e, otp: t }).pipe(
              (0, _.DZ)((e) =>
                (0, S.EQ)(e, {
                  BusinessError: (e) => {
                    switch (e.code) {
                      case s.VERIFICATION_FAILED:
                        return new A();
                      case s.INVALID_OTP_ALREADY_USED:
                        return new O();
                      case s.INVALID_OTP_BLOCKED:
                        return new P();
                      default:
                        (0, E.U)(e.code);
                    }
                  },
                  FetchFailedError: () => new R(),
                  UnspecifiedBadStatus: b.j,
                  InternalServerError: b.j,
                  InvalidRequest: b.j,
                  RateLimited: b.j,
                  ServiceUnavailable: b.j
                })
              ),
              (0, _.lk)((e) => (0, g.Vp)(e.data.authTicket))
            )
          );
        }
        async performDashlaneAuthenticatorValidation(e, t) {
          return await (0, y.z)(
            this.serverApiClient.v1.authentication.performDashlaneAuthenticatorVerification({ login: e, deviceName: t }).pipe(
              (0, _.DZ)((e) =>
                (0, S.EQ)(e, {
                  BusinessError: (e) => {
                    switch (e.code) {
                      case s.VERIFICATION_FAILED:
                        return new A();
                      case s.VERIFICATION_TIMEOUT:
                        return new T();
                      default:
                        (0, E.U)(e.code);
                    }
                  },
                  FetchFailedError: () => new R(),
                  UnspecifiedBadStatus: b.j,
                  InternalServerError: b.j,
                  InvalidRequest: b.j,
                  RateLimited: b.j,
                  ServiceUnavailable: b.j
                })
              ),
              (0, _.lk)((e) => (0, g.Vp)(e.data.authTicket))
            )
          );
        }
        async askServerToSendToken(e) {
          return await (0, y.z)(
            this.serverApiClient.v1.authentication.requestEmailTokenVerification({ login: e }).pipe(
              (0, _.DZ)((e) => {
                throw e;
              }),
              (0, _.lk)(() => (0, g.Vp)(void 0))
            )
          );
        }
      };
      D = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [f.l])], D);
      let N = class {
        constructor(e) {
          (this.identityVerificationService = e), (this.identityVerificationService = e);
        }
        async execute({ login: e }) {
          if (e) {
            const t = await this.identityVerificationService.askServerToSendToken(e);
            if ((0, g.hx)(t)) return Promise.reject(t.error);
          }
          Promise.resolve(void 0);
        }
      };
      N = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [D])], N);
      var U = r(81459);
      let L = class extends U.f {};
      L = (0, c.__decorate)([(0, h.GS)()], L);
      let F = class {
        constructor(e, t) {
          (this.identityVerificationService = e), (this.eventEmitter = t);
        }
        mapFunctionalErrorToErrorCode(e) {
          switch (e.tag) {
            case s.VERIFICATION_FAILED:
              return i.DASHLANE_AUTHENTICATOR_PUSH_NOTIFICATION_DENIED;
            case s.VERIFICATION_TIMEOUT:
              return i.TOKEN_EXPIRED;
            default:
              return a.UNKNOWN_ERROR;
          }
        }
        async execute({ login: e }) {
          if (!e) throw new Error("Something went wrong");
          const t = await this.identityVerificationService.performDashlaneAuthenticatorValidation(e, "");
          if ((0, g.hx)(t)) {
            const e = this.mapFunctionalErrorToErrorCode(t.error);
            return Promise.reject(e);
          }
          return this.eventEmitter.sendEvent("identityVerificationCompleted", { authTicket: t.data }), Promise.resolve();
        }
      };
      F = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [D, L])], F);
      let M = class {
        constructor(e, t) {
          (this.dashlaneAuthenticatorService = e), (this.sendEmailToken = t);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "AuthenticatorMachine",
              context: { isDashlaneAuthenticatorAvailable: !1 },
              initial: "RequestingServerPush",
              states: {
                RequestingServerPush: {
                  entry: ["updateDashlaneAuthenticatorAvailability"],
                  invoke: {
                    src: "authenticateWithDashlaneAuthenticator",
                    onDone: { target: "AuthenticatorPushValidated" },
                    onError: { actions: ["assignError", "updateDashlaneAuthenticatorAvailability"] }
                  },
                  on: {
                    RESEND_PUSH_NOTIFICATION: { target: "RequestingServerPush", actions: ["clearError"] },
                    SWITCH_TO_EMAIL_TOKEN: { actions: ["clearError"], target: "EmailTokenRequested" }
                  }
                },
                AuthenticatorPushValidated: { type: "final", data: { switchToEmailToken: !1 } },
                EmailTokenRequested: { entry: ["sendEmailToken"], type: "final", data: { switchToEmailToken: !0 } }
              }
            },
            options: {
              actions: {
                clearError: (0, m.f0)({ error: () => {} }),
                assignError: (0, m.f0)({ error: (e, t) => t.data }),
                switchToEmailToken: (0, m.f0)({ switchToEmailToken: () => !0 }),
                updateDashlaneAuthenticatorAvailability: (0, m.f0)({ isDashlaneAuthenticatorAvailable: !0 }),
                sendEmailToken: (e) => {
                  const { login: t } = e;
                  this.sendEmailToken.execute({ login: t });
                }
              },
              services: {
                authenticateWithDashlaneAuthenticator: (e) => {
                  const { login: t } = e;
                  return this.dashlaneAuthenticatorService.execute({ login: t });
                }
              },
              guards: {}
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, v.C)(e, t);
        }
      };
      M = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [F, N])], M);
      const x = /^\d{6}$/;
      let k = class {
        constructor(e, t) {
          (this.identityVerificationService = e), (this.eventEmitter = t);
        }
        mapFunctionalErrorToErrorCode(e) {
          switch (e.tag) {
            case s.VERIFICATION_FAILED:
              return o.TOKEN_NOT_VALID;
            case s.VERIFICATION_TIMEOUT:
              return o.TOKEN_EXPIRED;
            case s.VERIFICATION_REQUIRES_REQUEST:
              return o.TOKEN_TOO_MANY_ATTEMPTS;
            case s.ACCOUNT_BLOCKED_CONTACT_SUPPORT:
              return o.TOKEN_ACCOUNT_LOCKED;
            default:
              return a.UNKNOWN_ERROR;
          }
        }
        async executeWithParams(e) {
          if (!e.login || !e.emailToken || 0 === e.emailToken.length || !x.test(e.emailToken)) return Promise.reject(a.UNKNOWN_ERROR);
          const t = await this.identityVerificationService.performEmailTokenVerification(e.login, e.emailToken);
          if ((0, g.hx)(t)) {
            const e = this.mapFunctionalErrorToErrorCode(t.error);
            return Promise.reject(e);
          }
          const r = t.data;
          return this.eventEmitter.sendEvent("identityVerificationCompleted", { authTicket: r }), Promise.resolve();
        }
      };
      k = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [D, L])], k);
      let G = class {
        constructor(e, t) {
          (this.authenticateWithEmailToken = e), (this.sendEmailToken = t);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "EmailTokenMachine",
              context: { login: "", emailToken: "", deviceName: "" },
              initial: "SendEmailToken",
              states: {
                SendEmailToken: {
                  invoke: { src: "sendEmailToken", onError: { target: "WaitingForEmailToken" }, onDone: { target: "WaitingForEmailToken" } }
                },
                WaitingForEmailToken: {
                  on: {
                    INPUT_EMAIL_TOKEN: { target: "ValidatingEmailToken", actions: ["assignEmailToken"] },
                    RESEND_EMAIL_TOKEN: { target: "SendEmailToken", actions: ["clearError"] }
                  }
                },
                ValidatingEmailToken: {
                  invoke: {
                    src: "authenticateWithEmailToken",
                    onDone: { target: "FinishingEmailToken" },
                    onError: { target: "WaitingForEmailToken", actions: ["assignError"] }
                  }
                },
                FinishingEmailToken: { type: "final", data: { switchToDashlaneAuthenticator: !1 } },
                DashlaneAuthenticatorRequested: { type: "final", data: { switchToDashlaneAuthenticator: !0 } }
              },
              on: { SWITCH_TO_DASHLANE_AUTHENTICATOR: { target: ".DashlaneAuthenticatorRequested", internal: !0, actions: ["clearError"] } }
            },
            options: {
              actions: {
                assignError: (0, m.f0)({ error: (e, t) => t.data }),
                clearError: (0, m.f0)({ error: () => {} }),
                assignEmailToken: (0, m.f0)({ emailToken: (e, t) => t.emailToken })
              },
              services: {
                sendEmailToken: (e) => {
                  const { login: t } = e;
                  return this.sendEmailToken.execute({ login: t });
                },
                authenticateWithEmailToken: (e) => {
                  const { deviceName: t, emailToken: r, login: s } = e;
                  return this.authenticateWithEmailToken.executeWithParams({ deviceName: t, emailToken: r, login: s });
                }
              },
              guards: {}
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, v.C)(e, t);
        }
      };
      G = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [k, N])], G);
      const K = (e) => ({ initial: e.initial, states: e.states, on: e.on ?? {} });
      let V = class {
        constructor(e, t) {
          (this.authenticatorMachine = e), (this.emailTokenMachine = t);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {}, guards: {} },
              id: "DeviceRegistrationMachine",
              context: {
                ...this.authenticatorMachine.desc().config.context,
                ...this.emailTokenMachine.desc().config.context,
                registrationMethod: void 0
              },
              initial: "StartDeviceRegistration",
              states: {
                StartDeviceRegistration: {
                  always: [
                    { target: "EmailToken", cond: "isRegistrationMethodEmailToken" },
                    { target: "DashlaneAuthenticator", cond: "isRegistrationMethodAuthenticator" },
                    { target: "TwoFactorAuthentication", cond: "isRegistrationMethodOTP" }
                  ]
                },
                DashlaneAuthenticator: {
                  ...K(this.authenticatorMachine.desc().config),
                  onDone: [{ target: "EmailToken", cond: "shouldSwitchToEmailToken" }, { target: "DeviceRegistrationDone" }]
                },
                EmailToken: {
                  ...K(this.emailTokenMachine.desc().config),
                  onDone: [{ target: "DashlaneAuthenticator", cond: "shouldSwitchToAuthenticator" }, { target: "DeviceRegistrationDone" }]
                },
                TwoFactorAuthentication: { onDone: { target: "DeviceRegistrationDone" } },
                DeviceRegistrationDone: { type: "final" }
              }
            },
            options: {
              actions: {
                ...this.authenticatorMachine.desc().options.actions,
                ...this.emailTokenMachine.desc().options.actions,
                assignUnknownDeviceRegistrationError: (0, m.f0)({
                  error: () => ({ code: "unknown_error", data: { message: "Unknown device registration error" } })
                })
              },
              services: { ...this.authenticatorMachine.desc().options.services, ...this.emailTokenMachine.desc().options.services },
              guards: {
                ...this.authenticatorMachine.desc().options.guards,
                ...this.emailTokenMachine.desc().options.guards,
                isRegistrationMethodEmailToken: (e) => "email_token" === e.registrationMethod,
                isRegistrationMethodOTP: (e) => "otp" === e.registrationMethod,
                isRegistrationMethodAuthenticator: (e) => "dashlane_authenticator" === e.registrationMethod,
                shouldSwitchToEmailToken: (e, t) => t.data.switchToEmailToken,
                shouldSwitchToAuthenticator: (e, t) => t.data.switchToDashlaneAuthenticator
              }
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, v.C)(e, t);
        }
      };
      V = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [M, G])], V);
      var j = r(25029),
        B = r(95681);
      const W = (e) => !0;
      class H extends (0, B.Q)({
        initialValue: void 0,
        persist: !1,
        scope: j.F.Device,
        storeName: "device-registration-flow-store",
        storeTypeGuard: W
      }) {}
      let z = class {
        constructor(e, t) {
          (this.identityVerificationService = e), (this.eventEmitter = t);
        }
        mapFunctionalErrorToErrorCode(e) {
          switch (e.tag) {
            case s.VERIFICATION_FAILED:
              return n.OTP_NOT_VALID;
            case s.INVALID_OTP_ALREADY_USED:
              return n.OTP_ALREADY_USED;
            case s.INVALID_OTP_BLOCKED:
              return n.OTP_TOO_MANY_ATTEMPTS;
            default:
              return a.UNKNOWN_ERROR;
          }
        }
        async executeWithParams(e) {
          if (!e.login || !e.otp || 0 === e.otp.length || ("totp" === e.twoFactorAuthenticationOtpType && !x.test(e.otp)))
            return Promise.reject(a.UNKNOWN_ERROR);
          const t = await this.identityVerificationService.performTotpVerification(e.login, e.otp);
          if ((0, g.hx)(t)) {
            const e = this.mapFunctionalErrorToErrorCode(t.error);
            return Promise.reject(e);
          }
          return this.eventEmitter.sendEvent("identityVerificationCompleted", { authTicket: t.data }), Promise.resolve();
        }
      };
      z = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [D, L])], z);
      let Q = class {
        constructor(e) {
          this.twoFactorAuthenticationService = e;
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              id: "TwoFactorAuthenticationMachine",
              context: { twoFactorAuthenticationOtpType: "totp" },
              initial: "WaitingForTotp",
              states: {
                WaitingForTotp: {
                  on: {
                    INPUT_TOTP: { target: "ValidatingTwoFactorAuthenticationOtp", actions: ["assignTwoFactorAuthenticationOtpValue"] },
                    SWITCH_TWO_FACTOR_AUTHENTICATION_TYPE: {
                      target: "WaitingForBackupCode",
                      actions: ["assignTwoFactorAuthenticationOtpType", "clearError"]
                    }
                  }
                },
                WaitingForBackupCode: {
                  on: {
                    INPUT_BACKUP_CODE: {
                      target: "ValidatingTwoFactorAuthenticationOtp",
                      actions: ["assignTwoFactorAuthenticationOtpValue"]
                    },
                    SWITCH_TWO_FACTOR_AUTHENTICATION_TYPE: {
                      target: "WaitingForTotp",
                      actions: ["assignTwoFactorAuthenticationOtpType", "clearError"]
                    }
                  }
                },
                ValidatingTwoFactorAuthenticationOtp: {
                  invoke: {
                    src: "authenticateWithTwoFactorAuthentication",
                    onDone: { target: "TwoFactorAuthenticationDone" },
                    onError: [
                      { target: "WaitingForBackupCode", cond: "isBackupCode", actions: ["assignError"] },
                      { target: "WaitingForTotp", actions: ["assignError"] }
                    ]
                  }
                },
                TwoFactorAuthenticationDone: { type: "final" }
              }
            },
            options: {
              actions: {
                assignError: (0, m.f0)({ error: (e, t) => t.data }),
                clearError: (0, m.f0)({ error: () => {} }),
                assignTwoFactorAuthenticationOtpValue: (0, m.f0)({
                  twoFactorAuthenticationOtpValue: (e, t) => t.twoFactorAuthenticationOtpValue
                }),
                assignTwoFactorAuthenticationOtpType: (0, m.f0)({
                  twoFactorAuthenticationOtpType: (e, t) => t.twoFactorAuthenticationOtpType
                })
              },
              services: {
                authenticateWithTwoFactorAuthentication: (e) => {
                  const t = {
                    login: e.login ?? "",
                    masterPassword: e.masterPassword ?? null,
                    otp: e.twoFactorAuthenticationOtpValue,
                    twoFactorAuthenticationOtpType: e.twoFactorAuthenticationOtpType,
                    persistData: !0,
                    otpVerificationMode: e.otpVerificationMode,
                    deviceName: e.deviceName
                  };
                  return this.twoFactorAuthenticationService.executeWithParams(t);
                }
              },
              guards: { isBackupCode: (e) => "backupCode" === e.twoFactorAuthenticationOtpType }
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, v.C)(e, t);
        }
      };
      Q = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [z])], Q);
      let q = class {
        constructor(e, t) {
          (this.deviceRegistrationMachine = e), (this.twoFactorAuthenticationMachine = t);
        }
        desc() {
          return {
            config: {
              predictableActionArguments: !0,
              schema: { events: {}, context: {} },
              initial: "Starting",
              id: "IdentityVerificationFlowMachine",
              context: {
                ...this.deviceRegistrationMachine.desc().config.context,
                ...this.twoFactorAuthenticationMachine.desc().config.context,
                ready: !1,
                shouldAskOTP: !1
              },
              states: {
                Starting: { entry: ["assignInitializationResults"] },
                DeviceRegistration: { ...K(this.deviceRegistrationMachine.desc().config) },
                TwoFactorAuthentication: {
                  ...K(this.twoFactorAuthenticationMachine.desc().config),
                  onDone: { target: "AuthenticationDone" }
                },
                AuthenticationDone: { type: "final" }
              },
              on: {
                VERIFY_IDENTITY_WITH_TOKEN: { target: "DeviceRegistration.EmailToken", actions: ["assignAccountEmail"] },
                VERIFY_IDENTITY_WITH_DASHLANE_AUTHENTICATOR: {
                  target: "DeviceRegistration.DashlaneAuthenticator",
                  actions: ["assignAccountEmail"]
                },
                VERIFY_IDENTITY_WITH_TOTP: { target: "TwoFactorAuthentication", actions: ["assignAccountEmail"] },
                CANCEL_IDENTITY_VERIFICATION: { target: "Starting", actions: ["clearContext"] },
                CLEAR_ERROR: { actions: ["clearError"] }
              }
            },
            options: {
              actions: {
                ...this.deviceRegistrationMachine.desc().options.actions,
                ...this.twoFactorAuthenticationMachine.desc().options.actions,
                assignInitializationResults: (0, m.f0)({ ready: () => !0 }),
                assignAccountEmail: (0, m.f0)({ login: (e, t) => t.login }),
                clearContext: (0, m.f0)({
                  login: () => "",
                  shouldAskOTP: () => !1,
                  twoFactorAuthenticationOtpType: () => "totp",
                  registrationMethod: () => {},
                  emailToken: () => "",
                  deviceName: () => "",
                  isDashlaneAuthenticatorAvailable: () => !1
                }),
                clearError: (0, m.f0)({ error: () => {} })
              },
              services: {
                ...this.deviceRegistrationMachine.desc().options.services,
                ...this.twoFactorAuthenticationMachine.desc().options.services
              },
              guards: {
                ...this.deviceRegistrationMachine.desc().options.guards,
                ...this.twoFactorAuthenticationMachine.desc().options.guards,
                isGrapheneDeviceRegistrationFlow: (e) => !!e.login && e.login.includes("kw_test_newdevice")
              }
            }
          };
        }
        create() {
          const { config: e, options: t } = this.desc();
          return (0, v.C)(e, t);
        }
      };
      q = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [V, Q])], q);
      var Y = r(85390),
        $ = r(30523),
        X = r(6136),
        Z = r(20754),
        J = r(41025),
        ee = r(69885),
        te = r(6220);
      const re = (e) => ({
          step: "EmailTokenStep",
          isLoading: e.matches({ DeviceRegistration: { EmailToken: "ValidatingEmailToken" } }) && !e.context.error,
          error: e.context.error,
          emailToken: e.context.emailToken,
          isDashlaneAuthenticatorAvailable: e.context.isDashlaneAuthenticatorAvailable
        }),
        se = (e) => ({
          step: "DashlaneAuthenticatorStep",
          isLoading: e.matches({ DeviceRegistration: { DashlaneAuthenticator: "RequestingServerPush" } }) && !e.context.error,
          error: e.context.error
        }),
        oe = (e) => ({
          step: "TwoFactorAuthenticationOtpStep",
          isLoading: e.matches({ TwoFactorAuthentication: "ValidatingTwoFactorAuthenticationOtp" }) && !e.context.error,
          error: e.context.error,
          twoFactorAuthenticationOtpValue: e.context.twoFactorAuthenticationOtpValue,
          twoFactorAuthenticationOtpType: e.context.twoFactorAuthenticationOtpType
        });
      const ne = (e) =>
          (0, ee.of)(
            (0, g.Vp)(
              (function (e) {
                return e.matches("Starting")
                  ? { step: "StartingStep" }
                  : e.matches({ DeviceRegistration: { EmailToken: "SendEmailToken" } }) ||
                    e.matches({ DeviceRegistration: { EmailToken: "WaitingForEmailToken" } }) ||
                    e.matches({ DeviceRegistration: { EmailToken: "ValidatingEmailToken" } }) ||
                    e.matches({ DeviceRegistration: { EmailToken: "FinishingEmailToken" } })
                  ? re(e)
                  : e.matches({ DeviceRegistration: { DashlaneAuthenticator: "RequestingServerPush" } }) ||
                    e.matches({ DeviceRegistration: { DashlaneAuthenticator: "AuthenticatorPushFailed" } }) ||
                    e.matches({ DeviceRegistration: { DashlaneAuthenticator: "AuthenticatorPushValidated" } })
                  ? se(e)
                  : e.matches({ TwoFactorAuthentication: "WaitingForTotp" }) ||
                    e.matches({ TwoFactorAuthentication: "WaitingForBackupCode" }) ||
                    e.matches({ TwoFactorAuthentication: "ValidatingTwoFactorAuthenticationOtp" }) ||
                    e.matches({ TwoFactorAuthentication: "FinishingTwoFactorAuthenticationOtp" })
                  ? oe(e)
                  : void console.warn("[Auth Ticket] - No view associated to state ", JSON.stringify(e.value));
              })(e)
            )
          ),
        ie = (e) => e.pipe((0, te.z)(ne));
      var ae = r(8362),
        ce = r(87065);
      const le = (e) => !0;
      class de extends (0, B.Q)({
        initialValue: void 0,
        persist: !1,
        scope: j.F.Device,
        storeName: "identity-verification-flow-machine",
        storeTypeGuard: le
      }) {}
      var ue = r(30045);
      var pe = r(24966),
        he = r(78065),
        me = r(20916);
      let ve = class {
        constructor(e, t) {
          (this.identityVerificationMachineStore = t), (this.initFlag = new pe.X(!1));
          const r = e.create();
          (this.delayedEvents = []),
            (this.interpreter = he.kJ(r).onTransition(async (e) => {
              e.changed ||
                "xstate.init" === e.event.type ||
                console.warn(
                  `[Auth Ticket] State is unchanged. Unexpected transition on ${JSON.stringify(e.value)} with event ${e.event.type} `
                );
              try {
                const e = this.interpreter?.getSnapshot();
                e &&
                  (await (async (e, t) => {
                    await e.set(JSON.stringify(t));
                  })(this.identityVerificationMachineStore, e));
              } catch (e) {
                console.warn("[Auth Ticket] Unable to get snapshot", e);
              }
            }));
        }
        async prepare() {
          if (this.interpreter)
            try {
              const e = await (async (e) => {
                const t = await e.getState();
                return t ? ae.ZM.create(JSON.parse(t)) : void 0;
              })(this.identityVerificationMachineStore);
              let t;
              try {
                t = this.interpreter.start(e);
              } catch (e) {
                console.error("[Auth Ticket] Unable to reuse the stored state: ", e), (t = this.interpreter.start());
              }
              await (0, me.x)(t, (e) => e.context.ready),
                this.interpreter.send(this.delayedEvents),
                (this.delayedEvents = []),
                this.initFlag.next(!0);
            } catch (e) {
              console.error("[Auth Ticket] Unable to start machine", e);
            }
        }
        ready() {
          return this.initFlag;
        }
        continue(e) {
          if (!this.interpreter) throw new Error("Authentication flow not started");
          this.interpreter.getSnapshot().context.ready ? this.interpreter.send(e) : this.delayedEvents.push(e);
        }
        stop() {
          this.isStarted() && (this.interpreter = void 0);
        }
        isStarted() {
          return Boolean(this.interpreter);
        }
      };
      ve = (0, c.__decorate)([(0, h.GS)(), (0, c.__metadata)("design:paramtypes", [q, de])], ve);
      let ge = class {
        constructor(e, t) {
          (this.identityVerificationFlow = e), (this.identityVerificationMachineStore = t);
        }
        execute() {
          return (0, Y.a)(
            [
              ((e = this.identityVerificationMachineStore), e.state$.pipe((0, ce.U)((e) => (e ? ae.ZM.create(JSON.parse(e)) : void 0)))),
              this.identityVerificationFlow.ready()
            ],
            (e, t) => {
              if (e && t) return e;
            }
          ).pipe(
            (0, $.h)(Boolean),
            (0, X.x)((e, t) =>
              ((e, t) => {
                const r = t.matches(e.value),
                  s = (0, ue.Z)(e.context, t.context);
                return r && s;
              })(e, t)
            ),
            ie
          );
          var e;
        }
      };
      ge = (0, c.__decorate)([(0, Z.e)(J.O), (0, c.__metadata)("design:paramtypes", [ve, de])], ge);
      var ye = r(63663),
        fe = r(13744);
      let _e = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute(e) {
          const { twoFactorAuthenticationOtpType: t } = e.body;
          return (
            this.identityVerificationFlow.continue({ type: "SWITCH_TWO_FACTOR_AUTHENTICATION_TYPE", twoFactorAuthenticationOtpType: t }),
            Promise.resolve((0, g.Vp)(void 0))
          );
        }
      };
      _e = (0, c.__decorate)([(0, ye.W)(fe.eG), (0, c.__metadata)("design:paramtypes", [ve])], _e);
      let Se = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute() {
          return this.identityVerificationFlow.continue({ type: "CLEAR_ERROR" }), Promise.resolve((0, g.Vp)(void 0));
        }
      };
      Se = (0, c.__decorate)([(0, ye.W)(fe.$5), (0, c.__metadata)("design:paramtypes", [ve])], Se);
      let Ee = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute() {
          return this.identityVerificationFlow.continue({ type: "RESEND_EMAIL_TOKEN" }), Promise.resolve((0, g.Vp)(void 0));
        }
      };
      Ee = (0, c.__decorate)([(0, ye.W)(fe.Gc), (0, c.__metadata)("design:paramtypes", [ve])], Ee);
      let be = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute() {
          return this.identityVerificationFlow.continue({ type: "RESEND_PUSH_NOTIFICATION" }), Promise.resolve((0, g.Vp)(void 0));
        }
      };
      be = (0, c.__decorate)([(0, ye.W)(fe.rF), (0, c.__metadata)("design:paramtypes", [ve])], be);
      let we = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute(e) {
          const { twoFactorAuthenticationOtpValue: t } = e.body;
          return (
            this.identityVerificationFlow.continue({ type: "INPUT_BACKUP_CODE", twoFactorAuthenticationOtpValue: t }),
            Promise.resolve((0, g.Vp)(void 0))
          );
        }
      };
      we = (0, c.__decorate)([(0, ye.W)(fe.sH), (0, c.__metadata)("design:paramtypes", [ve])], we);
      let Ae = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute(e) {
          const { emailToken: t, deviceName: r } = e.body;
          return (
            this.identityVerificationFlow.continue({ type: "INPUT_EMAIL_TOKEN", emailToken: t, deviceName: r }),
            Promise.resolve((0, g.Vp)(void 0))
          );
        }
      };
      Ae = (0, c.__decorate)([(0, ye.W)(fe.XH), (0, c.__metadata)("design:paramtypes", [ve])], Ae);
      let Te = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute(e) {
          const { twoFactorAuthenticationOtpValue: t } = e.body;
          return (
            this.identityVerificationFlow.continue({ type: "INPUT_TOTP", twoFactorAuthenticationOtpValue: t }),
            Promise.resolve((0, g.Vp)(void 0))
          );
        }
      };
      Te = (0, c.__decorate)([(0, ye.W)(fe.ad), (0, c.__metadata)("design:paramtypes", [ve])], Te);
      let Ce = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute() {
          return this.identityVerificationFlow.continue({ type: "SWITCH_TO_DASHLANE_AUTHENTICATOR" }), Promise.resolve((0, g.Vp)(void 0));
        }
      };
      Ce = (0, c.__decorate)([(0, ye.W)(fe.K1), (0, c.__metadata)("design:paramtypes", [ve])], Ce);
      let Ie = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute() {
          return this.identityVerificationFlow.continue({ type: "SWITCH_TO_EMAIL_TOKEN" }), Promise.resolve((0, g.Vp)(void 0));
        }
      };
      Ie = (0, c.__decorate)([(0, ye.W)(fe.v5), (0, c.__metadata)("design:paramtypes", [ve])], Ie);
      let Oe = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute(e) {
          const { login: t, verificationMethod: r } = e.body;
          switch (r) {
            case "email_token":
              this.identityVerificationFlow.continue({ type: "VERIFY_IDENTITY_WITH_TOKEN", login: t });
              break;
            case "totp":
              this.identityVerificationFlow.continue({ type: "VERIFY_IDENTITY_WITH_TOTP", login: t });
              break;
            case "dashlane_authenticator":
              this.identityVerificationFlow.continue({ type: "VERIFY_IDENTITY_WITH_DASHLANE_AUTHENTICATOR", login: t });
          }
          return Promise.resolve((0, g.Vp)(void 0));
        }
      };
      Oe = (0, c.__decorate)([(0, ye.W)(fe.qw), (0, c.__metadata)("design:paramtypes", [ve])], Oe);
      let Pe = class {
        constructor(e) {
          this.identityVerificationFlow = e;
        }
        execute() {
          return this.identityVerificationFlow.continue({ type: "CANCEL_IDENTITY_VERIFICATION" }), Promise.resolve((0, g.Vp)(void 0));
        }
      };
      Pe = (0, c.__decorate)([(0, ye.W)(fe.Vs), (0, c.__metadata)("design:paramtypes", [ve])], Pe);
      let Re = class {};
      Re = (0, c.__decorate)(
        [
          (0, l.Y)({
            api: p.i,
            handlers: {
              commands: {
                changeTwoFactorAuthenticationOtpType: _e,
                clearError: Se,
                resendEmailToken: Ee,
                resendPushNotification: be,
                submitBackupCode: we,
                submitEmailToken: Ae,
                submitTotp: Te,
                switchToDashlaneAuthenticator: Ce,
                switchToEmailToken: Ie,
                startIdentityVerification: Oe,
                cancelIdentityVerification: Pe
              },
              events: {},
              queries: { identityVerificationFlowStatus: ge }
            },
            providers: [
              V,
              M,
              F,
              G,
              Q,
              ...(0, d.H)(ve, {
                inject: [q, de],
                asyncFactory: async (e, t) => {
                  const r = new ve(e, t);
                  return await r.prepare(), r;
                }
              }),
              q,
              k,
              z,
              N,
              D,
              L
            ],
            imports: [u.n],
            exports: [ve],
            stores: [de, H]
          })
        ],
        Re
      );
    },
    93202: (e, t, r) => {
      r.d(t, { Z: () => T });
      var s = r(88802),
        o = r(69401),
        n = r(99634),
        i = r(93850),
        a = r(59550);
      let c = class {};
      c = (0, s.__decorate)([(0, n.Y)({ sharedModuleName: "authentication", providers: [a.Q], exports: [a.Q] })], c);
      var l = r(11088),
        d = r(63663),
        u = r(63281),
        p = r(87279),
        h = r(89358),
        m = r(60399);
      let v = class {
        constructor(e, t, r) {
          (this.contextLessServerApiClient = e), (this.authWSRepository = t), (this.sessionClient = r);
        }
        async execute(e) {
          const t = await (0, m.z)(this.sessionClient.queries.selectedOpenedSession()),
            r = (0, p.d6)(t) ? (0, p.db)(t) : e.body.login;
          if (void 0 === r) throw new Error("Logged out and no login specified");
          const { id: s, type: o, rawId: n, response: i } = e.body.assertion;
          if ("public-key" !== o) throw new Error("Invalid parameter assertion.type");
          const a = await (0, m.z)(
            this.contextLessServerApiClient.v1.authentication.completeRememberMeOpenSession(
              await this.authWSRepository.getSessionCredentialsForUser(r),
              { authenticator: { authenticationType: "webauthn.get", credential: { type: o, id: s, rawId: n, response: i } } }
            )
          );
          if ((0, p.hx)(a)) throw new Error(`Assertion could not be validated: ${a.error.name}`);
          return (0, p.Vp)(void 0);
        }
      };
      v = (0, s.__decorate)([(0, d.W)(l.L), (0, s.__metadata)("design:paramtypes", [u.B, a.Q, h.x])], v);
      var g = r(20195);
      const y = {
        FetchFailedError: (f = () => (0, g.j)("Error calling server API")),
        InternalServerError: f,
        InvalidRequest: f,
        RateLimited: f,
        ServiceUnavailable: f,
        UnspecifiedBadStatus: f
      };
      var f,
        _ = r(87113),
        S = r(18533),
        E = r(25535),
        b = r(83853);
      function w(e) {
        return () => (0, p.Rn)({ tag: e });
      }
      let A = class {
        constructor(e) {
          this.server = e;
        }
        async execute({ body: { email: e } }) {
          const t = await (0, m.z)(this.server.v1.authentication.requestOtpRecoveryCodesByPhone({ login: e }));
          return (0, S.EQ)(t, {
            success: () => (0, p.Vp)(void 0),
            failure: (e) =>
              (0, S.EQ)(e.error, {
                ...y,
                FetchFailedError: w(b.A.NetworkError),
                BusinessError: (e) =>
                  (0, E.G)(e.code, {
                    INVALID_RECOVERY_PHONE: w(b.A.AccountNotEligible),
                    SMS_ERROR: () => (0, g.j)("Dashlane servers failed to send SMS"),
                    SMS_OPT_OUT: w(b.A.AccountNotEligible),
                    USER_NOT_FOUND: w(b.A.AccountNotEligible),
                    WRONG_OTP_STATUS: w(b.A.AccountNotEligible)
                  })
              })
          });
        }
      };
      A = (0, s.__decorate)([(0, d.W)(l.x), (0, s.__metadata)("design:paramtypes", [_.l])], A);
      let T = class {};
      T = (0, s.__decorate)(
        [
          (0, n.Y)({
            api: o.M,
            handlers: { commands: { validateWebauthnAssertion: v, request2FaCodesByPhone: A }, events: {}, queries: {} },
            imports: [i.n, c]
          })
        ],
        T
      );
    },
    17556: (e, t, r) => {
      r.d(t, { e: () => s });
      class s {
        redirectUserToExternalUrl(e) {
          !(async function () {
            try {
              await chrome.tabs.create({ url: e.externalUrl, active: e.tabFocus });
            } catch (t) {
              console.warn("[Auto-SSO] No window available. Delaying tab creation");
              const r = () => {
                chrome.tabs.create({ url: e.externalUrl, active: e.tabFocus }), chrome.windows.onCreated.removeListener(r);
              };
              chrome.windows.onCreated.addListener(r);
            }
          })();
        }
      }
    },
    15403: (e, t, r) => {
      r.d(t, { c: () => s });
      const s = (0, r(86952).Q)({ name: "autofillData", commands: {}, events: {}, queries: {} });
    },
    92018: (e, t, r) => {
      r.d(t, { Y: () => i });
      var s = r(86952),
        o = r(11564),
        n = r(73581);
      const i = (0, s.Q)({
        name: "autofillTracking",
        commands: { temporaryEmitPasswordAutofillPerformedEvent: n.q },
        events: { passwordAutofillPerformedEvent: o.p },
        queries: {}
      });
    },
    73581: (e, t, r) => {
      r.d(t, { q: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    11564: (e, t, r) => {
      r.d(t, { p: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.User }) {}
    },
    46154: (e, t, r) => {
      r.d(t, { Pw: () => i, q_: () => o, rF: () => a, up: () => s });
      const s = [
          "KWAddress",
          "KWBankStatement",
          "KWCompany",
          "KWDriverLicence",
          "KWEmail",
          "KWFiscalStatement",
          "KWIDCard",
          "KWIdentity",
          "KWMerchand",
          "KWPassport",
          "KWPaymentMean_creditCard",
          "KWPaymentMean_paypal",
          "KWPersonalWebsite",
          "KWPhone",
          "KWSecureNote",
          "KWSecureNoteCategory",
          "KWSocialSecurityStatement"
        ],
        o = ["KWAuthentifiant", "KWGeneratedPassword", "KWPasskey"],
        n = [...s, ...o],
        i = (e) => !!e && "string" == typeof e && n.includes(e),
        a = (e) => !!e && "object" == typeof e && Array.isArray(e) && e.every(i);
    },
    3124: (e, t, r) => {
      r.d(t, { P: () => s, w: () => o });
      const s = (e) =>
          e instanceof Array &&
          !e.find((e) => {
            return !("object" == typeof (t = e) && null !== t && "id" in t && "fieldIdentifier" in t && "domain" in t);
            var t;
          }),
        o = (e) => "none" === e.correctedDataSource;
    },
    52434: (e, t, r) => {
      var s;
      r.d(t, { M: () => s }),
        (function (e) {
          (e[(e.CannotDisable = 0)] = "CannotDisable"),
            (e[(e.DisableSpecificVaultItem = 1)] = "DisableSpecificVaultItem"),
            (e[(e.DisableGeneralSetting = 2)] = "DisableGeneralSetting");
        })(s || (s = {}));
    },
    78364: (e, t, r) => {
      var s;
      r.d(t, { k: () => s }),
        (function (e) {
          (e.Address = "Address"),
            (e.BankAccount = "BankAccount"),
            (e.Company = "Company"),
            (e.Credential = "Credential"),
            (e.CredentialCategory = "CredentialCategory"),
            (e.DriverLicense = "DriverLicense"),
            (e.Email = "Email"),
            (e.FiscalId = "FiscalId"),
            (e.GeneratedPassword = "GeneratedPassword"),
            (e.IdCard = "IdCard"),
            (e.Identity = "Identity"),
            (e.NoteCategory = "NoteCategory"),
            (e.Note = "Note"),
            (e.Passport = "Passport"),
            (e.Passkey = "Passkey"),
            (e.PaymentCard = "PaymentCard"),
            (e.PersonalWebsite = "PersonalWebsite"),
            (e.Phone = "Phone"),
            (e.SocialSecurityId = "SocialSecurityId");
        })(s || (s = {}));
    },
    92202: (e, t, r) => {
      r.r(t),
        r.d(t, {
          AddDisabledSourceTypesCommand: () => O.g,
          AnalysisStatus: () => T._,
          CREDENTIAL_DATA_MODELS: () => p.q_,
          CountriesForAutofill: () => a,
          DisableAnalysisCommand: () => P.u,
          DisableAutofillOnFormsCommand: () => D.t,
          DisableAutofillOnLoginsCommand: () => N.f,
          DisableAutologinCommand: () => R.T,
          DisableFollowUpNotificationCommand: () => U.y,
          DisablePhishingPreventionForUrlCommand: () => w.z,
          EnableAnalysisCommand: () => L.c,
          EnableAutofillOnFormsCommand: () => M.a,
          EnableAutofillOnLoginsCommand: () => x.I,
          EnableAutologinCommand: () => F.i,
          EnableFollowUpNotificationCommand: () => k.B,
          FORM_DATA_MODELS: () => p.up,
          GetAnalysisStatusOnUrlQuery: () => T.h,
          GetAutofillDisabledOnLoginsAndFormsNotificationStatusQuery: () => y.z,
          GetAutofillProtectionContextQuery: () => _.u,
          GetAutofillSettingsQuery: () => C.T,
          GetDashlaneDefinedLinkedWebsitesQuery: () => B.J,
          GetUserAutofillCorrectionsQuery: () => I.w,
          OtherSourceType: () => c,
          PasswordAutofillPerformedEvent: () => n.p,
          PhishingPreventionDisabledForUrlQuery: () => E.v,
          PhishingPreventionEnabledQuery: () => S.i,
          RemoveDisabledSourceTypesCommand: () => G.v,
          ResetProtectedItemAutofillTimerCommand: () => b.y,
          SetAutofillDisabledOnLoginsAndFormsNotificationStatusCommand: () => g.a,
          SetUserAutofillCorrectionsCommand: () => V.S,
          TemporaryEmitPasswordAutofillPerformedEventCommand: () => i.q,
          ToggleDashlaneCommand: () => K.r,
          UpdateLinkedWebsitesCommand: () => W.A,
          VaultItemDisableProtectionMode: () => m.M,
          VaultSourceType: () => l.k,
          autofillDataApi: () => s.c,
          autofillNotificationsApi: () => v._,
          autofillSecurityApi: () => f.V,
          autofillSettingsApi: () => A.I,
          autofillTrackingApi: () => o.Y,
          isArrayOfAutofillableDataModel: () => p.rF,
          isArrayOfUserAutofillCorrections: () => h.P,
          isAutofillableDataModel: () => p.Pw,
          isDashlaneDisabledPermanently: () => h.w,
          isOtherSourceType: () => d,
          isVaultSourceType: () => u,
          linkedWebsitesApi: () => j.G
        });
      var s = r(15403),
        o = r(92018),
        n = r(11564),
        i = r(73581);
      const a = Object.freeze({
        NO_TYPE: "NO_TYPE",
        UNIVERSAL: "UNIVERSAL",
        AD: "AD",
        AE: "AE",
        AF: "AF",
        AG: "AG",
        AI: "AI",
        AL: "AL",
        AM: "AM",
        AO: "AO",
        AR: "AR",
        AS: "AS",
        AT: "AT",
        AU: "AU",
        AW: "AW",
        AZ: "AZ",
        BA: "BA",
        BB: "BB",
        BD: "BD",
        BE: "BE",
        BF: "BF",
        BG: "BG",
        BH: "BH",
        BI: "BI",
        BJ: "BJ",
        BL: "BL",
        BM: "BM",
        BN: "BN",
        BO: "BO",
        BR: "BR",
        BS: "BS",
        BT: "BT",
        BW: "BW",
        BY: "BY",
        BZ: "BZ",
        CA: "CA",
        CD: "CD",
        CF: "CF",
        CG: "CG",
        CH: "CH",
        CI: "CI",
        CK: "CK",
        CL: "CL",
        CM: "CM",
        CN: "CN",
        CO: "CO",
        CR: "CR",
        CU: "CU",
        CV: "CV",
        CY: "CY",
        CZ: "CZ",
        DE: "DE",
        DJ: "DJ",
        DK: "DK",
        DM: "DM",
        DO: "DO",
        DZ: "DZ",
        EC: "EC",
        EE: "EE",
        EG: "EG",
        ER: "ER",
        ES: "ES",
        ET: "ET",
        FI: "FI",
        FJ: "FJ",
        FK: "FK",
        FM: "FM",
        FO: "FO",
        FR: "FR",
        GA: "GA",
        GB: "GB",
        GD: "GD",
        GE: "GE",
        GF: "GF",
        GG: "GG",
        GH: "GH",
        GI: "GI",
        GL: "GL",
        GM: "GM",
        GN: "GN",
        GP: "GP",
        GQ: "GQ",
        GR: "GR",
        GT: "GT",
        GU: "GU",
        GW: "GW",
        GY: "GY",
        HK: "HK",
        HN: "HN",
        HR: "HR",
        HT: "HT",
        HU: "HU",
        ID: "ID",
        IE: "IE",
        IL: "IL",
        IM: "IM",
        IN: "IN",
        IO: "IO",
        IQ: "IQ",
        IR: "IR",
        IS: "IS",
        IT: "IT",
        JE: "JE",
        JM: "JM",
        JO: "JO",
        JP: "JP",
        KE: "KE",
        KG: "KG",
        KH: "KH",
        KI: "KI",
        KM: "KM",
        KN: "KN",
        KP: "KP",
        KR: "KR",
        KW: "KW",
        KY: "KY",
        KZ: "KZ",
        LA: "LA",
        LB: "LB",
        LC: "LC",
        LI: "LI",
        LK: "LK",
        LR: "LR",
        LS: "LS",
        LT: "LT",
        LU: "LU",
        LV: "LV",
        LY: "LY",
        MA: "MA",
        MC: "MC",
        MD: "MD",
        ME: "ME",
        MF: "MF",
        MG: "MG",
        MH: "MH",
        MK: "MK",
        ML: "ML",
        MM: "MM",
        MN: "MN",
        MO: "MO",
        MP: "MP",
        MQ: "MQ",
        MR: "MR",
        MS: "MS",
        MT: "MT",
        MU: "MU",
        MV: "MV",
        MW: "MW",
        MX: "MX",
        MY: "MY",
        MZ: "MZ",
        NA: "NA",
        NC: "NC",
        NE: "NE",
        NF: "NF",
        NG: "NG",
        NI: "NI",
        NL: "NL",
        NO: "NO",
        NP: "NP",
        NR: "NR",
        NU: "NU",
        NZ: "NZ",
        OM: "OM",
        PA: "PA",
        PE: "PE",
        PF: "PF",
        PG: "PG",
        PH: "PH",
        PK: "PK",
        PL: "PL",
        PM: "PM",
        PR: "PR",
        PS: "PS",
        PT: "PT",
        PW: "PW",
        PY: "PY",
        QA: "QA",
        RE: "RE",
        RO: "RO",
        RS: "RS",
        RU: "RU",
        RW: "RW",
        SA: "SA",
        SB: "SB",
        SC: "SC",
        SD: "SD",
        SE: "SE",
        SG: "SG",
        SH: "SH",
        SI: "SI",
        SK: "SK",
        SL: "SL",
        SM: "SM",
        SN: "SN",
        SO: "SO",
        SR: "SR",
        ST: "ST",
        SV: "SV",
        SY: "SY",
        SZ: "SZ",
        TC: "TC",
        TD: "TD",
        TF: "TF",
        TG: "TG",
        TH: "TH",
        TJ: "TJ",
        TK: "TK",
        TL: "TL",
        TM: "TM",
        TN: "TN",
        TO: "TO",
        TR: "TR",
        TT: "TT",
        TV: "TV",
        TW: "TW",
        TZ: "TZ",
        UA: "UA",
        UG: "UG",
        US: "US",
        UY: "UY",
        UZ: "UZ",
        VA: "VA",
        VC: "VC",
        VE: "VE",
        VG: "VG",
        VI: "VI",
        VN: "VN",
        VU: "VU",
        WF: "WF",
        WS: "WS",
        XK: "XK",
        YE: "YE",
        YT: "YT",
        ZA: "ZA",
        ZM: "ZM",
        ZW: "ZW",
        AQ: "AQ",
        AX: "AX",
        BV: "BV",
        CC: "CC",
        CX: "CX",
        EH: "EH",
        GS: "GS",
        HM: "HM",
        PN: "PN",
        SJ: "SJ",
        UM: "UM"
      });
      var c,
        l = r(78364);
      !(function (e) {
        (e.NewPassword = "newPassword"), (e.SubmitButton = "submitButton"), (e.WebauthnConditionalUI = "WebauthnConditionalUI");
      })(c || (c = {}));
      const d = (e) => Object.values(c).includes(e),
        u = (e) => e in l.k;
      var p = r(46154),
        h = r(3124),
        m = r(52434),
        v = r(45714),
        g = r(61933),
        y = r(63208),
        f = r(38554),
        _ = r(51730),
        S = r(5282),
        E = r(63212),
        b = r(93555),
        w = r(94370),
        A = r(69029),
        T = r(68573),
        C = r(63267),
        I = r(3414),
        O = r(99682),
        P = r(3909),
        R = r(34962),
        D = r(65791),
        N = r(56e3),
        U = r(11232),
        L = r(54405),
        F = r(4924),
        M = r(38018),
        x = r(69643),
        k = r(82796),
        G = r(46918),
        K = r(50163),
        V = r(29641),
        j = r(46097),
        B = r(66608),
        W = r(9446);
    },
    46097: (e, t, r) => {
      r.d(t, { G: () => i });
      var s = r(86952),
        o = r(66608),
        n = r(9446);
      const i = (0, s.Q)({
        name: "linkedWebsites",
        commands: { updateLinkedWebsites: n.A },
        events: {},
        queries: { getDashlaneDefinedLinkedWebsites: o.J }
      });
    },
    9446: (e, t, r) => {
      r.d(t, { A: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    66608: (e, t, r) => {
      r.d(t, { J: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    45714: (e, t, r) => {
      r.d(t, { _: () => i });
      var s = r(86952),
        o = r(61933),
        n = r(63208);
      const i = (0, s.Q)({
        name: "autofillNotifications",
        commands: { setAutofillDisabledOnLoginsAndFormsNotificationStatus: o.a },
        events: {},
        queries: { getAutofillDisabledOnLoginsAndFormsNotificationStatus: n.z }
      });
    },
    61933: (e, t, r) => {
      r.d(t, { a: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    63208: (e, t, r) => {
      r.d(t, { z: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    38554: (e, t, r) => {
      r.d(t, { V: () => l });
      var s = r(86952),
        o = r(51730),
        n = r(5282),
        i = r(63212),
        a = r(94370),
        c = r(93555);
      const l = (0, s.Q)({
        name: "autofillSecurity",
        commands: { disablePhishingPreventionForUrl: a.z, resetProtectedItemAutofillTimer: c.y },
        events: {},
        queries: { getAutofillProtectionContext: o.u, isPhishingPreventionCapabilityEnabled: n.i, isPhishingPreventionDisabledForUrl: i.v }
      });
    },
    94370: (e, t, r) => {
      r.d(t, { z: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    93555: (e, t, r) => {
      r.d(t, { y: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    51730: (e, t, r) => {
      r.d(t, { u: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    5282: (e, t, r) => {
      r.d(t, { i: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    63212: (e, t, r) => {
      r.d(t, { v: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    69029: (e, t, r) => {
      r.d(t, { I: () => E });
      var s = r(86952),
        o = r(46918),
        n = r(99682),
        i = r(50163),
        a = r(68573),
        c = r(63267),
        l = r(3414),
        d = r(54405),
        u = r(4924),
        p = r(38018),
        h = r(69643),
        m = r(82796),
        v = r(3909),
        g = r(34962),
        y = r(65791),
        f = r(56e3),
        _ = r(11232),
        S = r(29641);
      const E = (0, s.Q)({
        name: "autofillSettings",
        commands: {
          toggleDashlane: i.r,
          enableAnalysis: d.c,
          enableAutologin: u.i,
          enableAutofillOnForms: p.a,
          enableAutofillOnLogins: h.I,
          enableFollowUpNotification: m.B,
          disableAnalysis: v.u,
          disableAutologin: g.T,
          disableAutofillOnForms: y.t,
          disableAutofillOnLogins: f.f,
          disableFollowUpNotification: _.y,
          addDisabledSourceTypes: n.g,
          removeDisabledSourceTypes: o.v,
          setUserAutofillCorrections: S.S
        },
        events: {},
        queries: { getAnalysisStatusOnUrl: a.h, getAutofillSettings: c.T, getUserAutofillCorrections: l.w }
      });
    },
    99682: (e, t, r) => {
      r.d(t, { g: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    3909: (e, t, r) => {
      r.d(t, { u: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    65791: (e, t, r) => {
      r.d(t, { t: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    56e3: (e, t, r) => {
      r.d(t, { f: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    34962: (e, t, r) => {
      r.d(t, { T: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    11232: (e, t, r) => {
      r.d(t, { y: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    54405: (e, t, r) => {
      r.d(t, { c: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    38018: (e, t, r) => {
      r.d(t, { a: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    69643: (e, t, r) => {
      r.d(t, { I: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    4924: (e, t, r) => {
      r.d(t, { i: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    82796: (e, t, r) => {
      r.d(t, { B: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    46918: (e, t, r) => {
      r.d(t, { v: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    29641: (e, t, r) => {
      r.d(t, { S: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    50163: (e, t, r) => {
      r.d(t, { r: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    68573: (e, t, r) => {
      r.d(t, { _: () => s, h: () => i });
      var s,
        o = r(99059),
        n = r(25029);
      !(function (e) {
        (e.ANALYSIS_ENABLED = "ANALYSIS_ENABLED"),
          (e.ANALYSIS_DISABLED_BY_USER = "ANALYSIS_DISABLED_BY_USER"),
          (e.ANALYSIS_DISABLED_BY_B2B_ADMIN = "ANALYSIS_DISABLED_BY_B2B_ADMIN"),
          (e.ANALYSIS_DISABLED_BY_KILLSWITCH = "ANALYSIS_DISABLED_BY_KILLSWITCH"),
          (e.ANALYSIS_DISABLED_BY_2FA_ENFORCEMENT = "ANALYSIS_DISABLED_BY_2FA_ENFORCEMENT");
      })(s || (s = {}));
      class i extends (0, o.k)({ scope: n.F.Device }) {}
    },
    63267: (e, t, r) => {
      r.d(t, { T: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    3414: (e, t, r) => {
      r.d(t, { w: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    29125: (e, t, r) => {
      r.d(t, { U: () => i });
      var s = r(88802),
        o = r(99634),
        n = r(15403);
      let i = class {};
      i = (0, s.__decorate)([(0, o.Y)({ api: n.c, handlers: { commands: {}, events: {}, queries: {} }, providers: [] })], i);
    },
    59123: (e, t, r) => {
      r.d(t, { V: () => h });
      var s = r(88802),
        o = r(99634),
        n = r(92018),
        i = r(81459),
        a = r(57924);
      let c = class extends i.f {};
      c = (0, s.__decorate)([(0, a.GS)()], c);
      var l = r(63663),
        d = r(87279),
        u = r(73581);
      let p = class {
        constructor(e) {
          this.autofillTrackingEventsEmitter = e;
        }
        execute({ body: e }) {
          const { credentialId: t } = e;
          return (
            t && this.autofillTrackingEventsEmitter.sendEvent("passwordAutofillPerformed", { credentialId: t }),
            Promise.resolve((0, d.Vp)(void 0))
          );
        }
      };
      p = (0, s.__decorate)([(0, l.W)(u.q), (0, s.__metadata)("design:paramtypes", [c])], p);
      let h = class {};
      h = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.Y,
            handlers: { commands: { temporaryEmitPasswordAutofillPerformedEvent: p }, events: {}, queries: {} },
            providers: [c]
          })
        ],
        h
      );
    },
    33084: (e, t, r) => {
      var s;
      r.d(t, { G: () => s }),
        (function (e) {
          (e.AutofillWebOneClickFormFill = "autofill_web_oneClickFormFill"),
            (e.AutofillWebAskBeforeAutologin = "autofill_web_askBeforeAutologin"),
            (e.AutofillWebNewSubdomainManagement = "autofill_web_newSubdomainManagement"),
            (e.AutofillWebInjectScriptOnStartDev = "autofill_web_injectScriptOnStart_dev"),
            (e.ReplaceInputListeners = "autofill_web_replaceInputListeners"),
            (e.ReplaceInputListenersDev = "autofill_web_replaceInputListeners_dev"),
            (e.PasskeySupport = "autofill_web_passkey_support"),
            (e.PhishingPreventionOnPasteDev = "autofill_web_phishing_prevention_on_paste_dev"),
            (e.PhishingPreventionOnPaste = "autofill_web_phishing_prevention_on_paste_2"),
            (e.ImproveImpalaVisibility = "autofill_web_improveImpalaVisibility"),
            (e.ImproveImpalaVisibilityDev = "autofill_web_improveImpalaVisibility_dev"),
            (e.DisableAutologin = "autofill_web_disableAutologin"),
            (e.AdminTabDev = "ace_admin_tab_dev"),
            (e.AdminTab = "ace_admin_tab"),
            (e.BiometricPasskeyDev = "ace_web_biometric_passkey_dev"),
            (e.BiometricPasskey = "ace_web_biometric_passkey"),
            (e.DisableEmailPasswordWarningDev = "ace_disable_email_password_warning_dev"),
            (e.DisableEmailPasswordWarning = "ace_disable_email_password_warning"),
            (e.RestrictPasswordFreePlanPhase1 = "b2c_web_restrict_password_free_plan_phase1"),
            (e.RestrictPasswordFreePlanPhase2 = "b2c_web_restrict_password_free_plan_phase2"),
            (e.DisableNewWebcardTamperingProtection = "ace_webcard_new_tampering_protection_disable"),
            (e.AdminInterview = "ace_admin_tab_interview"),
            (e.AdminInterviewDev = "ace_admin_tab_interview_dev");
        })(s || (s = {}));
    },
    67739: (e, t, r) => {
      r.d(t, { J: () => I });
      var s,
        o = r(88802),
        n = r(99634),
        i = r(46097),
        a = r(60399),
        c = r(87065),
        l = r(69885);
      !(function (e) {
        (e.Manual = "manual"), (e.Remember = "remember");
      })(s || (s = {}));
      var d = r(86252),
        u = r(64718),
        p = r(57924),
        h = r(87279),
        m = r(68925),
        v = r(32089),
        g = r(3991);
      const y = (e) => Object.keys(e).map((t) => [t].concat(e[t])),
        f = (e) => [...e].sort();
      var _ = r(53998);
      let S = class {
        constructor(e) {
          (this.carbonLegacyClient = e),
            (this.updateLinkedWebsites = async (e, t) => {
              const r = await this.getCredentialById(t),
                s = this.getUserAddedLinkedWebsiteDomains(r),
                o = [...new Set(e)].filter(Boolean);
              var n, i;
              if (((i = o), (n = s).length === i.length && f(n).join("") === f(i).join(""))) return;
              const a = 0 === o.length ? [] : this.mergeLinkedWebsites(r, s, o),
                c = { ...r.LinkedServices, associated_domains: a },
                l = await this.carbonLegacyClient.commands.carbon({
                  name: "updateCredential",
                  args: [{ id: t, update: { linkedServices: c } }]
                });
              if ((0, h.hx)(l)) throw new Error("Error when updating linked websites using updateCredential query from Carbon");
            }),
            (this.populateDashlaneDefinedLinkedWebsitesIndex = (e) => {
              const t = {};
              return (
                e.forEach((e) => {
                  e.forEach((r) => {
                    t[r] = e;
                  });
                }),
                t
              );
            }),
            (this.mergeLinkedDomainsIntoList = (e, t) => {
              const r = [],
                s = [];
              e.forEach((e) => {
                return (o = t), e.some((e) => o.includes(e)) ? r.push(e) : s.push(e);
                var o;
              });
              const o = r.concat([t]).flat();
              return s.concat([o]);
            }),
            (this.reduceLinkedDomainsLists = (e, t, r) => e.concat(t, r).reduce(this.mergeLinkedDomainsIntoList, [])),
            (this._getDashlaneDefinedLinkedWebsites = (e) => {
              const t = new u.Y(e).getRootDomain();
              return t ? this.allDashlaneDefinedLinkedWebsitesIndex[t] || [t] : [];
            }),
            (this.getCredentialById = (e) => {
              const { carbonState: t } = this.carbonLegacyClient.queries;
              return (0, a.z)(
                t({ path: "userSession.personalData.credentials" }).pipe(
                  (0, c.U)((t) => {
                    if (!(0, h.d6)(t) || !(0, _.A)(t.data)) throw new Error("Bad credential format");
                    const r = t.data.find((t) => t.Id === e);
                    if (r) return r;
                    throw new Error("Cannot find credential");
                  })
                )
              );
            }),
            (this.getUserAddedLinkedWebsiteDomains = (e) =>
              e.LinkedServices?.associated_domains?.flatMap(({ domain: e }) => (Boolean(e) ? e : [])) ?? []),
            (this.getNewLinkedWebsitesToAdd$ = (e, t) => t.filter((t) => !e.includes(t)).map((e) => ({ domain: e, source: s.Manual }))),
            (this.mergeLinkedWebsites = (e, t, r) => [
              ...(e.LinkedServices?.associated_domains ?? []).filter((e) => r.includes(e.domain)),
              ...this.getNewLinkedWebsitesToAdd$(t, r)
            ]),
            (this.allDashlaneDefinedLinkedWebsitesIndex = this.populateDashlaneDefinedLinkedWebsitesIndex(
              this.reduceLinkedDomainsLists(m, y(g), y(v)).map((e) => [...new Set(e)])
            ));
        }
        getDashlaneDefinedLinkedWebsites$(e) {
          return (0, l.of)(this._getDashlaneDefinedLinkedWebsites(e)).pipe((0, c.U)(h.Vp));
        }
      };
      S = (0, o.__decorate)([(0, p.GS)(), (0, o.__metadata)("design:paramtypes", [d._])], S);
      var E = r(20754),
        b = r(66608);
      let w = class {
        constructor(e) {
          this.linkedWebsites = e;
        }
        execute({ body: { url: e = "" } }) {
          return this.linkedWebsites.getDashlaneDefinedLinkedWebsites$(e);
        }
      };
      w = (0, o.__decorate)([(0, E.e)(b.J), (0, o.__metadata)("design:paramtypes", [S])], w);
      var A = r(63663),
        T = r(9446);
      let C = class {
        constructor(e) {
          this.linkedWebsites = e;
        }
        async execute({ body: { credentialId: e, updatedLinkedWebsitesList: t } }) {
          try {
            return await this.linkedWebsites.updateLinkedWebsites(t, e), (0, h.Vp)(void 0);
          } catch (e) {
            return (0, h.Rn)({ tag: "", error: e instanceof Error ? e : new Error("Update linked websites command failed") });
          }
        }
      };
      C = (0, o.__decorate)([(0, A.W)(T.A), (0, o.__metadata)("design:paramtypes", [S])], C);
      let I = class {};
      I = (0, o.__decorate)(
        [
          (0, n.Y)({
            api: i.G,
            handlers: { commands: { updateLinkedWebsites: C }, events: {}, queries: { getDashlaneDefinedLinkedWebsites: w } },
            providers: [S]
          })
        ],
        I
      );
    },
    80034: (e, t, r) => {
      r.d(t, { r: () => w });
      var s = r(88802),
        o = r(99634),
        n = r(45714),
        i = r(33084),
        a = r(95681),
        c = r(23347),
        l = r(25029),
        d = r(10722);
      const u = (e) => void 0 !== e && "boolean" == typeof e;
      class p extends (0, a.Q)({
        persist: !0,
        storage: { initialValue: !1, typeGuard: u, schemaVersion: 1 },
        scope: l.F.User,
        storeName: "autofill-disabled-notification",
        capacity: c.Y._001KB,
        codec: d.E
      }) {}
      var h = r(57924);
      let m = class {
        constructor(e) {
          this.store = e;
        }
        get autofillDisabledOnLoginsAndFormsNotificationStatus() {
          return {
            get$: this._getAutofillDisabledOnLoginsAndFormsNotificationStatus$,
            set: this._setAutofillDisabledOnLoginsAndFormsNotificationStatus.bind(this)
          };
        }
        get _getAutofillDisabledOnLoginsAndFormsNotificationStatus$() {
          return this.store.state$;
        }
        async _setAutofillDisabledOnLoginsAndFormsNotificationStatus(e) {
          try {
            await this.store.set(e);
          } catch {
            throw new Error("SetAutofillDisabledOnLoginsAndFormsNotificationStatus command from autofill-core failed");
          }
        }
      };
      m = (0, s.__decorate)([(0, h.GS)(), (0, s.__metadata)("design:paramtypes", [p])], m);
      var v = r(63663),
        g = r(87279),
        y = r(61933);
      let f = class {
        constructor(e) {
          this.autofillDisabledNotificationRepository = e;
        }
        async execute({ body: e }) {
          const { status: t } = e;
          return (
            await this.autofillDisabledNotificationRepository.autofillDisabledOnLoginsAndFormsNotificationStatus.set(t), (0, g.Vp)(void 0)
          );
        }
      };
      f = (0, s.__decorate)([(0, v.W)(y.a), (0, s.__metadata)("design:paramtypes", [m])], f);
      var _ = r(87065),
        S = r(20754),
        E = r(63208);
      let b = class {
        constructor(e) {
          this.repository = e;
        }
        execute() {
          return this.repository.autofillDisabledOnLoginsAndFormsNotificationStatus.get$.pipe((0, _.U)(g.Vp));
        }
      };
      b = (0, s.__decorate)([(0, S.e)(E.z), (0, s.__metadata)("design:paramtypes", [m])], b);
      let w = class {};
      w = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n._,
            handlers: {
              commands: { setAutofillDisabledOnLoginsAndFormsNotificationStatus: f },
              events: {},
              queries: { getAutofillDisabledOnLoginsAndFormsNotificationStatus: b }
            },
            stores: [p],
            providers: [m],
            requiredFeatureFlips: Object.values(i.G)
          })
        ],
        w
      );
    },
    61845: (e, t, r) => {
      r.d(t, { k: () => x });
      var s = r(88802),
        o = r(99634),
        n = r(38554),
        i = r(63663),
        a = r(93555),
        c = r(87279),
        l = r(86252);
      let d = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async execute() {
          const { carbon: e } = this.carbonLegacyClient.commands,
            t = await e({ name: "resetProtectedItemAutofillTimer", args: [] });
          return (0, c.hx)(t)
            ? (0, c.Rn)({ tag: "ResetProtectedItemAutofillTimer command from autofill/security failed" })
            : (0, c.Vp)(void 0);
        }
      };
      d = (0, s.__decorate)([(0, i.W)(a.y), (0, s.__metadata)("design:paramtypes", [l._])], d);
      var u = r(87065),
        p = r(85390),
        h = r(69885),
        m = r(60399),
        v = r(57924),
        g = r(78364),
        y = r(52434),
        f = r(95681),
        _ = r(23347),
        S = r(25029),
        E = r(10722),
        b = r(64718);
      const w = (e) =>
        !!e &&
        "object" == typeof e &&
        Object.values(e).every((e) => Array.isArray(e)) &&
        Object.keys(e).every((e) => new b.Y(e).isUrlValid());
      class A extends (0, f.Q)({
        persist: !0,
        storage: { initialValue: {}, typeGuard: w, schemaVersion: 1 },
        scope: S.F.User,
        storeName: "phishing-prevention-optouts",
        capacity: _.Y._010KB,
        codec: E.E
      }) {}
      var T = r(53998);
      let C = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e),
            (this.store = t),
            (this._isPhishingPreventionEnabled = () => {
              const { carbonState: e } = this.carbonLegacyClient.queries;
              return e({ path: "userSession.localSettings.nodePremiumStatus" }).pipe(
                (0, u.U)((e) => {
                  if (!(0, c.d6)(e)) throw new Error("Cannot retrieve premium status");
                  const t = e.data;
                  return t.capabilities?.autofillWithPhishingPrevention.enabled ?? !1;
                })
              );
            }),
            (this.isUserSSO = () => {
              const { carbonState: e } = this.carbonLegacyClient.queries;
              return e({ path: "userSession.localSettings.premiumStatus" }).pipe(
                (0, u.U)((e) => {
                  if (!(0, c.d6)(e)) throw new Error("Cannot retrieve premium status");
                  return e.spaces;
                }),
                (0, u.U)((e) => e?.[0].isSSOUser ?? !1)
              );
            }),
            (this.areProtectedItemsUnlocked = () => {
              const { carbonState: e } = this.carbonLegacyClient.queries;
              return (0, p.a)([e({ path: "userSession.session.lastMasterPasswordCheck" }), e({ path: "userSession.account.login" })]).pipe(
                (0, u.U)(([e, t]) => {
                  if (!(0, c.d6)(e) || "number" != typeof e.data) throw new Error("Cannot retrieve last master password check");
                  if (!(0, c.d6)(t) || "string" != typeof t.data) throw new Error("No active login");
                  const r = e.data,
                    s = t.data;
                  return Date.now() - r < (/^kw_test_auto_fmpc_.*/.test(s) ? 5e3 : 3e5);
                })
              );
            }),
            (this.isItemUnlocked = () => (0, p.a)([this.areProtectedItemsUnlocked(), this.isUserSSO()]).pipe((0, u.U)(([e, t]) => e || t))),
            (this.isGlobalCredentialProtectionSettingOn = () => {
              const { carbonState: e } = this.carbonLegacyClient.queries;
              return e({ path: "userSession.personalSettings.ProtectPasswords" }).pipe(
                (0, u.U)((e) => {
                  if (!(0, c.d6)(e) || "boolean" != typeof e.data) throw new Error("No global setting found");
                  return e.data;
                })
              );
            }),
            (this.getCredentialProtectionStatus = (e) => {
              const { carbonState: t } = this.carbonLegacyClient.queries;
              return t({ path: "userSession.personalData.credentials" }).pipe(
                (0, u.U)((t) => {
                  if (!(0, c.d6)(t) || !(0, T.A)(t.data)) throw new Error("Bad credential format");
                  const r = t.data;
                  return r.find((t) => t.Id === e)?.AutoProtected ?? !1;
                })
              );
            }),
            (this.getIsMPRequiredForCreditCardOrSocialSecurityId = () => {
              const { carbonState: e } = this.carbonLegacyClient.queries;
              return e({ path: "userSession.personalSettings.SecuredDataAutofillCreditcard" }).pipe(
                (0, u.U)((e) => !(0, c.d6)(e) || "boolean" != typeof e.data || e.data)
              );
            }),
            (this._isVaultItemProtected = (e, t) =>
              e === g.k.PaymentCard || e === g.k.SocialSecurityId
                ? (0, p.a)([this.isItemUnlocked(), this.getIsMPRequiredForCreditCardOrSocialSecurityId()]).pipe(
                    (0, u.U)(([e, t]) => ({ disableMode: y.M.CannotDisable, isProtected: t && !e }))
                  )
                : e === g.k.Credential
                ? (0, p.a)([
                    this.isItemUnlocked(),
                    this.isGlobalCredentialProtectionSettingOn(),
                    this.getCredentialProtectionStatus(t)
                  ]).pipe(
                    (0, u.U)(([e, t, r]) =>
                      t
                        ? { disableMode: y.M.DisableGeneralSetting, isProtected: !e }
                        : { disableMode: y.M.DisableSpecificVaultItem, isProtected: r && !e }
                    )
                  )
                : (0, h.of)({ disableMode: y.M.CannotDisable, isProtected: !1 }));
        }
        getIsVaultItemProtected$(e, t) {
          return this._isVaultItemProtected(e, t).pipe((0, u.U)(c.Vp));
        }
        getIsPhishingPreventionEnabled$() {
          return this._isPhishingPreventionEnabled().pipe((0, u.U)(c.Vp));
        }
        get phishingPreventionOptOuts() {
          return { get$: this._getPhishingPreventionOptOuts$, set$: this._setPhishingPreventionOptOut.bind(this) };
        }
        async disablePhishingPreventionForUrl(e, t) {
          const r = await (0, m.z)(this._getPhishingPreventionOptOuts$),
            s = { ...r, [e]: Array.from(new Set(r[e] ?? []).add(t)) };
          await this._setPhishingPreventionOptOut(s);
        }
        get _getPhishingPreventionOptOuts$() {
          return this.store.state$;
        }
        async _setPhishingPreventionOptOut(e) {
          try {
            await this.store.set(e);
          } catch {
            throw new Error("SetPhishingPreventionOptOut command from autofill-core has failed");
          }
        }
      };
      C = (0, s.__decorate)([(0, v.GS)(), (0, s.__metadata)("design:paramtypes", [l._, A])], C);
      var I = r(20754),
        O = r(51730);
      let P = class {
        constructor(e) {
          this.autofillSecurity = e;
        }
        execute({ body: e }) {
          const { vaultItemId: t, vaultType: r } = e;
          return this.autofillSecurity.getIsVaultItemProtected$(r, t);
        }
      };
      P = (0, s.__decorate)([(0, I.e)(O.u), (0, s.__metadata)("design:paramtypes", [C])], P);
      var R = r(5282);
      let D = class {
        constructor(e) {
          this.autofillSecurity = e;
        }
        execute() {
          return this.autofillSecurity.getIsPhishingPreventionEnabled$();
        }
      };
      D = (0, s.__decorate)([(0, I.e)(R.i), (0, s.__metadata)("design:paramtypes", [C])], D);
      var N = r(94370);
      let U = class {
        constructor(e) {
          this.autofillSecurityRepository = e;
        }
        async execute({ body: { credentialUrl: e, pasteDestinationUrl: t } }) {
          return await this.autofillSecurityRepository.disablePhishingPreventionForUrl(e, t), (0, c.Vp)(void 0);
        }
      };
      U = (0, s.__decorate)([(0, i.W)(N.z), (0, s.__metadata)("design:paramtypes", [C])], U);
      var L = r(63212);
      let F = class {
        constructor(e) {
          this.autofillSecurity = e;
        }
        execute({ body: { credentialUrl: e, pasteDestinationUrl: t } }) {
          return this.autofillSecurity.phishingPreventionOptOuts.get$.pipe(
            (0, u.U)((r) => e in r && (r[e] ?? []).includes(t)),
            (0, u.U)(c.Vp)
          );
        }
      };
      F = (0, s.__decorate)([(0, I.e)(L.v), (0, s.__metadata)("design:paramtypes", [C])], F);
      var M = r(33084);
      let x = class {};
      x = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.V,
            handlers: {
              commands: { resetProtectedItemAutofillTimer: d, disablePhishingPreventionForUrl: U },
              events: {},
              queries: { getAutofillProtectionContext: P, isPhishingPreventionCapabilityEnabled: D, isPhishingPreventionDisabledForUrl: F }
            },
            stores: [A],
            providers: [C],
            requiredFeatureFlips: Object.values(M.G)
          })
        ],
        x
      );
    },
    53998: (e, t, r) => {
      r.d(t, { A: () => s });
      const s = (e) => Array.isArray(e);
    },
    29748: (e, t, r) => {
      r.d(t, { P: () => me });
      var s = r(88802),
        o = r(99634),
        n = r(69029),
        i = r(33084),
        a = r(63663),
        c = r(50163),
        l = r(87279),
        d = r(86252);
      let u = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async execute({ body: e }) {
          const { isAutofillEnabled: t, url: r } = e,
            { carbon: s } = this.carbonLegacyClient.commands,
            o = await s({ name: "toggleDashlane", args: [{ where: "site", autofill: t, autologin: t, url: r }] });
          if ((0, l.hx)(o)) throw new Error("Toggle Dashlane command from core-autofill failed");
          return (0, l.Vp)(void 0);
        }
      };
      u = (0, s.__decorate)([(0, a.W)(c.r), (0, s.__metadata)("design:paramtypes", [d._])], u);
      var p = r(87065),
        h = r(85390),
        m = r(43978),
        v = r(20754),
        g = r(64718),
        y = r(68573),
        f = r(28489);
      var _, S, E;
      !(function (e) {
        e[(e.UNKNOWN_ERROR = 0)] = "UNKNOWN_ERROR";
      })(_ || (_ = {})),
        (function (e) {
          (e.EMAIL_TOKEN = "email_token"), (e.DEVICE_REGISTRATION = "totp_device_registration"), (e.LOGIN = "totp_login"), (e.SSO = "sso");
        })(S || (S = {})),
        (function (e) {
          (e[(e.UNKNOWN = 0)] = "UNKNOWN"), (e[(e.PENDING = 1)] = "PENDING"), (e[(e.ERROR = 2)] = "ERROR"), (e[(e.READY = 3)] = "READY");
        })(E || (E = {}));
      const b = (e) => {
          if (!(t = e) || "object" != typeof t || !(0, f.l$)(t, "status") || "number" != typeof t.status)
            throw new Error("twoFactorAuthentication is not of the expected type");
          var t;
          return e.status === E.READY && e.shouldEnforceTwoFactorAuthentication;
        },
        w = (e) => !!e && "object" == typeof e && Array.isArray(e) && e.every((e) => "string" == typeof e);
      var A = r(60399),
        T = r(97280),
        C = r(57924),
        I = r(46154);
      let O = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        get isAutofillDisabled() {
          return { get$: this._getIsAutofillDisabled$, set: this._setIsAutofillDisabled.bind(this) };
        }
        get isAutologinDisabled() {
          return { get$: this._getIsAutologinDisabled$, set: this._setIsAutologinDisabled.bind(this) };
        }
        get disabledDomains() {
          return {
            get$: this._getDisabledDomains$,
            set: this._setDisabledDomains.bind(this),
            add: this._addDisabledDomains.bind(this),
            remove: this._removeDisabledDomains.bind(this)
          };
        }
        get disabledSourceTypes() {
          return {
            get$: this._getDisabledSourceTypes$,
            set: this._setDisabledSourceTypes.bind(this),
            add: this._addDisabledSourceTypes.bind(this),
            remove: this._removeDisabledSourceTypes.bind(this)
          };
        }
        get isFollowUpNotificationEnabled() {
          return { get$: this._getIsFollowUpNotificationEnabled$, set: this._setIsFollowUpNotificationEnabled.bind(this) };
        }
        async _updateSettings(e) {
          const t = e.isAutofillDisabled ?? (await (0, A.z)(this._getIsAutofillDisabled$)),
            r = e.isAutologinDisabled ?? (await (0, A.z)(this._getIsAutologinDisabled$)),
            s = e.disabledDomains ?? (await (0, A.z)(this._getDisabledDomains$)),
            o = e.disabledSourceTypes ?? (await (0, A.z)(this._getDisabledSourceTypes$)),
            n = e.isFollowUpNotificationEnabled ?? (await (0, A.z)(this._getIsFollowUpNotificationEnabled$)),
            i = await this.carbonLegacyClient.commands.carbon({
              name: "updateAutofillSettings",
              args: [
                {
                  AutofillSettings: {
                    disabledDomains: s,
                    disabledSourceTypes: o,
                    isAutofillDisabled: t,
                    isAutologinDisabled: r,
                    isFollowUpNotificationEnabled: n
                  }
                }
              ]
            });
          if ((0, l.hx)(i)) throw new Error("Error when updating autofill settings using updateAutofillSettings query from Carbon");
        }
        get _getAutofillSettings$() {
          const { carbonState: e } = this.carbonLegacyClient.queries;
          return e({ path: "userSession.personalSettings.AutofillSettings" }).pipe(
            (0, p.U)((e) => {
              if (
                !(0, l.d6)(e) ||
                !((e) =>
                  !!e &&
                  "object" == typeof e &&
                  (0, f.l$)(e, "isAutofillDisabled") &&
                  "boolean" == typeof e.isAutofillDisabled &&
                  (0, f.l$)(e, "isAutologinDisabled") &&
                  "boolean" == typeof e.isAutologinDisabled &&
                  (0, f.l$)(e, "disabledSourceTypes") &&
                  (0, I.rF)(e.disabledSourceTypes) &&
                  (0, f.l$)(e, "disabledDomains") &&
                  Array.isArray(e.disabledDomains) &&
                  e.disabledDomains.every((e) => "string" == typeof e) &&
                  (0, f.l$)(e, "isFollowUpNotificationEnabled") &&
                  "boolean" == typeof e.isFollowUpNotificationEnabled)(e.data)
              )
                throw new Error("AutofillSettings is not of the expected type");
              return e.data;
            }),
            (0, T.d)(1)
          );
        }
        get _getIsAutofillDisabled$() {
          return this._getAutofillSettings$.pipe((0, p.U)(({ isAutofillDisabled: e }) => e));
        }
        _setIsAutofillDisabled(e) {
          return this._updateSettings({ isAutofillDisabled: e });
        }
        get _getIsAutologinDisabled$() {
          return this._getAutofillSettings$.pipe((0, p.U)(({ isAutologinDisabled: e }) => e));
        }
        _setIsAutologinDisabled(e) {
          return this._updateSettings({ isAutologinDisabled: e });
        }
        _setIsFollowUpNotificationEnabled(e) {
          return this._updateSettings({ isFollowUpNotificationEnabled: e });
        }
        get _getDisabledDomains$() {
          return this._getAutofillSettings$.pipe((0, p.U)(({ disabledDomains: e }) => e));
        }
        _setDisabledDomains(e) {
          return this._updateSettings({ disabledDomains: e });
        }
        async _addDisabledDomains(e) {
          const t = await (0, A.z)(this._getDisabledDomains$);
          return this._setDisabledDomains([...new Set([...t, ...e])]);
        }
        async _removeDisabledDomains(e) {
          const t = await (0, A.z)(this._getDisabledDomains$);
          return this._setDisabledDomains(t.filter((t) => !e.includes(t)));
        }
        get _getDisabledSourceTypes$() {
          return this._getAutofillSettings$.pipe((0, p.U)(({ disabledSourceTypes: e }) => e));
        }
        _setDisabledSourceTypes(e) {
          return this._updateSettings({ disabledSourceTypes: e });
        }
        async _addDisabledSourceTypes(e) {
          const t = await (0, A.z)(this._getDisabledSourceTypes$);
          return this._setDisabledSourceTypes([...new Set([...t, ...e])]);
        }
        async _removeDisabledSourceTypes(e) {
          const t = await (0, A.z)(this._getDisabledSourceTypes$);
          return this._setDisabledSourceTypes(t.filter((t) => !e.includes(t)));
        }
        get _getIsFollowUpNotificationEnabled$() {
          return this._getAutofillSettings$.pipe((0, p.U)(({ isFollowUpNotificationEnabled: e }) => e));
        }
      };
      O = (0, s.__decorate)([(0, C.GS)(), (0, s.__metadata)("design:paramtypes", [d._])], O);
      let P = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.settings = t);
        }
        execute({ body: { url: e } }) {
          const { carbonState: t } = this.carbonLegacyClient.queries,
            r = new g.Y(e),
            s = r.getRootDomain(),
            o = r.getHost(),
            n = t({ path: "device.killswitch.disableAutofill" }).pipe(
              (0, p.U)((e) => {
                if (!(0, l.d6)(e) || !((e) => "boolean" == typeof e)(e.data))
                  throw new Error("Error when fetching killswitch.disableAutofill");
                return e.data;
              })
            ),
            i = (0, h.a)({
              isAutofillDisabled: this.settings.isAutofillDisabled.get$,
              disabledDomains: this.settings.disabledDomains.get$
            }).pipe((0, m.w)(async ({ isAutofillDisabled: e, disabledDomains: t }) => e || t.includes(await s))),
            a = t({ path: "userSession.spaceData.spaces" }).pipe(
              (0, m.w)(async (e) => {
                if (
                  !(0, l.d6)(e) ||
                  !((e) =>
                    !!e &&
                    "object" == typeof e &&
                    Array.isArray(e) &&
                    e.every((e) => (0, f.l$)(e, "details") && (0, f.l$)(e.details, "info")))(e.data)
                )
                  throw new Error("Error when fetching spaceData.spaces");
                const t = e.data.reduce((e, t) => {
                    const r = t.details.info.autologinDomainDisabledArray;
                    return [...e, ...(w(r) ? r : [])];
                  }, []),
                  r = await o;
                return t.some((e) => {
                  const t = new g.Y(e).getHost();
                  return t === r || r.endsWith(`.${t}`);
                });
              })
            ),
            c = t({ path: "authentication.twoFactorAuthentication" }).pipe(
              (0, p.U)((e) => {
                if (!(0, l.d6)(e)) throw new Error("Error when fetching authentication.twoFactorAuthentication");
                return b(e.data);
              })
            );
          return (0, h.a)({
            isAutofillDisabledByB2BAdmin: a,
            isAutofillDisabledByKillswitch: n,
            isAutofillDisabledByUser: i,
            isAutofillDisabledBy2FAEnforcement: c
          }).pipe(
            (0, p.U)(
              ({
                isAutofillDisabledBy2FAEnforcement: e,
                isAutofillDisabledByB2BAdmin: t,
                isAutofillDisabledByKillswitch: r,
                isAutofillDisabledByUser: s
              }) => {
                let o = y._.ANALYSIS_ENABLED;
                return (
                  r
                    ? (o = y._.ANALYSIS_DISABLED_BY_KILLSWITCH)
                    : t
                    ? (o = y._.ANALYSIS_DISABLED_BY_B2B_ADMIN)
                    : s
                    ? (o = y._.ANALYSIS_DISABLED_BY_USER)
                    : e && (o = y._.ANALYSIS_DISABLED_BY_2FA_ENFORCEMENT),
                  (0, l.Vp)({ analysisStatus: o })
                );
              }
            )
          );
        }
      };
      P = (0, s.__decorate)([(0, v.e)(y.h), (0, s.__metadata)("design:paramtypes", [d._, O])], P);
      var R = r(63267);
      let D = class {
        constructor(e) {
          this.settings = e;
        }
        execute() {
          return (0, h.a)({
            disabledDomains: this.settings.disabledDomains.get$,
            disabledSourceTypes: this.settings.disabledSourceTypes.get$,
            isAutofillDisabled: this.settings.isAutofillDisabled.get$,
            isAutologinDisabled: this.settings.isAutologinDisabled.get$,
            isFollowUpNotificationEnabled: this.settings.isFollowUpNotificationEnabled.get$
          }).pipe((0, p.U)(l.Vp));
        }
      };
      D = (0, s.__decorate)([(0, v.e)(R.T), (0, s.__metadata)("design:paramtypes", [O])], D);
      var N = r(99682);
      let U = class {
        constructor(e) {
          this.settings = e;
        }
        async execute({ body: { sourceTypes: e } }) {
          return await this.settings.disabledSourceTypes.add(e), (0, l.Vp)(void 0);
        }
      };
      U = (0, s.__decorate)([(0, a.W)(N.g), (0, s.__metadata)("design:paramtypes", [O])], U);
      var L = r(46918);
      let F = class {
        constructor(e) {
          this.settings = e;
        }
        async execute({ body: { sourceTypes: e } }) {
          return await this.settings.disabledSourceTypes.remove(e), (0, l.Vp)(void 0);
        }
      };
      F = (0, s.__decorate)([(0, a.W)(L.v), (0, s.__metadata)("design:paramtypes", [O])], F);
      var M = r(54405);
      let x = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.isAutofillDisabled.set(!1), (0, l.Vp)(void 0);
        }
      };
      x = (0, s.__decorate)([(0, a.W)(M.c), (0, s.__metadata)("design:paramtypes", [O])], x);
      var k = r(3909);
      let G = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.isAutofillDisabled.set(!0), (0, l.Vp)(void 0);
        }
      };
      G = (0, s.__decorate)([(0, a.W)(k.u), (0, s.__metadata)("design:paramtypes", [O])], G);
      var K = r(4924);
      let V = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.isAutologinDisabled.set(!1), (0, l.Vp)(void 0);
        }
      };
      V = (0, s.__decorate)([(0, a.W)(K.i), (0, s.__metadata)("design:paramtypes", [O])], V);
      var j = r(34962);
      let B = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.isAutologinDisabled.set(!0), (0, l.Vp)(void 0);
        }
      };
      B = (0, s.__decorate)([(0, a.W)(j.T), (0, s.__metadata)("design:paramtypes", [O])], B);
      var W = r(38018);
      let H = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.disabledSourceTypes.remove([...I.up]), (0, l.Vp)(void 0);
        }
      };
      H = (0, s.__decorate)([(0, a.W)(W.a), (0, s.__metadata)("design:paramtypes", [O])], H);
      var z = r(69643);
      let Q = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.disabledSourceTypes.remove([...I.q_]), (0, l.Vp)(void 0);
        }
      };
      Q = (0, s.__decorate)([(0, a.W)(z.I), (0, s.__metadata)("design:paramtypes", [O])], Q);
      var q = r(82796);
      let Y = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.isFollowUpNotificationEnabled.set(!0), (0, l.Vp)(void 0);
        }
      };
      Y = (0, s.__decorate)([(0, a.W)(q.B), (0, s.__metadata)("design:paramtypes", [O])], Y);
      var $ = r(65791);
      let X = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.disabledSourceTypes.add([...I.up]), (0, l.Vp)(void 0);
        }
      };
      X = (0, s.__decorate)([(0, a.W)($.t), (0, s.__metadata)("design:paramtypes", [O])], X);
      var Z = r(56e3);
      let J = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.disabledSourceTypes.add([...I.q_]), (0, l.Vp)(void 0);
        }
      };
      J = (0, s.__decorate)([(0, a.W)(Z.f), (0, s.__metadata)("design:paramtypes", [O])], J);
      var ee = r(11232);
      let te = class {
        constructor(e) {
          this.settings = e;
        }
        async execute() {
          return await this.settings.isFollowUpNotificationEnabled.set(!1), (0, l.Vp)(void 0);
        }
      };
      te = (0, s.__decorate)([(0, a.W)(ee.y), (0, s.__metadata)("design:paramtypes", [O])], te);
      var re = r(29641),
        se = r(3124),
        oe = r(95681),
        ne = r(23347),
        ie = r(25029),
        ae = r(10722);
      const ce = (e) => !!e && (0, se.P)(e);
      class le extends (0, oe.Q)({
        persist: !0,
        storage: { initialValue: [], typeGuard: ce, schemaVersion: 1 },
        scope: ie.F.Device,
        storeName: "user-autofill-corrections",
        capacity: ne.Y._100KB,
        codec: ae.E
      }) {}
      let de = class {
        constructor(e) {
          this.store = e;
        }
        get userAutofillCorrections() {
          return { get$: this._getUserAutofillCorrections$, set: this._setUserAutofillCorrections.bind(this) };
        }
        get _getUserAutofillCorrections$() {
          return this.store.state$;
        }
        async _setUserAutofillCorrections(e) {
          try {
            await this.store.set(e);
          } catch {
            throw new Error("SetUserAutofillCorrections command from core-autofill failed");
          }
        }
      };
      de = (0, s.__decorate)([(0, C.GS)(), (0, s.__metadata)("design:paramtypes", [le])], de);
      let ue = class {
        constructor(e) {
          this.correctionsRepository = e;
        }
        async execute({ body: e }) {
          const { corrections: t } = e;
          return await this.correctionsRepository.userAutofillCorrections.set(t), (0, l.Vp)(void 0);
        }
      };
      ue = (0, s.__decorate)([(0, a.W)(re.S), (0, s.__metadata)("design:paramtypes", [de])], ue);
      var pe = r(3414);
      let he = class {
        constructor(e) {
          this.settings = e;
        }
        execute() {
          return this.settings.userAutofillCorrections.get$.pipe((0, p.U)(l.Vp));
        }
      };
      he = (0, s.__decorate)([(0, v.e)(pe.w), (0, s.__metadata)("design:paramtypes", [de])], he);
      let me = class {};
      me = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.I,
            handlers: {
              commands: {
                toggleDashlane: u,
                enableAnalysis: x,
                enableAutologin: V,
                enableAutofillOnForms: H,
                enableAutofillOnLogins: Q,
                enableFollowUpNotification: Y,
                disableAnalysis: G,
                disableAutologin: B,
                disableAutofillOnForms: X,
                disableAutofillOnLogins: J,
                disableFollowUpNotification: te,
                addDisabledSourceTypes: U,
                removeDisabledSourceTypes: F,
                setUserAutofillCorrections: ue
              },
              events: {},
              queries: { getAnalysisStatusOnUrl: P, getAutofillSettings: D, getUserAutofillCorrections: he }
            },
            stores: [le],
            providers: [O, de],
            requiredFeatureFlips: Object.values(i.G)
          })
        ],
        me
      );
    },
    92137: (e, t, r) => {
      r.r(t),
        r.d(t, {
          DismissMasterPasswordNotificationCommand: () => o.T,
          IsMasterPasswordLeakedQuery: () => c.B,
          IsMasterPasswordNotificationDismissedQuery: () => l.F,
          IsMasterPasswordWeakQuery: () => d.D,
          TemporaryCheckMasterPasswordCommand: () => n.T,
          TemporaryCheckMasterPasswordWeakCommand: () => a.B,
          TemporaryResetMasterPasswordLeakedCommand: () => i.j,
          masterPasswordSecurityApi: () => s.J
        });
      var s = r(75962),
        o = r(80673),
        n = r(88030),
        i = r(30600),
        a = r(5105),
        c = r(22730),
        l = r(23913),
        d = r(86695);
    },
    75962: (e, t, r) => {
      r.d(t, { J: () => u });
      var s = r(86952),
        o = r(80673),
        n = r(88030),
        i = r(30600),
        a = r(5105),
        c = r(22730),
        l = r(86695),
        d = r(23913);
      const u = (0, s.Q)({
        name: "masterPasswordSecurity",
        commands: {
          dismissMasterPasswordNotification: o.T,
          temporaryCheckMasterPassword: n.T,
          temporaryResetMasterPasswordLeaked: i.j,
          temporaryCheckMasterPasswordWeak: a.B
        },
        events: {},
        queries: { isMasterPasswordLeaked: c.B, isMasterPasswordWeak: l.D, isMasterPasswordNotificationDismissed: d.F }
      });
    },
    80673: (e, t, r) => {
      r.d(t, { T: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    5105: (e, t, r) => {
      r.d(t, { B: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    88030: (e, t, r) => {
      r.d(t, { T: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    30600: (e, t, r) => {
      r.d(t, { j: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    22730: (e, t, r) => {
      r.d(t, { B: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    23913: (e, t, r) => {
      r.d(t, { F: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    86695: (e, t, r) => {
      r.d(t, { D: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    97500: (e, t, r) => {
      r.d(t, { f: () => Ne });
      var s = r(99634),
        o = r(75962),
        n = r(37935),
        i = r(93850),
        a = r(70305),
        c = r(20754),
        l = r(22730),
        d = r(25029),
        u = r(95681),
        p = r(23347),
        h = r(10722),
        m = r(7165);
      const v = m.z.object({
          isMasterPasswordLeaked: m.z.boolean(),
          isMasterPasswordNotificationDismissed: m.z.boolean(),
          isMasterPasswordWeak: m.z.boolean(),
          lastCheckTimestamp: m.z.number()
        }),
        g = (e) => v.safeParse(e).success;
      class y extends (0, u.Q)({
        persist: !0,
        storage: {
          initialValue: {
            isMasterPasswordWeak: !1,
            isMasterPasswordLeaked: !1,
            isMasterPasswordNotificationDismissed: !1,
            lastCheckTimestamp: 0
          },
          typeGuard: g,
          schemaVersion: 1
        },
        scope: d.F.User,
        isCache: !0,
        storeName: "master-password-security",
        codec: h.E,
        capacity: p.Y._001KB
      }) {}
      var f = r(87279),
        _ = r(87065),
        S = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        E = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let b = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        execute() {
          return this.masterPasswordSecurityStore.state$.pipe((0, _.U)((e) => (0, f.Vp)(e.isMasterPasswordLeaked)));
        }
      };
      b = S([(0, c.e)(l.B), E("design:paramtypes", [y])], b);
      var w = r(86695),
        A = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        T = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let C = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        execute() {
          return this.masterPasswordSecurityStore.state$.pipe((0, _.U)((e) => (0, f.Vp)(e.isMasterPasswordWeak)));
        }
      };
      C = A([(0, c.e)(w.D), T("design:paramtypes", [y])], C);
      var I = r(23913),
        O = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        P = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let R = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        execute() {
          return this.masterPasswordSecurityStore.state$.pipe((0, _.U)((e) => (0, f.Vp)(e.isMasterPasswordNotificationDismissed)));
        }
      };
      R = O([(0, c.e)(I.F), P("design:paramtypes", [y])], R);
      var D = r(63663),
        N = r(80673),
        U = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        L = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let F = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        async execute() {
          const e = await this.masterPasswordSecurityStore.getState();
          return (
            await this.masterPasswordSecurityStore.set({ ...e, isMasterPasswordNotificationDismissed: !0 }),
            Promise.resolve((0, f.Vp)(void 0))
          );
        }
      };
      F = U([(0, D.W)(N.T), L("design:paramtypes", [y])], F);
      var M = r(88030),
        x = r(57924),
        k = r(87113),
        G = r(60399),
        K = r(79256),
        V = r(96303),
        j = r(54066),
        B = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        W = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let H = class {
        constructor(e) {
          this.argon2dDeriver = e;
        }
        async hash(e) {
          return (0, V.k)(
            await this.argon2dDeriver.derive((0, j.u)(e), (0, j.u)("z8CXohryCcGAa7CESNHYnedqbDyp"), {
              tCost: 3,
              mCost: 32768,
              parallelism: 2
            })
          );
        }
      };
      H = B([(0, x.GS)(), W("design:paramtypes", [K.y])], H);
      var z = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        Q = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let q = class {
        constructor(e, t, r) {
          (this.serverApiClient = e), (this.masterPasswordSecurityStore = t), (this.passwordHasher = r);
        }
        shouldBeChecked() {
          return (0, G.z)(
            this.masterPasswordSecurityStore.state$.pipe(
              (0, _.U)((e) => !e.isMasterPasswordLeaked && e.lastCheckTimestamp + 864e5 <= Date.now())
            )
          );
        }
        async check(e) {
          const t = await this.passwordHasher.hash(e),
            r = await (0, G.z)(this.serverApiClient.v1.pwleak.getHashes({ hashPrefix: t.substring(0, 6) }));
          if ((0, f.hx)(r)) throw new Error("Error while retrieving list of hashes for MP checking");
          const s = r.data.data.includes(t),
            o = await this.masterPasswordSecurityStore.getState();
          return await this.masterPasswordSecurityStore.set({ ...o, isMasterPasswordLeaked: s, lastCheckTimestamp: Date.now() });
        }
      };
      q = z([(0, x.GS)(), Q("design:paramtypes", [k.l, y, H])], q);
      var Y = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        $ = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let X = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        async reset() {
          const e = await this.masterPasswordSecurityStore.getState();
          return await this.masterPasswordSecurityStore.set({ ...e, isMasterPasswordNotificationDismissed: !1 });
        }
      };
      X = Y([(0, x.GS)(), $("design:paramtypes", [y])], X);
      var Z = r(94189),
        J = r(20587),
        ee = r(93039),
        te = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        re = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let se = class {
        constructor(e, t) {
          (this.masterPasswordSecurityStore = e), (this.cqrsClient = t);
        }
        async send() {
          const {
              commands: { trackEvent: e }
            } = this.cqrsClient.getClient(J.Yu),
            t = await this.masterPasswordSecurityStore.getState();
          await e({ event: new ee.AnonymousMasterPasswordHealthReportEvent({ isLeaked: t.isMasterPasswordLeaked }) });
        }
      };
      se = te([(0, x.GS)(), re("design:paramtypes", [y, Z.w])], se);
      var oe = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        ne = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let ie = class {
        constructor(e, t, r) {
          (this.checkMasterPasswordService = e),
            (this.resetMasterPasswordNotification = t),
            (this.anonymousMasterPasswordLeakedTrackingEventSender = r);
        }
        async execute({ body: e }) {
          return (
            await this.resetMasterPasswordNotification.reset(),
            (await this.checkMasterPasswordService.shouldBeChecked())
              ? (await this.checkMasterPasswordService.check(e.password),
                this.anonymousMasterPasswordLeakedTrackingEventSender.send(),
                Promise.resolve((0, f.Vp)(void 0)))
              : Promise.resolve((0, f.Vp)(void 0))
          );
        }
      };
      ie = oe([(0, D.W)(M.T), ne("design:paramtypes", [q, X, se])], ie);
      var ae = r(30600),
        ce = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        le = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let de = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        async execute() {
          const e = await this.masterPasswordSecurityStore.getState();
          return (
            await this.masterPasswordSecurityStore.set({
              ...e,
              lastCheckTimestamp: 0,
              isMasterPasswordLeaked: !1,
              isMasterPasswordNotificationDismissed: !1
            }),
            Promise.resolve((0, f.Vp)(void 0))
          );
        }
      };
      de = ce([(0, D.W)(ae.j), le("design:paramtypes", [y])], de);
      var ue = r(5105),
        pe = r(85465);
      const he = async (e) => {
        if (e) return (await (async (e) => (await (0, pe.evaluate)(e)).score)(e)) / 25;
      };
      var me = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        ve = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let ge = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        async check(e) {
          const t = ((await he(e)) ?? 5) < 3,
            r = await this.masterPasswordSecurityStore.getState();
          return await this.masterPasswordSecurityStore.set({ ...r, isMasterPasswordWeak: t });
        }
      };
      ge = me([(0, x.GS)(), ve("design:paramtypes", [y])], ge);
      var ye = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        fe = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let _e = class {
        constructor(e, t) {
          (this.masterPasswordSecurityStore = e), (this.cqrsClient = t);
        }
        async send() {
          const {
              commands: { trackEvent: e }
            } = this.cqrsClient.getClient(J.Yu),
            t = await this.masterPasswordSecurityStore.getState();
          await e({ event: new ee.AnonymousMasterPasswordHealthReportEvent({ isWeak: t.isMasterPasswordWeak }) });
        }
      };
      _e = ye([(0, x.GS)(), fe("design:paramtypes", [y, Z.w])], _e);
      var Se = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        Ee = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let be = class {
        constructor(e, t, r) {
          (this.checkMasterPasswordWeakService = e),
            (this.anonymousMasterPasswordWeakTrackingEventSender = t),
            (this.resetMasterPasswordNotification = r);
        }
        async execute({ body: e }) {
          return (
            await this.resetMasterPasswordNotification.reset(),
            await this.checkMasterPasswordWeakService.check(e.password),
            this.anonymousMasterPasswordWeakTrackingEventSender.send(),
            Promise.resolve((0, f.Vp)(void 0))
          );
        }
      };
      be = Se([(0, D.W)(ue.B), Ee("design:paramtypes", [ge, _e, X])], be);
      var we = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        Ae = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let Te = class {
        constructor(e) {
          this.masterPasswordSecurityStore = e;
        }
        async reset() {
          const e = await this.masterPasswordSecurityStore.getState();
          return await this.masterPasswordSecurityStore.set({ ...e, isMasterPasswordWeak: !1 });
        }
      };
      Te = we([(0, x.GS)(), Ae("design:paramtypes", [y])], Te);
      var Ce = r(68307),
        Ie = r(67490),
        Oe = function (e, t, r, s) {
          var o,
            n = arguments.length,
            i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
          else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
          return n > 3 && i && Object.defineProperty(t, r, i), i;
        },
        Pe = function (e, t) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
        };
      let Re = class {
        constructor(e) {
          this.resetMasterPasswordWeak = e;
        }
        handle() {
          return this.resetMasterPasswordWeak.reset(), Promise.resolve(void 0);
        }
      };
      Re = Oe([(0, Ce.b)(Ie.D), Pe("design:paramtypes", [Te])], Re);
      var De = function (e, t, r, s) {
        var o,
          n = arguments.length,
          i = n < 3 ? t : null === s ? (s = Object.getOwnPropertyDescriptor(t, r)) : s;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, s);
        else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
        return n > 3 && i && Object.defineProperty(t, r, i), i;
      };
      let Ne = class {};
      Ne = De(
        [
          (0, s.Y)({
            api: o.J,
            handlers: {
              commands: {
                dismissMasterPasswordNotification: F,
                temporaryCheckMasterPassword: ie,
                temporaryResetMasterPasswordLeaked: de,
                temporaryCheckMasterPasswordWeak: be
              },
              events: { ...(0, s.g)(a.v, { masterPasswordChanged: Re }) },
              queries: { isMasterPasswordLeaked: b, isMasterPasswordWeak: C, isMasterPasswordNotificationDismissed: R }
            },
            providers: [q, H, X, ge, se, _e, Te],
            imports: [n.D, i.n],
            stores: [y]
          })
        ],
        Ne
      );
    },
    43894: (e, t, r) => {
      r.d(t, { B: () => i });
      var s = r(86952),
        o = r(11730),
        n = r(9932);
      const i = (0, s.Q)({
        name: "notifications",
        commands: {},
        events: {},
        queries: { GetPlanPricingQuery: o.c, GetUserMessagesQuery: n.m }
      });
    },
    11730: (e, t, r) => {
      r.d(t, { c: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    9932: (e, t, r) => {
      r.d(t, { m: () => i });
      var s,
        o = r(99059),
        n = r(25029);
      !(function (e) {
        (e.DEFAULT = "default"),
          (e.TRIAL_EXPIRED = "trial_expired"),
          (e.WEB_STORE = "web_store"),
          (e.DASHBOARD_UPGRADE = "dashboard_upgrade"),
          (e.SHARING_CENTER_FAMILY = "sharing_center_family"),
          (e.SHARING_CENTER_WORK = "sharing_center_work");
      })(s || (s = {}));
      class i extends (0, o.k)({ scope: n.F.User }) {}
    },
    80260: (e, t, r) => {
      r.d(t, { F: () => E });
      var s = r(88802),
        o = r(99634),
        n = r(43894),
        i = r(30523),
        a = r(87065),
        c = r(43978),
        l = r(20754),
        d = r(86252),
        u = r(11730),
        p = r(57924),
        h = r(87113),
        m = r(48844),
        v = r(87279);
      let g = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        getPlanPricing({ login: e, userKey: t, couponCode: r, language: s, hasEssentials: o }) {
          return this.serverApiClient.v1.payments
            .getAccessibleWebOffers({ login: e, userKey: t, couponCode: r, language: s, forceFamily: !0, hasEssentials: o })
            .pipe(
              (0, m.DZ)((e) => {
                throw new Error(`GetPlanPricing failed with error: ${e}`);
              }),
              (0, m.lk)((e) => {
                const { plans: t, currency: r } = e.data,
                  { family: s } = t,
                  { offers: o, ...n } = s,
                  i = { plans: { family: { offers: o.map(({ duration: e, ...t }) => ({ billingPeriod: e, ...t })), ...n } }, currency: r };
                return (0, v.Vp)(i);
              })
            );
        }
      };
      g = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.l])], g);
      let y = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.webOffersService = t);
        }
        execute() {
          const { carbonState: e } = this.carbonLegacyClient.queries;
          return e({ path: "userSession.account.login" }).pipe(
            (0, i.h)(v.d6),
            (0, a.U)((e) => e.data),
            (0, c.w)((e) => this.webOffersService.getPlanPricing({ login: e }))
          );
        }
      };
      y = (0, s.__decorate)([(0, l.e)(u.c), (0, s.__metadata)("design:paramtypes", [d._, g])], y);
      var f = r(9932);
      let _ = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        execute() {
          const { carbonState: e } = this.carbonLegacyClient.queries;
          return e({ path: "userSession.localSettings.userMessages" }).pipe((0, m.Qn)((e) => e));
        }
      };
      _ = (0, s.__decorate)([(0, l.e)(f.m), (0, s.__metadata)("design:paramtypes", [d._])], _);
      var S = r(93850);
      let E = class {};
      E = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.B,
            handlers: { commands: {}, events: {}, queries: { getPlanPricing: y, getUserMessages: _ } },
            imports: [S.n],
            providers: [g]
          })
        ],
        E
      );
    },
    86021: (e, t, r) => {
      r.d(t, { U: () => d });
      var s = r(86952),
        o = r(88041),
        n = r(52442),
        i = r(62960),
        a = r(91438),
        c = r(46855),
        l = r(74352);
      const d = (0, s.Q)({
        name: "getStarted",
        commands: { dismissGetStarted: o.A, markAdminConsoleOpened: n.T },
        events: {},
        queries: {
          hasCompletedAutofillTutorial: i.G,
          hasCompletedCredentialTutorial: a.x,
          hasOpenedAdminConsole: c.s,
          isGetStartedDismissed: l.A
        }
      });
    },
    88041: (e, t, r) => {
      r.d(t, { A: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    52442: (e, t, r) => {
      r.d(t, { T: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    62960: (e, t, r) => {
      r.d(t, { G: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    91438: (e, t, r) => {
      r.d(t, { x: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    46855: (e, t, r) => {
      r.d(t, { s: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    74352: (e, t, r) => {
      r.d(t, { A: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    17103: (e, t, r) => {
      r.d(t, { $: () => U });
      var s = r(88802),
        o = r(99634),
        n = r(86021),
        i = r(25029),
        a = r(95681),
        c = r(23347),
        l = r(10722),
        d = r(7165);
      const u = d.z.object({ hasOpenedAdminConsole: d.z.boolean(), isGetStartedDismissed: d.z.boolean() }),
        p = (e) => u.safeParse(e).success;
      class h extends (0, a.Q)({
        storage: { schemaVersion: 1, initialValue: { hasOpenedAdminConsole: !1, isGetStartedDismissed: !1 }, typeGuard: p },
        persist: !0,
        scope: i.F.User,
        storeName: "onboarding-get-started-store",
        capacity: c.Y._010KB,
        codec: l.E
      }) {}
      var m = r(63663),
        v = r(87279),
        g = r(88041);
      let y = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState();
          return await this.store.set({ ...e, isGetStartedDismissed: !0 }), Promise.resolve((0, v.Vp)(void 0));
        }
      };
      y = (0, s.__decorate)([(0, m.W)(g.A), (0, s.__metadata)("design:paramtypes", [h])], y);
      var f = r(52442);
      let _ = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState();
          return await this.store.set({ ...e, hasOpenedAdminConsole: !0 }), Promise.resolve((0, v.Vp)(void 0));
        }
      };
      _ = (0, s.__decorate)([(0, m.W)(f.T), (0, s.__metadata)("design:paramtypes", [h])], _);
      var S = r(20754),
        E = r(62960),
        b = r(57924),
        w = r(86252),
        A = r(87065);
      let T = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        get() {
          return this.carbonLegacyClient.queries.getWebOnboardingMode().pipe(
            (0, A.U)((e) => {
              if (!(0, v.d6)(e)) throw new Error("Error while retrieving the legacy onboarding state");
              return e.data.completedSteps;
            })
          );
        }
        getAutofillTaskCompletion() {
          return this.get().pipe((0, A.U)((e) => (0, v.Vp)(!!e?.tryAutofillOnWeb)));
        }
        getCredentialTaskCompletion() {
          return this.get().pipe((0, A.U)((e) => (0, v.Vp)(!!e?.saveCredentialOnWeb)));
        }
      };
      T = (0, s.__decorate)([(0, b.GS)(), (0, s.__metadata)("design:paramtypes", [w._])], T);
      let C = class {
        constructor(e) {
          this.onboardingStateGetterService = e;
        }
        execute() {
          return this.onboardingStateGetterService.getAutofillTaskCompletion();
        }
      };
      C = (0, s.__decorate)([(0, S.e)(E.G), (0, s.__metadata)("design:paramtypes", [T])], C);
      var I = r(91438);
      let O = class {
        constructor(e) {
          this.onboardingStateGetterService = e;
        }
        execute() {
          return this.onboardingStateGetterService.getCredentialTaskCompletion();
        }
      };
      O = (0, s.__decorate)([(0, S.e)(I.x), (0, s.__metadata)("design:paramtypes", [T])], O);
      var P = r(46855);
      let R = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, A.U)((e) => (0, v.Vp)(e.hasOpenedAdminConsole)));
        }
      };
      R = (0, s.__decorate)([(0, S.e)(P.s), (0, s.__metadata)("design:paramtypes", [h])], R);
      var D = r(74352);
      let N = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, A.U)((e) => (0, v.Vp)(e.isGetStartedDismissed)));
        }
      };
      N = (0, s.__decorate)([(0, S.e)(D.A), (0, s.__metadata)("design:paramtypes", [h])], N);
      let U = class {};
      U = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.U,
            stores: [h],
            handlers: {
              commands: { dismissGetStarted: y, markAdminConsoleOpened: _ },
              events: {},
              queries: {
                hasCompletedAutofillTutorial: C,
                hasCompletedCredentialTutorial: O,
                hasOpenedAdminConsole: R,
                isGetStartedDismissed: N
              }
            },
            providers: [T]
          })
        ],
        U
      );
    },
    8122: (e, t, r) => {
      r.d(t, { J: () => i });
      var s = r(86952),
        o = r(47010),
        n = r(76107);
      const i = (0, s.Q)({
        name: "antiphishing",
        commands: { addAutoRedirectedDomain: n.A },
        events: {},
        queries: { isAutoRedirectedDomain: o.U }
      });
    },
    76107: (e, t, r) => {
      r.d(t, { A: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    47010: (e, t, r) => {
      r.d(t, { U: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    71450: (e, t, r) => {
      r.d(t, { H: () => c });
      var s = r(86952),
        o = r(26254),
        n = r(91619),
        i = r(30240),
        a = r(60135);
      const c = (0, s.Q)({
        name: "breaches",
        commands: { dismissBreach: o.n, markBreachAsSeen: n.Q },
        events: {},
        queries: { breach: i.i, unreadBreachesCount: a.L }
      });
    },
    49186: (e, t, r) => {
      var s, o;
      r.d(t, { J: () => s, K: () => o }),
        (function (e) {
          (e.PENDING = "PENDING"), (e.VIEWED = "VIEWED"), (e.ACKNOWLEDGED = "ACKNOWLEDGED");
        })(s || (s = {})),
        (function (e) {
          (e.Username = "username"),
            (e.Password = "password"),
            (e.Email = "email"),
            (e.CreditCard = "creditcard"),
            (e.Phone = "phone"),
            (e.Address = "address"),
            (e.SSN = "ssn"),
            (e.IP = "ip"),
            (e.Location = "geolocation"),
            (e.PersonalInfo = "personalinfo"),
            (e.SocialNetwork = "social");
        })(o || (o = {}));
    },
    26254: (e, t, r) => {
      r.d(t, { n: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    91619: (e, t, r) => {
      r.d(t, { Q: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    30240: (e, t, r) => {
      r.d(t, { i: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    60135: (e, t, r) => {
      r.d(t, { L: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    96248: (e, t, r) => {
      r.d(t, { M: () => l });
      var s = r(86952),
        o = r(9310),
        n = r(21444),
        i = r(94814),
        a = r(9062),
        c = r(36214);
      const l = (0, s.Q)({
        name: "emailMonitoring",
        commands: { dismissOnboardingNotification: o.n, optinEmail: n.P5, optoutEmail: i.Lc },
        events: {},
        queries: { emailList: a.dB, onboardingNotificationState: c.p }
      });
    },
    9310: (e, t, r) => {
      r.d(t, { n: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    21444: (e, t, r) => {
      r.d(t, { Dq: () => i, NM: () => d, Ox: () => c, P5: () => p, XX: () => a, l2: () => l, vc: () => u });
      var s = r(74354),
        o = r(25029),
        n = r(96168);
      const i = "OK";
      var a;
      !(function (e) {
        (e.INVALID_EMAIL = "EMAIL_IS_INVALID"),
          (e.ALREADY_SUBSCRIBED = "USER_HAS_ALREADY_AN_ACTIVE_SUBSCRIPTION"),
          (e.TOO_MANY_SUBSCRIPTIONS = "USER_HAS_TOO_MANY_SUBSCRIPTIONS"),
          (e.GENERIC_ERROR = "GENERIC_ERROR");
      })(a || (a = {}));
      class c extends (0, n.Hu)(a.INVALID_EMAIL, "") {}
      class l extends (0, n.Hu)(a.ALREADY_SUBSCRIBED, "") {}
      class d extends (0, n.Hu)(a.TOO_MANY_SUBSCRIPTIONS, "") {}
      class u extends (0, n.Hu)(a.GENERIC_ERROR, "") {}
      class p extends (0, s.g)({ scope: o.F.User }) {}
    },
    94814: (e, t, r) => {
      r.d(t, { KP: () => a, Lc: () => u, QS: () => i, h1: () => l, uD: () => c, v4: () => d });
      var s = r(74354),
        o = r(25029),
        n = r(96168);
      const i = "OK";
      var a;
      !(function (e) {
        (e.INVALID_EMAIL = "EMAIL_IS_INVALID"), (e.NO_SUBSCRIPTION = "USER_HAS_NO_SUBSCRIPTION"), (e.GENERIC_ERROR = "GENERIC_ERROR");
      })(a || (a = {}));
      class c extends (0, n.Hu)(a.INVALID_EMAIL, "") {}
      class l extends (0, n.Hu)(a.NO_SUBSCRIPTION, "") {}
      class d extends (0, n.Hu)(a.GENERIC_ERROR, "") {}
      class u extends (0, s.g)({ scope: o.F.User }) {}
    },
    57255: (e, t, r) => {
      var s;
      function o(e) {
        return "UNKNOWN" === e || "SEEN" === e || "NOT_SEEN" === e;
      }
      r.d(t, { M: () => s, U: () => o }),
        (function (e) {
          (e.UNKNOWN = "UNKNOWN"), (e.SEEN = "SEEN"), (e.NOT_SEEN = "NOT_SEEN");
        })(s || (s = {}));
    },
    9062: (e, t, r) => {
      r.d(t, { a2: () => n, dB: () => i, wp: () => s });
      var s,
        o = r(99059);
      function n(e) {
        return "pending" === e || "active" === e || "disabled" === e;
      }
      !(function (e) {
        (e.PENDING = "pending"), (e.ACTIVE = "active"), (e.DISABLED = "disabled");
      })(s || (s = {}));
      class i extends (0, o.k)() {}
    },
    36214: (e, t, r) => {
      r.d(t, { p: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    37284: (e, t, r) => {
      r.r(t),
        r.d(t, {
          AddAutoRedirectedDomainCommand: () => D.A,
          BreachLeakedDataType: () => v.K,
          BreachQuery: () => h.i,
          BreachState: () => v.J,
          CompromisedCredentialsIdsForBreachQuery: () => b.A,
          CompromisedCredentialsQuery: () => S.v,
          CorruptionDataSeverity: () => I.bp,
          CorruptionDataStrength: () => I.ub,
          CredentialHealthDataQuery: () => y.w,
          DarkWebOnboardingState: () => l.M,
          DataLeaksEmailStatus: () => a.wp,
          DismissBreachCommand: () => u.n,
          DismissOnboardingNotificationCommand: () => o.n,
          EmailsListQuery: () => a.dB,
          FilterCredentialsQuery: () => _.Q,
          HealthFilter: () => I._x,
          IsAutoRedirectedDomainQuery: () => R.U,
          MarkBreachAsSeenCommand: () => p.Q,
          OnboardingNotificationStateQuery: () => c.p,
          OptinAlreadySubscribedError: () => n.l2,
          OptinDataLeaksResultErrorCode: () => n.XX,
          OptinDataLeaksResultOkCode: () => n.Dq,
          OptinEmailCommand: () => n.P5,
          OptinGenericError: () => n.vc,
          OptinInvalidEmailError: () => n.Ox,
          OptinTooManySubscriptionsError: () => n.NM,
          OptoutDataLeaksResultErrorCode: () => i.KP,
          OptoutDataLeaksResultOkCode: () => i.QS,
          OptoutEmailCommand: () => i.Lc,
          OptoutGenericError: () => i.v4,
          OptoutInvalidEmailError: () => i.uD,
          OptoutNoSubscriptionError: () => i.h1,
          OtpCodeForSecretOrUrlGenerationError: () => L.k,
          OtpCodeForSecretOrUrlQuery: () => L.S,
          OtpCodeGenerationError: () => U.c,
          OtpCodeQuery: () => U.J,
          PasswordHealthComputationFinishedEvent: () => C.w,
          PasswordHealthReportQuery: () => E.b,
          RecalculatePasswordHealthCommand: () => T.t,
          RiskType: () => I.gI,
          ScoreForPasswordQuery: () => w.c,
          ScoreQuery: () => f.e,
          UnreadBreachesCountQuery: () => m.L,
          UpdateIsCredentialExcludedCommand: () => A.v,
          antiphishingApi: () => P.J,
          breachesApi: () => d.H,
          emailMonitoringApi: () => s.M,
          isDarkWebOnboardingState: () => l.U,
          isDataLeaksEmailStatus: () => a.a2,
          otpApi: () => N.i,
          passwordHealthApi: () => g.d,
          vaultReportApi: () => O.f
        });
      var s = r(96248),
        o = r(9310),
        n = r(21444),
        i = r(94814),
        a = r(9062),
        c = r(36214),
        l = r(57255),
        d = r(71450),
        u = r(26254),
        p = r(91619),
        h = r(30240),
        m = r(60135),
        v = r(49186),
        g = r(57668),
        y = r(99097),
        f = r(75787),
        _ = r(53489),
        S = r(65796),
        E = r(7466),
        b = r(32069),
        w = r(5998),
        A = r(76687),
        T = r(45806),
        C = r(25547),
        I = r(4253),
        O = r(93856),
        P = r(8122),
        R = r(47010),
        D = r(76107),
        N = r(90056),
        U = r(25619),
        L = r(5158);
    },
    90056: (e, t, r) => {
      r.d(t, { i: () => i });
      var s = r(86952),
        o = r(25619),
        n = r(5158);
      const i = (0, s.Q)({ name: "otp", commands: {}, events: {}, queries: { otpCode: o.J, otpCodeForSecretOrUrl: n.S } });
    },
    25619: (e, t, r) => {
      r.d(t, { J: () => a, c: () => i });
      var s = r(99059),
        o = r(25029),
        n = r(96168);
      class i extends (0, n.Hu)("Cannot generate OTP code due to no OtpSecret or OtpUrl found for credential", "") {}
      class a extends (0, s.k)({ scope: o.F.User }) {}
    },
    5158: (e, t, r) => {
      r.d(t, { S: () => a, k: () => i });
      var s = r(99059),
        o = r(25029),
        n = r(96168);
      class i extends (0, n.Hu)("Cannot generate OTP code for secret or url", "") {}
      class a extends (0, s.k)({ scope: o.F.User }) {}
    },
    57668: (e, t, r) => {
      r.d(t, { d: () => m });
      var s = r(86952),
        o = r(76687),
        n = r(45806),
        i = r(25547),
        a = r(99097),
        c = r(53489),
        l = r(75787),
        d = r(65796),
        u = r(32069),
        p = r(7466),
        h = r(5998);
      const m = (0, s.Q)({
        name: "passwordHealth",
        commands: { updateIsCredentialExcluded: o.v, recalculatePasswordHealth: n.t },
        events: { passwordHealthComputationFinished: i.w },
        queries: {
          credentialHealthData: a.w,
          filterCredentials: c.Q,
          score: l.e,
          compromisedCredentials: d.v,
          compromisedCredentialsIdsForBreach: u.A,
          passwordHealthReport: p.b,
          scoreForPassword: h.c
        }
      });
    },
    76687: (e, t, r) => {
      r.d(t, { v: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    45806: (e, t, r) => {
      r.d(t, { t: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    25547: (e, t, r) => {
      r.d(t, { w: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.User }) {}
    },
    4253: (e, t, r) => {
      var s, o, n, i;
      r.d(t, { _x: () => o, bp: () => i, gI: () => s, ub: () => n }),
        (function (e) {
          (e.Weak = "weak"), (e.Reused = "reused"), (e.Compromised = "compromised"), (e.Excluded = "excluded");
        })(s || (s = {})),
        (function (e) {
          (e.All = "all"), (e.Weak = "weak"), (e.Reused = "reused"), (e.Compromised = "compromised"), (e.Excluded = "excluded");
        })(o || (o = {})),
        (function (e) {
          (e.WEAK = "weak"), (e.EXTREMELY_WEAK = "extremely_weak");
        })(n || (n = {})),
        (function (e) {
          (e.COMMON = "common"), (e.STRONG = "strong");
        })(i || (i = {}));
    },
    32069: (e, t, r) => {
      r.d(t, { A: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    65796: (e, t, r) => {
      r.d(t, { v: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    99097: (e, t, r) => {
      r.d(t, { w: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    53489: (e, t, r) => {
      r.d(t, { Q: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    7466: (e, t, r) => {
      r.d(t, { b: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    5998: (e, t, r) => {
      r.d(t, { c: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    75787: (e, t, r) => {
      r.d(t, { e: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    93856: (e, t, r) => {
      r.d(t, { f: () => s });
      const s = (0, r(86952).Q)({ name: "vaultReport", commands: {}, events: {}, queries: {} });
    },
    47032: (e, t, r) => {
      r.d(t, { v: () => b });
      var s = r(88802),
        o = r(99634),
        n = r(8122),
        i = r(25029),
        a = r(95681),
        c = r(23347),
        l = r(10722),
        d = r(7165);
      const u = d.z.object({ autoredirection: d.z.record(d.z.boolean()) }),
        p = (e) => u.safeParse(e).success;
      class h extends (0, a.Q)({
        persist: !0,
        storage: { initialValue: { autoredirection: {} }, typeGuard: p, schemaVersion: 1 },
        scope: i.F.Device,
        storeName: "antiphishing",
        codec: l.E,
        capacity: c.Y._001KB
      }) {}
      var m = r(20754),
        v = r(47010),
        g = r(87065),
        y = r(87279);
      let f = class {
        constructor(e) {
          this.antiphishingStore = e;
        }
        execute({ body: e }) {
          return this.antiphishingStore.state$.pipe((0, g.U)((t) => (0, y.Vp)(!!e.domain && !!t.autoredirection[e.domain])));
        }
      };
      f = (0, s.__decorate)([(0, m.e)(v.U), (0, s.__metadata)("design:paramtypes", [h])], f);
      var _ = r(63663),
        S = r(76107);
      let E = class {
        constructor(e) {
          this.antiphishingStore = e;
        }
        async execute({ body: e }) {
          const { domain: t } = e;
          if (t) {
            const e = await this.antiphishingStore.getState();
            await this.antiphishingStore.set({ ...e, autoredirection: { ...e.autoredirection, [t]: !0 } });
          }
          return Promise.resolve((0, y.Vp)(void 0));
        }
      };
      E = (0, s.__decorate)([(0, _.W)(S.A), (0, s.__metadata)("design:paramtypes", [h])], E);
      let b = class {};
      b = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.J,
            handlers: { commands: { addAutoRedirectedDomain: E }, events: {}, queries: { isAutoRedirectedDomain: f } },
            stores: [h]
          })
        ],
        b
      );
    },
    90364: (e, t, r) => {
      r.d(t, { b: () => n });
      const s = (e) => void 0 === e || "string" == typeof e,
        o = (e) => void 0 === e || "number" == typeof e,
        n = (e) => {
          if (!e || !Array.isArray(e)) return !1;
          if (0 === e.length) return !0;
          const t = e[0];
          return "string" == typeof t.Id && o(t.LastBackupTime) && s(t.kwType) && s(t.AnonId) && s(t.BreachId) && o(t.ContentRevision);
        };
    },
    1237: (e, t, r) => {
      r.d(t, { T: () => c, l: () => a });
      var s = r(49186),
        o = r(9811);
      const n = ({ name: e, domains: t }) => {
          if (e) return e;
          if (t.length > 0) {
            const [e] = t;
            return e;
          }
          return "";
        },
        i = (e) => ((0, o.Tc)(e) ? "private" : "public"),
        a = (e) => [
          ...e
            .reduce((e, t) => {
              const r = e.get(t.BreachId);
              return (!r || (r.LastBackupTime && t.LastBackupTime && r.LastBackupTime < t.LastBackupTime)) && e.set(t.BreachId, t), e;
            }, new Map())
            .values()
        ],
        c = (e, t) => {
          const r = a(e.filter(o.rY)).find((e) => e.Id === t);
          if (!r) throw new Error("Breach not found");
          return ((e) => {
            const t = e.Content,
              r = (0, o.Tc)(e) ? e.Content.impactedEmails : [];
            return {
              anonId: e.AnonId ?? "",
              breachId: e.BreachId,
              breachType: i(e),
              domains: t.domains,
              eventDate: t.eventDate,
              id: e.Id,
              impactedEmails: r,
              kwType: e.kwType ?? "KWSecurityBreach",
              leakedData: t.leakedData ?? [],
              leakedPasswords: e.LeakedPasswords ?? [],
              name: n(t),
              status: e.Status ?? s.J.PENDING
            };
          })(r);
        };
    },
    9811: (e, t, r) => {
      r.d(t, { F7: () => i, Tc: () => a, rY: () => n });
      const s = (e) => "object" == typeof e,
        o = (e) =>
          ((e) => s(e) && "breachModelVersion" in e && "number" == typeof e.breachModelVersion)(e) &&
          1 === e.breachModelVersion &&
          "domains" in e &&
          Array.isArray(e.domains) &&
          "eventDate" in e &&
          "string" == typeof e.eventDate &&
          "id" in e &&
          "string" == typeof e.id,
        n = (e) => {
          return s((t = e)) && "kwType" in t && "string" == typeof t.kwType && "KWSecurityBreach" === t.kwType && o(e.Content);
          var t;
        },
        i = (e) =>
          ((e) => {
            const t = e;
            return "impactedEmails" in t && Array.isArray(t.impactedEmails);
          })(e) && e.impactedEmails.length > 0,
        a = (e) => n(e) && i(e.Content);
    },
    32217: (e, t, r) => {
      r.d(t, { t: () => A });
      var s = r(88802),
        o = r(99634),
        n = r(71450),
        i = r(63663),
        a = r(87279),
        c = r(49186),
        l = r(26254),
        d = r(86252);
      let u = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async execute({ body: e }) {
          const {
            commands: { carbon: t }
          } = this.carbonLegacyClient;
          return (
            await t({ name: "updateBreachStatus", args: [{ id: e.id, status: c.J.ACKNOWLEDGED }] }), Promise.resolve((0, a.Vp)(void 0))
          );
        }
      };
      u = (0, s.__decorate)([(0, i.W)(l.n), (0, s.__metadata)("design:paramtypes", [d._])], u);
      var p = r(91619);
      let h = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async execute({ body: e }) {
          const {
            commands: { carbon: t }
          } = this.carbonLegacyClient;
          return await t({ name: "updateBreachStatus", args: [{ id: e.id, status: c.J.VIEWED }] }), Promise.resolve((0, a.Vp)(void 0));
        }
      };
      h = (0, s.__decorate)([(0, i.W)(p.Q), (0, s.__metadata)("design:paramtypes", [d._])], h);
      var m = r(48844),
        v = r(20754),
        g = r(30240),
        y = r(1237),
        f = r(90364);
      let _ = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        execute({ body: e }) {
          const { id: t } = e,
            {
              queries: { carbonState: r }
            } = this.carbonLegacyClient;
          return r({ path: "userSession.personalData.securityBreaches" }).pipe(
            (0, m.Qn)((e) => {
              if (!(0, f.b)(e)) throw new Error("Bad Breaches format");
              return e;
            }),
            (0, m.Qn)((e) => (0, y.T)(e, t))
          );
        }
      };
      _ = (0, s.__decorate)([(0, v.e)(g.i), (0, s.__metadata)("design:paramtypes", [d._])], _);
      var S = r(87065),
        E = r(60135),
        b = r(9811);
      let w = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        execute() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "userSession.personalData.securityBreaches" }).pipe(
            (0, m.Qn)((e) => {
              if (!(0, f.b)(e)) throw new Error("Bad Breaches format");
              return e;
            }),
            (0, S.U)((e) => {
              if ((0, a.hx)(e)) throw new Error("Error while fetching data");
              const t = (0, y.l)(e.data.filter(b.rY)).filter((e) => e.Status === c.J.PENDING && (0, b.Tc)(e));
              return (0, a.Vp)({ count: t.length });
            })
          );
        }
      };
      w = (0, s.__decorate)([(0, v.e)(E.L), (0, s.__metadata)("design:paramtypes", [d._])], w);
      let A = class {};
      A = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.H,
            handlers: { commands: { dismissBreach: u, markBreachAsSeen: h }, events: {}, queries: { breach: _, unreadBreachesCount: w } }
          })
        ],
        A
      );
    },
    59348: (e, t, r) => {
      r.d(t, { S: () => G });
      var s = r(88802),
        o = r(99634),
        n = r(96248),
        i = r(87065),
        a = r(6136),
        c = r(43978),
        l = r(90171),
        d = r(69885),
        u = r(87279),
        p = r(20754),
        h = r(9062),
        m = r(48844),
        v = r(87113),
        g = r(57924),
        y = r(25029),
        f = r(95681),
        _ = r(57255),
        S = r(10722);
      const E = (e) =>
        ((e) => !(!e || "object" != typeof e) && "onboardingStatus" in e && "emails" in e)(e) &&
        (0, _.U)(e.onboardingStatus) &&
        Array.isArray(e.emails);
      class b extends (0, f.Q)({
        persist: !0,
        storage: { schemaVersion: 1, initialValue: { onboardingStatus: _.M.NOT_SEEN, emails: [] }, typeGuard: E },
        scope: y.F.User,
        storeName: "email-monitoring-state",
        storeTypeGuard: E,
        codec: S.E,
        isCache: !0
      }) {}
      let w = class {
        constructor(e, t) {
          (this.serverApiClient = e),
            (this.store = t),
            (this.execute = () => {
              this.serverApiClient.v1.darkwebmonitoring
                .listRegistrations({})
                .pipe(
                  (0, m.Qn)(({ data: e }) => e.emails.map((e) => ({ email: e.email, state: (0, h.a2)(e.state) ? e.state : h.wp.PENDING }))),
                  (0, m.Qn)((e) => {
                    this.store.update((t) => ({ ...t, emails: e }));
                  }),
                  (0, m.DZ)((e) => {
                    throw e;
                  })
                )
                .subscribe();
            });
        }
      };
      w = (0, s.__decorate)([(0, g.GS)(), (0, s.__metadata)("design:paramtypes", [v.l, b])], w);
      let A = class {
        constructor(e, t) {
          (this.syncMonitoredEmails = e), (this.store = t);
        }
        execute() {
          this.syncMonitoredEmails.execute();
          return this.store.state$
            .pipe(
              (0, i.U)((e) => e.emails),
              (0, a.x)((e, t) => JSON.stringify(e) === JSON.stringify(t)),
              (0, i.U)((e) => (0, u.Vp)(e))
            )
            .pipe(
              (0, c.w)((e) => {
                const t = () => (this.syncMonitoredEmails.execute(), e),
                  r = (e) => (0, l.H)(0, e).pipe((0, c.w)(() => (0, d.of)(t())));
                return (0, u.hx)(e) || e.data.some((e) => e.state === h.wp.PENDING) ? r(3e4) : (0, d.of)(e);
              })
            );
        }
      };
      A = (0, s.__decorate)([(0, p.e)(h.dB), (0, s.__metadata)("design:paramtypes", [w, b])], A);
      var T = r(36214);
      let C = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, i.U)((e) => (0, u.Vp)(e.onboardingStatus)));
        }
      };
      C = (0, s.__decorate)([(0, p.e)(T.p), (0, s.__metadata)("design:paramtypes", [b])], C);
      var I = r(63663),
        O = r(9310);
      function P(e) {
        return { ...e, onboardingStatus: _.M.SEEN };
      }
      let R = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          await this.store.update(P);
        }
      };
      R = (0, s.__decorate)([(0, g.GS)(), (0, s.__metadata)("design:paramtypes", [b])], R);
      let D = class {
        constructor(e) {
          this.dismissOnboardingNotificationService = e;
        }
        async execute() {
          return await this.dismissOnboardingNotificationService.execute(), Promise.resolve((0, u.Vp)(void 0));
        }
      };
      D = (0, s.__decorate)([(0, I.W)(O.n), (0, s.__metadata)("design:paramtypes", [R])], D);
      var N = r(21444),
        U = r(60399),
        L = r(82567);
      let F = class {
        constructor(e, t) {
          (this.serverApiClient = e), (this.store = t);
        }
        async execute({ body: { email: e } }) {
          return await (0, U.z)(
            this.serverApiClient.v1.darkwebmonitoring.registerEmail({ email: e }).pipe(
              (0, m.DZ)((e) => {
                throw new Error(e.message);
              }),
              (0, m.lk)((e) =>
                e.data.result === N.Dq
                  ? (0, u.Vp)(void 0)
                  : (0, u.Rn)(
                      ((e) => {
                        switch (e) {
                          case N.XX.INVALID_EMAIL:
                            return new N.Ox();
                          case N.XX.ALREADY_SUBSCRIBED:
                            return new N.l2();
                          case N.XX.TOO_MANY_SUBSCRIPTIONS:
                            return new N.NM();
                          default:
                            return new N.vc();
                        }
                      })(e.data.result)
                    )
              ),
              (0, L.b)(async (t) => {
                (0, u.d6)(t) && (await this.store.update((t) => ({ ...t, emails: [...t.emails, { email: e, state: h.wp.PENDING }] })));
              })
            )
          );
        }
      };
      F = (0, s.__decorate)([(0, I.W)(N.P5), (0, s.__metadata)("design:paramtypes", [v.l, b])], F);
      var M = r(93850),
        x = r(94814);
      let k = class {
        constructor(e, t) {
          (this.serverApiClient = e),
            (this.store = t),
            (this.getFunctionalError = (e) => {
              switch (e) {
                case x.KP.NO_SUBSCRIPTION:
                  return new x.h1();
                case x.KP.INVALID_EMAIL:
                  return new x.uD();
                case x.KP.GENERIC_ERROR:
                default:
                  return new x.v4();
              }
            });
        }
        async execute({ body: { email: e } }) {
          return await (0, U.z)(
            this.serverApiClient.v1.darkwebmonitoring.deregisterEmail({ email: e }).pipe(
              (0, m.DZ)((e) => {
                throw new Error(e.message);
              }),
              (0, m.lk)((e) => (e.data.result === x.QS ? (0, u.Vp)(void 0) : (0, u.Rn)(this.getFunctionalError(e.data.result)))),
              (0, L.b)(async (t) => {
                (0, u.d6)(t) && (await this.store.update((t) => ({ ...t, emails: [...t.emails.filter((t) => t.email !== e)] })));
              })
            )
          );
        }
      };
      k = (0, s.__decorate)([(0, I.W)(x.Lc), (0, s.__metadata)("design:paramtypes", [v.l, b])], k);
      let G = class {};
      G = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.M,
            stores: [b],
            handlers: {
              commands: { dismissOnboardingNotification: D, optinEmail: F, optoutEmail: k },
              events: {},
              queries: { emailList: A, onboardingNotificationState: C }
            },
            imports: [M.n],
            providers: [R, w]
          })
        ],
        G
      );
    },
    54112: (e, t, r) => {
      r.d(t, { f: () => K });
      var s = r(88802),
        o = r(99634),
        n = r(90056),
        i = r(87065),
        a = r(43978),
        c = r(69885),
        l = r(25619),
        d = r(20754),
        u = r(87279),
        p = r(57924),
        h = r(31222);
      const m = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split("").reduce((e, t, r) => ({ ...e, [t]: r }), {});
      function v(e) {
        const t = m[e];
        if (void 0 === t) throw new Error(`Invalid character found: ${e}`);
        return t;
      }
      const g = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],
        y = async (e, t, r) => {
          const s = ((e) => {
            const t = new Uint8Array(e),
              r = 15 & t[t.length - 1],
              s = t.slice(r, r + 4).reduce((e, t) => e.concat(t.toString(16).toString().padStart(2, "0")), "");
            return 2147483647 & Number.parseInt(s, 16);
          })(
            await e(
              (function (e) {
                const t = new ArrayBuffer(8);
                return new DataView(t).setBigUint64(0, BigInt(e)), t;
              })(t)
            )
          );
          return (s % (r <= 9 ? g[r] : Math.pow(10, r))).toString().padStart(r, "0");
        };
      class f {
        constructor(e, t) {
          (this.signer = e), (this.getStep = t);
        }
        async computeOtpCode({ counter: e, digits: t, period: r }) {
          const s = this.getStep(e, r);
          return await y(this.signer, s, t);
        }
      }
      class _ {
        constructor(e) {
          this.hmacSigner = e;
        }
        createCodeGenerator({ secret: e, algorithm: t }) {
          try {
            const r = (function (e) {
              const t = e.replaceAll("=", "").trim().length;
              let r = 0,
                s = 0,
                o = 0;
              const n = new Uint8Array(((5 * t) / 8) | 0);
              for (let i = 0; i < t; i++) (s = (s << 5) | v(e[i])), (r += 5), r >= 8 && ((n[o++] = (s >>> (r - 8)) & 255), (r -= 8));
              return n.buffer;
            })(e);
            return new f((e) => this.hmacSigner.sign(r, e, t), this.getStep);
          } catch (e) {
            return null;
          }
        }
        getNextOtpRefreshTimestamp(e, t) {
          if (e)
            return ((e) => {
              const t = 1e3 * e,
                r = Math.floor(Date.now() / t) * t;
              return new Date(r + t).getTime();
            })(t);
          throw new Error("Not supported for non time based OTP type");
        }
      }
      let S = class extends _ {
        constructor(e) {
          super(e);
        }
        getStep(e, t) {
          return ((e, t) => Math.floor(e / t))(e || new Date().getTime(), 1e3 * t);
        }
      };
      S = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.q])], S);
      var E = r(86252),
        b = r(48844);
      const w = (e) => void 0 === e || "string" == typeof e;
      let A = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        getById(e) {
          const {
            queries: { carbonState: t }
          } = this.carbonLegacyClient;
          return t({ path: "state.userSession.personalData.credentials" }).pipe(
            (0, b.Qn)((e) => {
              if (
                !((e) =>
                  !!Array.isArray(e) &&
                  (0 === e.length ||
                    e.every((e) => {
                      const t = e;
                      return "string" == typeof t.Id && w(t.OtpSecret) && w(t.OtpUrl);
                    })))(e)
              )
                throw new Error("Bad credential format");
              return e;
            }),
            (0, i.U)((t) => {
              if ((0, u.hx)(t)) return (0, u.Vp)(null);
              const r = t.data.reduce((t, r) => (r.Id === e ? { Id: r.Id, OtpSecret: r.OtpSecret, OtpUrl: r.OtpUrl } : t), null);
              return (0, u.Vp)(r);
            })
          );
        }
      };
      var T;
      (A = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [E._])], A)),
        (function (e) {
          (e.SHA1 = "SHA-1"), (e.SHA256 = "SHA-256"), (e.SHA384 = "SHA-384"), (e.SHA512 = "SHA-512");
        })(T || (T = {}));
      const C = ["totp", "hotp"],
        I = (e) => {
          const t = new URL(e),
            r = ((e) => {
              const t = e.hostname ? e.hostname : /\/\/([th]otp)\//.exec(e.pathname)?.[1] ?? "";
              return C.includes(t) ? t : null;
            })(t),
            s = t.searchParams.get("secret")?.toUpperCase();
          if (!r || !s) throw new Error("Corrupted OTP url");
          const o = t.searchParams.get("digits"),
            n = t.searchParams.get("counter"),
            i = t.searchParams.get("period"),
            a = t.searchParams.get("algorithm");
          return {
            secret: s,
            algorithm: a ? T[a] : T.SHA1,
            counter: n ? Number.parseInt(n, 10) : 0,
            digits: o ? Number.parseInt(o, 10) : 6,
            period: i ? Number.parseInt(i, 10) : 30
          };
        },
        O = (e) => ({ secret: e.toUpperCase(), algorithm: T.SHA1, counter: 0, digits: 6, period: 30 }),
        P = (e) => {
          try {
            return I(e);
          } catch {
            return O(e);
          }
        },
        R = (e) => {
          const { secret: t, algorithm: r, digits: s, period: o } = e;
          return `otpauth://totp/?secret=${t.toLowerCase()}&algorithm=${r
            .toUpperCase()
            .replace("-", "")}&digits=${s}&period=${o}&lock=false`;
        };
      var D = r(90171),
        N = r(30523);
      let U = class {
        constructor(e) {
          this.otpGeneratorService = e;
        }
        async withGeneratedCodeAndValidity(e, t) {
          try {
            const r = await t.computeOtpCode(e),
              s = this.otpGeneratorService.getNextOtpRefreshTimestamp(!0, e.period);
            return (0, u.Vp)({ code: r, validityEndDate: s, validityTime: 1e3 * e.period, url: R(e) });
          } catch {
            return (0, u.Rn)(void 0);
          }
        }
        otpCodes$(e, t) {
          return (0, D.H)(0, 1e3).pipe(
            (0, N.h)((t) => {
              if (0 === t) return !0;
              return ((e, t) => e - Date.now() >= 1e3 * t - 1e3)(
                this.otpGeneratorService.getNextOtpRefreshTimestamp(!0, e.period),
                e.period
              );
            }),
            (0, a.w)(() => this.withGeneratedCodeAndValidity(e, t))
          );
        }
      };
      U = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [S])], U);
      let L = class {
        constructor(e, t, r) {
          (this.credentialOTPGetter = e), (this.otpGeneratorService = t), (this.otpCodeService = r);
        }
        withCodeGenerator(e) {
          return { codeGenerator: this.otpGeneratorService.createCodeGenerator(e), params: e };
        }
        execute({ body: e }) {
          const { credentialId: t } = e;
          return this.credentialOTPGetter.getById(t).pipe(
            (0, i.U)((e) => {
              if ((0, u.hx)(e) || !e.data) throw new Error("Credential not found");
              return e.data;
            }),
            (0, i.U)((e) => {
              if (!e.OtpUrl && !e.OtpSecret) return { params: null, codeGenerator: null };
              const t = ((e) => {
                const { OtpSecret: t, OtpUrl: r } = e;
                if (!t && !r) throw new Error("Otp config missing for this credential");
                return r ? P(r) : O(t ?? "");
              })(e);
              return this.withCodeGenerator(t);
            }),
            (0, a.w)(({ params: e, codeGenerator: t }) =>
              null === e || null === t
                ? (0, c.of)((0, u.Rn)(new l.c()))
                : this.otpCodeService
                    .otpCodes$(e, t)
                    .pipe(
                      (0, i.U)((e) =>
                        (0, u.hx)(e) ? (0, u.Vp)({ code: "", validityEndDate: Date.now(), validityTime: Date.now(), url: "" }) : e
                      )
                    )
            )
          );
        }
      };
      L = (0, s.__decorate)([(0, d.e)(l.J), (0, s.__metadata)("design:paramtypes", [A, S, U])], L);
      let F = class extends _ {
        constructor(e) {
          super(e);
        }
        getStep(e, t) {
          return e;
        }
      };
      F = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.q])], F);
      var M = r(37935);
      let x = class {};
      x = (0, s.__decorate)([(0, o.Y)({ sharedModuleName: "otp-generator", providers: [S, F], exports: [S, F], imports: [M.D] })], x);
      var k = r(5158);
      let G = class {
        constructor(e, t) {
          (this.otpGeneratorService = e), (this.otpCodeService = t);
        }
        execute({ body: e }) {
          const { secretOrUrl: t } = e;
          if (!t) return (0, c.of)((0, u.Rn)(new k.k()));
          const r = P(t.replaceAll(" ", "")),
            s = this.otpGeneratorService.createCodeGenerator(r);
          return null === s ? (0, c.of)((0, u.Rn)(new k.k())) : this.otpCodeService.otpCodes$(r, s).pipe((0, b.DZ)(() => new k.k()));
        }
      };
      G = (0, s.__decorate)([(0, d.e)(k.S), (0, s.__metadata)("design:paramtypes", [S, U])], G);
      let K = class {};
      K = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.i,
            handlers: { commands: {}, events: {}, queries: { otpCode: L, otpCodeForSecretOrUrl: G } },
            imports: [x],
            providers: [A, U]
          })
        ],
        K
      );
    },
    59206: (e, t, r) => {
      r.d(t, { U: () => d });
      var s = r(88802),
        o = r(86252),
        n = r(57924),
        i = r(48844),
        a = r(90364),
        c = r(1237),
        l = r(9811);
      let d = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        getSupportedBreaches() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "userSession.personalData.securityBreaches" }).pipe(
            (0, i.Qn)((e) => {
              if (!(0, a.b)(e)) throw new Error("Bad Breaches format");
              return e;
            }),
            (0, i.Qn)((e) => e.filter(l.rY))
          );
        }
        get() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "userSession.personalData.securityBreaches" }).pipe(
            (0, i.Qn)((e) => {
              if (!(0, a.b)(e)) throw new Error("Bad Breaches format");
              return e;
            }),
            (0, i.Qn)((e) => (0, c.l)(e.filter(l.rY)))
          );
        }
      };
      d = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [o._])], d);
    },
    45883: (e, t, r) => {
      r.d(t, { J: () => h });
      var s = r(88802),
        o = r(86252),
        n = r(57924),
        i = r(48844),
        a = r(87279),
        c = r(64718),
        l = r(61076),
        d = r(87065);
      const u = (e) => void 0 === e || "string" == typeof e,
        p = (e) => void 0 === e || "string" == typeof e || "boolean" == typeof e;
      let h = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        vaultBooleanFormatter(e, t = !1) {
          return void 0 === e ? t : "string" == typeof e ? "true" === e.toLocaleLowerCase() : e;
        }
        get() {
          const {
              queries: { carbonState: e }
            } = this.carbonLegacyClient,
            t = e({ path: "state.userSession.spaceData.spaces" }).pipe(
              (0, i.Qn)((e) => {
                if (
                  !((e) =>
                    !!Array.isArray(e) &&
                    (0 === e.length ||
                      e.every((e) => {
                        const t = e;
                        return "string" == typeof t.teamId && "object" == typeof t.details && "string" == typeof t.details.status;
                      })))(e)
                )
                  throw new Error("Bad space item format");
                return new Set(e.filter((e) => "accepted" === e.details.status).map((e) => e.teamId));
              })
            ),
            r = e({ path: "userSession.sharingData.items" }).pipe(
              (0, i.Qn)((e) => {
                if (
                  !((e) =>
                    !!Array.isArray(e) &&
                    (0 === e.length ||
                      e.every((e) => {
                        const t = e;
                        return "string" == typeof t.content && "string" == typeof t.itemId && "number" == typeof t.timestamp;
                      })))(e)
                )
                  throw new Error("Bad shared items format");
                return e.map((e) => e.itemId);
              })
            );
          return e({ path: "state.userSession.personalData.credentials" }).pipe(
            (0, i.Qn)((e) => {
              if (
                !((e) =>
                  !!Array.isArray(e) &&
                  (0 === e.length ||
                    e.every((e) => {
                      const t = e;
                      return (
                        "string" == typeof t.Id &&
                        p(t.AutoLogin) &&
                        p(t.AutoProtected) &&
                        u(t.Email) &&
                        u(t.Login) &&
                        u(t.OtpSecret) &&
                        u(t.OtpUrl) &&
                        u(t.Password) &&
                        u(t.Title) &&
                        u(t.Url) &&
                        u(t.SpaceId) &&
                        p(t.Checked)
                      );
                    })))(e)
              )
                throw new Error("Bad credential format");
              return e;
            }),
            (0, l.V)(r, t),
            (0, d.U)(([e, t, r]) => {
              const s = {};
              return (
                (0, a.hx)(e) ||
                  (0, a.hx)(r) ||
                  e.data.forEach((e) => {
                    const o = new c.Y(e.Url).getRootDomain();
                    var n;
                    (e.SpaceId && "" !== e.SpaceId && !r.data.has(e.SpaceId)) ||
                      (s[e.Id] = {
                        domains: o ? [o] : [],
                        autoLogin: this.vaultBooleanFormatter(e.AutoLogin),
                        autoProtected: this.vaultBooleanFormatter(e.AutoProtected),
                        email: e.Email ?? "",
                        excluded: this.vaultBooleanFormatter(e.Checked),
                        id: e.Id,
                        login: e.Login ?? "",
                        otpSecret: e.OtpSecret ?? "",
                        otpUrl: e.OtpUrl ?? "",
                        password: e.Password ?? "",
                        spaceId: e.SpaceId ?? "",
                        shared: ((n = e.Id), !(0, a.hx)(t) && t.data.includes(n)),
                        title: e.Title ?? ""
                      });
                  }),
                (0, a.Vp)(s)
              );
            })
          );
        }
      };
      h = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [o._])], h);
    },
    24192: (e, t, r) => {
      r.d(t, { C: () => Et });
      var s = r(88802),
        o = r(57668),
        n = r(93850),
        i = r(60733),
        a = r(99634),
        c = r(92018),
        l = r(48430),
        d = r(25029),
        u = r(63663),
        p = r(86252),
        h = r(87279),
        m = r(76687),
        v = r(95681),
        g = r(10722),
        y = r(28489);
      const f = (e) =>
        "object" == typeof e &&
        null !== e &&
        (0, y.l$)(e, "credentialsAtRisk") &&
        (0, y.l$)(e, "index") &&
        "object" == typeof e.credentialsAtRisk &&
        "object" == typeof e.index;
      class _ extends (0, v.Q)({
        persist: !0,
        storage: { initialValue: { credentialsAtRisk: {}, index: {} }, typeGuard: f, schemaVersion: 1 },
        scope: d.F.User,
        storeName: "password-health-state",
        storeTypeGuard: f,
        codec: g.E,
        isCache: !0
      }) {}
      var S = r(4253);
      const E = (e) => {
        const t = {};
        if (!Object.keys(e).length) return t;
        for (const r in e) {
          if (!e[r]) continue;
          const s = e[r]?.spaceId ?? "";
          void 0 === t[s] &&
            (t[s] = {
              [S.gI.Reused]: [],
              [S.gI.Weak]: [],
              [S.gI.Compromised]: [],
              [S.gI.Excluded]: [],
              corruptedCount: 0,
              importantCorruptedCount: 0
            }),
            e[r]?.excluded
              ? t[s][S.gI.Excluded].push(r)
              : (t[s].corruptedCount++,
                e[r]?.isImportant && t[s].importantCorruptedCount++,
                e[r]?.risks.forEach((e) => t[s][e.riskType].push(r)));
        }
        return t;
      };
      let b = class {
        constructor(e, t) {
          (this.store = e), (this.carbonLegacyClient = t);
        }
        async execute({ body: e }) {
          const {
            commands: { carbon: t }
          } = this.carbonLegacyClient;
          return (
            await t({ name: "updateCredential", args: [{ id: e.credentialId, update: { isExcludedFromHealth: e.excluded } }] }),
            this.store.update((t) => {
              const r = { ...t.credentialsAtRisk[e.credentialId], excluded: e.excluded },
                s = { ...t };
              return (s.credentialsAtRisk[e.credentialId] = r), (s.index = E(t.credentialsAtRisk)), s;
            }),
            Promise.resolve((0, h.Vp)(void 0))
          );
        }
      };
      b = (0, s.__decorate)([(0, u.W)(m.v), (0, s.__metadata)("design:paramtypes", [_, p._])], b);
      var w = r(45806),
        A = r(57924),
        T = r(7165);
      const C = T.z.object({
          isOutdated: T.z.literal(!0),
          lastUpdateTimestamp: T.z.number(),
          updatedCredentialIds: T.z.record(T.z.string()),
          deletedCredentialIds: T.z.record(T.z.string()),
          hasUpdatedBreaches: T.z.boolean()
        }),
        I = T.z.object({ isOutdated: T.z.literal(!1), lastUpdateTimestamp: T.z.number() }),
        O = T.z.discriminatedUnion("isOutdated", [C, I]),
        P = (e) => O.safeParse(e).success;
      class R extends (0, v.Q)({
        persist: !0,
        storage: { initialValue: { isOutdated: !1, lastUpdateTimestamp: 0 }, typeGuard: P, schemaVersion: 1 },
        scope: d.F.User,
        storeName: "health-cache-state",
        storeTypeGuard: P,
        codec: g.E,
        isCache: !0
      }) {}
      var D = r(64987),
        N = r(94189),
        U = r(70493);
      var L = r(59206),
        F = r(45883),
        M = r(81459);
      let x = class extends M.f {};
      x = (0, s.__decorate)([(0, A.GS)()], x);
      const k = (e) => {
          const t = e.risks.filter((e) => e.riskType === S.gI.Reused);
          return 1 === t.length ? t[0] : void 0;
        },
        G = (e, t) => e?.risks.find((e) => e.riskType === t),
        K = (e, t) => e.risks.filter((e) => e.riskType !== t),
        V = (e, t, r) => [...r, { riskType: S.gI.Reused, credentialIds: [...t.credentialIds].filter((t) => e !== t) }],
        j = (e, t) => {
          const r = k(t);
          return {
            ...t,
            risks: K(t, S.gI.Reused).concat([{ riskType: S.gI.Reused, credentialIds: r ? [...r.credentialIds].concat(e.id) : [e.id] }])
          };
        },
        B = (e) => ({
          id: e.id,
          title: e.title,
          email: e.email,
          excluded: e.excluded,
          login: e.login,
          autoLogin: e.autoLogin,
          autoProtected: e.autoProtected,
          otpSecret: e.otpSecret,
          otpUrl: e.otpUrl,
          spaceId: e.spaceId,
          shared: e.shared,
          domains: e.domains
        }),
        W = (e) => ({ ...B(e), risks: [], isImportant: !1 }),
        H = (e, t, r) => {
          const s = K(t, S.gI.Reused),
            o = r && r.length > 0,
            n = s.length > 0;
          return o || n ? { ...W(e), risks: o ? s.concat([{ riskType: S.gI.Reused, credentialIds: r }]) : s } : void 0;
        },
        z = (e) => !!G(e, S.gI.Weak),
        Q = (e) => !!k(e),
        q = (e) => !!G(e, S.gI.Compromised),
        Y = (e) => e.excluded,
        $ = 3,
        X = 5;
      function Z(e, t, r = $, s = X) {
        if (!e || !t) return !1;
        const o = e.length,
          n = t.length;
        if (Math.abs(o - n) > r) return !1;
        if (o < s || n < s) return e === t;
        if (e === t) return !0;
        let i = new Array(n + 1),
          a = new Array(n + 1),
          c = !1;
        for (let e = 0; e < n + 1; e++) i[e] = e;
        for (let s = 0; s < o; s++) {
          (a[0] = s + 1), (c = a[0] > r);
          for (let o = 0; o < n; o++) {
            const n = i[o + 1] + 1,
              l = a[o] + 1;
            let d = i[o];
            e[s] !== t[o] && d++, (a[o + 1] = Math.min(n, Math.min(l, d))), (c = c && a[o + 1] > r);
          }
          const o = i;
          if (((i = a), (a = o), c)) break;
        }
        return i[n] <= r;
      }
      const J = (e, t, r) => {
          const s = ((e, t) => Object.keys(t).reduce((r, s) => (Z(s, e.password) ? [...r, ...t[s]] : r), []))(e, r);
          if (!t && 0 === s.length) return {};
          const o = ((e) => {
              if (0 !== e.length) return { riskType: S.gI.Compromised, breaches: e };
            })(s),
            n = t ? K(t, S.gI.Compromised) : [],
            i = { ...W(e), risks: o ? n.concat(o) : n };
          return { [e.id]: 0 === i.risks.length ? void 0 : i };
        },
        ee = (e, t, r) => {
          if (!r) return Promise.resolve({});
          const s = t[e.id] ?? W(e),
            o = s.risks.length > 0,
            n = ((e, t) =>
              Object.keys(t)
                .map((e) => t[e])
                .filter((t) => t.id !== e.id && Z(t.password, e.password))
                .map((e) => e.id))(e, r);
          if (0 === n.length && !o) return Promise.resolve({});
          const i = k(s)?.credentialIds ?? [],
            a = ((e, t, r, s) => {
              const o = r.filter((e) => !t.includes(e));
              if (0 === o.length) return {};
              const n = {};
              for (const t of o) {
                const r = s[t];
                if (!r) continue;
                const o = k(r);
                if (!o) continue;
                const i = K(r, S.gI.Reused);
                1 === o.credentialIds.length && 0 === i.length
                  ? (n[t] = void 0)
                  : (n[t] = { ...r, risks: 1 === o.credentialIds.length ? i : V(e, o, i) });
              }
              return n;
            })(e.id, n, i, t),
            c = ((e, t, r, s, o) => {
              const n = t.filter((e) => !r.includes(e));
              if (0 === n.length) return {};
              const i = {};
              for (const t of n) {
                const r = s[t];
                if (r) i[t] = j(e, r);
                else {
                  const r = o[t];
                  i[t] = { ...W(r), risks: [{ riskType: S.gI.Reused, credentialIds: [e.id] }] };
                }
              }
              return i;
            })(e, n, i, t, r),
            l = H(e, s, n);
          return Promise.resolve({ ...a, ...c, [e.id]: l });
        };
      var te = r(85465);
      const re = async (e) => {
          if (e) return (await (async (e) => (await (0, te.evaluate)(e)).score)(e)) / 25;
        },
        se = async (e, t) => {
          const r = await re(e.password),
            s = t ?? W(e),
            o = K(s, S.gI.Weak),
            n = void 0 !== r && r < 2;
          return n || 0 !== o.length
            ? { [e.id]: { ...s, ...B(e), risks: n ? o.concat([{ riskType: S.gI.Weak, strength: r }]) : o } }
            : { [e.id]: void 0 };
        },
        oe = (e, t, r) => {
          if (!t) return {};
          const s = e.domains.some((e) => r.has(e)),
            o = { ...t, isImportant: s };
          return { [t.id]: o };
        },
        ne = (e) => {
          const t = {};
          return (
            Object.keys(e).forEach((r) => {
              const s = e[r];
              s && (t[r] = s);
            }),
            t
          );
        },
        ie = async ({
          credentialUpdates: e,
          allCredentials: t,
          breaches: r,
          importantDomains: s,
          hasUpdatedBreaches: o,
          healthState: n,
          deletedCredentialIds: i
        }) => {
          const a = ((e) => {
              const t = {};
              return (
                e.forEach((e) => {
                  e.LeakedPasswords &&
                    e.LeakedPasswords.forEach((r) => {
                      Object.prototype.hasOwnProperty.call(t, r)
                        ? t[r].push({ breachId: e.Id, date: e.Content.eventDate, domains: e.Content.domains })
                        : (t[r] = [{ breachId: e.Id, date: e.Content.eventDate, domains: e.Content.domains }]);
                    });
                }),
                t
              );
            })(r),
            c = 0 === e.length && 0 === i.length && !o,
            l = { ...(n?.credentialsAtRisk ?? {}) },
            d = (e) => Object.keys(e).forEach((t) => (l[t] = e[t]));
          i.length > 0 && d(((e = []) => e.reduce((e, t) => ({ ...e, [t]: void 0 }), {}))(i));
          const u = {},
            p = {};
          for (const e of Object.keys(t)) t[e].excluded ? (u[e] = W(t[e])) : (p[e] = t[e]);
          const h = [],
            m = [];
          for (const t of e) t.excluded ? m.push(t) : i.includes(t.id) || h.push(t);
          d(
            ((e, t) => {
              const r = {};
              for (const s of Object.values(t)) {
                if (!s) continue;
                const t = k(s);
                if (!t) continue;
                const o = t.credentialIds.filter((t) => !e.includes(t));
                if (o.length !== t.credentialIds.length) {
                  const e = K(s, S.gI.Reused);
                  0 === o.length && 0 === e.length
                    ? (r[s.id] = void 0)
                    : (r[s.id] = { ...s, risks: 0 === o.length ? e : [...e, { ...t, credentialIds: o }] });
                }
              }
              return r;
            })([...Object.values(m).map((e) => e.id), ...i], l)
          ),
            c &&
              d(
                ((e) => {
                  const t = {};
                  for (let r = 0; r < e.length; r++) {
                    const s = e[r],
                      o = s.password,
                      n = s.id,
                      i = [];
                    for (let a = r + 1; a < e.length; a++) {
                      const r = e[a].id,
                        c = e[a].password,
                        l = e[a];
                      if (Z(o, c)) {
                        const e = t[r] ?? W(l),
                          o = G(e, S.gI.Reused),
                          a = o?.credentialIds ?? [];
                        (t[r] = H(s, e, a.concat(n))), i.push(r);
                      }
                    }
                    const a = t[n] ?? W(s),
                      c = G(a, S.gI.Reused),
                      l = c?.credentialIds ?? [];
                    t[n] = H(s, a, i.concat(l));
                  }
                  return t;
                })(Object.values(p))
              );
          const v = c ? Object.values(p) : h;
          if (o)
            for await (const e of Object.values(p)) {
              d(J(e, l[e.id], a));
            }
          for await (const e of v) {
            if (!o) {
              d(J(e, l[e.id], a));
            }
            if (!c) {
              d(await ee(e, l, p));
            }
            d(await se(e, l[e.id])), d(oe(e, l[e.id], s));
          }
          return d(u), { credentialsAtRisk: ne(l), index: E(l) };
        };
      var ae = r(67978),
        ce = r(75994);
      let le = class extends ae.K {
        constructor(e) {
          super("assets/domains/importantDomains.json", e);
        }
        loadResource(e) {
          if (!(t = e) || !Array.isArray(t)) throw new Error("Important domains file corrupted");
          var t;
          return new Set(e);
        }
      };
      le = (0, s.__decorate)([(0, A.GS)(), (0, s.__metadata)("design:paramtypes", [ce.X])], le);
      var de = r(60399);
      let ue = class {
        constructor(e, t, r, s, o, n) {
          (this.store = e),
            (this.credentialsGetter = t),
            (this.breachesGetter = r),
            (this.importantDomains = s),
            (this.eventEmitter = o),
            (this.client = n);
        }
        async run({ updatedCredentialIds: e, deletedCredentialIds: t, hasUpdatedBreaches: r = !1 }) {
          const { userFeatureFlips: s } = this.client.getClient(U.cV).queries,
            o = await (0, de.z)(s());
          if ((0, h.d6)(o) && o.data.web_disable_password_health)
            return (
              await this.store.set({ credentialsAtRisk: {}, index: {} }),
              void this.eventEmitter.sendEvent("passwordHealthComputationFinished", null)
            );
          const n = await this.store.getState(),
            i = await (0, de.z)(this.credentialsGetter.get()),
            a = await (0, de.z)(this.breachesGetter.get()),
            c = await this.importantDomains.get();
          if ((0, h.hx)(i) || (0, h.hx)(a)) throw new Error("Failure getting vault data");
          const l = e?.length ?? 0,
            d = t?.length ?? 0,
            u = l > 0 || d > 0 || r,
            p = l + d <= 50,
            m = u && p ? n : void 0,
            v = u ? ((e, t) => e.reduce((e, r) => (void 0 === t[r] ? e : [...e, t[r]]), []))(e ?? [], i.data) : [],
            g = await ie({
              hasUpdatedBreaches: r,
              credentialUpdates: p ? v : [],
              allCredentials: i.data,
              breaches: a.data,
              importantDomains: c,
              healthState: m,
              deletedCredentialIds: p ? [...(t ?? [])] : []
            });
          await this.store.set({ ...g }), this.eventEmitter.sendEvent("passwordHealthComputationFinished", null);
        }
      };
      ue = (0, s.__decorate)([(0, A.GS)(), (0, s.__metadata)("design:paramtypes", [_, F.J, L.U, le, x, N.w])], ue);
      const pe = new D.WU();
      let he = class {
        constructor(e, t) {
          (this.store = e), (this.passwordHealthCalculationService = t);
        }
        update(e) {
          pe.runExclusive(async () => {
            const t = await this.store.getState();
            this.store.set(
              ((e, t) => {
                const { isOutdated: r } = t;
                if (!r) return { isOutdated: !1, lastUpdateTimestamp: e.lastUpdateTimestamp };
                const { updatedCredentialIds: s, deletedCredentialIds: o, hasUpdatedBreaches: n } = t,
                  i = e.isOutdated
                    ? { ...e }
                    : {
                        isOutdated: !0,
                        lastUpdateTimestamp: e.lastUpdateTimestamp,
                        updatedCredentialIds: {},
                        deletedCredentialIds: {},
                        hasUpdatedBreaches: !1
                      };
                return (
                  s && (i.updatedCredentialIds = { ...i.updatedCredentialIds, ...s.reduce((e, t) => ({ ...e, [t]: t }), {}) }),
                  o && (i.deletedCredentialIds = { ...i.deletedCredentialIds, ...o.reduce((e, t) => ({ ...e, [t]: t }), {}) }),
                  n && (i.hasUpdatedBreaches = n),
                  i
                );
              })(t, e)
            );
          });
        }
        async updateHealthState() {
          await pe.runExclusive(async () => {
            const e = await this.store.getState();
            (e.isOutdated || 0 === e.lastUpdateTimestamp || e.lastUpdateTimestamp + 864e5 < Date.now()) &&
              (await this.passwordHealthCalculationService.run(this.prepCacheStateProps(e)), await this.markAsUpToDate());
          });
        }
        prepCacheStateProps(e) {
          return e.isOutdated
            ? {
                updatedCredentialIds: Object.keys(e.updatedCredentialIds),
                deletedCredentialIds: Object.keys(e.deletedCredentialIds),
                hasUpdatedBreaches: e.hasUpdatedBreaches
              }
            : {};
        }
        async markAsUpToDate() {
          await this.store.set({ isOutdated: !1, lastUpdateTimestamp: new Date().getTime() });
        }
      };
      he = (0, s.__decorate)([(0, A.GS)(), (0, s.__metadata)("design:paramtypes", [R, ue])], he);
      let me = class {
        constructor(e) {
          this.healthCacheUpdaterService = e;
        }
        execute() {
          return this.healthCacheUpdaterService.update({ isOutdated: !0 }), Promise.resolve((0, h.Vp)(void 0));
        }
      };
      me = (0, s.__decorate)([(0, u.W)(w.t), (0, s.__metadata)("design:paramtypes", [he])], me);
      var ve = r(87065),
        ge = r(20754),
        ye = r(99097),
        fe = r(61076),
        _e = r(82567);
      let Se = class {
        constructor(e, t, r) {
          (this.store = e),
            (this.cacheStore = t),
            (this.healthCacheUpdater = r),
            (this.state$ = this.cacheStore.state$.pipe(
              (0, fe.V)(this.store.state$),
              (0, _e.b)(() => {
                this.healthCacheUpdater.updateHealthState();
              }),
              (0, ve.U)(([e, t]) => t)
            ));
        }
      };
      Se = (0, s.__decorate)([(0, A.GS)(), (0, s.__metadata)("design:paramtypes", [_, R, he])], Se);
      const Ee = (e, t) => {
        const r = ((e, t) => {
          if (0 !== t.length)
            switch (e) {
              case S._x.All: {
                const e = { [S.gI.Compromised]: 3, [S.gI.Weak]: 2, [S.gI.Reused]: 1, [S.gI.Excluded]: 0 };
                return t.reduce((t, r) => (t ? (e[r.riskType] > e[t.riskType] ? r : t) : r), void 0);
              }
              case S._x.Compromised:
                return t.find((e) => e.riskType === S.gI.Compromised);
              case S._x.Weak:
                return t.find((e) => e.riskType === S.gI.Weak);
              case S._x.Reused:
                return t.find((e) => e.riskType === S.gI.Reused);
              default:
                return;
            }
        })(e, t);
        if (!r) return;
        const s = { severity: S.bp.COMMON };
        switch (r.riskType) {
          case S.gI.Compromised: {
            const e = [...r.breaches].sort((e, t) => {
              const r = Date.parse(e.date),
                s = Date.parse(t.date);
              return r === s ? 0 : r < s ? 1 : -1;
            })[0];
            return { ...s, riskType: S.gI.Compromised, date: e.date, domain: e.domains[0] ?? null, severity: S.bp.STRONG };
          }
          case S.gI.Reused:
            return { ...s, riskType: S.gI.Reused, reuseCount: r.credentialIds.length };
          case S.gI.Weak:
            return { ...s, riskType: S.gI.Weak, strength: r.strength >= 1 ? S.ub.WEAK : S.ub.EXTREMELY_WEAK };
        }
      };
      let be = class {
        constructor(e) {
          this.store = e;
        }
        execute({ body: e }) {
          const { credentialId: t } = e;
          return this.store.state$.pipe(
            (0, ve.U)((e) =>
              e.credentialsAtRisk[t]
                ? (0, h.Vp)(
                    ((e) => {
                      const { excluded: t, risks: r } = e;
                      return { excluded: t, corruptionData: Ee(S._x.All, r) };
                    })(e.credentialsAtRisk[t])
                  )
                : (0, h.Vp)(null)
            )
          );
        }
      };
      be = (0, s.__decorate)([(0, ge.e)(ye.w), (0, s.__metadata)("design:paramtypes", [Se])], be);
      var we = r(75787),
        Ae = r(86742);
      const Te = (e) => (null === e ? null : Math.round(100 * e)),
        Ce = (e, t) => ({
          total: t,
          excluded: e.excluded.length,
          compromised: e.compromised.length,
          reused: e.reused.length,
          weak: e.weak.length,
          score: Te((0, Ae.R9)(e.corruptedCount, e.importantCorruptedCount, t - e.excluded.length))
        }),
        Ie = (e, t) => {
          const {
              compromised: r,
              reused: s,
              weak: o,
              corrupted: n,
              excluded: i,
              importantCorrupted: a
            } = Object.keys(e).reduce(
              (t, r) => ({
                compromised: t.compromised + e[r].compromised.length,
                reused: t.reused + e[r].reused.length,
                weak: t.weak + e[r].weak.length,
                corrupted: t.corrupted + e[r].corruptedCount,
                importantCorrupted: t.importantCorrupted + e[r].importantCorruptedCount,
                excluded: t.excluded + e[r].excluded.length
              }),
              { compromised: 0, reused: 0, weak: 0, corrupted: 0, importantCorrupted: 0, excluded: 0 }
            ),
            c = (0, Ae.R9)(n, a, t - i);
          return { compromised: r, reused: s, total: t, weak: o, score: Te(c), excluded: i };
        };
      function Oe(e, t) {
        return (0, h.hx)(e) ? 0 : Object.keys(e.data).filter((r) => e.data[r].spaceId === t).length;
      }
      let Pe = class {
        constructor(e, t, r) {
          (this.cacheStateStore = e), (this.credentialsGetter = t), (this.store = r);
        }
        execute({ body: e }) {
          const { spaceId: t = null } = e;
          return this.store.state$.pipe(
            (0, fe.V)(this.credentialsGetter.get(), this.cacheStateStore.state$),
            (0, ve.U)(([e, r, s]) => {
              if (null !== t && void 0 === e.index[t]) {
                const e = Oe(r, t);
                return (0, h.Vp)({
                  counters: { compromised: 0, reused: 0, score: 100, total: e, weak: 0, excluded: 0 },
                  isInitialized: s.lastUpdateTimestamp > 0
                });
              }
              if (null === t) {
                const t = (0, h.hx)(r) ? 0 : Object.keys(r.data).length;
                return (0, h.Vp)({ counters: Ie(e.index, t), isInitialized: s.lastUpdateTimestamp > 0 });
              }
              const o = Oe(r, t);
              return (0, h.Vp)({ counters: Ce(e.index[t], o), isInitialized: s.lastUpdateTimestamp > 0 });
            })
          );
        }
      };
      Pe = (0, s.__decorate)([(0, ge.e)(we.e), (0, s.__metadata)("design:paramtypes", [R, F.J, Se])], Pe);
      var Re = r(53489);
      const De = { [S.gI.Compromised]: 1, [S.gI.Reused]: 2, [S.gI.Weak]: 3, [S.gI.Excluded]: 4 },
        Ne = (e) =>
          [...e].sort((e, t) => {
            const r = De[e.corruptionData?.riskType ?? S.gI.Excluded],
              s = De[t.corruptionData?.riskType ?? S.gI.Excluded];
            if (r === s) {
              const r = ((e, t) =>
                e?.riskType === S.gI.Compromised && t?.riskType === S.gI.Compromised
                  ? Date.parse(t.date) - Date.parse(e.date)
                  : e?.riskType === S.gI.Reused && t?.riskType === S.gI.Reused
                  ? t.reuseCount - e.reuseCount
                  : e?.riskType === S.gI.Weak && t?.riskType === S.gI.Weak
                  ? e.strength === t.strength
                    ? 0
                    : e.strength === S.ub.WEAK
                    ? 1
                    : -1
                  : 0)(e.corruptionData, t.corruptionData);
              return 0 !== r ? r : e.title.localeCompare(t.title);
            }
            return r - s;
          }),
        Ue = (e, t) =>
          t === S._x.All ? [...new Set([...e[S.gI.Compromised], ...e[S.gI.Reused], ...e[S.gI.Weak], ...e[S.gI.Excluded]])] : e[t],
        Le = (e, t) => {
          const { id: r, title: s, login: o, email: n, autoProtected: i, shared: a, excluded: c, domains: l, risks: d } = e;
          return {
            id: r,
            title: s,
            login: o,
            email: n,
            autoProtected: i,
            shared: a,
            excluded: c,
            domainIcon: void 0,
            corruptionData: Ee(t, d),
            domain: l[0]
          };
        };
      let Fe = class {
        constructor(e) {
          this.store = e;
        }
        execute({ body: e }) {
          const { healthFilter: t, spaceId: r } = e;
          return this.store.state$.pipe(
            (0, ve.U)((e) =>
              null !== r && void 0 === e.index[r]
                ? (0, h.Vp)([])
                : (0, h.Vp)(
                    Ne(
                      ((e, t, r, s) => {
                        let o;
                        if (null !== e) o = Ue(t[e], r);
                        else {
                          if (r === S._x.All) return Object.values(s).map((e) => Le(e, r));
                          o = Object.keys(t).reduce((e, s) => [...e, ...Ue(t[s], r)], []);
                        }
                        return o.map((e) => Le(s[e], r));
                      })(r, e.index, t || S._x.All, e.credentialsAtRisk)
                    )
                  )
            )
          );
        }
      };
      Fe = (0, s.__decorate)([(0, ge.e)(Re.Q), (0, s.__metadata)("design:paramtypes", [Se])], Fe);
      var Me = r(65796);
      let xe = class {
        constructor(e) {
          this.store = e;
        }
        execute({ body: e }) {
          const { credentialIds: t } = e;
          return this.store.state$.pipe(
            (0, ve.U)((e) =>
              (0, h.Vp)(
                ((e, t) =>
                  Object.keys(e)
                    .reduce((t, r) => [...t, ...e[r].compromised], [])
                    .filter((e) => t.includes(e)))(e.index, t)
              )
            )
          );
        }
      };
      xe = (0, s.__decorate)([(0, ge.e)(Me.v), (0, s.__metadata)("design:paramtypes", [Se])], xe);
      var ke = r(32069);
      let Ge = class {
        constructor(e) {
          this.store = e;
        }
        execute({ body: e }) {
          const { breachId: t } = e;
          return this.store.state$.pipe(
            (0, ve.U)((e) =>
              (0, h.Vp)(
                ((e, t) =>
                  Object.keys(e.index).reduce(
                    (r, s) => [
                      ...r,
                      ...e.index[s].compromised.filter((r) => {
                        const s = G(e.credentialsAtRisk[r], S.gI.Compromised);
                        return s?.breaches.some((e) => e.breachId === t);
                      })
                    ],
                    []
                  ))(e, t)
              )
            )
          );
        }
      };
      Ge = (0, s.__decorate)([(0, ge.e)(ke.A), (0, s.__metadata)("design:paramtypes", [Se])], Ge);
      var Ke = r(7466);
      function Ve(e) {
        const t = {};
        return (
          Object.keys(e).forEach((r) => {
            const s = e[r].spaceId;
            void 0 === t[s] ? (t[s] = 1) : t[s]++;
          }),
          t
        );
      }
      let je = class {
        constructor(e, t) {
          (this.store = e), (this.credentialsGetter = t);
        }
        execute() {
          return this.store.state$.pipe(
            (0, fe.V)(this.credentialsGetter.get()),
            (0, ve.U)(([e, t]) => {
              const r = {};
              if (!(0, h.d6)(t)) throw new Error("Error while retrieving credentials");
              const s = Ve(t.data),
                o = Object.keys(t.data).length,
                n = (function (e) {
                  const t = {};
                  return (
                    Object.keys(e).forEach((r) => {
                      const s = G(e[r], S.gI.Compromised),
                        o = e[r].spaceId;
                      if (void 0 === s) return;
                      void 0 === t[o] && (t[o] = { breaches: new Set(), compromisedByBreaches: {} });
                      const n = s.breaches.map((e) => e.breachId);
                      (t[o].breaches = new Set([...t[o].breaches, ...n])), (t[o].compromisedByBreaches[r] = new Set(n));
                    }),
                    t
                  );
                })(e.credentialsAtRisk);
              let i = new Set([]),
                a = {},
                c = 0;
              return (
                Object.keys(e.index).forEach((t) => {
                  const o = e.index[t],
                    l = Ce(o, s[t]);
                  (r[t] = {
                    ...l,
                    breaches: n[t]?.breaches ?? new Set(),
                    compromisedByBreach: n[t]?.compromisedByBreaches ?? {},
                    corrupted: o.corruptedCount
                  }),
                    (i = new Set([...i, ...(n[t]?.breaches ?? new Set())])),
                    (a = { ...a, ...(n[t]?.compromisedByBreaches ?? {}) }),
                    (c += o.corruptedCount);
                }),
                (r.global = { ...Ie(e.index, o), breaches: i, compromisedByBreach: a, corrupted: c }),
                (0, h.Vp)(r)
              );
            })
          );
        }
      };
      je = (0, s.__decorate)([(0, ge.e)(Ke.b), (0, s.__metadata)("design:paramtypes", [_, F.J])], je);
      var Be = r(48844);
      const We = (e) => {
        if (!e) return;
        const t = e;
        if (
          !(
            (r = t.spaces) &&
            Array.isArray(r) &&
            0 !== r.length &&
            ((e) => {
              if (!e) return !1;
              const t = e;
              return !!(
                t.associatedEmail &&
                t.billingAdmins &&
                t.color &&
                t.info &&
                t.letter &&
                t.planType &&
                t.status &&
                t.teamAdmins &&
                t.teamId &&
                t.teamName &&
                t.tier
              );
            })(r.find((e) => "accepted" === e.status))
          )
        )
          return;
        var r;
        const s = t.spaces.find((e) => "accepted" === e.status);
        return s?.teamId;
      };
      let He = class {
        constructor(e) {
          this.carbon = e;
        }
        get() {
          const {
            queries: { carbonState: e }
          } = this.carbon;
          return e({ path: "userSession.localSettings.premiumStatus" }).pipe((0, Be.Qn)(We));
        }
      };
      He = (0, s.__decorate)([(0, A.GS)(), (0, s.__metadata)("design:paramtypes", [p._])], He);
      var ze = r(23347);
      const Qe = T.z.object({ lastSentDate: T.z.number() }),
        qe = (T.z.object({ lastSentDate: T.z.number(), lastHash: T.z.string() }), (e) => Qe.safeParse(e).success);
      class Ye extends (0, v.Q)({
        persist: !0,
        storage: {
          initialValue: { lastSentDate: 0, lastHash: "" },
          typeGuard: qe,
          schemaVersion: 2,
          migrateStorageSchema: () => ({ lastSentDate: 0, lastHash: "" })
        },
        scope: d.F.User,
        storeName: "user-activity-state",
        storeTypeGuard: qe,
        codec: g.E,
        capacity: ze.Y._001KB,
        isCache: !0
      }) {}
      let $e = class {
        constructor(e, t) {
          (this.client = e), (this.healthCacheUpdater = t);
        }
        async run() {
          await this.healthCacheUpdater.updateHealthState();
        }
      };
      $e = (0, s.__decorate)([(0, A.GS)(), (0, s.__metadata)("design:paramtypes", [N.w, he])], $e);
      var Xe = r(25547),
        Ze = r(68307),
        Je = r(87113),
        et = r(96303),
        tt = r(54066);
      const rt = 0;
      const st = (e) => Math.floor(e / 1e3);
      let ot = class {
        constructor(e, t, r, s, o, n) {
          (this.serverApiClient = e),
            (this.userActivityStore = t),
            (this.credentialsGetter = r),
            (this.store = s),
            (this.md5Hasher = o),
            (this.currentSpaceGetter = n);
        }
        async sendIfReportUpdated() {
          const e = await (0, de.z)(this.currentSpaceGetter.get());
          if (!(0, h.d6)(e)) throw new Error("Error while retrieving current space for activity report");
          const t = (0, h.db)(e);
          if (!t) return Promise.resolve();
          const r = await this.store.getState(),
            s = await this.userActivityStore.getState(),
            o = await (0, de.z)(this.credentialsGetter.get()),
            n = Date.now(),
            i = st(n),
            a = st(s.lastSentDate || n);
          if (!(0, h.d6)(o)) throw new Error("Error while retrieving credentials");
          const c = Ve(o.data),
            l = (function (e, t, r) {
              const s = e[r],
                o = t[r] ?? 0;
              return s
                ? {
                    checkedPasswords: s.excluded.length,
                    compromisedPasswords: s.compromised.length,
                    nbrPasswords: o,
                    reused: s.reused.length,
                    safePasswords: o - s.corruptedCount,
                    securityIndex: Te((0, Ae.R9)(s.corruptedCount, s.importantCorruptedCount, o - s.excluded.length)) ?? rt,
                    weakPasswords: s.weak.length
                  }
                : {
                    checkedPasswords: 0,
                    compromisedPasswords: 0,
                    nbrPasswords: o,
                    reused: 0,
                    safePasswords: o,
                    securityIndex: o < Ae.RG ? rt : Ae.JK,
                    weakPasswords: 0
                  };
            })(r.index, c, t),
            d = s.lastHash,
            u = (0, et.k)(this.md5Hasher.compute((0, tt.u)(JSON.stringify(l))));
          return (
            d === u ||
              (await (0, de.z)(
                this.serverApiClient.v1.useractivity.create({
                  userActivity: { securityIndex: 0 },
                  teamActivity: t ? { teamId: parseInt(t, 10), activity: l } : void 0,
                  relativeEnd: i,
                  relativeStart: a
                })
              ),
              this.userActivityStore.set({ lastSentDate: n, lastHash: u })),
            Promise.resolve()
          );
        }
      };
      ot = (0, s.__decorate)([(0, A.GS)(), (0, s.__metadata)("design:paramtypes", [Je.l, Ye, F.J, _, i.f, He])], ot);
      var nt = r(21242);
      let it = class {
        constructor(e, t) {
          (this.featureFlips = e), (this.userActivitySender = t);
        }
        async isPasswordHealthEnabled() {
          const { userFeatureFlips: e } = this.featureFlips.queries,
            t = await (0, de.z)(e());
          return !!(0, h.hx)(t) || !(0, h.db)(t).web_disable_password_health;
        }
        async handle() {
          (await this.isPasswordHealthEnabled()) && (await this.userActivitySender.sendIfReportUpdated());
        }
      };
      it = (0, s.__decorate)([(0, Ze.b)(Xe.w), (0, s.__metadata)("design:paramtypes", [nt.P, ot])], it);
      var at = r(20587),
        ct = r(11564),
        lt = r(93039);
      let dt = class {
        constructor(e, t) {
          (this.store = e), (this.cqrsClient = t);
        }
        async handle({ body: e }) {
          const { credentialId: t } = e,
            {
              commands: { trackEvent: r }
            } = this.cqrsClient.getClient(at.Yu),
            s = ((e) => ({ is_excluded: !!e && Y(e), is_weak: !!e && z(e), is_reused: !!e && Q(e), is_compromised: !!e && q(e) }))(
              (await (0, de.z)(this.store.state$)).credentialsAtRisk[t]
            );
          return r({ event: new lt.UserCredentialHealthReportEvent({ credentialSecurityStatus: s, itemId: t }) }), Promise.resolve(void 0);
        }
      };
      dt = (0, s.__decorate)([(0, Ze.b)(ct.p), (0, s.__metadata)("design:paramtypes", [Se, N.w])], dt);
      var ut = r(82706),
        pt = r(72989);
      let ht = class {
        constructor(e) {
          this.healthCacheUpdater = e;
        }
        handle({ body: e }) {
          const { ids: t, vaultItemType: r } = e;
          return (
            r === ut.U.Credential && this.healthCacheUpdater.update({ isOutdated: !0, updatedCredentialIds: t }), Promise.resolve(void 0)
          );
        }
      };
      ht = (0, s.__decorate)([(0, Ze.b)(pt.V), (0, s.__metadata)("design:paramtypes", [he])], ht);
      var mt = r(3137);
      let vt = class {
        constructor(e) {
          this.healthCacheUpdater = e;
        }
        handle({ body: e }) {
          const { ids: t, vaultItemType: r } = e;
          return (
            r === ut.U.Credential && this.healthCacheUpdater.update({ isOutdated: !0, updatedCredentialIds: t }), Promise.resolve(void 0)
          );
        }
      };
      vt = (0, s.__decorate)([(0, Ze.b)(mt.J), (0, s.__metadata)("design:paramtypes", [he])], vt);
      var gt = r(49135);
      let yt = class {
        constructor(e) {
          this.healthCacheUpdater = e;
        }
        handle({ body: e }) {
          const { ids: t, vaultItemType: r } = e;
          return (
            r === ut.U.Credential && this.healthCacheUpdater.update({ isOutdated: !0, deletedCredentialIds: t }), Promise.resolve(void 0)
          );
        }
      };
      yt = (0, s.__decorate)([(0, Ze.b)(gt.s), (0, s.__metadata)("design:paramtypes", [he])], yt);
      var ft = r(5998),
        _t = r(162);
      let St = class {
        constructor() {}
        execute({ body: e }) {
          const { password: t } = e;
          return (0, _t.D)(re(t)).pipe((0, ve.U)((e) => (0, h.Vp)(e)));
        }
      };
      St = (0, s.__decorate)([(0, ge.e)(ft.c), (0, s.__metadata)("design:paramtypes", [])], St);
      let Et = class {};
      Et = (0, s.__decorate)(
        [
          (0, a.Y)({
            api: o.d,
            crons: [{ handler: $e, name: "health-cache", periodInMinutes: 15, scope: d.F.User }],
            handlers: {
              commands: { updateIsCredentialExcluded: b, recalculatePasswordHealth: me },
              events: {
                ...(0, a.g)(o.d, { passwordHealthComputationFinished: it }),
                ...(0, a.g)(c.Y, { passwordAutofillPerformed: dt }),
                ...(0, a.g)(l.L, { updated: ht, created: vt, deleted: yt })
              },
              queries: {
                credentialHealthData: be,
                score: Pe,
                filterCredentials: Fe,
                compromisedCredentials: xe,
                compromisedCredentialsIdsForBreach: Ge,
                passwordHealthReport: je,
                scoreForPassword: St
              }
            },
            imports: [n.n],
            stores: [_, Ye, R],
            providers: [F.J, L.U, le, ue, he, $e, x, ot, Se, i.f, He],
            requiredFeatureFlips: ["web_disable_password_health"]
          })
        ],
        Et
      );
    },
    86742: (e, t, r) => {
      r.d(t, { JK: () => c, R9: () => l, RG: () => s });
      const s = 5,
        o = 0.6,
        n = 1,
        i = 1,
        a = 0.2,
        c = 100;
      function l(e, t, r) {
        if (r < s) return null;
        const c = o * Math.pow(1 - t / r, n),
          l = (1 - o) * Math.pow(1 - e / r, i);
        return a + (1 - a) * (c + l);
      }
    },
    63277: (e, t, r) => {
      r.d(t, { E: () => G });
      var s = r(88802),
        o = r(99634),
        n = r(93856),
        i = r(57668),
        a = r(57924),
        c = r(94189),
        l = r(20587),
        d = r(87279),
        u = r(93039),
        p = r(60399),
        h = r(59206),
        m = r(45883),
        v = r(86742),
        g = r(86252),
        y = r(48844),
        f = r(7165);
      const _ = f.z.object({ Id: f.z.string(), VaultItems: f.z.array(f.z.object({ Id: f.z.string() })) }),
        S = f.z.array(_);
      let E = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        get() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "userSession.personalData.collections" }).pipe(
            (0, y.Qn)((e) => {
              if (!((e) => S.safeParse(e).success)(e)) throw new Error("Collection array has a wrong format");
              return e;
            })
          );
        }
      };
      E = (0, s.__decorate)([(0, a.GS)(), (0, s.__metadata)("design:paramtypes", [g._])], E);
      var b = r(25029),
        w = r(95681),
        A = r(23347),
        T = r(28489),
        C = r(10722);
      const I = (e) => !(!e || "object" != typeof e) && (0, T.l$)(e, "lastSentDate") && "number" == typeof e.lastSentDate;
      class O extends (0, w.Q)({
        codec: C.E,
        persist: !0,
        storage: { initialValue: { lastSentDate: 0 }, schemaVersion: 1, typeGuard: I },
        scope: b.F.User,
        storeName: "vault-report",
        storeTypeGuard: I,
        capacity: A.Y._001KB,
        isCache: !0
      }) {}
      const P = {
        collections_count: -1,
        collections_shared_count: -1,
        multiple_collections_count: -1,
        multiple_collections_shared_count: -1,
        single_collection_count: -1,
        single_collection_shared_count: -1,
        shared_count: -1,
        total_count: -1
      };
      function R(e) {
        if (0 === e.length) return 0;
        const t = e.flatMap((e) => e.VaultItems),
          r = new Set(t.map((e) => e.Id)).size;
        return Math.round(t.length / r);
      }
      function D(e) {
        if (0 === e.length) return 0;
        let t = 0,
          r = 0;
        for (const s of e) s.VaultItems.length > 0 && ((r += s.VaultItems.length), t++);
        return Math.round(r / t);
      }
      function N(e, t) {
        let r = 0,
          s = 0;
        const o = e
          .map((e) => e.VaultItems)
          .reduce(
            (e, t) => (
              t.forEach((t) => {
                const r = t.Id;
                e[r] ? (e[r] += 1) : (e[r] = 1);
              }),
              e
            ),
            {}
          );
        return (
          Object.values(o).forEach((e) => {
            e > 1 ? r++ : s++;
          }),
          {
            collections_count: e.length,
            collections_shared_count: -1,
            multiple_collections_count: r,
            multiple_collections_shared_count: -1,
            single_collection_count: s,
            single_collection_shared_count: -1,
            shared_count: -1,
            total_count: t
          }
        );
      }
      function U(e, t) {
        return {
          itemsTotalCount: -1,
          itemsSharedCount: -1,
          collectionsTotalCount: e.length,
          collectionsSharedCount: -1,
          itemsPerCollectionAverageCount: D(e),
          collectionsPerItemAverageCount: R(e),
          ids: P,
          passwords: N(e, t),
          payments: P,
          personalInfo: P,
          secureNotes: P
        };
      }
      var L = r(9811);
      let F = class {
        constructor(e, t, r, s, o) {
          (this.breachesGetter = e), (this.credentialGetter = t), (this.vaultCollectionGetter = r), (this.store = s), (this.cqrsClient = o);
        }
        getSpaceScope(e) {
          switch (e) {
            case "":
              return u.Scope.Personal;
            case "global":
              return u.Scope.Global;
            default:
              return u.Scope.Team;
          }
        }
        async send() {
          const { queries: e } = this.cqrsClient.getClient(i.d),
            t = await (0, p.z)(e.passwordHealthReport()),
            r = await (0, p.z)(this.credentialGetter.get()),
            s = await (0, p.z)(this.vaultCollectionGetter.get()),
            o = await (0, p.z)(this.breachesGetter.getSupportedBreaches()),
            {
              commands: { trackEvent: n }
            } = this.cqrsClient.getClient(l.Yu);
          if (!((0, d.d6)(r) && (0, d.d6)(o) && (0, d.d6)(t) && (0, d.d6)(s)))
            return Promise.reject(new Error("Error while retrieving credentials/breaches/health/collections"));
          const a = (function (e) {
              const t = { global: { domainsWithoutAutofill: 0, nbrPasswords: 0, passwordsWithOtpCount: 0, protectedPasswords: 0 } };
              return (
                Object.keys(e).forEach((r) => {
                  const s = e[r].spaceId;
                  void 0 === t[s] &&
                    (t[s] = { domainsWithoutAutofill: 0, nbrPasswords: 0, passwordsWithOtpCount: 0, protectedPasswords: 0 }),
                    t[s].nbrPasswords++,
                    t.global.nbrPasswords++,
                    e[r].autoLogin || (t[s].domainsWithoutAutofill++, t.global.domainsWithoutAutofill++),
                    (e[r].otpSecret || e[r].otpUrl) && (t[s].passwordsWithOtpCount++, t.global.passwordsWithOtpCount++),
                    e[r].autoProtected && (t[s].protectedPasswords++, t.global.protectedPasswords++);
                }),
                t
              );
            })(r.data),
            c = (function (e, t) {
              const r = new Set(),
                s = new Set();
              e.forEach((e) => {
                (0, L.F7)(e.Content) ? s.add(e.Id) : r.add(e.Id);
              });
              const o = new Set(),
                n = new Set(),
                i = {
                  global: {
                    activePrivateBreachAlerts: 0,
                    activePublicBreachAlerts: 0,
                    passwordsCompromisedThroughPrivateBreaches: 0,
                    privateBreachAlerts: s.size,
                    publicBreachAlerts: r.size
                  }
                };
              return (
                Object.keys(t).forEach((e) => {
                  if ("global" === e) return;
                  const a = t[e];
                  void 0 === i[e] &&
                    (i[e] = {
                      activePrivateBreachAlerts: 0,
                      activePublicBreachAlerts: 0,
                      passwordsCompromisedThroughPrivateBreaches: 0,
                      privateBreachAlerts: s.size,
                      publicBreachAlerts: r.size
                    }),
                    [...a.breaches].forEach((t) => {
                      r.has(t) ? (i[e].activePublicBreachAlerts++, o.add(t)) : s.has(t) && (i[e].activePrivateBreachAlerts++, n.add(t));
                    }),
                    Object.keys(a.compromisedByBreach).forEach((t) => {
                      [...a.compromisedByBreach[t]].some((e) => s.has(e)) && i[e].passwordsCompromisedThroughPrivateBreaches++;
                    }),
                    (i.global.passwordsCompromisedThroughPrivateBreaches += i[e].passwordsCompromisedThroughPrivateBreaches);
                }),
                (i.global.activePrivateBreachAlerts = n.size),
                (i.global.activePublicBreachAlerts = o.size),
                i
              );
            })(o.data, t.data);
          return (
            Object.keys(a).forEach((e) => {
              const r = t.data[e],
                o = { scope: this.getSpaceScope(e), ...U(s.data, a[e].nbrPasswords), ...a[e], ...c[e] },
                i = r
                  ? {
                      passwordsSafeCount: a[e].nbrPasswords - r.corrupted,
                      passwordsExcludedCount: r.excluded,
                      passwordsCompromisedCount: r.compromised,
                      passwordsReusedCount: r.reused,
                      securityScore: r.score ?? void 0,
                      passwordsWeakCount: r.weak
                    }
                  : {
                      passwordsSafeCount: a[e].nbrPasswords,
                      passwordsExcludedCount: 0,
                      passwordsCompromisedCount: 0,
                      passwordsReusedCount: 0,
                      securityScore: a[e].nbrPasswords < v.RG ? void 0 : v.JK,
                      passwordsWeakCount: 0
                    };
              n({ event: new u.UserVaultReportEvent({ ...o, ...i }) });
            }),
            this.store.set({ lastSentDate: Date.now() }),
            Promise.resolve()
          );
        }
        async shouldBeSent() {
          return (await (0, p.z)(this.store.state$)).lastSentDate + 864e5 < Date.now();
        }
      };
      F = (0, s.__decorate)([(0, a.GS)(), (0, s.__metadata)("design:paramtypes", [h.U, m.J, E, O, c.w])], F);
      var M = r(25547),
        x = r(68307);
      let k = class {
        constructor(e) {
          this.vaultReportSender = e;
        }
        async handle() {
          (await this.vaultReportSender.shouldBeSent()) && this.vaultReportSender.send();
        }
      };
      k = (0, s.__decorate)([(0, x.b)(M.w), (0, s.__metadata)("design:paramtypes", [F])], k);
      let G = class {};
      G = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.f,
            handlers: { commands: {}, events: { ...(0, o.g)(i.d, { passwordHealthComputationFinished: k }) }, queries: {} },
            providers: [h.U, m.J, F, E],
            stores: [O]
          })
        ],
        G
      );
    },
    57578: (e, t, r) => {
      r.d(t, { y: () => i });
      var s = r(86952),
        o = r(75183),
        n = r(43832);
      const i = (0, s.Q)({ name: "userConsents", commands: { UpdateConsentsCommand: o.a }, events: {}, queries: { getConsents: n.o } });
    },
    75183: (e, t, r) => {
      r.d(t, { a: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    43832: (e, t, r) => {
      r.d(t, { o: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    46093: (e, t, r) => {
      r.d(t, { K: () => _ });
      var s = r(88802),
        o = r(99634),
        n = r(57578),
        i = r(63663),
        a = r(75183),
        c = r(60399),
        l = r(57924),
        d = r(87113),
        u = r(48844),
        p = r(87279);
      let h = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        updateConsents({ triggerBy: e, consents: t }) {
          return (0, c.z)(
            this.serverApiClient.v1.userconsents.updateConsents({ triggerBy: e, consents: t }).pipe(
              (0, u.DZ)((e) => {
                throw new Error(e.message);
              }),
              (0, u.lk)((e) => (0, p.Vp)(e.data))
            )
          );
        }
      };
      h = (0, s.__decorate)([(0, l.GS)(), (0, s.__metadata)("design:paramtypes", [d.l])], h);
      let m = class {
        constructor(e) {
          this.userConsentsService = e;
        }
        execute({ body: { triggerBy: e, consents: t } }) {
          return this.userConsentsService.updateConsents({ triggerBy: e, consents: t });
        }
      };
      m = (0, s.__decorate)([(0, i.W)(a.a), (0, s.__metadata)("design:paramtypes", [h])], m);
      var v = r(20754),
        g = r(43832);
      let y = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        execute() {
          return this.serverApiClient.v1.userconsents.getConsents({ format: "two-consents" }).pipe(
            (0, u.Qn)((e) => e.data),
            (0, u.DZ)((e) => {
              throw new Error(e.message);
            })
          );
        }
      };
      y = (0, s.__decorate)([(0, v.e)(g.o), (0, s.__metadata)("design:paramtypes", [d.l])], y);
      var f = r(93850);
      let _ = class {};
      _ = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.y,
            imports: [f.n],
            providers: [h],
            handlers: { commands: { updateConsents: m }, events: {}, queries: { getConsents: y } }
          })
        ],
        _
      );
    },
    89193: (e, t, r) => {
      r.d(t, { g: () => n });
      var s = r(86952),
        o = r(98976);
      const n = (0, s.Q)({ name: "activityLogs", commands: { storeActivityLogs: o.M }, events: {}, queries: {} });
    },
    98976: (e, t, r) => {
      r.d(t, { M: () => i, W: () => s });
      var s,
        o = r(74354),
        n = r(25029);
      !(function (e) {
        (e.AUDIT_LOG_MISSING_JSON_SCHEMA = "AUDIT_LOG_MISSING_JSON_SCHEMA"),
          (e.AUDIT_LOG_INVALID_JSON_FOR_JSON_SCHEMA = "AUDIT_LOG_INVALID_JSON_FOR_JSON_SCHEMA"),
          (e.AUDIT_LOG_INVALID_LOG_SCHEMA_TYPE_OR_VERSION = "AUDIT_LOG_INVALID_LOG_SCHEMA_TYPE_OR_VERSION"),
          (e.AUDIT_LOG_ERROR_READING_JSON_SCHEMA = "AUDIT_LOG_ERROR_READING_JSON_SCHEMA"),
          (e.STORING_SENSITIVE_AUDIT_LOGS_NOT_ALLOWED = "STORING_SENSITIVE_AUDIT_LOGS_NOT_ALLOWED");
      })(s || (s = {}));
      class i extends (0, o.g)({ scope: n.F.User }) {}
    },
    97494: (e, t, r) => {
      r.r(t),
        r.d(t, {
          ActivityLogCategory: () => o,
          ActivityLogType: () => s,
          StoreActivityLogsCommand: () => i.M,
          StoreActivityLogsInvalidLogsError: () => i.W,
          activityLogsApi: () => n.g
        });
      var s,
        o,
        n = r(89193),
        i = r(98976);
      !(function (e) {
        (e.UserInvited = "user_invited"),
          (e.UserReinvited = "user_reinvited"),
          (e.UserRemoved = "user_removed"),
          (e.TeamCaptainAdded = "team_captain_added"),
          (e.TeamCaptainRemoved = "team_captain_removed"),
          (e.GroupManagerAdded = "group_manager_added"),
          (e.GroupManagerRemoved = "group_manager_removed"),
          (e.MasterPasswordResetAccepted = "master_password_reset_accepted"),
          (e.MasterPasswordResetRefused = "master_password_reset_refused"),
          (e.BillingAdminAdded = "billing_admin_added"),
          (e.BillingAdminRemoved = "billing_admin_removed"),
          (e.UserGroupCreated = "user_group_created"),
          (e.UserGroupRenamed = "user_group_renamed"),
          (e.UserGroupDeleted = "user_group_deleted"),
          (e.UserJoinedUserGroup = "user_joined_user_group"),
          (e.UserLeftUserGroup = "user_left_user_group"),
          (e.UserInvitedToUserGroup = "user_invited_to_user_group"),
          (e.UserDeclinedInviteToUserGroup = "user_declined_invite_to_user_group"),
          (e.UserRemovedFromUserGroup = "user_removed_from_user_group"),
          (e.DomainRequested = "domain_requested"),
          (e.DomainValidated = "domain_validated"),
          (e.SensitiveLogsEnabled = "collect_sensitive_data_audit_logs_enabled"),
          (e.SensitiveLogsDisabled = "collect_sensitive_data_audit_logs_disabled"),
          (e.SsoIdpMetadataSet = "sso_idp_metadata_set"),
          (e.SsoServiceProviderUrlSet = "sso_service_provider_url_set"),
          (e.SsoEnabled = "sso_enabled"),
          (e.SsoDisabled = "sso_disabled"),
          (e.NitroSsoDomainProvisioned = "nitro_sso_domain_provisioned"),
          (e.NitroSsoDomainRemoved = "nitro_sso_domain_removed"),
          (e.NitroSsoDomainVerified = "nitro_sso_domain_verified"),
          (e.NitroSsoSetupStarted = "nitro_sso_setup_started"),
          (e.TeamNameChanged = "team_name_changed"),
          (e.NewBillingPeriodCreated = "new_billing_period_created"),
          (e.SeatsAdded = "seats_added"),
          (e.ContactEmailChanged = "contact_email_changed"),
          (e.MasterPasswordMobileResetEnabled = "master_password_mobile_reset_enabled"),
          (e.MasterPasswordMobileResetDisabled = "master_password_mobile_reset_disabled"),
          (e.MasterPasswordMobileReset = "master_password_mobile_reset"),
          (e.MasterPasswordChanged = "master_password_changed"),
          (e.MpToViewPasswordsEnabled = "mp_to_view_passwords_enabled"),
          (e.MpToViewPasswordsDisabled = "mp_to_view_passwords_disabled"),
          (e.TwoFactorAuthenticationLoginMethodAdded = "two_factor_authentication_login_method_added"),
          (e.TwoFactorAuthenticationLoginMethodRemoved = "two_factor_authentication_login_method_removed"),
          (e.BiometricSignInDisabled = "biometric_sign_in_disabled"),
          (e.DWMEmailAdded = "dwm_email_added"),
          (e.DWMEmailRemoved = "dwm_email_removed"),
          (e.DWMAlertReceived = "dwm_alert_received"),
          (e.UserDeviceAdded = "user_device_added"),
          (e.UserDeviceRemoved = "user_device_removed"),
          (e.UserDeviceLogin = "user_device_login"),
          (e.MasterPasswordReset = "master_password_reset"),
          (e.RequestedAccountRecovery = "requested_account_recovery"),
          (e.CompletedAccountRecovery = "completed_account_recovery"),
          (e.UserSharedCredentialWithGroup = "user_shared_credential_with_group"),
          (e.UserSharedCredentialWithEmail = "user_shared_credential_with_email"),
          (e.UserSharedCredentialWithExternal = "user_shared_credential_with_external"),
          (e.UserSharedSecureNoteWithGroup = "user_shared_secure_note_with_group"),
          (e.UserSharedSecureNoteWithEmail = "user_shared_secure_note_with_email"),
          (e.UserSharedSecureNoteWithExternal = "user_shared_secure_note_with_external"),
          (e.UserRevokedSharedCredentialGroup = "user_revoked_shared_credential_group"),
          (e.UserRevokedSharedCredentialEmail = "user_revoked_shared_credential_email"),
          (e.UserRevokedSharedCredentialExternal = "user_revoked_shared_credential_external"),
          (e.UserRevokedSharedSecureNoteGroup = "user_revoked_shared_secure_note_group"),
          (e.UserRevokedSharedSecureNoteEmail = "user_revoked_shared_secure_note_email"),
          (e.UserRevokedSharedSecureNoteExternal = "user_revoked_shared_secure_note_external"),
          (e.UserAcceptedSharingInviteSecureNote = "user_accepted_sharing_invite_secure_note"),
          (e.UserRejectedSharingInviteSecureNote = "user_rejected_sharing_invite_secure_note"),
          (e.UserAcceptedSharingInviteCredential = "user_accepted_sharing_invite_credential"),
          (e.UserRejectedSharingInviteCredential = "user_rejected_sharing_invite_credential"),
          (e.UserAddedCredentialToCollection = "user_added_credential_to_collection"),
          (e.UserCreatedCollection = "user_created_collection"),
          (e.UserDeletedCollection = "user_deleted_collection"),
          (e.UserImportedCollection = "user_imported_collection"),
          (e.UserRemovedCredentialFromCollection = "user_removed_credential_from_collection"),
          (e.UserRenamedCollection = "user_renamed_collection"),
          (e.UserSharedCollectionWithUser = "user_shared_collection_with_user"),
          (e.UserSharedCollectionWithGroup = "user_shared_collection_with_usergroup"),
          (e.UserAcceptedCollection = "user_accepted_collection_invite"),
          (e.UserRejectedCollection = "user_rejected_collection_invite"),
          (e.UserAddedItemToCollection = "user_added_credential_to_shared_collection"),
          (e.UserRemovedItemFromCollection = "user_removed_credential_from_shared_collection"),
          (e.UserUpdatedGroupRoleInCollection = "user_updated_collection_usergroup"),
          (e.UserUpdatedUserRoleInCollection = "user_updated_collection_user"),
          (e.UserRenamedSharedCollection = "user_renamed_shared_collection"),
          (e.UserRevokedGroupFromCollection = "user_revoked_collection_usergroup"),
          (e.UserRevokedUserFromCollection = "user_revoked_collection_user"),
          (e.UserCreatedCredential = "user_created_credential"),
          (e.UserModifiedCredential = "user_modified_credential"),
          (e.UserDeletedCredential = "user_deleted_credential"),
          (e.UserImportedCredentials = "user_imported_credentials"),
          (e.UserCreatedSecureNote = "user_created_secure_note"),
          (e.UserModifiedSecureNote = "user_modified_secure_note"),
          (e.UserDeletedSecureNote = "user_deleted_secure_note");
      })(s || (s = {})),
        (function (e) {
          (e.Account = "account"),
            (e.Authentication = "authentication"),
            (e.DarkWebMonitoring = "dark_web_monitoring"),
            (e.Groups = "groups"),
            (e.ImportExport = "import_export"),
            (e.TeamSettings = "team_settings"),
            (e.TeamSettingsActiveDirectory = "team_settings_activedirectory"),
            (e.TeamSettingsPolicies = "team_settings_policies"),
            (e.TeamSettingsSAMLProvisioning = "team_settings_samlprovisioning"),
            (e.TeamSettingsSCIM = "team_settings_scim"),
            (e.TeamSettingsSSO = "team_settings_sso"),
            (e.Sharing = "sharing"),
            (e.UserSettings = "user_settings"),
            (e.UserSettingsAccountRecovery = "user_settings_accountrecovery"),
            (e.Users = "users"),
            (e.VaultIDs = "vault_ids"),
            (e.VaultPasswords = "vault_passwords"),
            (e.VaultPayments = "vault_payments"),
            (e.VaultPersonalInfo = "vault_personalinfo"),
            (e.VaultSecureNotes = "vault_securenotes");
        })(o || (o = {}));
    },
    4070: (e, t, r) => {
      r.d(t, { Z: () => O });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(89193),
        a = r(25029),
        c = r(95681),
        l = r(23347),
        d = r(10722);
      const u = (e) => !(!e || "object" != typeof e) && "activityLogsQueue" in e && Array.isArray(e.activityLogsQueue);
      class p extends (0, c.Q)({
        persist: !0,
        storage: { initialValue: { activityLogsQueue: [] }, typeGuard: u, schemaVersion: 1 },
        scope: a.F.User,
        storeName: "activity-logs",
        storeTypeGuard: u,
        codec: d.E,
        capacity: l.Y._010KB
      }) {}
      var h = r(86252),
        m = r(57924),
        v = r(48844);
      let g = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        get() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "state.userSession.spaceData.spaces" }).pipe(
            (0, v.Qn)((e) => {
              if (
                !((e) =>
                  !!Array.isArray(e) &&
                  (0 === e.length ||
                    e.every((e) => {
                      const t = e;
                      return "string" == typeof t?.teamId && "object" == typeof t?.details && "string" == typeof t?.details.status;
                    })))(e)
              )
                throw new Error("Bad space item format");
              const t = e.find((e) => "accepted" === e.details.status),
                r = t?.details.info.collectSensitiveDataAuditLogsEnabled;
              return Boolean(r);
            })
          );
        }
      };
      g = (0, s.__decorate)([(0, m.GS)(), (0, s.__metadata)("design:paramtypes", [h._])], g);
      var y = r(64987),
        f = r(98976),
        _ = r(63663),
        S = r(87279),
        E = r(60399);
      const b = new y.WU();
      let w = class {
        constructor(e, t) {
          (this.activityLogsStore = e), (this.sensitiveLogsEnabledGetter = t);
        }
        async execute({ body: { activityLogs: e } }) {
          const t = await (0, E.z)(this.sensitiveLogsEnabledGetter.get());
          if (!(0, S.d6)(t)) throw new Error("Error while getting sensitive logs enabled data");
          const r = e.filter((e) => !e.is_sensitive || t.data);
          return r.length && (await this.updateActivityLogsState(r)), Promise.resolve((0, S.Vp)(void 0));
        }
        async updateActivityLogsState(e) {
          await b.runExclusive(async () => {
            const t = await this.activityLogsStore.getState();
            await this.activityLogsStore.set({ ...t, activityLogsQueue: [...t.activityLogsQueue, ...e] });
          });
        }
      };
      w = (0, s.__decorate)([(0, _.W)(f.M), (0, s.__metadata)("design:paramtypes", [p, g])], w);
      var A = r(9671),
        T = r(87113);
      let C = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        async sendLogs(e) {
          return await (0, E.z)(
            this.serverApiClient.v1.teams.storeAuditLogs({ auditLogs: e }).pipe(
              (0, v.DZ)(() => (0, S.Rn)("storeActivityLogs failed with an unknown HTTP error")),
              (0, v.lk)((e) =>
                e.data.invalidAuditLogs.length
                  ? (0, S.Vp)(this.serverToTechnicalSchemaErrorsMapper(e.data.invalidAuditLogs))
                  : (0, S.Vp)(void 0)
              )
            )
          );
        }
        serverToTechnicalSchemaErrorsMapper(e) {
          return { invalidActivityLogs: e.map((e) => ({ uuid: e.uuid, error: f.W[e.error] })) };
        }
      };
      C = (0, s.__decorate)([(0, m.GS)(), (0, s.__metadata)("design:paramtypes", [T.l])], C);
      let I = class {
        constructor(e, t, r) {
          (this.activityLogsService = e), (this.allowedToFail = t), (this.activityLogsStore = r);
        }
        async isRunnable() {
          const { activityLogsQueue: e } = await this.activityLogsStore.getState();
          return e.length > 0;
        }
        async run() {
          const { activityLogsQueue: e } = await this.activityLogsStore.getState();
          await this.attemptSendLogsToServer(e);
        }
        async attemptSendLogsToServer(e) {
          const t = [...e];
          for (; t.length > 0; ) {
            const e = t.splice(0, 40);
            await this.sendLogsToServer(e);
          }
        }
        async sendLogsToServer(e) {
          const t = await this.activityLogsService.sendLogs(e);
          if ((0, S.hx)(t)) return;
          const r = e.map((e) => e.uuid);
          if ((await this.removeSentLogsFromActivityLogsQueue(r), t.data?.invalidActivityLogs)) {
            const r = this.createLogsTypeMap(e),
              s = (e) => () => {
                const t = r.get(e.uuid);
                throw new Error(`An activity log with a log type of ${t} has been detected to have a technical/schema error. (${e.error})`);
              };
            await this.allowedToFail.do((t.data.invalidActivityLogs ?? []).map(s));
          }
        }
        createLogsTypeMap(e) {
          const t = new Map();
          return (
            e.forEach((e) => {
              t.set(e.uuid, e.log_type);
            }),
            t
          );
        }
        async removeSentLogsFromActivityLogsQueue(e) {
          const { activityLogsQueue: t } = await this.activityLogsStore.getState(),
            r = t.filter((t) => !e.includes(t.uuid));
          await this.activityLogsStore.set({ activityLogsQueue: [...r] });
        }
      };
      I = (0, s.__decorate)([(0, m.GS)(), (0, s.__metadata)("design:paramtypes", [C, A.J, p])], I);
      let O = class {};
      O = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.g,
            imports: [n.n],
            providers: [C, g],
            stores: [p],
            crons: [{ handler: I, periodInMinutes: 1, name: "activity-logs-cron", scope: a.F.User }],
            handlers: { commands: { storeActivityLogs: w }, events: {}, queries: {} }
          })
        ],
        O
      );
    },
    70305: (e, t, r) => {
      r.d(t, { v: () => i });
      var s = r(86952),
        o = r(67490),
        n = r(98193);
      const i = (0, s.Q)({
        name: "changeMasterPassword",
        commands: { temporarySendMasterPasswordChangedEvent: n.n },
        events: { masterPasswordChanged: o.D },
        queries: {}
      });
    },
    98193: (e, t, r) => {
      r.d(t, { n: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    67490: (e, t, r) => {
      r.d(t, { D: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.User }) {}
    },
    29597: (e, t, r) => {
      r.r(t),
        r.d(t, {
          ChangeSessionKeyErrorTypes: () => d.eq,
          CheckSessionKeyErrorTypes: () => _.f3,
          CheckSessionKeyQuery: () => h.Z,
          CheckSessionSessionNotCreated: () => _.OT,
          CloseUserSessionCommand: () => i.V,
          CreateUserSessionCommand: () => a.lk,
          CreatedSessionState: () => u.XL,
          CreatedSessionsStateQuery: () => u.iH,
          DeleteLocalSessionCommand: () => l.G,
          DeviceLimitQuery: () => T.X,
          FlushLocalDataCommand: () => o.e,
          IsAllowedQuery: () => A.bY,
          MasterPasswordChangedEvent: () => E.D,
          MultiAccountNotYetSupported: () => c.y9,
          NotAllowedReason: () => A.Oq,
          OpenUserSessionCommand: () => c.Dx,
          PlatformView: () => T.i,
          PrepareLocalDataFlushCommand: () => n.X,
          SelectedOpenedSessionQuery: () => p._,
          SessionAlreadyExists: () => a.X0,
          SessionAlreadyOpened: () => c.mR,
          SessionClient: () => f.x,
          SessionCloseMode: () => m.K,
          SessionClosedEvent: () => m.X,
          SessionClosingEvent: () => v.Z,
          SessionCreationErrorTypes: () => a.v5,
          SessionKeyChecker: () => _.BD,
          SessionNotCreated: () => c.aK,
          SessionOpenErrorTypes: () => c.T8,
          SessionOpenedEvent: () => g.M,
          SessionOpeningEvent: () => y.$,
          SessionQueryParamsSchema: () => u.cM,
          SessionState: () => u.sM,
          SessionStateQuery: () => u.ZP,
          TemporarySendMasterPasswordChangedEventCommand: () => b.n,
          UnableToUpdateSessionKeyForNonExistingAccount: () => d.pX,
          UnableToUpdateSessionSessionNotOpened: () => d.nA,
          UpdateUserSessionKeyCommand: () => d.yt,
          UserNotLogged: () => A.Fh,
          changeMasterPasswordApi: () => S.v,
          sessionApi: () => s.Q,
          vaultAccessApi: () => w.Y
        });
      var s = r(34710),
        o = r(42858),
        n = r(15473),
        i = r(86334),
        a = r(69207),
        c = r(37334),
        l = r(54703),
        d = r(90032),
        u = r(55510),
        p = r(31839),
        h = r(45911),
        m = r(66134),
        v = r(82398),
        g = r(5237),
        y = r(90775),
        f = r(89358),
        _ = r(57385),
        S = r(70305),
        E = r(67490),
        b = r(98193),
        w = r(65766),
        A = r(57755),
        T = r(49273);
    },
    34710: (e, t, r) => {
      r.d(t, { Q: () => f });
      var s = r(86952),
        o = r(55510),
        n = r(45911),
        i = r(5237),
        a = r(82398),
        c = r(66134),
        l = r(42858),
        d = r(15473),
        u = r(69207),
        p = r(37334),
        h = r(86334),
        m = r(54703),
        v = r(90775),
        g = r(31839),
        y = r(90032);
      const f = (0, s.Q)({
        name: "session",
        commands: {
          FlushLocalDataCommand: l.e,
          PrepareLocalDataFlushCommand: d.X,
          CreateUserSessionCommand: u.lk,
          OpenUserSessionCommand: p.Dx,
          CloseUserSessionCommand: h.V,
          DeleteLocalSessionCommand: m.G,
          UpdateUserSessionKeyCommand: y.yt
        },
        queries: { sessionState: o.ZP, createdSessionsState: o.iH, selectedOpenedSession: g._, checkSessionKey: n.Z },
        events: { SessionOpenedEvent: i.M, SessionClosingEvent: a.Z, SessionClosedEvent: c.X, SessionOpeningEvent: v.$ }
      });
    },
    86334: (e, t, r) => {
      r.d(t, { V: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    69207: (e, t, r) => {
      r.d(t, { X0: () => a, lk: () => c, v5: () => s });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        e.AlreadyExists = "alreadyExists";
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.AlreadyExists, "The session already exists. Delete it first.") {}
      class c extends (0, o.g)({ scope: n.F.Device }) {}
    },
    54703: (e, t, r) => {
      r.d(t, { G: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    42858: (e, t, r) => {
      r.d(t, { e: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    37334: (e, t, r) => {
      r.d(t, { Dx: () => d, T8: () => s, aK: () => a, mR: () => c, y9: () => l });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.NotCreated = "notCreated"), (e.AlreadyOpened = "alreadyOpened"), (e.MultiAccountNotYetSupported = "multiAccountNotYetSupported");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.NotCreated, "The session has not been created. Create it first.") {}
      class c extends (0, i.Hu)(s.AlreadyOpened, "The session is already opened for this user. Close it first.") {}
      class l extends (0, i.Hu)(s.MultiAccountNotYetSupported, "Another session is opened. Close it first.") {}
      class d extends (0, o.g)({ scope: n.F.Device }) {}
    },
    15473: (e, t, r) => {
      r.d(t, { X: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    90032: (e, t, r) => {
      r.d(t, { eq: () => s, nA: () => c, pX: () => a, yt: () => l });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.NotCreated = "notCreated"), (e.NotOpened = "notOpened");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.NotCreated, "The session has not been created. Create it first.") {}
      class c extends (0, i.Hu)(s.NotOpened, "The session has not been opened") {}
      class l extends (0, o.g)({ scope: n.F.Device }) {}
    },
    66134: (e, t, r) => {
      r.d(t, { K: () => s, X: () => i });
      var s,
        o = r(88885),
        n = r(25029);
      !(function (e) {
        (e.Close = "close"), (e.Lock = "lock");
      })(s || (s = {}));
      class i extends (0, o.d)({ scope: n.F.Device }) {}
    },
    82398: (e, t, r) => {
      r.d(t, { Z: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.User }) {}
    },
    5237: (e, t, r) => {
      r.d(t, { M: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.User }) {}
    },
    90775: (e, t, r) => {
      r.d(t, { $: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.User }) {}
    },
    45911: (e, t, r) => {
      r.d(t, { Z: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    31839: (e, t, r) => {
      r.d(t, { _: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    55510: (e, t, r) => {
      r.d(t, { XL: () => c, ZP: () => l, cM: () => i, iH: () => d, sM: () => a });
      var s = r(99059),
        o = r(25029),
        n = r(7165);
      const i = n.z.object({ email: n.z.string() });
      var a, c;
      !(function (e) {
        (e.NotCreated = "notCreated"), (e.Closed = "closed"), (e.Open = "open");
      })(a || (a = {}));
      class l extends (0, s.k)({ scope: o.F.Device }) {}
      !(function (e) {
        (e.Closed = "closed"), (e.Open = "open");
      })(c || (c = {}));
      class d extends (0, s.k)({ scope: o.F.Device }) {}
    },
    57385: (e, t, r) => {
      r.d(t, { BD: () => i, OT: () => n, f3: () => s });
      var s,
        o = r(96168);
      !(function (e) {
        e.SessionNotCreated = "notCreated";
      })(s || (s = {}));
      class n extends (0, o.Hu)(s.SessionNotCreated, "The session has not been created. Create it first.") {}
      class i {}
    },
    89358: (e, t, r) => {
      r.d(t, { x: () => n });
      var s = r(67837),
        o = r(34710);
      class n extends (0, s.E)(o.Q) {}
      (0, s.K)(o.Q, n);
    },
    65766: (e, t, r) => {
      r.d(t, { Y: () => i });
      var s = r(86952),
        o = r(57755),
        n = r(49273);
      const i = (0, s.Q)({ name: "vaultAccess", commands: {}, events: {}, queries: { isAllowed: o.bY, deviceLimit: n.X } });
    },
    49273: (e, t, r) => {
      r.d(t, { X: () => i, i: () => s });
      var s,
        o = r(99059),
        n = r(25029);
      !(function (e) {
        (e.Android = "android"),
          (e.DesktopMacOS = "macosx"),
          (e.DesktopWindows = "windows"),
          (e.IPad = "ipad"),
          (e.IPhone = "iphone"),
          (e.IPod = "ipod"),
          (e.Other = "other"),
          (e.StandaloneExtension = "saex"),
          (e.TeamAdminConsole = "tac"),
          (e.WebApp = "webapp");
      })(s || (s = {}));
      class i extends (0, o.k)({ scope: n.F.User }) {}
    },
    57755: (e, t, r) => {
      r.d(t, { Fh: () => a, Oq: () => s, bY: () => c });
      var s,
        o = r(99059),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.DeviceLimited = "DeviceLimited"),
          (e.Requires2FAEnforcement = "Requires2FAEnforcement"),
          (e.RequiresSSO2MPMigration = "RequiresSSO2MPMigration"),
          (e.RequiresMP2SSOMigration = "RequiresMP2SSOMigration"),
          (e.NoActiveUser = "NoActiveUser");
      })(s || (s = {}));
      class a extends (0, i.Hu)("UserNotLogged", "Please log the user") {}
      class c extends (0, o.k)({ scope: n.F.Device }) {}
    },
    28365: (e, t, r) => {
      r.d(t, { M: () => h });
      var s = r(88802),
        o = r(99634),
        n = r(70305),
        i = r(81459),
        a = r(57924);
      let c = class extends i.f {};
      c = (0, s.__decorate)([(0, a.GS)()], c);
      var l = r(98193),
        d = r(63663),
        u = r(87279);
      let p = class {
        constructor(e) {
          this.eventEmitter = e;
        }
        execute() {
          return this.eventEmitter.sendEvent("masterPasswordChanged", void 0), Promise.resolve((0, u.Vp)(void 0));
        }
      };
      p = (0, s.__decorate)([(0, d.W)(l.n), (0, s.__metadata)("design:paramtypes", [c])], p);
      let h = class {};
      h = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.v,
            handlers: { commands: { temporarySendMasterPasswordChangedEvent: p }, events: {}, queries: {} },
            providers: [c]
          })
        ],
        h
      );
    },
    32109: (e, t, r) => {
      r.d(t, { P: () => o });
      var s = r(94805);
      const o = (e) => {
        const [, , t] = e.split("$");
        return "pbkdf2" === t ? s.E1 : s.mr;
      };
    },
    87918: (e, t, r) => {
      r.d(t, { t: () => u });
      var s = r(88802),
        o = r(60399),
        n = r(86252),
        i = r(57924),
        a = r(54066),
        c = r(43293),
        l = r(48844),
        d = r(25594);
      let u = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.flexibleDecryptor = t);
        }
        async decrypt(e) {
          const { carbonStateList: t } = this.carbonLegacyClient.queries;
          return await (0, o.z)(
            t({ paths: ["userSession.session.localKey", "userSession.session.masterPassword", "userSession.session.serverKey"] }).pipe(
              (0, l.nb)({
                success: ([t, r, s]) => {
                  if ("string" == typeof t) return this.flexibleDecryptor.decrypt((0, a.u)(t), e);
                  if ("string" == typeof r && "string" == typeof s) {
                    const t = s + r,
                      o = (0, c.N)(t);
                    return this.flexibleDecryptor.decrypt((0, a.u)(o), e);
                  }
                  throw new Error("Wrong types for local data key");
                },
                failure: () => {
                  throw new Error("Failure getting state list");
                }
              })
            )
          );
        }
      };
      u = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [n._, d.a])], u);
    },
    12642: (e, t, r) => {
      r.d(t, { Y: () => a });
      var s = r(88802),
        o = r(57924),
        n = r(87918),
        i = r(73378);
      let a = class {
        constructor(e, t) {
          (this.localDataKeyDecryptor = e), (this.localDatKeyaEncryptor = t);
        }
        encode(e) {
          return this.localDatKeyaEncryptor.encrypt(e);
        }
        decode(e) {
          return this.localDataKeyDecryptor.decrypt(e);
        }
      };
      a = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.t, i.n])], a);
    },
    73378: (e, t, r) => {
      r.d(t, { n: () => g });
      var s = r(88802),
        o = r(60399),
        n = r(57924),
        i = r(86252),
        a = r(48844),
        c = r(94805),
        l = r(16698),
        d = r(54066),
        u = r(43293),
        p = r(66122),
        h = r(56268),
        m = r(19603),
        v = r(32109);
      let g = class {
        constructor(e, t, r) {
          (this.carbonLegacyClient = e), (this.flexibleEncryptor = t), (this.randomValuesGetter = r);
        }
        async encrypt(e) {
          const { carbonStateList: t } = this.carbonLegacyClient.queries;
          return await (0, o.z)(
            t({
              paths: [
                "userSession.session.localKey",
                "userSession.session.masterPassword",
                "userSession.session.serverKey",
                "userSession.personalSettings.CryptoFixedSalt",
                "userSession.personalSettings.CryptoUserPayload"
              ]
            }).pipe(
              (0, a.nb)({
                success: ([t, r, s, o, n]) => {
                  if ("string" == typeof t) return this.flexibleEncryptor.encrypt((0, d.u)(t), e, c.oo, l.gO);
                  if ("string" == typeof r && "string" == typeof s) {
                    const t = s + r,
                      i = (0, u.N)(t),
                      a = "string" == typeof n ? (0, v.P)(n) : c.mr,
                      { saltLength: h } = a,
                      m = "string" === o ? (0, p.R)(o) : this.randomValuesGetter.get(h);
                    return this.flexibleEncryptor.encrypt((0, d.u)(i), e, a, l.Nw, { salt: m });
                  }
                  throw new Error("Wrong types for local data key");
                },
                failure: () => {
                  throw new Error("Failure getting state list");
                }
              })
            )
          );
        }
      };
      g = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [i._, h._, m.Y])], g);
    },
    14785: (e, t, r) => {
      r.d(t, { _: () => Te });
      var s = r(88802),
        o = r(99634),
        n = r(34710),
        i = r(57385),
        a = r(37935),
        c = r(6936),
        l = r(87918),
        d = r(73378),
        u = r(12642),
        p = r(57924),
        h = r(25594),
        m = r(66122),
        v = r(82933),
        g = r(54066),
        y = r(95087);
      let f = class {
        constructor(e) {
          this.flexibleDecryptor = e;
        }
        decrypt(e, t) {
          const { flexibleDecryptor: r } = this;
          let s;
          switch (t.type) {
            case "sso":
              s = (0, m.R)(t.ssoKey);
              break;
            case "mp":
              s = (0, v.K)((0, g.u)(t.masterPassword), (0, m.R)(t.secondaryKey ?? ""));
              break;
            default:
              (0, y.U)(t);
          }
          return r.decrypt(s, e);
        }
      };
      f = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.a])], f);
      var _ = r(56268),
        S = r(16698);
      let E = class {
        constructor(e) {
          this.flexibleEncryptor = e;
        }
        encrypt(e, t, r) {
          const { flexibleEncryptor: s } = this,
            { derivation: o, salt: n } = r,
            { algorithm: i } = o;
          if ("noderivation" === i) throw new Error("Session key requires derivation");
          let a;
          switch (t.type) {
            case "sso":
              a = (0, m.R)(t.ssoKey);
              break;
            case "mp":
              a = (0, v.K)((0, g.u)(t.masterPassword), (0, m.R)(t.secondaryKey ?? ""));
              break;
            default:
              (0, y.U)(t);
          }
          return s.encrypt(a, e, o, S.Nw, { salt: (0, m.R)(n) });
        }
      };
      E = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [_._])], E);
      var b = r(87279),
        w = r(87065),
        A = r(25029),
        T = r(95681),
        C = r(23347),
        I = r(10722);
      const O = (e) =>
        !(!e || "object" != typeof e) &&
        (0 === Object.keys(e).length || Object.entries(e).every(([, e]) => "object" == typeof e && "derivation" in e && "salt" in e));
      class P extends (0, T.Q)({
        storeName: "sessions-crypto-settings-store",
        scope: A.F.Device,
        capacity: C.Y._010KB,
        persist: !0,
        storage: { schemaVersion: 1, initialValue: {}, typeGuard: O },
        codec: I.E
      }) {}
      let R = class {
        constructor(e) {
          this.sessionsCryptoSettingsStore = e;
        }
        getConfig(e) {
          return this.sessionsCryptoSettingsStore.state$.pipe(
            (0, w.U)((t) => {
              if (e in t) {
                const { derivation: r, salt: s } = t[e];
                return (0, b.Vp)({ derivation: r, salt: s });
              }
              throw new Error("No crypto settings found for this user");
            })
          );
        }
      };
      R = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [P])], R);
      var D = r(63663),
        N = r(71949),
        U = r(42858);
      let L = class {
        constructor(e) {
          this.storeFlusher = e;
        }
        async execute() {
          return await this.storeFlusher.flush(), Promise.resolve((0, b.Vp)(void 0));
        }
      };
      L = (0, s.__decorate)([(0, D.W)(U.e), (0, s.__metadata)("design:paramtypes", [N.X])], L);
      var F = r(15473);
      let M = class {
        constructor(e) {
          this.storeFlusher = e;
        }
        async execute() {
          return await this.storeFlusher.prepare(), Promise.resolve((0, b.Vp)(void 0));
        }
      };
      M = (0, s.__decorate)([(0, D.W)(F.X), (0, s.__metadata)("design:paramtypes", [N.X])], M);
      var x = r(86252),
        k = r(69207),
        G = r(55510),
        K = r(64987),
        V = r(60399),
        j = r(10370);
      let B = class {
        constructor(e, t) {
          (this.encryptor = e), (this.settings = t);
        }
        decode(e) {
          const t = {};
          for (const [r, s] of Object.entries(e)) t[r] = { status: "closed", encryptedLocalKey: s.encryptedLocalKey };
          return t;
        }
        async encode(e) {
          const t = {};
          for (const [r, s] of Object.entries(e)) {
            if ("closed" === s.status) {
              t[r] = { encryptedLocalKey: s.encryptedLocalKey };
              continue;
            }
            if ("sso" === s.sessionKey.type) continue;
            if (!s.localKey) {
              t[r] = { encryptedLocalKey: null };
              continue;
            }
            const e = await (0, V.z)(this.settings.getConfig(r));
            if (!(0, b.d6)(e)) throw new Error("Fail to get crypto settings");
            t[r] = { encryptedLocalKey: (0, j.s)(await this.encryptor.encrypt((0, m.R)(s.localKey), s.sessionKey, e.data)) };
          }
          return t;
        }
      };
      B = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [E, R])], B);
      class W extends (0, T.Q)({
        storeName: "sessions-state-store",
        scope: A.F.Device,
        capacity: C.Y._010KB,
        persist: !0,
        isCache: !0,
        codec: B,
        storage: { initialValue: {}, schemaVersion: 2, typeGuard: (e) => !0, migrateStorageSchema: () => ({}) }
      }) {}
      const H = new K.WU();
      var z = r(6220);
      let Q = class {
        constructor(e, t, r) {
          (this.carbon = e), (this.store = t), (this.settings = r);
        }
        getLocalKey(e) {
          const t = this.generate.bind(this),
            r = this.changeLocalKey.bind(this);
          return this.store.state$.pipe(
            (0, z.z)(async (s) => {
              if (e in s) {
                const t = s[e];
                if ("open" !== t.status) throw new Error("Session is not open ");
                const r = t.localKey;
                return r ? (0, m.R)(r) : null;
              }
              const o = await t();
              return await r(e, o), o;
            })
          );
        }
        async changeLocalKey(e, t) {
          const { store: r } = this,
            s = await (0, V.z)(this.settings.getConfig(e));
          if (!(0, b.d6)(s)) throw new Error("Fail to get crypto settings");
          await H.runExclusive(async () => {
            const s = await r.getState();
            if (!(e in s)) throw new Error("Session is not created");
            const o = s[e];
            if ("open" !== o.status) throw new Error("Session is not open");
            await r.set({ ...s, [e]: { status: "open", localKey: t ? (0, j.s)(t) : null, sessionKey: o.sessionKey } });
          });
        }
        async generateKeyIfNotExist(e) {
          await (0, V.z)(this.getLocalKey(e));
        }
        async generate() {
          const { carbonStateList: e } = this.carbon.queries,
            t = await (0, V.z)(e({ paths: ["userSession.session.localKey"] }));
          if ((0, b.hx)(t)) throw new Error("Failure getting state list");
          const [r] = t.data;
          return "string" == typeof r ? (0, g.u)(r) : null;
        }
      };
      Q = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [x._, W, R])], Q);
      var q = r(32109);
      let Y = class {
        constructor(e, t, r, s) {
          (this.carbon = e), (this.store = t), (this.localKeyRepository = r), (this.encryptor = s);
        }
        async execute({ body: { sessionKey: e, email: t, personalSettings: r } }) {
          const s = await this.localKeyRepository.generate(),
            o = s ? await this.encryptor.encrypt(s, e, { derivation: (0, q.P)(r.CryptoUserPayload), salt: r.CryptoFixedSalt }) : null;
          return await H.runExclusive(async () => {
            const r = await this.store.getState();
            if (t in r) return (0, b.Rn)(new k.X0());
            switch (e.type) {
              case "mp": {
                await this.store.set({ ...r, [t]: { status: G.sM.Closed, encryptedLocalKey: o ? (0, j.s)(o) : null } });
                const s = await this.carbon.commands.carbonLegacyLeeloo({
                  name: "openSessionWithMasterPassword",
                  arg: [
                    { login: t, password: e.masterPassword, rememberPassword: !1, requiredPermissions: void 0, serverKey: e.secondaryKey }
                  ]
                });
                if ((0, b.hx)(s)) throw new Error("Failed to create the session in carbon");
                return (0, b.Vp)(void 0);
              }
              case "sso":
                throw new Error("Creating a SSO session in session module is not supported");
              default:
                (0, y.U)(e);
            }
          });
        }
      };
      Y = (0, s.__decorate)([(0, D.W)(k.lk), (0, s.__metadata)("design:paramtypes", [x._, W, Q, E])], Y);
      var $ = r(81459);
      let X = class extends $.f {};
      X = (0, s.__decorate)([(0, p.GS)()], X);
      var Z = r(66134),
        J = r(86334),
        ee = r(69008);
      let te = class {
        constructor(e, t) {
          (this.emitter = e), (this.requestContextClient = t);
        }
        async execute({ body: { email: e } }) {
          return (
            await this.emitter.sendEvent("sessionClosing", void 0),
            await this.emitter.sendEvent("sessionClosed", { email: e, mode: Z.K.Close }),
            await this.requestContextClient.commands.setActiveUser({ userName: void 0 }),
            Promise.resolve((0, b.Vp)(void 0))
          );
        }
      };
      te = (0, s.__decorate)([(0, D.W)(J.V), (0, s.__metadata)("design:paramtypes", [X, ee.Q])], te);
      var re = r(37334);
      let se = class {
        constructor(e, t, r) {
          (this.carbon = e), (this.sessionStore = t), (this.sessionKeyDecryptor = r);
        }
        async execute({ body: { email: e, sessionKey: t, rememberPassword: r } }) {
          if ("sso" === t.type) throw new Error("not implemented");
          const { sessionStore: s, carbon: o } = this;
          return (
            await H.runExclusive(async () => {
              const n = await s.getState();
              if (!(e in n)) return (0, b.Rn)(new re.aK());
              if (Object.values(n).some((e) => "open" === e.status)) return (0, b.Rn)(new re.y9());
              const i = n[e];
              if ("open" === i.status || "opening" === i.status) return (0, b.Rn)(new re.mR());
              await s.set({
                ...n,
                [e]: {
                  status: "opening",
                  sessionKey: t,
                  localKey: i.encryptedLocalKey ? (0, j.s)(await this.sessionKeyDecryptor.decrypt((0, m.R)(i.encryptedLocalKey), t)) : null
                }
              }),
                await o.commands.carbonLegacyLeeloo({
                  name: "openSessionWithMasterPassword",
                  arg: [
                    { login: e, password: t.masterPassword, rememberPassword: r, requiredPermissions: void 0, serverKey: t.secondaryKey }
                  ]
                });
            }),
            (0, b.Vp)(void 0)
          );
        }
      };
      se = (0, s.__decorate)([(0, D.W)(re.Dx), (0, s.__metadata)("design:paramtypes", [x._, W, f])], se);
      var oe = r(20754);
      let ne = class {
        constructor(e) {
          this.sessionsStateStore = e;
        }
        execute({ body: e }) {
          const t = e.email;
          return this.sessionsStateStore.state$.pipe(
            (0, w.U)((e) => {
              if (!(t in e)) return (0, b.Vp)(G.sM.NotCreated);
              {
                const { status: r } = e[t];
                switch (r) {
                  case "open":
                    return (0, b.Vp)(G.sM.Open);
                  case "closed":
                  case "opening":
                    return (0, b.Vp)(G.sM.Closed);
                  default:
                    (0, y.U)(r);
                }
              }
            })
          );
        }
      };
      ne = (0, s.__decorate)([(0, oe.e)(G.ZP), (0, s.__metadata)("design:paramtypes", [W])], ne);
      let ie = class {
        constructor(e) {
          this.sessionsStateStore = e;
        }
        execute() {
          return this.sessionsStateStore.state$.pipe(
            (0, w.U)((e) => {
              const t = {};
              for (const r in e) "open" === e[r].status ? (t[r] = G.XL.Open) : (t[r] = G.XL.Closed);
              return (0, b.Vp)(t);
            })
          );
        }
      };
      ie = (0, s.__decorate)([(0, oe.e)(G.iH), (0, s.__metadata)("design:paramtypes", [W])], ie);
      var ae = r(31839);
      let ce = class {
        constructor(e) {
          this.sessionsStateStore = e;
        }
        execute() {
          return this.sessionsStateStore.state$.pipe(
            (0, w.U)((e) => {
              let t;
              for (const r in e) e[r].status === G.sM.Open && (t = r);
              return (0, b.Vp)(t);
            })
          );
        }
      };
      ce = (0, s.__decorate)([(0, oe.e)(ae._), (0, s.__metadata)("design:paramtypes", [W])], ce);
      var le = r(54703);
      let de = class {
        execute() {
          return Promise.resolve((0, b.Vp)(void 0));
        }
      };
      de = (0, s.__decorate)([(0, D.W)(le.G)], de);
      var ue = r(68307),
        pe = r(23326),
        he = r(94805),
        me = r(19603);
      let ve = class {
        constructor(e, t, r, s, o, n, i, a, c) {
          (this.carbon = e),
            (this.sessionsStateStore = t),
            (this.sessionsCryptoSettingsStore = r),
            (this.eventEmitter = s),
            (this.randomValuesGetter = o),
            (this.localKeyRepo = n),
            (this.encryptor = i),
            (this.settings = a),
            (this.context = c);
        }
        async getUserCryptoSettings() {
          const { getUserCryptoSettings: e } = this.carbon.queries,
            t = await (0, V.z)(e());
          if (!(0, b.d6)(t)) throw new Error("Fail to fetch crypto settings from carbon");
          const { cryptoUserPayload: r, cryptoFixedSalt: s } = t.data;
          return { cryptoUserPayload: r, cryptoFixedSalt: s };
        }
        async getSessionKey(e) {
          const { getMasterPasswordAndServerKey: t, getIsSSOUser: r } = this.carbon.queries,
            s = await (0, V.z)(r());
          if (!(0, b.d6)(s)) throw new Error("Fail to fetch is sso user from carbon");
          if (s.data || e) return { type: "sso", ssoKey: "" };
          const o = await (0, V.z)(t());
          if (!(0, b.d6)(o)) throw new Error("Fail to fetch master password and server key from carbon");
          const { password: n, serverKey: i } = o.data;
          return { type: "mp", masterPassword: n, secondaryKey: i };
        }
        async handleLogin(e, t) {
          await H.runExclusive(async () => {
            const { cryptoUserPayload: r, cryptoFixedSalt: s } = await this.getUserCryptoSettings(),
              o = r ? (0, q.P)(r) : he.mr,
              n = s || (0, j.s)(this.randomValuesGetter.get(o.saltLength)),
              i = await this.sessionsCryptoSettingsStore.getState();
            this.sessionsCryptoSettingsStore.set({ ...i, [e]: { derivation: o, salt: n } });
            const a = await this.getSessionKey(t),
              c = await this.sessionsStateStore.getState(),
              l = await this.localKeyRepo.generate();
            if (e in c)
              await this.sessionsStateStore.set({ ...c, [e]: { status: "open", sessionKey: a, localKey: l ? (0, j.s)(l) : null } });
            else {
              const t = { status: "open", sessionKey: a, localKey: l ? (0, j.s)(l) : null };
              await this.sessionsStateStore.set({ ...c, [e]: t });
            }
          }),
            await this.context.commands.setActiveUser({ userName: e }),
            await this.eventEmitter.sendEvent("sessionOpening", void 0),
            await this.eventEmitter.sendEvent("sessionOpened", void 0);
        }
        async handleLogout() {
          const e = new Array();
          await H.runExclusive(async () => {
            const t = await this.sessionsStateStore.getState();
            for (const [r, s] of Object.entries(t)) {
              if ("closed" === s.status) continue;
              const o = await (0, V.z)(this.settings.getConfig(r));
              if (!(0, b.d6)(o)) throw new Error("Fail to get crypto settings");
              const n = o.data,
                i = s.localKey ? (0, j.s)(await this.encryptor.encrypt((0, m.R)(s.localKey), s.sessionKey, n)) : null;
              (t[r] = { status: "closed", encryptedLocalKey: i }), e.push(r);
            }
            await this.sessionsStateStore.set(t);
          });
          for (const t of e) await this.eventEmitter.sendEvent("sessionClosed", { mode: Z.K.Close, email: t });
        }
        async handle(e) {
          if ("loginStatusChanged" !== e.body.eventName) return;
          const t = e.body.eventData;
          t.loggedIn ? await this.handleLogin(t.login, !!t.needsSSOMigration) : await this.handleLogout();
        }
      };
      ve = (0, s.__decorate)([(0, ue.b)(pe.Dj), (0, s.__metadata)("design:paramtypes", [x._, W, P, X, me.Y, Q, E, R, ee.Q])], ve);
      var ge = r(708);
      let ye = class {
        constructor(e) {
          this.flexibleVerifier = e;
        }
        verify(e, t) {
          const { flexibleVerifier: r } = this;
          let s;
          switch (t.type) {
            case "sso":
              s = (0, m.R)(t.ssoKey);
              break;
            case "mp":
              s = (0, v.K)((0, g.u)(t.masterPassword), (0, m.R)(t.secondaryKey ?? ""));
              break;
            default:
              (0, y.U)(t);
          }
          return r.verifySignature(s, e);
        }
      };
      ye = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [ge.y])], ye);
      let fe = class extends i.BD {
        constructor(e, t) {
          super(), (this.sessionsStateStore = e), (this.verifier = t);
        }
        async checkSessionKey(e, t) {
          if ("mp" !== t.type) return (0, b.Vp)(!0);
          const r = await (0, V.z)(this.sessionsStateStore.state$);
          if (!(e in r)) return (0, b.Vp)(!0);
          const s = r[e];
          if ("open" === s.status || "opening" === s.status)
            return (0, b.Vp)(
              (function (e, t) {
                switch (e.type) {
                  case "mp":
                    return "mp" === t.type && e.masterPassword === t.masterPassword && e.secondaryKey === t.secondaryKey;
                  case "sso":
                    return "sso" === t.type && e.ssoKey === t.ssoKey;
                  default:
                    (0, y.U)(e);
                }
              })(s.sessionKey, t)
            );
          if (!s.encryptedLocalKey) return (0, b.Vp)(!0);
          const o = (0, m.R)(s.encryptedLocalKey);
          return (0, b.Vp)(await this.verifier.verify(o, t));
        }
      };
      fe = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [W, ye])], fe);
      var _e = r(45911),
        Se = r(162);
      let Ee = class {
        constructor(e) {
          this.checker = e;
        }
        execute({ body: { email: e, sessionKey: t } }) {
          return (0, Se.D)(this.checker.checkSessionKey(e, t));
        }
      };
      Ee = (0, s.__decorate)([(0, oe.e)(_e.Z), (0, s.__metadata)("design:paramtypes", [i.BD])], Ee);
      let be = class {
        constructor(e) {
          this.store = e;
        }
        async handle({ body: { user: e } }) {
          await H.runExclusive(async () => {
            const t = await this.store.getState();
            delete t[e], await this.store.set(t);
          });
        }
      };
      be = (0, s.__decorate)([(0, ue.b)(pe.E1), (0, s.__metadata)("design:paramtypes", [W])], be);
      var we = r(90032);
      let Ae = class {
        constructor(e) {
          this.store = e;
        }
        async execute({ body: { email: e, sessionKey: t } }) {
          return await H.runExclusive(async () => {
            const r = await this.store.getState();
            if (!(e in r)) return (0, b.Rn)(new we.pX());
            const s = r[e];
            return "closed" === s.status
              ? (0, b.Rn)(new we.nA())
              : ((r[e] = { status: "open", localKey: s.localKey, sessionKey: t }), await this.store.set(r), (0, b.Vp)(void 0));
          });
        }
      };
      Ae = (0, s.__decorate)([(0, D.W)(we.yt), (0, s.__metadata)("design:paramtypes", [W])], Ae);
      let Te = class {};
      Te = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.Q,
            handlers: {
              commands: {
                flushLocalData: L,
                prepareLocalDataFlush: M,
                closeUserSession: te,
                createUserSession: Y,
                openUserSession: se,
                deleteLocalSession: de,
                updateUserSessionKey: Ae
              },
              events: { ...(0, o.g)(c.W, { carbonLegacy: ve, CarbonLegacyDeviceRemotelyDeleted: be }) },
              queries: { createdSessionsState: ie, sessionState: ne, selectedOpenedSession: ce, checkSessionKey: Ee }
            },
            providers: [X, l.t, d.n, u.Y, Q, f, E, ye, R, B, { provide: i.BD, useClass: fe }],
            exports: [l.t, d.n, u.Y, i.BD],
            stores: [W, P],
            imports: [a.D]
          })
        ],
        Te
      );
    },
    44580: (e, t, r) => {
      r.d(t, { r: () => T });
      var s,
        o,
        n,
        i = r(88802),
        a = r(99634),
        c = r(65766),
        l = r(36636),
        d = r(43956);
      !(function (e) {
        (e.EMAIL_TOKEN = "email_token"), (e.DEVICE_REGISTRATION = "totp_device_registration"), (e.LOGIN = "totp_login"), (e.SSO = "sso");
      })(s || (s = {})),
        (function (e) {
          (e[(e.UNKNOWN = 0)] = "UNKNOWN"), (e[(e.PENDING = 1)] = "PENDING"), (e[(e.ERROR = 2)] = "ERROR"), (e[(e.READY = 3)] = "READY");
        })(o || (o = {})),
        (function (e) {
          (e.LOGIN = "login"), (e.NEW_DEVICE = "newDevice"), (e.DISABLED = "disabled");
        })(n || (n = {}));
      n.LOGIN, n.NEW_DEVICE;
      var u,
        p = r(86252),
        h = r(20754),
        m = r(87279),
        v = r(57755),
        g = r(89358),
        y = r(85390),
        f = r(30523),
        _ = r(87065);
      !(function (e) {
        (e.OneDeviceLimitReached = "OneDeviceLimitReached"),
          (e.MultipleDevicesLimitReached = "MultipleDevicesLimitReached"),
          (e.UnlinkingAndOpeningSession = "UnlinkingAndOpeningSession"),
          (e.UnlinkingMultipleDevicesError = "UnlinkingMultipleDevicesError"),
          (e.RefreshingDeviceLimitStatus = "RefreshingDeviceLimitStatus"),
          (e.OpeningSessionAfterDeviceLimitRemoval = "OpeningSessionAfterDeviceLimitRemoval"),
          (e.DeviceLimitDone = "DeviceLimitDone");
      })(u || (u = {}));
      const S = (e) => !!e?.name && e.name !== u.DeviceLimitDone && e.name !== u.OpeningSessionAfterDeviceLimitRemoval,
        E = {
          [d.vX.MP_TO_SSO]: v.Oq.RequiresMP2SSOMigration,
          [d.vX.MP_TO_SSO_WITH_INFO]: v.Oq.RequiresMP2SSOMigration,
          [d.vX.SSO_TO_MP]: v.Oq.RequiresSSO2MPMigration
        };
      let b = class {
        constructor(e, t, r) {
          (this.carbon = e), (this.authentication = t), (this.session = r);
        }
        execute() {
          const { selectedOpenedSession: e } = this.session.queries,
            { getProviderInfo: t } = this.authentication.queries,
            { liveLoginDeviceLimitFlow: r, liveTwoFactorAuthenticationInfo: s } = this.carbon.queries,
            n = e(void 0),
            i = t(void 0),
            a = r(void 0),
            c = s(void 0);
          return (0, y.a)({ activeLogin: n, ssoMigrationType: i, loginDeviceLimitFlow: a, twoFactorAuthenticationInfo: c }).pipe(
            (0, f.h)(
              ({ twoFactorAuthenticationInfo: e, activeLogin: t }) =>
                !!(0, m.d6)(e) && !!(0, m.d6)(t) && (!t.data || e.data.status === o.READY)
            ),
            (0, _.U)(({ activeLogin: e, ssoMigrationType: t, loginDeviceLimitFlow: r, twoFactorAuthenticationInfo: s }) => {
              if (!(0, m.d6)(e)) throw new Error("Enabled to retrieve active login");
              if (!e.data) return (0, m.Vp)({ isAllowed: !1, reasons: [v.Oq.NoActiveUser] });
              if (!(0, m.d6)(t) || !(0, m.d6)(r) || !(0, m.d6)(s) || s.data.status !== o.READY) throw new Error("One query failed");
              const n = S(r.data);
              if (void 0 === t.data.migrationType && !n && !s.data.shouldEnforceTwoFactorAuthentication)
                return (0, m.Vp)({ isAllowed: !0 });
              const i = { isAllowed: !1, reasons: [] };
              return (
                void 0 !== t.data.migrationType && i.reasons.push(E[t.data.migrationType]),
                n && i.reasons.push(v.Oq.DeviceLimited),
                s.data.shouldEnforceTwoFactorAuthentication && i.reasons.push(v.Oq.Requires2FAEnforcement),
                (0, m.Vp)(i)
              );
            })
          );
        }
      };
      b = (0, i.__decorate)([(0, h.e)(v.bY), (0, i.__metadata)("design:paramtypes", [p._, l.e, g.x])], b);
      var w = r(49273);
      let A = class {
        constructor(e) {
          this.carbon = e;
        }
        execute() {
          const { liveLoginDeviceLimitFlow: e } = this.carbon.queries;
          return e(void 0).pipe(
            (0, _.U)((e) => {
              if (!(0, m.d6)(e)) throw new Error("liveLoginDeviceLimitFlow failed");
              return (0, m.Vp)({ isLimited: S(e.data) });
            })
          );
        }
      };
      A = (0, i.__decorate)([(0, h.e)(w.X), (0, i.__metadata)("design:paramtypes", [p._])], A);
      let T = class {};
      T = (0, i.__decorate)([(0, a.Y)({ api: c.Y, handlers: { commands: {}, events: {}, queries: { isAllowed: b, deviceLimit: A } } })], T);
    },
    82466: (e, t, r) => {
      r.d(t, { Iy: () => a, bd: () => c, qb: () => o, y$: () => i, y3: () => s });
      var s,
        o,
        n = r(7165);
      !(function (e) {
        (e.Admin = "admin"), (e.Limited = "limited");
      })(s || (s = {})),
        (function (e) {
          (e.Pending = "pending"), (e.Accepted = "accepted"), (e.Refused = "refused"), (e.Revoked = "revoked");
        })(o || (o = {}));
      const i = n.z.nativeEnum(o),
        a = n.z.nativeEnum(s),
        c = n.z.union([n.z.literal("noKey"), n.z.literal("publicKey"), n.z.literal("sharingKeys")]);
    },
    56999: (e, t, r) => {
      r.r(t),
        r.d(t, {
          AcceptCollectionInviteCommand: () => p.cD,
          AcceptCollectionInviteFailedError: () => p.nu,
          AcceptCollectionInviteResultErrorCode: () => p.Ti,
          AddItemToCollectionsCommand: () => F.$,
          AddItemsToCollectionCommand: () => L.Z,
          CreateSharedCollectionCommand: () => M.I,
          DeleteSharedCollectionCommand: () => x.U,
          GetCollectionPermissionsForUserQuery: () => I.y,
          GetCollectionRoleForGroupQuery: () => O.L,
          GetCollectionsForUserOrGroupQuery: () => P.Q,
          GetInvitesQuery: () => y.q,
          GetIsLastAdminForItemQuery: () => l.X,
          GetItemGroupForItemQuery: () => i.i,
          GetItemIdsInSharedCollectionsQuery: () => C.q,
          GetItemIdsInSharedCollectionsSchema: () => H.Po,
          GetPendingCollectionsQuery: () => f.D,
          GetPermissionForItemQuery: () => c.C,
          GetSharedCollectionsCountQuery: () => D.C,
          GetSharedCollectionsQuery: () => R.$,
          GetSharingStatusForItemQuery: () => a.S,
          GetSharingTeamLoginsQuery: () => o.G,
          HasInvitesQuery: () => _._,
          InviteCollectionMembersCommand: () => k.Q,
          PendingCollectionSchema: () => b,
          PendingItemGroupSchema: () => w,
          PendingUserGroupSchema: () => A,
          Permission: () => E.y3,
          PermissionSchema: () => E.Iy,
          RecipientTypes: () => d.I,
          RefuseCollectionInviteCommand: () => h.UC,
          RefuseCollectionInviteFailedError: () => h.R$,
          RefuseCollectionInviteResultErrorCode: () => h.eT,
          RefuseItemGroupInviteAuthorHasInvalidStatusError: () => m.bp,
          RefuseItemGroupInviteCommand: () => m.gm,
          RefuseItemGroupInviteGroupHasInvalidStatusError: () => m.Xj,
          RefuseItemGroupInviteInvalidItemGroupRevisionError: () => m.Ne,
          RefuseItemGroupInviteNotEnoughAdminsError: () => m.Ix,
          RefuseItemGroupInviteNotFoundError: () => m.fL,
          RefuseItemGroupInviteResultErrorCode: () => m.dI,
          RefuseItemGroupInviteUserGroupIsNotInItemGroupError: () => m.Te,
          RefuseItemGroupInviteUserIsNotInItemGroupError: () => m.hp,
          RefuseItemGroupInviteUserIsNotInPendingStatusError: () => m.gR,
          RefuseUserGroupInviteAuthorHasInvalidStatusError: () => v.K8,
          RefuseUserGroupInviteCommand: () => v.Fo,
          RefuseUserGroupInviteGroupHasInvalidStatusError: () => v.kh,
          RefuseUserGroupInviteInsufficientPrivilegesError: () => v.FO,
          RefuseUserGroupInviteInvalidItemGroupRevisionError: () => v.Uf,
          RefuseUserGroupInviteInvalidTeamIdError: () => v.Ix,
          RefuseUserGroupInviteNotFoundError: () => v.i6,
          RefuseUserGroupInviteResultErrorCode: () => v.xC,
          RefuseUserGroupInviteUserGroupIsNotFoundError: () => v.U1,
          RefuseUserGroupInviteUserGroupUpdateConflictError: () => v.Xp,
          RefuseUserGroupInviteUserIsNotInPendingStatusError: () => v.PZ,
          RefuseUserGroupInviteUserIsNotInUserGroupError: () => v.xz,
          RemoveItemFromCollectionsCommand: () => K.B,
          RenameCollectionCommand: () => G.r,
          RevokeCollectionMembersCommand: () => V.q,
          RsaStatusSchema: () => E.bd,
          ShareableCollectionSchema: () => N.JQ,
          ShareableCollectionVaultItemSchema: () => N.FN,
          SharedAccessForItemQuery: () => d.v,
          SharedCollectionRole: () => H.Yt,
          SharedCollectionSchema: () => H.MX,
          SharedCollectionUserGroupSchema: () => H.yD,
          SharedCollectionUserOrGroupViewSchema: () => H.fg,
          SharedCollectionUserSchema: () => H.Me,
          SharedCollectionsWithItemsQuery: () => N.MO,
          SharingCollectionsClient: () => z.L,
          SharingEnabledQuery: () => n.N,
          Status: () => E.qb,
          StatusSchema: () => E.y$,
          UpdateCollectionMembersCommand: () => B.c,
          UpdatePendingCollectionsCommand: () => g.r,
          UpdatePermissionForCollectionItemCommand: () => W.a,
          UpdateSharedCollectionsCommand: () => j.M,
          UsersAndGroupsInCollectionQuery: () => U.O,
          UsersAndGroupsInCollectionSchema: () => H.a7,
          getRefuseItemGroupInviteFunctionalError: () => m.fr,
          getRefuseUserGroupInviteFunctionalError: () => v.cz,
          sharingCollectionsApi: () => T.a,
          sharingInvitesApi: () => u.t,
          sharingItemsApi: () => s.X
        });
      var s = r(48958),
        o = r(31485),
        n = r(54003),
        i = r(54326),
        a = r(20920),
        c = r(4975),
        l = r(56556),
        d = r(11098),
        u = r(58425),
        p = r(31609),
        h = r(68096),
        m = r(55677),
        v = r(84009),
        g = r(79517),
        y = r(15179),
        f = r(36610),
        _ = r(36469),
        S = r(7165),
        E = r(82466);
      const b = S.z.object({
          uuid: S.z.string(),
          name: S.z.string(),
          referrer: S.z.string(),
          permission: S.z.nativeEnum(E.y3),
          seen: S.z.boolean()
        }),
        w = S.z.object({
          itemGroupId: S.z.string(),
          referrer: S.z.string(),
          permission: S.z.enum(["admin", "limited"]),
          seen: S.z.boolean()
        }),
        A = S.z.object({
          groupId: S.z.string(),
          name: S.z.string(),
          referrer: S.z.string(),
          permission: S.z.enum(["admin", "limited"]),
          seen: S.z.boolean()
        });
      var T = r(72721),
        C = r(67591),
        I = r(84178),
        O = r(39821),
        P = r(44282),
        R = r(24249),
        D = r(19286),
        N = r(11578),
        U = r(6233),
        L = r(99676),
        F = r(46629),
        M = r(11527),
        x = r(50384),
        k = r(89074),
        G = r(86590),
        K = r(68827),
        V = r(77311),
        j = r(15507),
        B = r(177),
        W = r(85980),
        H = r(4400),
        z = r(85612);
    },
    72721: (e, t, r) => {
      r.d(t, { a: () => w });
      var s = r(86952),
        o = r(44282),
        n = r(67591),
        i = r(24249),
        a = r(84178),
        c = r(39821),
        l = r(19286),
        d = r(11578),
        u = r(6233),
        p = r(99676),
        h = r(46629),
        m = r(11527),
        v = r(50384),
        g = r(89074),
        y = r(177),
        f = r(68827),
        _ = r(86590),
        S = r(77311),
        E = r(15507),
        b = r(85980);
      const w = (0, s.Q)({
        name: "sharingCollections",
        commands: {
          addItemsToCollection: p.Z,
          addItemToCollections: h.$,
          createSharedCollection: m.I,
          deleteSharedCollection: v.U,
          inviteCollectionMembers: g.Q,
          updateCollectionMembers: y.c,
          removeItemFromCollections: f.B,
          renameCollection: _.r,
          revokeCollectionMembers: S.q,
          updateSharedCollections: E.M,
          updatePermissionForCollectionItem: b.a
        },
        events: {},
        queries: {
          getCollectionsForUserOrGroup: o.Q,
          getItemIdsInSharedCollections: n.q,
          getSharedCollections: i.$,
          getCollectionPermissionsForUser: a.y,
          getCollectionRoleForGroup: c.L,
          getSharedCollectionsCount: l.C,
          sharedCollectionsWithItems: d.MO,
          usersAndGroupsInCollection: u.O
        }
      });
    },
    46629: (e, t, r) => {
      r.d(t, { $: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    99676: (e, t, r) => {
      r.d(t, { Z: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    11527: (e, t, r) => {
      r.d(t, { I: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    50384: (e, t, r) => {
      r.d(t, { U: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    89074: (e, t, r) => {
      r.d(t, { Q: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    68827: (e, t, r) => {
      r.d(t, { B: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    86590: (e, t, r) => {
      r.d(t, { r: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    77311: (e, t, r) => {
      r.d(t, { q: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    177: (e, t, r) => {
      r.d(t, { c: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    85980: (e, t, r) => {
      r.d(t, { a: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    15507: (e, t, r) => {
      r.d(t, { M: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    67591: (e, t, r) => {
      r.d(t, { q: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    39821: (e, t, r) => {
      r.d(t, { L: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    84178: (e, t, r) => {
      r.d(t, { y: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    44282: (e, t, r) => {
      r.d(t, { Q: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    19286: (e, t, r) => {
      r.d(t, { C: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    24249: (e, t, r) => {
      r.d(t, { $: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    11578: (e, t, r) => {
      r.d(t, { FN: () => i, JQ: () => a, MO: () => c });
      var s = r(7165),
        o = r(99059),
        n = r(25029);
      const i = s.z.object({ id: s.z.string(), type: s.z.string() }),
        a = s.z.object({
          id: s.z.string(),
          name: s.z.string(),
          spaceId: s.z.string(),
          vaultItems: s.z.array(i),
          isShared: s.z.optional(s.z.boolean())
        });
      class c extends (0, o.k)({ scope: n.F.User }) {}
    },
    6233: (e, t, r) => {
      r.d(t, { O: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    85612: (e, t, r) => {
      r.d(t, { L: () => n });
      var s = r(67837),
        o = r(72721);
      class n extends (0, s.E)(o.a) {}
      (0, s.K)(o.a, n);
    },
    4400: (e, t, r) => {
      r.d(t, { MX: () => c, Me: () => n, Po: () => d, Yt: () => u, a7: () => l, fg: () => a, yD: () => i });
      var s = r(7165),
        o = r(82466);
      const n = s.z.object({
          acceptSignature: s.z.optional(s.z.nullable(s.z.string())),
          collectionKey: s.z.optional(s.z.nullable(s.z.string())),
          login: s.z.string(),
          permission: o.Iy,
          proposeSignature: s.z.optional(s.z.string()),
          proposeSignatureUsingAlias: s.z.optional(s.z.boolean()),
          referrer: s.z.string(),
          rsaStatus: s.z.optional(o.bd),
          status: o.y$
        }),
        i = s.z.object({
          acceptSignature: s.z.optional(s.z.nullable(s.z.string())),
          collectionKey: s.z.optional(s.z.nullable(s.z.string())),
          name: s.z.string(),
          permission: o.Iy,
          proposeSignature: s.z.optional(s.z.string()),
          referrer: s.z.optional(s.z.string()),
          status: o.y$,
          uuid: s.z.string()
        }),
        a = s.z.object({ label: s.z.string(), status: o.y$, permission: o.Iy, id: s.z.string() }),
        c = s.z.object({
          name: s.z.string(),
          privateKey: s.z.string(),
          publicKey: s.z.string(),
          revision: s.z.number(),
          userGroups: s.z.optional(s.z.array(i)),
          users: s.z.optional(s.z.array(n)),
          uuid: s.z.string(),
          authorLogin: s.z.optional(s.z.string())
        }),
        l = s.z.object({ userGroups: s.z.optional(s.z.array(a)), users: s.z.optional(s.z.array(a)) }),
        d = s.z.array(s.z.string());
      var u;
      !(function (e) {
        (e.Editor = "editor"), (e.Manager = "manager");
      })(u || (u = {}));
    },
    58425: (e, t, r) => {
      r.d(t, { t: () => p });
      var s = r(86952),
        o = r(31609),
        n = r(68096),
        i = r(55677),
        a = r(84009),
        c = r(79517),
        l = r(15179),
        d = r(36610),
        u = r(36469);
      const p = (0, s.Q)({
        name: "sharingInvites",
        commands: {
          AcceptCollectionInviteCommand: o.cD,
          RefuseCollectionInviteCommand: n.UC,
          RefuseItemGroupInviteCommand: i.gm,
          RefuseUserGroupInviteCommand: a.Fo,
          UpdatePendingCollectionsCommand: c.r
        },
        events: {},
        queries: { GetInvitesQuery: l.q, GetPendingCollectionsQuery: d.D, HasInvitesQuery: u._ }
      });
    },
    31609: (e, t, r) => {
      r.d(t, { Ti: () => s, cD: () => c, nu: () => a });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        e.AcceptFailed = "AcceptFailed";
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.AcceptFailed, "Failed to accept collection") {}
      class c extends (0, o.g)({ scope: n.F.User }) {}
    },
    68096: (e, t, r) => {
      r.d(t, { R$: () => a, UC: () => c, eT: () => s });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        e.RefuseFailed = "RefuseFailed";
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.RefuseFailed, "Failed to refuse collection") {}
      class c extends (0, o.g)({ scope: n.F.User }) {}
    },
    55677: (e, t, r) => {
      r.d(t, {
        Ix: () => h,
        Ne: () => p,
        Te: () => u,
        Xj: () => l,
        bp: () => c,
        dI: () => s,
        fL: () => a,
        fr: () => v,
        gR: () => m,
        gm: () => g,
        hp: () => d
      });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.ItemGroupNotFound = "ItemGroupNotFound"),
          (e.AuthorHasInvalidStatus = "AuthorHasInvalidStatus"),
          (e.GroupHasInvalidStatus = "GroupHasInvalidStatus"),
          (e.UserIsNotInItemGroup = "UserIsNotInItemGroup"),
          (e.UserGroupIsNotInItemGroup = "UserGroupIsNotInItemGroup"),
          (e.InvalidItemGroupRevision = "InvalidItemGroupRevision"),
          (e.NotEnoughAdmins = "NotEnoughAdmins"),
          (e.UserIsNotInPendingStatus = "UserIsNotInPendingStatus");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.ItemGroupNotFound, "Item Group not found") {}
      class c extends (0, i.Hu)(s.AuthorHasInvalidStatus, "User is not in accepted/pending status (already refused or revoked)") {}
      class l extends (0, i.Hu)(s.GroupHasInvalidStatus, "UserGroup is not in accepted/pending status (already refused or revoked)") {}
      class d extends (0, i.Hu)(s.UserIsNotInItemGroup, "User is not part of item group") {}
      class u extends (0, i.Hu)(s.UserGroupIsNotInItemGroup, "User group is not part of item group") {}
      class p extends (0, i.Hu)(s.InvalidItemGroupRevision, "Item group revision is not valid") {}
      class h extends (0, i.Hu)(s.NotEnoughAdmins, "The operation would let the item group with no admin") {}
      class m extends (0, i.Hu)(s.UserIsNotInPendingStatus, 'User is not in "pending" status or not part of a group') {}
      function v(e) {
        switch (e) {
          case "AUTHOR_HAS_INVALID_STATUS":
            return new c();
          case "GROUP_HAS_INVALID_STATUS":
            return new l();
          case "USER_IS_NOT_IN_ITEM_GROUP":
            return new d();
          case "USER_GROUP_IS_NOT_IN_ITEM_GROUP":
            return new u();
          case "INVALID_ITEM_GROUP_REVISION":
            return new p();
          case "NOT_ENOUGH_ADMINS":
            return new h();
          case "USER_IS_NOT_IN_PENDING_STATUS":
            return new m();
          default:
            throw new Error("Unknown server error");
        }
      }
      class g extends (0, o.g)({ scope: n.F.User }) {}
    },
    84009: (e, t, r) => {
      r.d(t, {
        FO: () => p,
        Fo: () => f,
        Ix: () => c,
        K8: () => g,
        PZ: () => m,
        U1: () => l,
        Uf: () => d,
        Xp: () => u,
        cz: () => y,
        i6: () => a,
        kh: () => v,
        xC: () => s,
        xz: () => h
      });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.UserGroupNotFound = "UserGroupNotFound"),
          (e.InvalidTeamId = "InvalidTeamId"),
          (e.UserGroupIsNotFound = "UserGroupIsNotFound"),
          (e.InvalidItemGroupRevision = "InvalidItemGroupRevision"),
          (e.UserGroupUpdateConflict = "UserGroupUpdateConflict"),
          (e.InsufficientPrivileges = "InsufficientPrivileges"),
          (e.UserIsNotInUserGroup = "UserIsNotInUserGroup"),
          (e.UserIsNotInPendingStatus = "UserIsNotInPendingStatus"),
          (e.GroupHasInvalidStatus = "GroupHasInvalidStatus"),
          (e.AuthorHasInvalidStatus = "AuthorHasInvalidStatus");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.UserGroupNotFound, "User Group not found") {}
      class c extends (0, i.Hu)(s.InvalidTeamId, "Provided Team ID is not a number") {}
      class l extends (0, i.Hu)(s.UserGroupIsNotFound, "User group for provided ID does not exist") {}
      class d extends (0, i.Hu)(s.InvalidItemGroupRevision, "User group revision is not valid") {}
      class u extends (0, i.Hu)(s.UserGroupUpdateConflict, "Conflict between users attempting to update the same user group") {}
      class p extends (0, i.Hu)(s.InsufficientPrivileges, "The user does not have User Group permission to refuse the invitation") {}
      class h extends (0, i.Hu)(s.UserIsNotInUserGroup, "User is not part of a group") {}
      class m extends (0, i.Hu)(s.UserIsNotInPendingStatus, 'User is not in "pending" status or not part of a group') {}
      class v extends (0, i.Hu)(
        s.GroupHasInvalidStatus,
        'UserGroup is not in "accepted" or "pending" status (already refused or revoked)'
      ) {}
      class g extends (0, i.Hu)(s.AuthorHasInvalidStatus, "User is not in accepted/pending status (already refused or revoked)") {}
      function y(e) {
        switch (e) {
          case "INVALID_TEAM_ID":
            return new c();
          case "USER_GROUP_IS_NOT_FOUND":
            return new l();
          case "INVALID_USER_GROUP_REVISION":
            return new d();
          case "USER_GROUP_UPDATE_CONFLICT":
            return new u();
          case "INSUFFICIENT_PRIVILEGES":
            return new p();
          case "USER_IS_NOT_IN_USER_GROUP":
            return new h();
          case "USER_IS_NOT_IN_PENDING_STATUS":
            return new m();
          case "GROUP_HAS_INVALID_STATUS":
            return new v();
          case "AUTHOR_HAS_INVALID_STATUS":
            return new g();
          default:
            throw new Error("Unknown server error");
        }
      }
      class f extends (0, o.g)({ scope: n.F.User }) {}
    },
    79517: (e, t, r) => {
      r.d(t, { r: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    15179: (e, t, r) => {
      r.d(t, { q: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    36610: (e, t, r) => {
      r.d(t, { D: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    36469: (e, t, r) => {
      r.d(t, { _: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    48958: (e, t, r) => {
      r.d(t, { X: () => u });
      var s = r(86952),
        o = r(31485),
        n = r(54003),
        i = r(54326),
        a = r(20920),
        c = r(4975),
        l = r(56556),
        d = r(11098);
      const u = (0, s.Q)({
        name: "sharingItems",
        commands: {},
        events: {},
        queries: {
          getSharingTeamLogins: o.G,
          sharingEnabled: n.N,
          getItemGroupForItem: i.i,
          getSharingStatusForItem: a.S,
          getPermissionForItem: c.C,
          getIsLastAdminForItem: l.X,
          sharedAccessForItem: d.v
        }
      });
    },
    56556: (e, t, r) => {
      r.d(t, { X: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    54326: (e, t, r) => {
      r.d(t, { i: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    4975: (e, t, r) => {
      r.d(t, { C: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    20920: (e, t, r) => {
      r.d(t, { S: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    31485: (e, t, r) => {
      r.d(t, { G: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    11098: (e, t, r) => {
      r.d(t, { I: () => n, v: () => i });
      var s = r(99059),
        o = r(25029);
      const n = Object.freeze({ Group: "group", Collection: "collection", User: "user" });
      class i extends (0, s.k)({ scope: o.F.User }) {}
    },
    54003: (e, t, r) => {
      r.d(t, { N: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    10647: (e, t, r) => {
      r.d(t, { y: () => u });
      var s = r(88802),
        o = r(99634),
        n = r(89560),
        i = r(72614),
        a = r(81982),
        c = r(66076),
        l = r(59452),
        d = r(19617);
      let u = class {};
      u = (0, s.__decorate)(
        [
          (0, o.Y)({
            sharedModuleName: "sharing-carbon-helpers",
            providers: [n.E, c.J, i.n, a.a, d.V, l.B],
            exports: [n.E, c.J, i.n, a.a, d.V, l.B],
            imports: []
          })
        ],
        u
      );
    },
    89560: (e, t, r) => {
      r.d(t, { E: () => u });
      var s = r(88802),
        o = r(86252),
        n = r(57924),
        i = r(48844),
        a = r(63877);
      function c(e) {
        switch (e) {
          case "admin":
            return a.y3.Admin;
          case "limited":
            return a.y3.Limited;
        }
      }
      function l(e) {
        switch (e) {
          case "pending":
            return a.qb.Pending;
          case "accepted":
            return a.qb.Accepted;
          case "refused":
            return a.qb.Refused;
          case "revoked":
            return a.qb.Revoked;
        }
      }
      function d(e) {
        return {
          groupId: e.groupId,
          revision: e.revision,
          type: e.type,
          teamId: e.teamId,
          items: e.items,
          users: e.users ? [...e.users.map((e) => ({ ...e, permission: c(e.permission), status: l(e.status) }))] : void 0,
          groups: e.groups ? [...e.groups.map((e) => ({ ...e, permission: c(e.permission), status: l(e.status) }))] : void 0,
          collections: e.collections
            ? [...(e.collections?.map((e) => ({ ...e, permission: c(e.permission), status: l(e.status) })) ?? [])]
            : void 0
        };
      }
      let u = class {
        constructor(e) {
          this.client = e;
        }
        get() {
          const {
            queries: { carbonState: e }
          } = this.client;
          return e({ path: "userSession.sharingData.itemGroups" }).pipe((0, i.Qn)((e) => e.map(d)));
        }
        getForItemId(e) {
          return this.get().pipe((0, i.Qn)((t) => t.find((t) => t.items?.some((t) => e === t.itemId))));
        }
        getForItemGroupId(e) {
          return this.get().pipe((0, i.Qn)((t) => t.find((t) => t.groupId === e)));
        }
        getForItemsIds(e) {
          return this.get().pipe((0, i.Qn)((t) => t.filter((t) => t.items?.some((t) => e.includes(t.itemId)))));
        }
        getForCollectionId(e) {
          return this.get().pipe((0, i.Qn)((t) => t.filter((t) => t.collections?.some((t) => e.includes(t.uuid)))));
        }
      };
      u = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [o._])], u);
    },
    66076: (e, t, r) => {
      r.d(t, { J: () => c });
      var s = r(88802),
        o = r(60399),
        n = r(86252),
        i = r(57924),
        a = r(87279);
      let c = class {
        constructor(e) {
          this.client = e;
        }
        async getCarbonCredentialsByItemIds(e) {
          const {
              queries: { carbonState: t }
            } = this.client,
            r = await (0, o.z)(t({ path: "userSession.personalData.credentials" }));
          if ((0, a.hx)(r)) throw new Error("Unable to access credentials from carbon");
          const s = r.data;
          if (!s) throw new Error("No credentials found");
          return s.filter(({ Id: t }) => e.includes(t));
        }
      };
      c = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [n._])], c);
    },
    72614: (e, t, r) => {
      r.d(t, { n: () => c });
      var s = r(88802),
        o = r(86252),
        n = r(57924),
        i = r(48844);
      const a = (e) => {
        if (!e) return { teamId: "", isSharingEnabled: !1, isCollectionsSharingEnabled: !1 };
        const t = e;
        if (
          !(
            (r = t.spaces) &&
            Array.isArray(r) &&
            0 !== r.length &&
            ((e) => {
              if (!e) return !1;
              const t = e;
              return !!(
                t.associatedEmail &&
                t.billingAdmins &&
                t.color &&
                t.info &&
                t.letter &&
                t.planType &&
                t.status &&
                t.teamAdmins &&
                t.teamId &&
                t.teamName &&
                t.tier
              );
            })(r.find((e) => "accepted" === e.status))
          )
        )
          return { teamId: "", isSharingEnabled: !0, isCollectionsSharingEnabled: !1 };
        var r;
        const s = t.spaces.find((e) => "accepted" === e.status),
          o = Boolean(t.capabilities?.collectionSharing.enabled);
        return { teamId: s?.teamId ?? "", isSharingEnabled: Boolean(s && !s.info.sharingDisabled), isCollectionsSharingEnabled: o };
      };
      let c = class {
        constructor(e) {
          this.client = e;
        }
        get() {
          const {
            queries: { carbonState: e }
          } = this.client;
          return e({ path: "userSession.localSettings.premiumStatus" }).pipe((0, i.Qn)(a));
        }
      };
      c = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [o._])], c);
    },
    81982: (e, t, r) => {
      r.d(t, { a: () => c });
      var s = r(88802),
        o = r(60399),
        n = r(86252),
        i = r(57924),
        a = r(48844);
      let c = class {
        constructor(e) {
          this.client = e;
        }
        async getCurrentUserWithKeys() {
          const {
            queries: { carbonStateList: e }
          } = this.client;
          return await (0, o.z)(
            e({
              paths: ["userSession.account.login", "userSession.session.keyPair.publicKey", "userSession.session.keyPair.privateKey"]
            }).pipe(
              (0, a.nb)({
                success: ([e, t, r]) => {
                  if ("string" != typeof e || "string" != typeof t || "string" != typeof r)
                    throw new Error("Invalid format of current user keys");
                  return { login: e, publicKey: t, privateKey: r };
                },
                failure: () => {
                  throw new Error("Failure getting current user and key pair");
                }
              })
            )
          );
        }
      };
      c = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [n._])], c);
    },
    19617: (e, t, r) => {
      r.d(t, { V: () => c });
      var s = r(88802),
        o = r(86252),
        n = r(57924),
        i = r(48844),
        a = r(31766);
      let c = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        get() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "userSession.sharingSync" }).pipe(
            (0, i.Qn)((e) => {
              if (!(0, a.o)(e)) throw new Error("Bad SharingSync format");
              return e;
            })
          );
        }
      };
      c = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [o._])], c);
    },
    59452: (e, t, r) => {
      r.d(t, { B: () => v });
      var s = r(88802),
        o = r(60399),
        n = r(87065),
        i = r(7165),
        a = r(86252),
        c = r(57924),
        l = r(87279),
        d = r(63877);
      function u(e) {
        switch (e) {
          case "admin":
            return d.y3.Admin;
          case "limited":
            return d.y3.Limited;
        }
      }
      function p(e) {
        switch (e) {
          case "pending":
            return d.qb.Pending;
          case "accepted":
            return d.qb.Accepted;
          case "refused":
            return d.qb.Refused;
          case "revoked":
            return d.qb.Revoked;
        }
      }
      function h(e) {
        return {
          groupId: e.groupId,
          revision: e.revision,
          type: e.type,
          teamId: e.teamId,
          name: e.name,
          privateKey: e.privateKey,
          publicKey: e.publicKey,
          externalId: e.externalId,
          familyId: e.familyId,
          users: [...e.users.map((e) => ({ ...e, permission: u(e.permission), status: p(e.status) }))]
        };
      }
      const m = i.z.array(
        i.z.object({
          groupId: i.z.string(),
          name: i.z.string(),
          externalId: i.z.string().nullable().optional(),
          teamId: i.z.number().optional(),
          type: i.z.enum(["users", "teamAdmins"]),
          publicKey: i.z.string(),
          privateKey: i.z.string(),
          revision: i.z.number(),
          users: i.z.array(
            i.z.object({
              userId: i.z.string(),
              alias: i.z.string(),
              referrer: i.z.string(),
              groupKey: i.z.string().nullable().optional(),
              acceptSignature: i.z.string().nullable().optional(),
              permission: i.z.enum(["admin", "limited"]),
              rsaStatus: i.z.enum(["noKey", "publicKey", "sharingKeys"]),
              status: i.z.enum(["pending", "accepted", "refused", "revoked"]),
              proposeSignatureUsingAlias: i.z.boolean().optional(),
              proposeSignature: i.z.string().optional()
            })
          )
        })
      );
      let v = class {
        constructor(e) {
          this.client = e;
        }
        getRawCarbon$() {
          const {
            queries: { carbonState: e }
          } = this.client;
          return e({ path: "userSession.sharingData.userGroups" });
        }
        async getRawCarbon() {
          const e = await (0, o.z)(this.getRawCarbon$());
          if ((0, l.hx)(e)) throw new Error("Failure getting user groups state from carbon sharing data");
          return e.data;
        }
        userGroups$() {
          return this.getRawCarbon$().pipe(
            (0, n.U)((e) => {
              if ((0, l.hx)(e)) throw new Error("Failure observing user groups state from carbon sharing data");
              const t = m.safeParse(e.data);
              return t.success ? (0, l.Vp)(t.data) : (0, l.Rn)(void 0);
            })
          );
        }
        async get() {
          const e = await this.getRawCarbon(),
            t = m.safeParse(e);
          if (!t.success) throw new Error("Invalid format of user group state");
          return t.data;
        }
        async getForGroupIds(e) {
          return (await this.get()).filter((t) => e.includes(t.groupId));
        }
        getCarbonUserGroups$() {
          return this.getRawCarbon$().pipe(
            (0, n.U)((e) => {
              if ((0, l.hx)(e)) throw new Error("Failure getting user groups state from carbon sharing data");
              return (0, l.db)(e).map(h);
            })
          );
        }
        async getCarbonUserGroups() {
          return (await this.getRawCarbon()).map(h);
        }
      };
      v = (0, s.__decorate)([(0, c.GS)(), (0, s.__metadata)("design:paramtypes", [a._])], v);
    },
    34685: (e, t, r) => {
      r.d(t, { a: () => a });
      var s = r(88802),
        o = r(57924),
        n = r(36458),
        i = r(87065);
      let a = class {
        constructor(e) {
          this.store = e;
        }
        async getCollections() {
          return (await this.store.getState()).sharedCollections;
        }
        collections$() {
          return this.store.state$.pipe((0, i.U)((e) => e.sharedCollections));
        }
        collection$(e) {
          return this.collections$().pipe((0, i.U)((t) => t.find((t) => t.uuid === e)));
        }
        async getCollection(e) {
          const t = (await this.store.getState()).sharedCollections.find((t) => t.uuid === e);
          if (t) return t;
        }
        async updateCollections(e) {
          await this.store.set({ sharedCollections: [...e] });
        }
      };
      a = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.S])], a);
    },
    36458: (e, t, r) => {
      r.d(t, { S: () => d });
      var s = r(95681),
        o = r(23347),
        n = r(25029),
        i = r(7165),
        a = r(4400);
      const c = i.z.object({ sharedCollections: i.z.array(a.MX) }),
        l = (e) => c.safeParse(e).success;
      class d extends (0, s.Q)({
        capacity: o.Y._010KB,
        persist: !1,
        scope: n.F.User,
        storeName: "collections-store",
        storeTypeGuard: l,
        initialValue: { sharedCollections: [] }
      }) {}
    },
    64057: (e, t, r) => {
      r.d(t, { a: () => We });
      var s = r(88802),
        o = r(99634),
        n = r(72721),
        i = r(93850),
        a = r(37935),
        c = r(63663),
        l = r(87279),
        d = r(99676),
        u = r(60399),
        p = r(57924),
        h = r(82466),
        m = r(24917),
        v = r(89560),
        g = r(66076);
      class y {}
      var f = r(61076),
        _ = r(87065),
        S = r(69885),
        E = r(21869),
        b = r(48844),
        w = r(4400),
        A = r(59452),
        T = r(34685);
      let C = class {
        constructor(e, t, r, s) {
          (this.itemGroupsGetter = e), (this.userGroupGetter = t), (this.collectionsRepository = r), (this.context = s);
        }
        async canShareItemGroup(e) {
          const t = this.getCurrentUserLogin();
          if (!t) return !1;
          const r = await this.userGroupGetter.getCarbonUserGroups(),
            s = await this.collectionsRepository.getCollections(),
            o =
              e.users?.some(
                (e) =>
                  e.userId === t && e.status === h.qb.Accepted && !e.proposeSignatureUsingAlias && e.permission === h.y3.Admin && e.groupKey
              ) ?? !1,
            n = r.filter((e) =>
              e.users.some((e) => e.userId === t && e.status === h.qb.Accepted && !e.proposeSignatureUsingAlias && e.groupKey)
            ),
            i =
              e.groups?.some(
                (e) => n.some((t) => t.groupId === e.groupId) && e.status === h.qb.Accepted && e.permission === h.y3.Admin && e.groupKey
              ) ?? !1,
            a = s.filter(
              (e) =>
                e.users?.some((e) => e.login === t && e.status === h.qb.Accepted && !e.proposeSignatureUsingAlias && e.collectionKey) ||
                e.userGroups?.some((e) => n.some((t) => t.groupId === e.uuid) && e.status === h.qb.Accepted && e.collectionKey)
            ),
            c =
              e.collections?.some(
                (e) => a.some((t) => t.uuid === e.uuid) && e.status === h.qb.Accepted && e.permission === h.y3.Admin && e.itemGroupKey
              ) ?? !1;
          return o || i || c;
        }
        getUserRoleInCollection$(e, t) {
          const r = this.getCurrentUserLogin();
          return this.userGroupGetter.getCarbonUserGroups$().pipe(
            (0, f.V)(this.collectionsRepository.collection$(e)),
            (0, _.U)(([e, s]) => {
              if (!s) throw new Error("Shared collection not found");
              const o = t || r,
                n = s.users?.find((e) => e.login === o),
                i = n?.permission === h.y3.Admin && n.status === h.qb.Accepted,
                a = e.filter((e) => e.users.some((e) => e.userId === o && e.status === h.qb.Accepted)).map((e) => e.groupId),
                c = s.userGroups?.filter((e) => a.includes(e.uuid)),
                l = c?.some((e) => e.permission === h.y3.Admin);
              return i || l ? w.Yt.Manager : w.Yt.Editor;
            })
          );
        }
        getGroupRoleInCollection$(e, t) {
          return this.collectionsRepository.collection$(e).pipe(
            (0, _.U)((e) => {
              if (!e) throw new Error("Shared collection not found");
              const r = e.userGroups?.find((e) => e.uuid === t);
              return r?.permission === h.y3.Admin ? w.Yt.Manager : w.Yt.Editor;
            })
          );
        }
        canShareItems(e) {
          return 0 === e.length
            ? (0, S.of)((0, l.Vp)(!0))
            : this.itemGroupsGetter
                .getForItemsIds(e)
                .pipe((0, b.Gx)(async (e) => (await Promise.all(e.map((e) => this.canShareItemGroup(e)))).every(Boolean)));
        }
        getCurrentUserLogin() {
          return this.context.get(E.l.UserName);
        }
      };
      C = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [v.E, A.B, T.a, E.f])], C);
      var I = r(66122),
        O = r(89685),
        P = r(41923),
        R = r(50200),
        D = r(67541);
      let N = class {
        constructor(e, t, r) {
          (this.sharingInvitesCrypto = e), (this.sharingCrypto = t), (this.sharingDecryption = r);
        }
        async createItemGroupCollectionInvites(e, t, r, s) {
          const o = await Promise.all(
            r.map(async (r) => {
              const o = await this.sharingDecryption.decryptItemGroupKey(r, t);
              if (null === o) throw new Error("Unable to decrypt item group key");
              const n = await this.sharingDecryption.decryptCollectionKey(e);
              if (null === n) throw new Error("Unable to decrypt collection key");
              const i = await this.sharingCrypto.decryptSecureData(n, (0, I.R)(e.privateKey)),
                {
                  proposeSignature: a,
                  acceptSignature: c,
                  resourceKey: l
                } = await this.sharingInvitesCrypto.createSignedInvite(
                  e.uuid,
                  { resourceKey: o, uuid: r.groupId },
                  e.publicKey,
                  (0, O.v)(i)
                );
              if (!c) throw new Error("should not happen");
              return { id: r.groupId, permission: s, resourceKey: l, proposeSignature: a, acceptSignature: c };
            })
          );
          return { collectionId: e.uuid, revision: e.revision, itemGroups: o };
        }
      };
      N = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [P.h, R.O, D.c])], N);
      let U = class {
        constructor(e, t, r, s, o, n) {
          (this.collectionAccess = e),
            (this.sharingManager = t),
            (this.sharingItemGroups = r),
            (this.itemGroupsGetter = s),
            (this.sharingCollectionsApi = o),
            (this.credentialsGetter = n);
        }
        async addItemsToCollections(e, t, r, s) {
          const o = await (0, u.z)(this.itemGroupsGetter.getForItemsIds(t));
          if ((0, l.hx)(o)) throw new Error("Unable to find item groups for items");
          const n = (0, l.db)(o);
          if (n.some((t) => t.collections?.some((t) => e.some(({ uuid: e }) => e === t.uuid))))
            throw new Error("Items are already shared in the collections");
          if (!(await Promise.all(n.map((e) => this.collectionAccess.canShareItemGroup(e)))).every(Boolean))
            throw new Error("User does not have access to share selected items");
          const i = [
              ...(await this.credentialsGetter.getCarbonCredentialsByItemIds(t)).filter(
                ({ Id: e }) => !n.some((t) => t.items?.some((t) => t.itemId === e))
              )
            ],
            a = i.length > 0 ? await this.sharingItemGroups.createMultipleItemGroups(i) : [],
            c = [...n, ...a];
          return (
            await Promise.all(
              e.map(async (e) => {
                const t = await this.sharingManager.createItemGroupCollectionInvites(
                  e,
                  r,
                  c,
                  s.find((t) => t.collectionUUID === e.uuid)?.permission ?? h.y3.Admin
                );
                await this.sharingCollectionsApi.addItemGroupsToCollection(t);
              })
            ),
            (0, l.Vp)(void 0)
          );
        }
      };
      U = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [C, N, m.k, v.E, y, g.J])], U);
      var L = r(12521);
      let F = class {
        constructor(e, t, r) {
          (this.sharingCollectionItems = e), (this.sharingSync = t), (this.collectionsRepository = r);
        }
        async execute({ body: e }) {
          const { collectionId: t, itemIds: r, defaultItemPermissions: s } = e,
            o = await this.collectionsRepository.getCollection(t);
          if (!o) throw new Error("Unable to find collection");
          const n = { collectionUUID: t, permission: s },
            i = await this.collectionsRepository.getCollections(),
            a = await this.sharingCollectionItems.addItemsToCollections([o], r, i, [n]);
          if ((0, l.hx)(a)) throw new Error("Failed adding items to collection");
          return await this.sharingSync.scheduleSync(), (0, l.Vp)(void 0);
        }
      };
      F = (0, s.__decorate)([(0, c.W)(d.Z), (0, s.__metadata)("design:paramtypes", [U, L.D, T.a])], F);
      var M = r(11527),
        x = r(87969),
        k = r(80231),
        G = r(87853);
      let K = class {
        constructor(e, t, r, s, o) {
          (this.sharingCollectionsGateway = e),
            (this.sharingCrypto = t),
            (this.sharingDecryption = r),
            (this.sharingUserGroups = s),
            (this.sharingUsers = o);
        }
        async createCollection(e, t, r, s, o, n) {
          const i = await this.sharingCrypto.createResourceKey(),
            a = { resourceKey: i, uuid: e },
            c = await this.sharingUsers.createSignedUserInvites(o, a),
            l = n.length > 0 ? await this.sharingUserGroups.createSignedUserGroupInvites(n, a) : void 0,
            { publicKey: d, privateKey: u } = await this.sharingCrypto.createRecipientKeyPair(i);
          return this.sharingCollectionsGateway.createCollection({
            collectionId: e,
            collectionName: r,
            publicKey: d,
            privateKey: u,
            users: c,
            userGroups: l,
            teamId: Number(t)
          });
        }
        async renameCollection(e, t) {
          const { revision: r, uuid: s } = e;
          await this.sharingCollectionsGateway.renameCollection({ collectionId: s, revision: r, updatedName: t });
        }
        async inviteCollectionMembers(e, t, r) {
          const { revision: s, uuid: o } = e,
            n = await this.sharingDecryption.decryptCollectionKey(e);
          if (!n) throw new Error("Cannot decrypt collection key.");
          const i = t.length ? this.sharingUsers.createSignedUserInvites(t, { resourceKey: n, uuid: e.uuid }, !1) : void 0,
            a = r.length ? this.sharingUserGroups.createSignedUserGroupInvites(r, { resourceKey: n, uuid: e.uuid }) : void 0,
            [c, l] = await Promise.all([i, a]);
          return await this.sharingCollectionsGateway.inviteCollectionMembers({ revision: s, collectionId: o, users: c, userGroups: l });
        }
        async updateCollectionMembers(e, t, r) {
          const { revision: s, uuid: o } = e;
          return await this.sharingCollectionsGateway.updateCollectionMembers({ revision: s, collectionId: o, users: t, userGroups: r });
        }
      };
      K = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [y, R.O, D.c, k.o, G.E])], K);
      var V = r(40896);
      const j = (e) => (e === w.Yt.Manager ? h.y3.Admin : h.y3.Limited),
        B = (e) => ({ login: e.login, permission: j(e.role) }),
        W = (e) => ({ groupId: e.groupId, permission: j(e.role) }),
        H = (e) => e.login,
        z = (e) => e.groupId,
        Q = (e) => (e.length > 0 ? e.map(H) : void 0);
      let q = class {
        constructor(e, t, r, s, o, n) {
          (this.sharingCollections = e),
            (this.collectionsRepository = t),
            (this.sharingCollectionsGateway = r),
            (this.sharingCollectionItems = s),
            (this.vaultClient = o),
            (this.sharingSync = n);
        }
        async execute({ body: e }) {
          const { teamId: t, collectionName: r, privateCollectionId: s, users: o, groups: n, defaultItemPermissions: i, itemIds: a } = e,
            c = (0, V.R)(),
            d = await this.sharingCollections.createCollection(c, t, r, i, o.map(B), n.map(W)),
            u = { collectionUUID: c, permission: i };
          if (a.length > 0)
            try {
              const e = await this.collectionsRepository.getCollections();
              await this.sharingCollectionItems.addItemsToCollections([d], a, e, [u]);
            } catch (e) {
              const t = await this.sharingCollectionsGateway.revokeCollectionMembers({
                collectionId: d.uuid,
                revision: d.revision,
                userGroupIds: ((p = n), p.length > 0 ? p.map(z) : void 0),
                userLogins: Q(o)
              });
              throw (await this.sharingCollectionsGateway.deleteCollection(t.uuid, t.revision), await this.sharingSync.scheduleSync(), e);
            }
          var p;
          const { commands: h } = this.vaultClient;
          return s ? await h.deleteCollection({ id: s }) : await this.sharingSync.scheduleSync(), (0, l.Vp)(void 0);
        }
      };
      q = (0, s.__decorate)([(0, c.W)(M.I), (0, s.__metadata)("design:paramtypes", [K, T.a, y, U, x.C, L.D])], q);
      var Y = r(50384);
      let $ = class {
        constructor(e, t, r) {
          (this.sharingSync = e), (this.collectionsRepository = t), (this.sharingCollectionsApi = r);
        }
        async execute({ body: e }) {
          const { id: t } = e,
            r = await this.collectionsRepository.getCollection(t);
          if (!r) throw new Error("Failed to find collection revision");
          return (
            await this.sharingCollectionsApi.deleteCollection(r.uuid, r.revision), await this.sharingSync.scheduleSync(), (0, l.Vp)(void 0)
          );
        }
      };
      $ = (0, s.__decorate)([(0, c.W)(Y.U), (0, s.__metadata)("design:paramtypes", [L.D, T.a, y])], $);
      var X = r(89074);
      let Z = class {
        constructor(e, t) {
          (this.sharingCollectionsService = e), (this.collectionsRepository = t);
        }
        async execute({ body: e }) {
          const { collectionId: t, userRecipients: r, userGroupRecipients: s } = e,
            o = await this.collectionsRepository.getCollection(t);
          if (!o) throw new Error("Collection not found");
          const n = await this.sharingCollectionsService.inviteCollectionMembers(o, r?.map(B) || [], s?.map(W) || []),
            i = (await this.collectionsRepository.getCollections()).filter((e) => e.uuid !== n.uuid);
          return await this.collectionsRepository.updateCollections([...i, n]), (0, l.Vp)(void 0);
        }
      };
      Z = (0, s.__decorate)([(0, c.W)(X.Q), (0, s.__metadata)("design:paramtypes", [K, T.a])], Z);
      var J = r(68827);
      let ee = class {
        constructor(e, t, r, s) {
          (this.sharingCollectionsGateway = e), (this.collectionsRepository = t), (this.itemGroupsGetter = r), (this.sharingSync = s);
        }
        async removeItemToCollection(e, t) {
          const r = await this.collectionsRepository.getCollection(t);
          if (!r) throw new Error("Unable to find collection");
          const s = await (0, u.z)(this.itemGroupsGetter.getForItemId(e));
          if ((0, l.hx)(s) || !s.data) throw new Error("Item group to remove cannot be found");
          await this.sharingCollectionsGateway.removeItemGroupsFromCollection(r, [s.data.groupId]);
        }
        async execute({ body: e }) {
          const { collectionIds: t, itemId: r } = e;
          for (const e of t) await this.removeItemToCollection(r, e);
          return await this.sharingSync.scheduleSync(), (0, l.Vp)(void 0);
        }
      };
      ee = (0, s.__decorate)([(0, c.W)(J.B), (0, s.__metadata)("design:paramtypes", [y, T.a, v.E, L.D])], ee);
      var te = r(86590);
      let re = class {
        constructor(e, t, r) {
          (this.sharingCollections = e), (this.collectionsRepository = t), (this.sharingSync = r);
        }
        async execute({ body: e }) {
          const { collectionId: t, newName: r } = e,
            s = await this.collectionsRepository.getCollection(t);
          if (!s) throw new Error("Failed to find collection revision");
          return await this.sharingCollections.renameCollection(s, r), await this.sharingSync.scheduleSync(), (0, l.Vp)(void 0);
        }
      };
      re = (0, s.__decorate)([(0, c.W)(te.r), (0, s.__metadata)("design:paramtypes", [K, T.a, L.D])], re);
      var se = r(77311);
      let oe = class {
        constructor(e, t) {
          (this.collectionsRepository = e), (this.sharingCollectionsGateway = t);
        }
        async execute({ body: e }) {
          const { collectionUUID: t, userGroupUUIDs: r, userLogins: s } = e,
            o = await this.collectionsRepository.getCollection(t);
          if (!o) throw new Error("Cannot access the requested collection.");
          const { revision: n } = o,
            i = await this.sharingCollectionsGateway.revokeCollectionMembers({
              collectionId: t,
              revision: n,
              userGroupIds: r,
              userLogins: s
            }),
            a = (await this.collectionsRepository.getCollections()).filter((e) => e.uuid !== i.uuid);
          return await this.collectionsRepository.updateCollections([...a, i]), (0, l.Vp)(void 0);
        }
      };
      oe = (0, s.__decorate)([(0, c.W)(se.q), (0, s.__metadata)("design:paramtypes", [T.a, y])], oe);
      var ne = r(15507);
      let ie = class {
        constructor(e) {
          this.collectionsRepository = e;
        }
        async execute({ body: e }) {
          return await this.collectionsRepository.updateCollections(e.collections), (0, l.Vp)(void 0);
        }
      };
      ie = (0, s.__decorate)([(0, c.W)(ne.M), (0, s.__metadata)("design:paramtypes", [T.a])], ie);
      var ae = r(43978),
        ce = r(20754),
        le = r(84178),
        de = r(72614);
      let ue = class {
        constructor(e, t, r, s) {
          (this.sharingAccess = e), (this.itemGroupsGetter = t), (this.vaultOrganization = r), (this.currentSpace = s);
        }
        isCollectionsSharingEnabled(e) {
          return e.isSharingEnabled && e.isCollectionsSharingEnabled;
        }
        execute({ body: e }) {
          const { collectionId: t, userId: r } = e,
            {
              queries: { queryCollections: s }
            } = this.vaultOrganization;
          return s({ ids: [t] }).pipe(
            (0, f.V)(this.currentSpace.get()),
            (0, ae.w)(([e, s]) => {
              if ((0, l.hx)(e)) throw new Error("Error accessing private collections");
              if ((0, l.hx)(s)) throw new Error("Error accessing current space info");
              const o = this.isCollectionsSharingEnabled((0, l.db)(s)),
                n = (0, l.db)(e).collections.find(({ id: e }) => e === t);
              if (n) {
                const e = n.vaultItems.map(({ id: e }) => e);
                return (0, S.of)({ isCollectionsSharingEnabled: o, itemIds: e, role: w.Yt.Manager, isPrivateCollection: !0 });
              }
              return this.sharingAccess.getUserRoleInCollection$(t, r).pipe(
                (0, f.V)(this.itemGroupsGetter.getForCollectionId(t)),
                (0, _.U)(([e, t]) => {
                  if ((0, l.hx)(t)) throw new Error("Failed to retrieve item groups for shared collection permissions query");
                  return {
                    itemIds: (0, l.db)(t).map((e) => e.items?.[0]?.itemId),
                    role: o ? e : w.Yt.Editor,
                    isCollectionsSharingEnabled: o,
                    isPrivateCollection: !1
                  };
                })
              );
            }),
            (0, ae.w)(({ itemIds: e, role: t, isCollectionsSharingEnabled: r, isPrivateCollection: s }) => {
              const o = t === w.Yt.Manager;
              return r
                ? this.sharingAccess.canShareItems(e).pipe(
                    (0, _.U)((e) => {
                      if ((0, l.hx)(e)) throw new Error("Error checking if user can share a collection");
                      const r = !!o && (0, l.db)(e);
                      return (0, l.Vp)({ canShare: r, canEditRoles: o, canEdit: o, canDelete: o, role: t });
                    })
                  )
                : (0, S.of)((0, l.Vp)({ canShare: !1, canEditRoles: !1, canEdit: s, canDelete: s, role: t }));
            })
          );
        }
      };
      ue = (0, s.__decorate)([(0, ce.e)(le.y), (0, s.__metadata)("design:paramtypes", [C, v.E, x.C, de.n])], ue);
      var pe = r(39821);
      let he = class {
        constructor(e) {
          this.sharingAccess = e;
        }
        execute({ body: e }) {
          const { collectionId: t, groupId: r } = e;
          return this.sharingAccess.getGroupRoleInCollection$(t, r).pipe((0, _.U)((e) => (0, l.Vp)(e)));
        }
      };
      he = (0, s.__decorate)([(0, ce.e)(pe.L), (0, s.__metadata)("design:paramtypes", [C])], he);
      var me = r(44282);
      let ve = class {
        constructor(e, t) {
          (this.collectionsRepository = e), (this.userGroupGetter = t);
        }
        execute({ body: e }) {
          const { targetId: t } = e;
          return this.userGroupGetter.getCarbonUserGroups$().pipe(
            (0, f.V)(this.collectionsRepository.collections$()),
            (0, _.U)(([e, r]) => {
              const s = r.filter((r) => {
                const s = r.users?.some((e) => e.login === t);
                if (s) return !0;
                const o = r.userGroups,
                  n = o?.some((e) => e.uuid === t);
                if (n) return !0;
                const i = e.filter((e) => e.users.some((e) => e.userId === t)),
                  a = o?.some((e) => i.some((t) => t.groupId === e.uuid));
                return a;
              });
              return (0, l.Vp)({ collections: s });
            })
          );
        }
      };
      ve = (0, s.__decorate)([(0, ce.e)(me.Q), (0, s.__metadata)("design:paramtypes", [T.a, A.B])], ve);
      var ge = r(67591),
        ye = r(11578),
        fe = r(82706);
      const _e = (e) => {
          if (!e.items || 1 !== e.items.length) throw new Error("Corrupted item group");
          return { id: e.items[0].itemId, type: fe.U.Credential };
        },
        Se = (e, t, r) => {
          const s = ((e, t, r) => ({
            name: e.name,
            id: e.uuid,
            spaceId: r,
            isShared: !0,
            vaultItems: t.filter((t) => t.collections?.some((t) => t.uuid === e.uuid)).map(_e)
          }))(e, t, r);
          if (ye.JQ.safeParse(s).success) return s;
          throw new Error("Failure to convert shared collection");
        };
      let Ee = class {
        constructor(e, t, r) {
          (this.currentSpaceGetter = e), (this.itemGroupsGetter = t), (this.collectionsRepository = r);
        }
        execute({ body: e }) {
          const { itemIds: t } = e;
          return this.collectionsRepository.collections$().pipe(
            (0, f.V)(this.currentSpaceGetter.get(), this.itemGroupsGetter.get()),
            (0, _.U)(([e, r, s]) => {
              if ((0, l.hx)(r) || (0, l.hx)(s)) throw new Error("Unable to access sharing data");
              const o = e.map((e) => Se(e, s.data, r.data.teamId)).flatMap((e) => e.vaultItems),
                n = t.filter((e) => o.some((t) => t.id === e));
              return (0, l.Vp)(n);
            })
          );
        }
      };
      Ee = (0, s.__decorate)([(0, ce.e)(ge.q), (0, s.__metadata)("design:paramtypes", [de.n, v.E, T.a])], Ee);
      var be = r(24249);
      let we = class {
        constructor(e) {
          this.collectionsRepository = e;
        }
        execute({ body: e }) {
          const t = e.collectionIds ? e.collectionIds : [];
          return this.collectionsRepository
            .collections$()
            .pipe((0, _.U)((e) => (0, l.Vp)(e.filter((e) => !t.length || t.includes(e.uuid)))));
        }
      };
      we = (0, s.__decorate)([(0, ce.e)(be.$), (0, s.__metadata)("design:paramtypes", [T.a])], we);
      let Ae = class {
        constructor(e, t, r) {
          (this.collectionsRepository = e), (this.currentSpaceGetter = t), (this.itemGroupsGetter = r);
        }
        execute() {
          return this.collectionsRepository.collections$().pipe(
            (0, f.V)(this.currentSpaceGetter.get(), this.itemGroupsGetter.get()),
            (0, _.U)(([e, t, r]) => {
              if ((0, l.hx)(t) || (0, l.hx)(r)) throw new Error("Failed to load shared collections");
              return (0, l.Vp)(e.map((e) => Se(e, r.data, t.data.teamId)));
            })
          );
        }
      };
      Ae = (0, s.__decorate)([(0, ce.e)(ye.MO), (0, s.__metadata)("design:paramtypes", [T.a, de.n, v.E])], Ae);
      var Te = r(6233);
      let Ce = class {
        constructor(e) {
          this.collectionsRepository = e;
        }
        execute({ body: e }) {
          const { collectionUUIDs: t } = e;
          return this.collectionsRepository.collections$().pipe(
            (0, _.U)((e) => {
              const r = e.filter((e) => t.includes(e.uuid)),
                s = r
                  .flatMap((e) => (e.users ? e.users : []))
                  .map((e) => ({ id: e.login, label: e.login, status: e.status, permission: e.permission })),
                o = r
                  .flatMap((e) => (e.userGroups ? e.userGroups : []))
                  .map((e) => ({ id: e.uuid, label: e.name, status: e.status, permission: e.permission }));
              return (0, l.Vp)({ userGroups: o, users: s });
            })
          );
        }
      };
      Ce = (0, s.__decorate)([(0, ce.e)(Te.O), (0, s.__metadata)("design:paramtypes", [T.a])], Ce);
      var Ie = r(36458),
        Oe = r(46629);
      function Pe(e) {
        return void 0 !== e;
      }
      let Re = class {
        constructor(e, t, r) {
          (this.sharingCollectionItems = e), (this.sharingSync = t), (this.collectionsRepository = r);
        }
        async execute({ body: e }) {
          const { collectionPermissions: t, itemId: r, shouldSkipSync: s } = e,
            o = await Promise.all(t.map((e) => this.collectionsRepository.getCollection(e.collectionUUID)));
          if (o.some((e) => void 0 === e)) throw new Error("Unable to find collection");
          const n = await this.collectionsRepository.getCollections(),
            i = await this.sharingCollectionItems.addItemsToCollections(o.filter(Pe), [r], n, t);
          if ((0, l.hx)(i)) throw new Error("Failed adding items to collection");
          return s || (await this.sharingSync.scheduleSync()), (0, l.Vp)(void 0);
        }
      };
      Re = (0, s.__decorate)([(0, c.W)(Oe.$), (0, s.__metadata)("design:paramtypes", [U, L.D, T.a])], Re);
      var De = r(87113);
      const Ne = (e) =>
          e.map(
            ({
              id: e,
              resourceKey: t,
              proposeSignature: r,
              proposeSignatureUsingAlias: s,
              acceptSignature: o,
              alias: n,
              permission: i
            }) => ({
              login: e,
              collectionKey: t,
              proposeSignature: r,
              proposeSignatureUsingAlias: s,
              acceptSignature: o,
              alias: n,
              permission: i
            })
          ),
        Ue = (e) =>
          e.map(({ id: e, resourceKey: t, proposeSignature: r, proposeSignatureUsingAlias: s, acceptSignature: o, permission: n }) => ({
            groupUUID: e,
            collectionKey: t,
            proposeSignature: r,
            proposeSignatureUsingAlias: s,
            acceptSignature: o,
            permission: n
          }));
      let Le = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        async createCollection(e) {
          const t = await (0, u.z)(
            this.serverApiClient.v1.sharingUserdevice.createCollection(
              ((e) => {
                const { collectionId: t, collectionName: r, users: s, userGroups: o, publicKey: n, privateKey: i, teamId: a } = e;
                return {
                  collectionUUID: t,
                  collectionName: r,
                  publicKey: n,
                  privateKey: i,
                  teamId: a,
                  users: Ne(s),
                  userGroups: o ? Ue(o) : void 0
                };
              })(e)
            )
          );
          if ((0, l.hx)(t)) throw new Error("Failed to create shared collection from private one");
          const r = (0, l.db)(t).data.collections?.find((t) => t.uuid === e.collectionId);
          if (!r) throw new Error("Unable to find collection");
          return r;
        }
        async renameCollection(e) {
          const { collectionId: t, revision: r, updatedName: s } = e,
            o = await (0, u.z)(
              this.serverApiClient.v1.sharingUserdevice.renameCollection({ collectionUUID: t, revision: r, updatedName: s })
            );
          if ((0, l.hx)(o)) throw new Error("Failed to rename shared collection");
        }
        async addItemGroupsToCollection(e) {
          const t = await (0, u.z)(
            this.serverApiClient.v1.sharingUserdevice.addItemGroupsToCollection({
              collectionUUID: e.collectionId,
              itemGroups: e.itemGroups.map(({ id: e, proposeSignature: t, acceptSignature: r, permission: s, resourceKey: o }) => ({
                uuid: e,
                proposeSignature: t,
                acceptSignature: r,
                permission: s,
                itemGroupKey: o
              })),
              revision: e.revision
            })
          );
          if ((0, l.hx)(t)) throw new Error("Failed to add items to collection");
          if (0 === ((0, l.db)(t).data.collections || []).length) throw new Error("Failed to add items to collection");
        }
        async updateItemPermissionsInCollection(e) {
          const t = await (0, u.z)(
            this.serverApiClient.v1.sharingUserdevice.updateItemGroupMembers({
              collections: [e.collection],
              groupId: e.groupId,
              revision: e.revision
            })
          );
          if ((0, l.hx)(t)) throw new Error("Failed to update item permissions in collection");
        }
        async deleteCollection(e, t) {
          const r = { collectionUUID: e, revision: t },
            s = await (0, u.z)(this.serverApiClient.v1.sharingUserdevice.deleteCollection(r));
          if ((0, l.hx)(s)) throw new Error("Failed to delete shared collection");
        }
        async inviteCollectionMembers({ collectionId: e, revision: t, users: r, userGroups: s }) {
          const o = { collectionUUID: e, revision: t, users: r ? Ne(r) : void 0, userGroups: s ? Ue(s) : void 0 },
            n = this.serverApiClient.v1.sharingUserdevice.inviteCollectionMembers(o),
            i = await (0, u.z)(n);
          if ((0, l.hx)(i) || !i.data.data.collections) throw new Error("Failed to add members to collection");
          return i.data.data.collections[0];
        }
        async updateCollectionMembers({ collectionId: e, revision: t, users: r, userGroups: s }) {
          const o = {
              collectionUUID: e,
              revision: t,
              users: r,
              userGroups: s?.map(({ groupId: e, permission: t }) => ({ groupUUID: e, permission: t }))
            },
            n = this.serverApiClient.v1.sharingUserdevice.updateCollectionMembers(o),
            i = await (0, u.z)(n);
          if ((0, l.hx)(i) || !i.data.data.collections) throw new Error("Failed to update collection members");
          return i.data.data.collections[0];
        }
        async revokeCollectionMembers({ collectionId: e, revision: t, userGroupIds: r, userLogins: s }) {
          const o = this.serverApiClient.v1.sharingUserdevice.revokeCollectionMembers({
              collectionUUID: e,
              revision: t,
              userLogins: s,
              userGroupUUIDs: r
            }),
            n = await (0, u.z)(o);
          if ((0, l.hx)(n) || !n.data.data.collections) throw new Error("Failed to revoke access to collection");
          return n.data.data.collections[0];
        }
        async removeItemGroupsFromCollection(e, t) {
          const r = await (0, u.z)(
            this.serverApiClient.v1.sharingUserdevice.removeItemGroupsFromCollection({
              collectionUUID: e.uuid,
              itemGroupUUIDs: t,
              revision: e.revision
            })
          );
          if ((0, l.hx)(r)) throw new Error("Failure to remove item from collection");
        }
      };
      Le = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [De.l])], Le);
      var Fe = r(28845),
        Me = r(71419),
        xe = r(10647),
        ke = r(177);
      let Ge = class {
        constructor(e, t) {
          (this.sharingCollectionsService = e), (this.collectionsRepository = t);
        }
        async execute({ body: e }) {
          const { collectionId: t, userRecipients: r, userGroupRecipients: s } = e,
            o = await this.collectionsRepository.getCollection(t);
          if (!o) throw new Error("Collection not found");
          const n = await this.sharingCollectionsService.updateCollectionMembers(o, r?.map(B), s?.map(W)),
            i = (await this.collectionsRepository.getCollections()).filter((e) => e.uuid !== n.uuid);
          return await this.collectionsRepository.updateCollections([...i, n]), (0, l.Vp)(void 0);
        }
      };
      Ge = (0, s.__decorate)([(0, c.W)(ke.c), (0, s.__metadata)("design:paramtypes", [K, T.a])], Ge);
      var Ke = r(19286);
      let Ve = class {
        constructor(e, t) {
          (this.collectionsRepository = e), (this.context = t);
        }
        execute() {
          const e = this.collectionsRepository.collections$(),
            t = this.getCurrentUserLogin();
          return e.pipe(
            (0, _.U)((e) => {
              const r = e.filter((e) => e.authorLogin === t);
              return (0, l.Vp)(r.length);
            })
          );
        }
        getCurrentUserLogin() {
          return this.context.get(E.l.UserName);
        }
      };
      Ve = (0, s.__decorate)([(0, ce.e)(Ke.C), (0, s.__metadata)("design:paramtypes", [T.a, E.f])], Ve);
      var je = r(85980);
      let Be = class {
        constructor(e, t, r) {
          (this.itemGroupsGetter = e), (this.sharingCollectionsGateway = t), (this.sharingSync = r);
        }
        async execute({ body: e }) {
          const { collection: t, groupId: r } = e,
            s = await (0, u.z)(this.itemGroupsGetter.getForItemGroupId(r));
          if ((0, l.hx)(s) || !s.data) throw new Error("Item group to remove cannot be found");
          return (
            await this.sharingCollectionsGateway.updateItemPermissionsInCollection({
              groupId: r,
              collection: { collectionUUID: t.collectionUUID, permission: t.permission },
              revision: s.data.revision
            }),
            await this.sharingSync.scheduleSync(),
            (0, l.Vp)(void 0)
          );
        }
      };
      Be = (0, s.__decorate)([(0, c.W)(je.a), (0, s.__metadata)("design:paramtypes", [v.E, y, L.D])], Be);
      let We = class {};
      We = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.a,
            stores: [Ie.S],
            providers: [K, N, C, U, T.a, { provide: y, useClass: Le }],
            exports: [T.a],
            handlers: {
              commands: {
                addItemsToCollection: F,
                addItemToCollections: Re,
                createSharedCollection: q,
                deleteSharedCollection: $,
                inviteCollectionMembers: Z,
                updateCollectionMembers: Ge,
                removeItemFromCollections: ee,
                renameCollection: re,
                revokeCollectionMembers: oe,
                updateSharedCollections: ie,
                updatePermissionForCollectionItem: Be
              },
              events: {},
              queries: {
                getCollectionPermissionsForUser: ue,
                getCollectionRoleForGroup: he,
                getCollectionsForUserOrGroup: ve,
                getItemIdsInSharedCollections: Ee,
                getSharedCollectionsCount: Ve,
                getSharedCollections: we,
                sharedCollectionsWithItems: Ae,
                usersAndGroupsInCollection: Ce
              }
            },
            imports: [i.n, a.D, Fe.k, Me.I, xe.y],
            requiredFeatureFlips: [
              "sharing_web_collectionsSharing",
              "sharing_web_invalidSignatureAutoRevoke_prod",
              "sharingVault_web_Collection_Item_Permissions_dev",
              "sharingVault_web_Collection_Editor_Manager_dev",
              "sharingVault_web_Collection_Editor_Manager_prod",
              "monetization_extension_starterRepackagingCollection"
            ]
          })
        ],
        We
      );
    },
    71419: (e, t, r) => {
      r.d(t, { I: () => w });
      var s = r(88802),
        o = r(99634),
        n = r(60399),
        i = r(57924),
        a = r(87113),
        c = r(48844),
        l = r(87279);
      const d = /[<>]/g;
      var u = r(76997);
      function p(e, t) {
        const r = (0, u.B)(e);
        return { type: r, name: t || `Untitled ${r}` };
      }
      const h = (e) =>
        e.map(
          ({ id: e, resourceKey: t, proposeSignature: r, proposeSignatureUsingAlias: s, acceptSignature: o, alias: n, permission: i }) => ({
            userId: e,
            groupKey: t,
            proposeSignature: r,
            proposeSignatureUsingAlias: s,
            acceptSignature: o,
            alias: n,
            permission: i
          })
        );
      let m = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        async getPublicKeysForUsers(e) {
          const t = await (0, n.z)(
            this.serverApiClient.v1.sharingUserdevice.getUsersPublicKey({ logins: e }).pipe(
              (0, c.DZ)(() => {
                throw new Error("Cannot get public keys of requested users.");
              }),
              (0, c.lk)((e) => (0, l.Vp)(e.data))
            )
          );
          if ((0, l.hx)(t)) throw new Error("Cannot get public keys of requested users.");
          return t.data.data.map((e) => {
            return { login: e.login ?? ((t = e.email), t.trim().toLowerCase().replace(d, "")), publicKey: e.publicKey };
            var t;
          });
        }
        async createItemGroup({ users: e, item: t, itemTitle: r, groupId: s }) {
          const o = await (0, n.z)(
            this.serverApiClient.v1.sharingUserdevice.createItemGroup({
              groupId: s,
              items: [t],
              users: h(e),
              itemsForEmailing: [p(t.itemType, r)]
            })
          );
          if ((0, l.hx)(o)) throw new Error("Failed to create item group");
          const i = o.data.data.itemGroups?.find((e) => e.groupId === s);
          if (!i) throw new Error("Error creating item group");
          return i;
        }
        async createMultipleItemGroups(e) {
          const t = e.map(({ users: e, item: t, itemTitle: r, groupId: s }) => ({
              groupId: s,
              items: [t],
              users: h(e),
              itemsForEmailing: [p(t.itemType, r)]
            })),
            r = await (0, n.z)(this.serverApiClient.v1.sharingUserdevice.createMultipleItemGroups({ itemgroups: t }));
          if ((0, l.hx)(r)) throw new Error("Failed to create multiple item groups");
          const s = r.data.data;
          if (s.itemGroupErrors?.length) throw new Error("Failed to create some of multiple item groups");
          if (!s.itemGroups?.length) throw new Error("No item groups have been created");
          return s.itemGroups;
        }
      };
      m = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [a.l])], m);
      var v = r(24917),
        g = r(12521),
        y = r(80231),
        f = r(87853),
        _ = r(28845),
        S = r(93850),
        E = r(10647),
        b = r(51911);
      let w = class {};
      w = (0, s.__decorate)(
        [
          (0, o.Y)({
            sharedModuleName: "sharing-carbon-helpers",
            providers: [v.k, g.D, y.o, f.E, { provide: b.b, useClass: m }],
            exports: [v.k, g.D, y.o, f.E],
            imports: [_.k, S.n, E.y]
          })
        ],
        w
      );
    },
    24917: (e, t, r) => {
      r.d(t, { k: () => u });
      var s = r(88802),
        o = r(57924),
        n = r(10370),
        i = r(40896),
        a = r(50200),
        c = r(87853),
        l = r(51911),
        d = r(76997);
      let u = class {
        constructor(e, t, r) {
          (this.sharingApi = e), (this.sharingCrypto = t), (this.sharingUsers = r);
        }
        async prepareCreateItemGroupModel(e) {
          const t = (0, i.R)(),
            r = await this.sharingCrypto.createResourceKey(),
            s = await this.sharingUsers.createSignedUserInvites([], { resourceKey: r, uuid: t }),
            o = await this.sharingCrypto.createResourceKey(),
            a = await this.sharingCrypto.encryptSecureData(r, o),
            c = await this.sharingCrypto.encryptSharingItem(o, e);
          return {
            groupId: t,
            item: { itemId: e.Id, itemType: (0, d.l)(e), itemKey: (0, n.s)(a), content: (0, n.s)(c) },
            itemTitle: e.Title,
            users: s
          };
        }
        async createItemGroup(e) {
          const t = await this.prepareCreateItemGroupModel(e);
          return this.sharingApi.createItemGroup(t);
        }
        async createMultipleItemGroups(e) {
          const t = await Promise.all(e.map((e) => this.prepareCreateItemGroupModel(e)));
          return this.sharingApi.createMultipleItemGroups(t);
        }
      };
      u = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [l.b, a.O, c.E])], u);
    },
    12521: (e, t, r) => {
      r.d(t, { D: () => h });
      var s = r(88802),
        o = r(87279),
        n = r(60399),
        i = r(30523),
        a = r(57924),
        c = r(76183),
        l = r(67837),
        d = r(33470);
      class u extends (0, l.E)(d.r) {}
      (0, l.K)(d.r, u);
      var p = r(93039);
      let h = class {
        constructor(e) {
          this.syncClient = e;
        }
        async scheduleSync() {
          const { commands: e, queries: t } = this.syncClient;
          return (
            await (0, n.z)(
              t.syncProgress().pipe(
                (0, i.h)(o.d6),
                (0, i.h)((e) => e.data.status !== c.L.IN_PROGRESS)
              )
            ),
            await e.sync({ trigger: p.Trigger.Sharing }),
            (0, o.Vp)(void 0)
          );
        }
      };
      h = (0, s.__decorate)([(0, a.GS)(), (0, s.__metadata)("design:paramtypes", [u])], h);
    },
    80231: (e, t, r) => {
      r.d(t, { o: () => d });
      var s = r(88802),
        o = r(57924),
        n = r(82466),
        i = r(59452),
        a = r(81982),
        c = r(50200),
        l = r(41923);
      let d = class {
        constructor(e, t, r, s) {
          (this.userGroupsGetter = e), (this.sharingCrypto = t), (this.sharingInvitesCrypto = r), (this.currentUserGetter = s);
        }
        async createSignedUserGroupInvites(e, t) {
          const r = await this.currentUserGetter.getCurrentUserWithKeys(),
            s = await this.userGroupsGetter.getForGroupIds(e.map((e) => e.groupId));
          return await Promise.all(
            s.map(async (s) => {
              const o = e.find((e) => e.groupId === s.groupId)?.permission ?? n.y3.Limited,
                i = s.users.find((e) => e.userId === r.login),
                a = i?.groupKey;
              if (!a) throw new Error("Unable to get user group key.");
              const c = await this.sharingCrypto.decryptResourceKeyToClearText(r.privateKey, s.privateKey, a),
                {
                  proposeSignature: l,
                  acceptSignature: d,
                  resourceKey: u
                } = await this.sharingInvitesCrypto.createSignedInvite(s.groupId, t, s.publicKey, c);
              return { permission: o, proposeSignature: l, acceptSignature: d, id: s.groupId, resourceKey: u };
            })
          );
        }
      };
      d = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.B, c.O, l.h, a.a])], d);
    },
    87853: (e, t, r) => {
      r.d(t, { E: () => l });
      var s = r(88802),
        o = r(57924),
        n = r(82466),
        i = r(81982),
        a = r(41923),
        c = r(51911);
      let l = class {
        constructor(e, t, r) {
          (this.currentUserGetter = e), (this.invitesCryptoService = t), (this.sharingGateway = r);
        }
        async createSignedUserInvites(e, t, r = !0) {
          const s = e.length ? await this.sharingGateway.getPublicKeysForUsers(e.map((e) => e.login)) : [],
            o = await this.currentUserGetter.getCurrentUserWithKeys(),
            i = [
              ...(r ? [{ login: o.login, publicKey: o.publicKey, permission: n.y3.Admin }] : []),
              ...s.map((t) => ({ ...t, permission: e.find((e) => e.login === t.login)?.permission ?? n.y3.Limited }))
            ];
          return await Promise.all(
            i.map(async (e) => {
              const r = o.login === e.login;
              if (!e.publicKey) throw new Error("missing user public key");
              return {
                ...(await this.invitesCryptoService.createSignedInvite(e.login, t, e.publicKey, r ? o.privateKey : void 0)),
                id: e.login,
                alias: e.login,
                permission: r ? n.y3.Admin : e.permission
              };
            })
          );
        }
      };
      l = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.a, a.h, c.b])], l);
    },
    51911: (e, t, r) => {
      r.d(t, { b: () => s });
      class s {}
    },
    28845: (e, t, r) => {
      r.d(t, { k: () => d });
      var s = r(88802),
        o = r(99634),
        n = r(10647),
        i = r(50200),
        a = r(67541),
        c = r(41923),
        l = r(37935);
      let d = class {};
      d = (0, s.__decorate)(
        [(0, o.Y)({ sharedModuleName: "sharing-crypto", providers: [i.O, a.c, c.h], exports: [i.O, a.c, c.h], imports: [n.y, l.D] })],
        d
      );
    },
    50200: (e, t, r) => {
      r.d(t, { O: () => O });
      var s = r(88802),
        o = r(57924),
        n = r(31222),
        i = r(92258),
        a = r(40173),
        c = r(71634),
        l = r(83919),
        d = r(12554),
        u = r(77970),
        p = r(28008),
        h = r(54066),
        m = r(3417),
        v = r.n(m);
      function g(e) {
        return e.replace(/(?:\\[r]|[\r\n]+)+/g, "\n");
      }
      var y = r(10370),
        f = r(83168),
        _ = r(66122),
        S = r(89685),
        E = r(86252),
        b = r(43293),
        w = r(93347),
        A = r.n(w),
        T = r(82933);
      function C(e) {
        const t = new Uint8Array([0, 0, 0, 0]).buffer,
          r = new Uint8Array(e),
          s = A().deflate(r, { level: 7 }).buffer;
        return (0, T.K)(t, s);
      }
      var I = r(87279);
      let O = class {
        constructor(e, t, r, s, o, n, i, a, c) {
          (this.client = e),
            (this.hmacSigner = t),
            (this.keyGeneratorAes256 = r),
            (this.rsaKeyPairGenerator = s),
            (this.kwc5Decryptor = o),
            (this.kwc5Encryptor = n),
            (this.rsaDecryptor = i),
            (this.rsaEncryptor = a),
            (this.rsaSigner = c);
        }
        async createResourceKey() {
          return await this.keyGeneratorAes256.generate();
        }
        async encryptSecureData(e, t) {
          return await this.kwc5Encryptor.encrypt(e, t);
        }
        async decryptSecureData(e, t) {
          return await this.kwc5Decryptor.decrypt(e, t);
        }
        async createProposeSignature(e, t) {
          return await this.hmacSigner.sign(e, t);
        }
        async createRecipientKeyPair(e) {
          const { publicKey: t, privateKey: r } = await this.rsaKeyPairGenerator.generate(),
            s = (0, h.u)(
              (function (e) {
                const { asn1: t, pki: r, util: s } = v(),
                  o = s.createBuffer(e),
                  n = t.fromDer(o),
                  i = r.privateKeyFromAsn1(n);
                return g(r.privateKeyToPem(i));
              })(r)
            ),
            o = await this.encryptSecureData(e, s),
            n = (function (e) {
              const { asn1: t, pki: r, util: s } = v(),
                o = s.createBuffer(e),
                n = t.fromDer(o),
                i = r.publicKeyFromAsn1(n);
              return g(r.publicKeyToRSAPublicKeyPem(i));
            })(t);
          return { publicKey: n, privateKey: (0, y.s)(o) };
        }
        async createAcceptSignature(e, t, r) {
          const s = `${t}-accepted-${(0, y.s)(r)}`,
            o = (0, h.u)(s);
          return await this.rsaSigner.sign(e, o);
        }
        async encryptResourceKey(e, t) {
          return await this.rsaEncryptor.encrypt(e, t);
        }
        async decryptResourceKey(e, t) {
          return await this.rsaDecryptor.decrypt(e, t);
        }
        async decryptResourceKeyToClearText(e, t, r) {
          const s = await this.decryptResourceKey((0, f.B)(e), (0, _.R)(r)),
            o = await this.decryptSecureData(s, (0, _.R)(t));
          return (0, S.v)(o);
        }
        async encryptSharingItem(e, t) {
          const {
              commands: { carbon: r }
            } = this.client,
            s = await r({ name: "convertItemToDashlaneXml", args: [{ item: t }] }),
            o = ((n = s), (0, I.hx)(n) || "string" != typeof n.data.carbonResult.xml ? null : n.data.carbonResult.xml);
          var n;
          if ("" === o || null === o) throw new Error("Unable to convert item to XML");
          const i = ((e) => {
            const t = (0, b.N)(e);
            return C((0, h.u)(t));
          })(o);
          return await this.encryptSecureData(e, i);
        }
        async decryptEncapsulatedPrivateKey(e, t, r) {
          const s = await this.decryptResourceKey(e, (0, _.R)(t)),
            o = await this.decryptSecureData(s, (0, _.R)(r));
          return (0, f.B)((0, S.v)(o));
        }
      };
      O = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [E._, n.q, i.c, a.e, c.$, l.o, d.g, u.H, p.k])], O);
    },
    67541: (e, t, r) => {
      r.d(t, { c: () => u });
      var s = r(88802),
        o = r(57924),
        n = r(63877),
        i = r(83168),
        a = r(66122),
        c = r(50200),
        l = r(81982),
        d = r(59452);
      let u = class {
        constructor(e, t, r) {
          (this.sharingCrypto = e), (this.currentUserGetter = t), (this.userGroupsGetter = r);
        }
        async decryptItemGroupKey(e, t) {
          const r = await this.currentUserGetter.getCurrentUserWithKeys(),
            s = e.users?.find((e) => e.userId === r.login && e.status === n.qb.Accepted && e.groupKey);
          if (s?.groupKey) return await this.decryptItemGroupKeyViaUserMember(s, r);
          const o = (await this.userGroupsGetter.getCarbonUserGroups()).filter((e) =>
              e.users.some((e) => e.userId === r.login && e.status === n.qb.Accepted && !e.proposeSignatureUsingAlias && e.groupKey)
            ),
            i = e.groups?.find((e) => o.some((t) => t.groupId === e.groupId) && e.status === n.qb.Accepted && e.groupKey);
          if (i?.groupKey) return await this.decryptItemGroupKeyViaGroupMember(i, r, o);
          const a = t.filter(
              (e) =>
                e.users?.some(
                  (e) => e.login === r.login && e.status === n.qb.Accepted && !e.proposeSignatureUsingAlias && e.collectionKey
                ) || e.userGroups?.some((e) => o.some((t) => t.groupId === e.uuid) && e.status === n.qb.Accepted && e.collectionKey)
            ),
            c = e.collections?.find((e) => a.some((t) => t.uuid === e.uuid) && e.status === n.qb.Accepted && e.itemGroupKey);
          return c?.itemGroupKey ? await this.decryptItemGroupKeyViaCollectionMember(c, r, a, o) : null;
        }
        async decryptItemGroupKeyViaUserMember(e, t) {
          if (!e.groupKey) return null;
          try {
            return await this.sharingCrypto.decryptResourceKey((0, i.B)(t.privateKey), (0, a.R)(e.groupKey));
          } catch {
            return null;
          }
        }
        async decryptItemGroupKeyViaGroupMember(e, t, r) {
          if (!e.groupKey) return null;
          try {
            const s = r.find(({ groupId: t }) => t === e.groupId),
              o = s?.users.find(({ userId: e }) => e === t.login);
            if (!o?.groupKey || !s) return null;
            const n = await this.sharingCrypto.decryptEncapsulatedPrivateKey((0, i.B)(t.privateKey), o.groupKey, s.privateKey);
            return await this.sharingCrypto.decryptResourceKey(n, (0, a.R)(e.groupKey));
          } catch (e) {
            return null;
          }
        }
        async decryptItemGroupKeyViaCollectionMember(e, t, r, s) {
          if (!e.itemGroupKey) return null;
          const o = r.find(({ uuid: t }) => t === e.uuid);
          if (!o) return null;
          const n = o.users?.find(({ login: e }) => e === t.login),
            c = o.userGroups?.find(({ uuid: e }) => s.some(({ groupId: t }) => t === e));
          if (n?.collectionKey) {
            const r = await this.sharingCrypto.decryptEncapsulatedPrivateKey((0, i.B)(t.privateKey), n.collectionKey, o.privateKey);
            return await this.sharingCrypto.decryptResourceKey(r, (0, a.R)(e.itemGroupKey));
          }
          if (c?.collectionKey) {
            const r = s.find(({ groupId: e }) => e === c.uuid),
              n = r?.users.find(({ userId: e }) => e === t.login);
            if (!n?.groupKey || !r) return null;
            const l = await this.sharingCrypto.decryptEncapsulatedPrivateKey((0, i.B)(t.privateKey), n.groupKey, r.privateKey),
              d = await this.sharingCrypto.decryptEncapsulatedPrivateKey(l, c.collectionKey, o.privateKey);
            return await this.sharingCrypto.decryptResourceKey(d, (0, a.R)(e.itemGroupKey));
          }
          return null;
        }
        async decryptCollectionKey(e, t = n.qb.Accepted) {
          const r = await this.currentUserGetter.getCurrentUserWithKeys(),
            s = e.users?.find((e) => e.login === r.login && e.status === t && e.collectionKey);
          if (s?.collectionKey) return await this.decryptCollectionKeyViaUserMember(s, r);
          const o = (await this.userGroupsGetter.getCarbonUserGroups()).filter((e) =>
              e.users.some((e) => e.userId === r.login && e.status === t && !e.proposeSignatureUsingAlias && e.groupKey)
            ),
            i = e.userGroups?.find((e) => o.some((t) => t.groupId === e.uuid) && e.status === t && e.collectionKey);
          return i?.collectionKey ? await this.decryptCollectionKeyViaGroupMember(i, r, o) : null;
        }
        async decryptCollectionKeyViaUserMember(e, t) {
          if (!e.collectionKey) return null;
          try {
            return await this.sharingCrypto.decryptResourceKey((0, i.B)(t.privateKey), (0, a.R)(e.collectionKey));
          } catch {
            return null;
          }
        }
        async decryptCollectionKeyViaGroupMember(e, t, r) {
          if (!e.collectionKey) return null;
          try {
            const s = r.find(({ groupId: t }) => t === e.uuid),
              o = s?.users.find(({ userId: e }) => e === t.login);
            if (!o?.groupKey || !s) return null;
            const n = await this.sharingCrypto.decryptEncapsulatedPrivateKey((0, i.B)(t.privateKey), o.groupKey, s.privateKey);
            return await this.sharingCrypto.decryptResourceKey(n, (0, a.R)(e.collectionKey));
          } catch {
            return null;
          }
        }
      };
      u = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [c.O, l.a, d.B])], u);
    },
    41923: (e, t, r) => {
      r.d(t, { h: () => u });
      var s = r(88802),
        o = r(57924),
        n = r(3417),
        i = r.n(n),
        a = r(54066);
      var c = r(10370),
        l = r(83168),
        d = r(50200);
      let u = class {
        constructor(e) {
          this.sharingCrypto = e;
        }
        async createSignedInvite(e, t, r, s) {
          const o = await this.sharingCrypto.encryptResourceKey(
              (function (e) {
                const { asn1: t, pki: r } = i(),
                  s = r.publicKeyFromPem(e),
                  o = r.publicKeyToAsn1(s),
                  n = t.toDer(o).getBytes();
                return (0, a.u)(n);
              })(r),
              t.resourceKey
            ),
            n = (0, c.s)(o),
            d = (0, a.u)(e),
            u = await this.sharingCrypto.createProposeSignature(t.resourceKey, d),
            p = (0, c.s)(u),
            h = s ? await this.sharingCrypto.createAcceptSignature((0, l.B)(s), t.uuid, t.resourceKey) : void 0;
          return { proposeSignature: p, acceptSignature: h ? (0, c.s)(h) : void 0, resourceKey: n, proposeSignatureUsingAlias: !r };
        }
      };
      u = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [d.O])], u);
    },
    31766: (e, t, r) => {
      r.d(t, { o: () => s });
      const s = (e) => {
        if (!e) return !1;
        const t = e;
        return !!t.pendingItemGroups && !!t.pendingUserGroups;
      };
    },
    44997: (e, t, r) => {
      r.d(t, { p: () => me });
      var s = r(88802),
        o = r(99634),
        n = r(58425),
        i = r(93850),
        a = r(37935),
        c = r(85390),
        l = r(87065),
        d = r(21869),
        u = r(20754),
        p = r(87279),
        h = r(15179),
        m = r(19617),
        v = r(7165),
        g = r(95681),
        y = r(23347),
        f = r(25029),
        _ = r(4400);
      const S = v.z.object({ pendingCollections: v.z.array(_.MX) }),
        E = (e) => S.safeParse(e).success;
      class b extends (0, g.Q)({
        capacity: y.Y._010KB,
        persist: !1,
        scope: f.F.User,
        storeName: "pending-shared-collections-state",
        storeTypeGuard: E,
        initialValue: { pendingCollections: [] }
      }) {}
      var w = r(82466);
      const A = (e) => void 0 !== e.referrer && void 0 !== e.permission,
        T = (e, t) =>
          e
            .map((e) => {
              const r = (e.users || []).find((e) => e.login === t && e.status === w.qb.Pending);
              return { uuid: e.uuid, name: e.name, referrer: r?.referrer, permission: r?.permission, seen: !0 };
            })
            .filter(A);
      let C = class {
        constructor(e, t, r) {
          (this.inviteGetter = e), (this.store = t), (this.context = r);
        }
        execute() {
          const e = this.inviteGetter.get(),
            t = this.store.state$,
            r = this.getCurrentUserLogin();
          return (0, c.a)([e, t]).pipe(
            (0, l.U)(([e, t]) => {
              const s = (0, p.d6)(e) ? e.data : { pendingItemGroups: [], pendingUserGroups: [] },
                o = r ? T(t.pendingCollections, r) : [];
              return (0, p.Vp)({ pendingItemGroups: s.pendingItemGroups, pendingUserGroups: s.pendingUserGroups, pendingCollections: o });
            })
          );
        }
        getCurrentUserLogin() {
          return this.context.get(d.l.UserName);
        }
      };
      C = (0, s.__decorate)([(0, u.e)(h.q), (0, s.__metadata)("design:paramtypes", [m.V, b, d.f])], C);
      var I = r(36610);
      let O = class {
        constructor(e, t) {
          (this.store = e), (this.context = t);
        }
        execute() {
          const e = this.getCurrentUserLogin();
          if (void 0 === e) throw new Error("Unable to get pending collections, user login not found");
          return this.store.state$.pipe(
            (0, l.U)((t) => {
              const r = T(t.pendingCollections, e);
              return (0, p.Vp)(r);
            })
          );
        }
        getCurrentUserLogin() {
          return this.context.get(d.l.UserName);
        }
      };
      O = (0, s.__decorate)([(0, u.e)(I.D), (0, s.__metadata)("design:paramtypes", [b, d.f])], O);
      var P = r(36469),
        R = r(48844),
        D = r(86252),
        N = r(21242),
        U = r(31766);
      let L = class {
        constructor(e, t, r) {
          (this.carbonLegacyClient = e), (this.featureFlipsClient = t), (this.store = r);
        }
        execute() {
          const {
              queries: { carbonState: e }
            } = this.carbonLegacyClient,
            t = e({ path: "userSession.sharingSync" }).pipe(
              (0, R.Qn)((e) => {
                if (!(0, U.o)(e)) throw new Error("Bad SharingSync format");
                return e;
              })
            ),
            r = this.store.state$,
            { userFeatureFlips: s } = this.featureFlipsClient.queries,
            o = s();
          return (0, c.a)([t, r, o]).pipe(
            (0, l.U)(([e, t, r]) => {
              const s = (0, p.d6)(e) ? e.data : { pendingItemGroups: [], pendingUserGroups: [] },
                o = s.pendingItemGroups.length > 0,
                n = s.pendingUserGroups.length > 0,
                i = t.pendingCollections.length > 0;
              if ((0, p.hx)(r)) return (0, p.Vp)(o || n);
              const a = r.data.sharing_web_collectionsSharing ? o || n || i : o || n;
              return (0, p.Vp)(a);
            })
          );
        }
      };
      L = (0, s.__decorate)([(0, u.e)(P._), (0, s.__metadata)("design:paramtypes", [D._, N.P, b])], L);
      var F = r(60399),
        M = r(63663),
        x = r(87113),
        k = r(31609),
        G = r(63877),
        K = r(83168),
        V = r(10370),
        j = r(50200),
        B = r(67541),
        W = r(12521),
        H = r(81982);
      let z = class {
        constructor(e, t, r, s, o, n) {
          (this.serverApiClient = e),
            (this.sharingCrypto = t),
            (this.sharingDecryption = r),
            (this.pendingCollectionsStore = s),
            (this.sharingSync = o),
            (this.currentUserGetter = n);
        }
        async execute(e) {
          const {
              body: { collectionId: t }
            } = e,
            r = (await this.pendingCollectionsStore.getState()).pendingCollections.find(({ uuid: e }) => e === t);
          if (!r) throw new Error("Pending Collection not found");
          const s = await this.sharingDecryption.decryptCollectionKey(r, G.qb.Pending);
          if (!s) throw new Error("Unable to decrypt Collection Key for pending collection");
          const o = await this.currentUserGetter.getCurrentUserWithKeys(),
            n = await this.sharingCrypto.createAcceptSignature((0, K.B)(o.privateKey), t, s),
            i = await (0, F.z)(
              this.serverApiClient.v1.sharingUserdevice.acceptCollection({
                collectionUUID: t,
                revision: r.revision,
                acceptSignature: (0, V.s)(n)
              })
            );
          return (0, p.hx)(i) ? (0, p.Rn)(new k.nu()) : (await this.sharingSync.scheduleSync(), (0, p.Vp)(void 0));
        }
      };
      z = (0, s.__decorate)([(0, M.W)(k.cD), (0, s.__metadata)("design:paramtypes", [x.l, j.O, B.c, b, W.D, H.a])], z);
      var Q = r(68096);
      let q = class {
        constructor(e, t) {
          (this.serverApiClient = e), (this.pendingCollectionsStore = t);
        }
        async execute(e) {
          const {
              body: { collectionId: t }
            } = e,
            r = (await this.pendingCollectionsStore.getState()).pendingCollections.find(({ uuid: e }) => e === t);
          if (!r) throw new Error("Pending Collection not found");
          const s = await (0, F.z)(this.serverApiClient.v1.sharingUserdevice.refuseCollection({ collectionUUID: t, revision: r.revision }));
          return (0, p.hx)(s) ? (0, p.Rn)(new Q.R$()) : (0, p.Vp)(void 0);
        }
      };
      q = (0, s.__decorate)([(0, M.W)(Q.UC), (0, s.__metadata)("design:paramtypes", [x.l, b])], q);
      var Y = r(82567),
        $ = r(94189),
        X = r(70493),
        Z = r(93039),
        J = r(55677);
      var ee = r(64718),
        te = r(76997);
      const re = (e) => {
          if (!e || "object" != typeof e) return !1;
          const t = e;
          return (
            (r = t.items),
            !!Array.isArray(r) &&
              (0 === r.length ||
                r.every((e) => {
                  const t = e;
                  return "string" == typeof t.content && "string" == typeof t.itemId && "number" == typeof t.timestamp;
                })) &&
              ((e) =>
                !!Array.isArray(e) &&
                (0 === e.length ||
                  e.every((e) => {
                    const t = e;
                    return "string" == typeof t.groupId && "string" == typeof t.type && "number" == typeof t.revision;
                  })))(t.itemGroups) &&
              ((e) =>
                !!Array.isArray(e) &&
                (0 === e.length ||
                  e.every((e) => {
                    const t = e;
                    return (
                      "string" == typeof t.groupId &&
                      "string" == typeof t.name &&
                      "string" == typeof t.publicKey &&
                      "string" == typeof t.privateKey &&
                      "number" == typeof t.revision
                    );
                  })))(t.userGroups)
          );
          var r;
        },
        se = (e, t) => {
          const r = (!!t?.SpaceId && e?.info.collectSensitiveDataAuditLogsEnabled) ?? !1,
            s = t && ((o = t), Boolean(o) && "KWAuthentifiant" === o.kwType);
          var o;
          const n = s ? new ee.Y(t.Url).getRootDomain() : "",
            i = s ? n || "" : void 0,
            a = (0, te.l)(t);
          return r ? { captureLog: r, domain: i, type: a } : void 0;
        },
        oe = (e) => {
          const t = (0, te.l)(e);
          return { type: (0, te.B)(t), name: e.Title };
        };
      let ne = class {
        constructor(e, t, r, s, o) {
          (this.client = e), (this.carbonLegacyClient = t), (this.serverApiClient = r), (this.context = s), (this.inviteGetter = o);
        }
        async execute(e) {
          const {
              body: { itemGroupId: t }
            } = e,
            {
              queries: { carbonState: r },
              commands: { carbonLegacyLeeloo: s }
            } = this.carbonLegacyClient,
            o = this.inviteGetter.get().pipe(
              (0, R.Qn)((e) => {
                const r = e.pendingItemGroups.find((e) => e.itemGroupId === t);
                if (!r) throw new Error(`Pending item group not found for id ${t}`);
                if (r.items.length < 1) throw new Error(`Missing item content for pending item group with id ${t}`);
                return r.items[0];
              })
            ),
            n = await (0, F.z)(o);
          if ((0, p.hx)(n)) throw new Error(`Failed to retrieve item content for pending item group with id ${t}`);
          const i = n.data,
            a = r({ path: "userSession.sharingData" })
              .pipe(
                (0, R.Qn)((e) => {
                  if (!re(e)) throw new Error("Bad sharingData");
                  return e;
                })
              )
              .pipe(
                (0, R.lk)((e) => {
                  const r = e.itemGroups.find(({ groupId: e }) => e === t);
                  return (0, p.Vp)(r);
                })
              ),
            c = await (0, F.z)(a);
          if ((0, p.hx)(c)) throw new Error(`Failed to retrieve item group for pending item group with id ${t}`);
          if (void 0 === c.data) return (0, p.Rn)(new J.fL());
          const l = r({ path: "userSession.localSettings.premiumStatus" }).pipe(
              (0, R.Qn)((e) => ((e) => (e.spaces ?? []).filter((e) => "accepted" === e.status))(e)[0])
            ),
            d = await (0, F.z)(l),
            { userFeatureFlips: u } = this.client.getClient(X.cV).queries,
            h = await (0, F.z)(u());
          if ((0, p.hx)(h)) throw new Error("Failed to retrieve user features");
          const m = h.data.audit_logs_sharing && h.data.send_activity_log && (0, p.d6)(d) ? se(d.data, i) : void 0;
          return (0, F.z)(
            this.serverApiClient.v1.sharingUserdevice
              .refuseItemGroup({ groupId: c.data.groupId, revision: c.data.revision, itemsForEmailing: [oe(i)], auditLogDetails: m })
              .pipe(
                (0, R.DZ)((e) => {
                  if ("BusinessError" === e.tag) return (0, J.fr)(e.code);
                  throw new Error(e.message);
                }),
                (0, R.lk)((e) => {
                  if (void 0 === e.data.itemGroupErrors || 0 === e.data.itemGroupErrors.length) return (0, p.Vp)(void 0);
                  if (e.data.itemGroupErrors.length > 0)
                    throw new Error(`Error for item group ${e.data.itemGroupErrors[0].groupId}: ${e.data.itemGroupErrors[0].message}`);
                  throw new Error("Unknown server error");
                }),
                (0, Y.b)(async (e) => {
                  (0, p.d6)(e) && (await s({ name: "sessionForceSync", arg: [{ trigger: Z.Trigger.Sharing }] }));
                })
              )
          );
        }
        getCurrentUserLogin() {
          return this.context.get(d.l.UserName);
        }
      };
      ne = (0, s.__decorate)([(0, M.W)(J.gm), (0, s.__metadata)("design:paramtypes", [$.w, D._, x.l, d.f, m.V])], ne);
      var ie = r(84009);
      let ae = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.serverApiClient = t);
        }
        async execute(e) {
          const {
              body: { userGroupId: t }
            } = e,
            {
              queries: { carbonState: r },
              commands: { carbonLegacyLeeloo: s }
            } = this.carbonLegacyClient,
            o = r({ path: "userSession.sharingData" })
              .pipe(
                (0, R.Qn)((e) => {
                  if (!re(e)) throw new Error("Bad sharingData");
                  return e;
                })
              )
              .pipe(
                (0, R.Qn)((e) => {
                  const r = e.userGroups.find(({ groupId: e }) => e === t);
                  if (!r) throw new Error("Could not find userGroup");
                  return r;
                })
              ),
            n = await (0, F.z)(o);
          if ((0, p.hx)(n)) throw new Error(`Failed to retrieve user group for pending user group with id ${t}`);
          return await (0, F.z)(
            this.serverApiClient.v1.sharingUserdevice
              .refuseUserGroup({ groupId: n.data.groupId, revision: n.data.revision, provisioningMethod: G.ET.USER })
              .pipe(
                (0, R.DZ)((e) => {
                  if ("BusinessError" === e.tag) return (0, ie.cz)(e.code);
                  throw new Error(e.message);
                }),
                (0, R.lk)((e) => {
                  if (void 0 === e.data.userGroupErrors || 0 === e.data.userGroupErrors.length) return (0, p.Vp)(void 0);
                  if (e.data.userGroupErrors.length > 0)
                    throw new Error(`Error for user group ${e.data.userGroupErrors[0].groupId}: ${e.data.userGroupErrors[0].message}`);
                  throw new Error("Unknown server error");
                }),
                (0, Y.b)(async (e) => {
                  (0, p.d6)(e) && (await s({ name: "sessionForceSync", arg: [{ trigger: Z.Trigger.Sharing }] }));
                })
              )
          );
        }
      };
      ae = (0, s.__decorate)([(0, M.W)(ie.Fo), (0, s.__metadata)("design:paramtypes", [D._, x.l])], ae);
      var ce = r(79517);
      let le = class {
        constructor(e, t) {
          (this.store = e), (this.context = t);
        }
        execute({ body: e }) {
          const t = e,
            r = this.getCurrentUserLogin(),
            s = t.filter((e) => (e.users || []).some((e) => e.login === r && e.status === w.qb.Pending));
          return this.store.set({ pendingCollections: s }), Promise.resolve((0, p.Vp)(void 0));
        }
        getCurrentUserLogin() {
          return this.context.get(d.l.UserName);
        }
      };
      le = (0, s.__decorate)([(0, M.W)(ce.r), (0, s.__metadata)("design:paramtypes", [b, d.f])], le);
      var de = r(28845),
        ue = r(36458),
        pe = r(71419),
        he = r(10647);
      let me = class {};
      me = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.t,
            stores: [b, ue.S],
            handlers: {
              commands: {
                acceptCollectionInvite: z,
                refuseCollectionInvite: q,
                refuseItemGroupInvite: ne,
                refuseUserGroupInvite: ae,
                updatePendingCollections: le
              },
              events: {},
              queries: { getInvites: C, getPendingCollections: O, hasInvites: L }
            },
            imports: [i.n, a.D, de.k, pe.I, he.y],
            requiredFeatureFlips: ["audit_logs_sharing", "sharing_web_collectionsSharing", "send_activity_log"],
            providers: []
          })
        ],
        me
      );
    },
    35887: (e, t, r) => {
      r.d(t, { F: () => B });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(48958),
        a = r(43978),
        c = r(69885),
        l = r(20754),
        d = r(87113),
        u = r(87279),
        p = r(48844),
        h = r(31485),
        m = r(72614);
      let v = class {
        constructor(e, t) {
          (this.serverApiClient = e), (this.premiumSpaceGetter = t);
        }
        execute() {
          return this.premiumSpaceGetter.get().pipe(
            (0, a.w)((e) => {
              if ((0, u.hx)(e)) throw new Error("Error retrieving space for user");
              return (0, u.db)(e).teamId
                ? this.serverApiClient.v1.sharingUserdevice.getTeamLogins().pipe(
                    (0, p.Qn)((e) => ({ userLogins: e.data.teamLogins })),
                    (0, p.DZ)((e) => {
                      throw e;
                    })
                  )
                : (0, c.of)((0, u.Vp)({ userLogins: [] }));
            })
          );
        }
      };
      v = (0, s.__decorate)([(0, l.e)(h.G), (0, s.__metadata)("design:paramtypes", [d.l, m.n])], v);
      var g = r(54003);
      let y = class {
        constructor(e) {
          this.currentSpaceGetter = e;
        }
        execute() {
          return this.currentSpaceGetter.get().pipe((0, p.Qn)((e) => e.isSharingEnabled));
        }
      };
      y = (0, s.__decorate)([(0, l.e)(g.N), (0, s.__metadata)("design:paramtypes", [m.n])], y);
      var f = r(54326),
        _ = r(89560);
      let S = class {
        constructor(e) {
          this.itemGroupsGetter = e;
        }
        execute({ body: e }) {
          const { itemId: t } = e;
          return this.itemGroupsGetter
            .getForItemId(t)
            .pipe((0, p.Qn)((e) => ({ itemGroupId: e?.groupId, collectionIds: e?.collections?.map((e) => e.uuid) ?? [] })));
        }
      };
      S = (0, s.__decorate)([(0, l.e)(f.i), (0, s.__metadata)("design:paramtypes", [_.E])], S);
      var E = r(60399),
        b = r(61076),
        w = r(87065),
        A = r(86252),
        T = r(89358),
        C = r(82466),
        I = r(20920),
        O = r(7165);
      const P = O.z.object({ itemGroups: O.z.array(O.z.object({ groupId: O.z.string() })) }),
        R = (e) => P.safeParse(e).success;
      let D = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.sessionClient = t);
        }
        findItemItemGroup(e, t) {
          return t.find((t) => (t.items || []).map((e) => e.itemId).includes(e));
        }
        async getCurrentUserLogin() {
          return await (0, E.z)(this.sessionClient.queries.selectedOpenedSession().pipe((0, p.lk)((e) => (0, u.Vp)(e))));
        }
        execute({ body: e }) {
          const {
              queries: { carbonState: t }
            } = this.carbonLegacyClient,
            { itemId: r } = e;
          return t({ path: "userSession.sharingData" }).pipe(
            (0, b.V)(this.getCurrentUserLogin()),
            (0, w.U)(([e, t]) => {
              if (!(0, u.d6)(e) || !R(e.data)) throw new Error("Incorrect type");
              const s = e.data.itemGroups.find((e) => e.items?.some((e) => e.itemId === r)),
                o = !!s?.groupId;
              if (!o) return (0, u.Vp)({ isShared: o, isSharedViaUserGroup: !1 });
              if (!(0, u.d6)(t)) throw new Error("Error when trying to get user login");
              const n = e.data.userGroups
                  .filter(({ users: e }) => e.some((e) => e.userId === t.data && e.status === C.qb.Accepted))
                  .map(({ groupId: e }) => e),
                i = this.findItemItemGroup(r, e.data.itemGroups),
                a = i?.groups?.some(({ groupId: e, status: t }) => n.includes(e) && "accepted" === t) ?? !1;
              return (0, u.Vp)({ isShared: o, isSharedViaUserGroup: a });
            })
          );
        }
      };
      D = (0, s.__decorate)([(0, l.e)(I.S), (0, s.__metadata)("design:paramtypes", [A._, T.x])], D);
      var N = r(4975);
      var U;
      !(function (e) {
        (e.Admin = "admin"), (e.Limited = "limited");
      })(U || (U = {}));
      let L = class {
        constructor(e) {
          (this.carbonLegacyClient = e),
            (this.getUserLogin = () => {
              const {
                queries: { carbonState: e }
              } = this.carbonLegacyClient;
              return e({ path: "state.userSession.account.login" }).pipe(
                (0, w.U)((e) => {
                  if ((0, u.d6)(e) && "string" == typeof e.data) return e.data;
                  throw new Error("No active login");
                })
              );
            });
        }
        execute({ body: e }) {
          const {
              queries: { carbonState: t }
            } = this.carbonLegacyClient,
            { itemId: r } = e;
          return t({ path: "userSession.sharingData" }).pipe(
            (0, b.V)(this.getUserLogin()),
            (0, w.U)(([e, t]) => {
              if (!(0, u.d6)(e) || !R(e.data)) throw new Error("Incorrect type");
              const s = e.data.itemGroups.find((e) => e.items?.some((e) => e.itemId === r));
              if (!s?.groupId) return (0, u.Vp)({ permission: void 0 });
              const o = ((e, t, r) => {
                const { collections: s, itemGroups: o } = e,
                  n = e.userGroups.filter((e) => e.users.some((e) => e.userId === t && "accepted" === e.status)),
                  i = new Set(n.map((e) => e.groupId)),
                  a = (c = o) && c.length > 0 ? c.reduce((e, t) => ({ ...e, [t.groupId]: t }), {}) : {};
                var c;
                const l = s.filter(
                    (e) =>
                      (e.users ?? []).some((e) => e.login === t && "accepted" === e.status) ||
                      (e.userGroups ?? []).some((e) => i.has(e.uuid) && "accepted" === e.status)
                  ),
                  d = new Set(l.map((e) => e.uuid));
                return e.itemGroups.some((e) => {
                  const s = e.items?.some((e) => e.itemId === r);
                  if (s) {
                    const r = e.users?.some((e) => e.userId === t && "admin" === e.permission && "accepted" === e.status),
                      s = e.groups?.some((e) => i.has(e.groupId) && "admin" === e.permission && "accepted" === e.status),
                      o = a[e.groupId].collections?.some((e) => d.has(e.uuid) && "admin" === e.permission && "accepted" === e.status);
                    return !(r || s || o);
                  }
                  return !1;
                });
              })(e.data, t, r)
                ? U.Limited
                : U.Admin;
              return (0, u.Vp)({ permission: o });
            })
          );
        }
      };
      L = (0, s.__decorate)([(0, l.e)(N.C), (0, s.__metadata)("design:paramtypes", [A._])], L);
      var F = r(56556);
      let M = class {
        constructor(e, t) {
          (this.itemGroupsGetter = e), (this.sessionClient = t);
        }
        async getCurrentUserLogin() {
          return await (0, E.z)(this.sessionClient.queries.selectedOpenedSession().pipe((0, p.lk)((e) => (0, u.Vp)(e))));
        }
        getItemGroupUserAdmins(e) {
          return (e.users || []).filter(
            ({ permission: e, rsaStatus: t, status: r }) => e === C.y3.Admin && "sharingKeys" === t && r === C.qb.Accepted
          );
        }
        getItemGroupGroupAdmins(e) {
          return (e.groups || []).filter(({ permission: e, status: t }) => e === C.y3.Admin && t === C.qb.Accepted);
        }
        getCollectionAdminsForItem(e) {
          return (e.collections || []).filter(({ permission: e, status: t }) => e === C.y3.Admin && t === C.qb.Accepted);
        }
        isUserLastAdmin(e, t) {
          const r = this.getItemGroupUserAdmins(e),
            s = this.getItemGroupGroupAdmins(e),
            o = this.getCollectionAdminsForItem(e),
            n = r.some((e) => e.userId === t),
            i = r.filter(({ userId: e }) => t !== e),
            a = s.length + o.length + i.length > 0;
          return n && !a;
        }
        execute({ body: e }) {
          const { itemId: t } = e;
          return this.itemGroupsGetter.getForItemId(t).pipe(
            (0, b.V)(this.getCurrentUserLogin()),
            (0, w.U)(([e, t]) => {
              if (!(0, u.d6)(e)) throw new Error("Incorrect sharing data when checking if last admin");
              if (!e.data) return (0, u.Vp)({ isLastAdmin: !0 });
              if (!(0, u.d6)(t) || "string" != typeof t.data) throw new Error("Error when trying to get user login");
              return (0, u.Vp)({ isLastAdmin: this.isUserLastAdmin(e.data, t.data) });
            })
          );
        }
      };
      M = (0, s.__decorate)([(0, l.e)(F.X), (0, s.__metadata)("design:paramtypes", [_.E, T.x])], M);
      var x = r(11098),
        k = r(59452),
        G = r(34685);
      let K = class {
        constructor(e, t, r) {
          (this.itemGroupsGetter = e), (this.userGroupsGetter = t), (this.collectionsRepository = r);
        }
        execute({ body: e }) {
          const { itemId: t } = e;
          return this.itemGroupsGetter.getForItemId(t).pipe(
            (0, w.U)((e) => {
              if ((0, u.hx)(e)) throw new Error("Error when retrieving item group for shared access");
              const t = (0, u.db)(e);
              if (!t) throw new Error("Item group not found for shared access");
              const r = t.users
                  ?.map((e) => ({
                    permission: e.permission,
                    status: e.status,
                    recipientId: e.userId,
                    recipientName: e.alias,
                    recipientType: x.I.User
                  }))
                  .filter((e) => !["revoked", "refused"].includes(e.status ?? ""))
                  .sort((e, t) => e.recipientName.localeCompare(t.recipientName)),
                s = t.groups
                  ?.map((e) => ({
                    permission: e.permission,
                    status: e.status,
                    recipientId: e.groupId,
                    recipientName: e.name,
                    recipientType: x.I.Group
                  }))
                  .filter((e) => !["revoked", "refused"].includes(e.status))
                  .sort((e, t) => e.recipientName.localeCompare(t.recipientName)),
                o = t.collections
                  ?.map((e) => ({
                    permission: e.permission,
                    status: e.status,
                    recipientId: e.uuid,
                    recipientName: e.name,
                    recipientType: x.I.Collection
                  }))
                  .filter((e) => !["revoked", "refused"].includes(e.status))
                  .sort((e, t) => e.recipientName.localeCompare(t.recipientName));
              return { users: r ?? [], groups: s ?? [], collections: o ?? [], itemGroupId: t.groupId };
            }),
            (0, a.w)((e) =>
              e.groups.length
                ? this.userGroupsGetter.userGroups$().pipe(
                    (0, w.U)((t) => {
                      if ((0, u.d6)(t)) {
                        const r = (0, u.db)(t);
                        return {
                          ...e,
                          groups: e.groups.map((e) => ({
                            ...e,
                            recipientName: r.find((t) => t.groupId === e.recipientId)?.name ?? e.recipientName
                          }))
                        };
                      }
                      return e;
                    })
                  )
                : (0, c.of)(e)
            ),
            (0, a.w)((e) =>
              e.collections.length
                ? this.collectionsRepository
                    .collections$()
                    .pipe(
                      (0, w.U)((t) => ({
                        ...e,
                        collections: e.collections.map((e) => ({
                          ...e,
                          recipientName: t.find((t) => t.uuid === e.recipientId)?.name ?? e.recipientName
                        }))
                      }))
                    )
                : (0, c.of)(e)
            ),
            (0, w.U)((e) => (0, u.Vp)({ ...e, count: e.users.length + e.groups.length + e.collections.length }))
          );
        }
      };
      K = (0, s.__decorate)([(0, l.e)(x.v), (0, s.__metadata)("design:paramtypes", [_.E, k.B, G.a])], K);
      var V = r(10647),
        j = r(64057);
      let B = class {};
      B = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.X,
            providers: [],
            handlers: {
              commands: {},
              events: {},
              queries: {
                getSharingTeamLogins: v,
                sharingEnabled: y,
                getItemGroupForItem: S,
                getSharingStatusForItem: D,
                getPermissionForItem: L,
                getIsLastAdminForItem: M,
                sharedAccessForItem: K
              }
            },
            imports: [n.n, V.y, j.a]
          })
        ],
        B
      );
    },
    40896: (e, t, r) => {
      r.d(t, { R: () => o });
      var s = r(78776);
      const o = () => `{${(0, s.Z)().toUpperCase()}}`;
    },
    76997: (e, t, r) => {
      function s(e) {
        switch (e?.kwType) {
          case "KWAuthentifiant":
            return "AUTHENTIFIANT";
          case "KWSecureNote":
            return "SECURENOTE";
          default:
            return "SECRET";
        }
      }
      function o(e) {
        switch (e) {
          case "AUTHENTIFIANT":
            return "password";
          case "SECURENOTE":
            return "note";
          default:
            return "secret";
        }
      }
      r.d(t, { B: () => o, l: () => s });
    },
    77007: (e, t, r) => {
      r.d(t, { S: () => s });
      const s = (0, r(86952).Q)({ name: "enclaveSdkApi", commands: {}, events: {}, queries: {} });
    },
    64483: (e, t, r) => {
      r.d(t, { m: () => c });
      var s = r(86952),
        o = r(15181),
        n = r(75437),
        i = r(49540),
        a = r(76264);
      const c = (0, s.Q)({
        name: "scim",
        commands: { updateScimConfiguration: o.G, generateScimToken: n.S },
        events: {},
        queries: { scimConfiguration: i.I, scimEndpoint: a.v }
      });
    },
    75437: (e, t, r) => {
      r.d(t, { S: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    15181: (e, t, r) => {
      r.d(t, { G: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    49540: (e, t, r) => {
      r.d(t, { I: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    76264: (e, t, r) => {
      r.d(t, { v: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    95082: (e, t, r) => {
      r.d(t, { y: () => g });
      var s = r(86952),
        o = r(85355),
        n = r(26758),
        i = r(2073),
        a = r(41689),
        c = r(39118),
        l = r(80974),
        d = r(94603),
        u = r(50179),
        p = r(74746),
        h = r(82249),
        m = r(66012),
        v = r(1434);
      const g = (0, s.Q)({
        name: "confidentialSSOApi",
        commands: {
          CheckDNSValidationCommand: o.o,
          ClearSettingsCommand: n.h,
          CreateTeamCommand: i.p,
          DeleteDomainCommand: a.k,
          EnableSsoCommand: c.F,
          InitSsoProvisioningCommand: l.S,
          LoginUserWithEnclaveSSOCommand: d.B,
          ProvisionDomainCommand: u.p,
          TestLoginUserWithEnclaveSSOCommand: p.b,
          UpdateMetadataCommand: h.o,
          ValidateMetadataCommand: m.l
        },
        events: {},
        queries: { SsoProvisioningQuery: v._ }
      });
    },
    64532: (e, t, r) => {
      r.d(t, { E: () => n });
      var s = r(67837),
        o = r(95082);
      class n extends (0, s.E)(o.y) {}
      (0, s.K)(o.y, n);
    },
    85355: (e, t, r) => {
      r.d(t, { o: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    26758: (e, t, r) => {
      r.d(t, { h: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    2073: (e, t, r) => {
      r.d(t, { p: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    41689: (e, t, r) => {
      r.d(t, { k: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    39118: (e, t, r) => {
      r.d(t, { F: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    80974: (e, t, r) => {
      r.d(t, { S: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    94603: (e, t, r) => {
      r.d(t, { B: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    50179: (e, t, r) => {
      r.d(t, { p: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    74746: (e, t, r) => {
      r.d(t, { b: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    82249: (e, t, r) => {
      r.d(t, { o: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    66012: (e, t, r) => {
      r.d(t, { l: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    1434: (e, t, r) => {
      r.d(t, { _: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    36577: (e, t, r) => {
      r.d(t, { $m: () => a, Ep: () => i, N6: () => n, xp: () => o });
      const s = ["local", "staging", "prod"];
      function o(e) {
        return s.includes(e);
      }
      class n {
        constructor(e, t, r) {
          (this.cloudflareHeaders = e), (this.enclaveUrl = t), (this.environment = r);
        }
      }
      const i = (e) =>
          "local" === e
            ? "MIICqzCCAjKgAwIBAgIUGdKnU0kGWeXtXL7BK1VpIbnjXZkwCgYIKoZIzj0EAwMwgYQxCzAJBgNVBAYTAkZSMQ8wDQYDVQQIDAZGcmFuY2UxDjAMBgNVBAcMBVBhcmlzMQswCQYDVQQKDAJETDELMAkGA1UECwwCREwxFjAUBgNVBAMMDU5pdHJvIFRlc3QgQ0ExIjAgBgkqhkiG9w0BCQEWE3NlcnZlckBkYXNobGFuZS5jb20wHhcNMjIwNDI3MTI0NTQ5WhcNNDIwNDIyMTI0NTQ5WjCBhDELMAkGA1UEBhMCRlIxDzANBgNVBAgMBkZyYW5jZTEOMAwGA1UEBwwFUGFyaXMxCzAJBgNVBAoMAkRMMQswCQYDVQQLDAJETDEWMBQGA1UEAwwNTml0cm8gVGVzdCBDQTEiMCAGCSqGSIb3DQEJARYTc2VydmVyQGRhc2hsYW5lLmNvbTB2MBAGByqGSM49AgEGBSuBBAAiA2IABLeu4raurW6XA9/c13rzPwzbk1aYAR/fPj49YoaZI+K0PFfo75rKUr0m7LawW/jpwkAqWad44SXxj2fF+REDz4ii8tUjVl8Ijp1ohrQEAvDZLcxS98bQV+NFmoyx6QxbQKNjMGEwHQYDVR0OBBYEFM5p3QEkzjDGWRntWRdqC0aWiGiaMB8GA1UdIwQYMBaAFM5p3QEkzjDGWRntWRdqC0aWiGiaMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMAoGCCqGSM49BAMDA2cAMGQCMGdird9+5r9vw9vt2x4q86nMJwu2eGXbcOE6sVRSQ92nWYHk2VX2NZix1tBX3nMGiQIwRHALNGgnkUofNBOoxZ/Pntk14Djv5Kt3/fKd6NWFRhyFZ97jho4c+slS7u9LrttE"
            : "MIICETCCAZagAwIBAgIRAPkxdWgbkK/hHUbMtOTn+FYwCgYIKoZIzj0EAwMwSTELMAkGA1UEBhMCVVMxDzANBgNVBAoMBkFtYXpvbjEMMAoGA1UECwwDQVdTMRswGQYDVQQDDBJhd3Mubml0cm8tZW5jbGF2ZXMwHhcNMTkxMDI4MTMyODA1WhcNNDkxMDI4MTQyODA1WjBJMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGQW1hem9uMQwwCgYDVQQLDANBV1MxGzAZBgNVBAMMEmF3cy5uaXRyby1lbmNsYXZlczB2MBAGByqGSM49AgEGBSuBBAAiA2IABPwCVOumCMHzaHDimtqQvkY4MpJzbolL//Zy2YlES1BR5TSksfbb48C8WBoyt7F2Bw7eEtaaP+ohG2bnUs990d0JX28TcPQXCEPZ3BABIeTPYwEoCWZEh8l5YoQwTcU/9KNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUkCW1DdkFR+eWw5b6cp3PmanfS5YwDgYDVR0PAQH/BAQDAgGGMAoGCCqGSM49BAMDA2kAMGYCMQCjfy+Rocm9Xue4YnwWmNJVA44fA0P5W2OpYow9OYCVRaEevL8uO1XYru5xtMPWrfMCMQCi85sWBbJwKKXdS6BptQFuZbT73o/gBh1qUxl/nNr12UO8Yfwr6wPLb+6NIwLz3/Y=",
        a = (e) =>
          "local" === e
            ? { 0: "9e33eca6497ec3b68ae13735cd28b1a9be1235d3440f10121327150495de4a4f854eb902a62991b366757f3d87ce57e4" }
            : "staging" === e
            ? { 3: "90528150e0f0537fa9e96b067137f6494d525f2fcfd15b478ce28ab2cfaf38dd4e24ad73f9d9d6f238a7f39f2d1956b7" }
            : {
                3: "dfb6428f132530b8c021bea8cbdba2c87c96308ba7e81c7aff0655ec71228122a9297fd31fe5db7927a7322e396e4c16",
                8: "4dbb92401207e019e132d86677857081d8e4d21f946f3561b264b7389c6982d3a86bcf9560cef4a2327eac5c5c6ab820"
              };
    },
    57318: (e, t, r) => {
      r.d(t, { E: () => d });
      var s = r(88802),
        o = r(99634),
        n = r(25504),
        i = r(77007),
        a = r(95842),
        c = r(36577),
        l = r(43673);
      let d = class {};
      d = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.S,
            imports: [n.X, l.i],
            providers: [a.d],
            exports: [a.d],
            configurations: { enclaveApiSettings: { token: c.N6 } },
            handlers: { commands: {}, events: {}, queries: {} }
          })
        ],
        d
      );
    },
    95842: (e, t, r) => {
      r.d(t, { d: () => L });
      var s = r(88802),
        o = r(57924),
        n = r(73774),
        i = r(58895),
        a = r(36577),
        c = r(56695),
        l = r(96412),
        d = r(60399),
        u = r(87279),
        p = r(7165);
      const h = (e) => {
          const t = e.match(/[\da-f]{2}/gi);
          return t ? new Uint8Array(t.map((e) => parseInt(e, 16))).buffer : new Uint8Array().buffer;
        },
        m = p.z.object({ data: p.z.object({ attestation: p.z.string(), clientIdentifier: p.z.string() }), requestId: p.z.string() });
      class v {
        decode(e) {
          const t = m.safeParse(e);
          if (!t.success) throw new Error("Invalid response format");
          return { attestation: h(t.data.data.attestation), clientIdentifier: t.data.data.clientIdentifier };
        }
      }
      const g = async (e, t) => {
        const { headers: r, httpClient: s, publicKey: o } = t,
          n = await (async (e) => (await c.ready, { clientPublicKey: c.to_hex(e) }))(o),
          i = await (0, d.z)(
            s.post(e, n, { observe: "body", responseType: "json", responseBodyDecoder: new v(), withCredentials: !0, headers: r })
          );
        if ((0, u.hx)(i)) throw new Error("string" == typeof i.error ? i.error : "HTTP Error");
        return i.data;
      };
      var y = r(73155);
      const f = p.z.object({
        requestId: p.z.string(),
        errors: p.z.array(p.z.object({ status: p.z.string(), code: p.z.string(), message: p.z.string() }))
      });
      class _ {
        assertData(e) {
          if (!e) throw new Error("toDecode expected to be truthy");
          if ("[object Object]" != `${e}` || Array.isArray(e)) throw new Error("toDecode expected to be object");
          if (!Object.prototype.hasOwnProperty.call(e, "data")) throw new Error('toDecode expected to contain a "data" property');
          const t = e;
          if ("string" != typeof t.data) throw new Error("toDecode.data expected to be type string but was " + typeof t.data);
        }
        decode(e) {
          return this.assertData(e), e.data;
        }
      }
      var S = r(76465);
      function E(e) {
        return (0, S.Jx)(new Uint8Array(e));
      }
      const b = (e) => {
        const t = E(new Uint8Array(e)),
          r = ((s = t), Array.isArray(s) ? s : s.value);
        var s;
        const [o, , n, i] = r;
        if (!o) throw new Error("parseSignedMessage: no protected header field");
        if (!n) throw new Error("parseSignedMessage: no payload field");
        if (!i) throw new Error("parseSignedMessage: no signature field");
        return { payload: new Uint8Array(n).buffer, protectedHeaders: new Uint8Array(o).buffer, signature: new Uint8Array(i).buffer };
      };
      var w = r(89685),
        A = r(66122);
      const T = p.z.object({
          module_id: p.z.string(),
          timestamp: p.z.bigint(),
          digest: p.z.string(),
          pcrs: p.z.record(p.z.string(), p.z.instanceof(Uint8Array)),
          certificate: p.z.instanceof(Uint8Array),
          cabundle: p.z.array(p.z.instanceof(Uint8Array)),
          user_data: p.z.instanceof(Uint8Array),
          nonce: p.z.instanceof(Uint8Array).nullable()
        }),
        C = p.z.object({ header: p.z.string(), publicKey: p.z.string() });
      var I = r(71833);
      const O = async (e, t, r, s) => {
        const o = I.KBB.fromBER(s),
          n = await o.getPublicKey(),
          i = ["Signature1", t, new ArrayBuffer(0), r],
          a = ((c = i), (0, S.cv)(c));
        var c;
        return await crypto.subtle.verify({ name: "ECDSA", hash: "SHA-384" }, n, e, a);
      };
      var P = r(96303);
      const R = (e) => (0, P.k)(((e) => new Uint8Array(e).buffer)(e)),
        D = async (e) => {
          const { attestation: t, rootCertBER: r, expectedPCRs: s } = e,
            { protectedHeaders: o, payload: n, signature: i } = b(t),
            a = ((e) => {
              const t = E(e),
                r = T.safeParse(t);
              if (!r.success) throw new Error("failed to parse attestation document");
              const s = r.data,
                o = (0, w.v)(s.user_data),
                n = JSON.parse(o),
                i = C.safeParse(n);
              if (!i.success) throw new Error("failed to parse server crypto info");
              const a = i.data;
              return {
                moduleId: s.module_id,
                timestamp: s.timestamp,
                digest: s.digest,
                pcrs: s.pcrs,
                certificate: new Uint8Array(s.certificate).buffer,
                cabundle: ((c = s.cabundle), c.map((e) => new Uint8Array(e).buffer)),
                serverHeader: (0, A.R)(a.header),
                serverPublicKey: (0, A.R)(a.publicKey),
                nonce: null !== s.nonce ? new Uint8Array(s.nonce).buffer : null
              };
              var c;
            })(n),
            c = await (async (e, t, r) => {
              const s = I.KBB.fromBER(e),
                o = t.map((e) => I.KBB.fromBER(e));
              o.push(s);
              const n = [I.KBB.fromBER((0, A.R)(r))],
                i = new I.DMg({ trustedCerts: n, certs: o });
              return (await i.verify()).result;
            })(a.certificate, a.cabundle, r);
          if (!c) throw new Error("Invalid cert chain!");
          if (!(await O(i, o, n, a.certificate))) throw new Error("Invalid signature!");
          return (
            ((e, t) => {
              for (const [r, s] of Object.entries(t)) if (s !== R(e[Number(r)])) throw new Error("PCRs did not match");
            })(a.pcrs, s),
            { serverPublicKey: a.serverPublicKey, serverHeader: a.serverHeader }
          );
        };
      var N;
      !(function (e) {
        (e.CLIENT_HELLO = "api/tunnel/ClientHello"), (e.TERMINATE_HELLO = "api/tunnel/TerminateHello");
      })(N || (N = {}));
      const U = async (e, t) => {
        await c.ready;
        const {
            enclaveApiSettings: { cloudflareHeaders: r, enclaveUrl: s },
            rootCertBER: o,
            expectedPCRs: n,
            httpClient: i,
            platformInfo: a,
            data: p
          } = t,
          h = {};
        (h["dashlane-client-agent"] = JSON.stringify({ platform: a.platformName, osversion: a.osVersion, version: a.appVersion })),
          r.accessKey && r.secretKey && ((h["CF-Access-Client-Id"] = r.accessKey), (h["CF-Access-Client-Secret"] = r.secretKey));
        const m = c.crypto_kx_keypair(),
          {
            clientHelloUrl: v,
            terminateHelloUrl: S,
            secureContentUrl: E
          } = ((e, t) => ({
            clientHelloUrl: `${e}${N.CLIENT_HELLO}`,
            terminateHelloUrl: `${e}${N.TERMINATE_HELLO}`,
            secureContentUrl: `${e}${t}`
          }))(s, e),
          b = await g(v, { headers: h, httpClient: i, publicKey: m.publicKey }),
          { serverPublicKey: w, serverHeader: A } = await D({ attestation: b.attestation, rootCertBER: o, expectedPCRs: n });
        (0, l.t)({
          url: s,
          name: "ClientIdentifier",
          value: b.clientIdentifier,
          expirationDate: new Date().getTime() + 15e5,
          sameSite: "strict",
          secure: !0
        });
        const T = await (async (e, t) => {
          const { headers: r, clientKeyPair: s, httpClient: o, serverPublicKey: n } = t;
          await c.ready;
          const i = c.crypto_kx_client_session_keys(s.publicKey, s.privateKey, new Uint8Array(n)),
            a = c.crypto_secretstream_xchacha20poly1305_init_push(i.sharedRx),
            l = a.state,
            p = a.header,
            h = { clientHeader: c.to_hex(p) },
            m = await (0, d.z)(o.post(e, h, { observe: "response", responseType: "json", withCredentials: !0, headers: r }));
          if ((0, u.hx)(m)) throw new Error("HTTP error");
          return { clientStateOut: l, sessionKeys: i };
        })(S, { headers: h, httpClient: i, clientKeyPair: m, serverPublicKey: w });
        return await (async (e, t) => {
          const { clientStateOut: r, serverHeader: s, sessionKeys: o, headers: n, httpClient: i } = t;
          await c.ready;
          const a = c.crypto_secretstream_xchacha20poly1305_push(
              r,
              c.from_string(t.data),
              null,
              c.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE
            ),
            l = { data: c.to_hex(a) },
            p = await (0, d.z)(
              i.post(e, l, { observe: "body", responseType: "json", responseBodyDecoder: new _(), withCredentials: !0, headers: n })
            );
          if ((0, u.hx)(p)) {
            if (p.error instanceof y.R) {
              const e = await JSON.parse(await p.error.response.text()),
                t = f.safeParse(e);
              if (t.success) {
                const e = t.data.errors[0];
                throw new Error(e.code);
              }
            }
            throw new Error("HTTP error");
          }
          const h = c.crypto_secretstream_xchacha20poly1305_init_pull(new Uint8Array(s), o.sharedTx),
            m = c.crypto_secretstream_xchacha20poly1305_pull(h, c.from_hex(p.data)).message;
          return { decryptedResponse: c.to_string(m) };
        })(E, { data: p, headers: h, httpClient: i, clientStateOut: T.clientStateOut, sessionKeys: T.sessionKeys, serverHeader: A });
      };
      let L = class {
        constructor(e, t, r) {
          (this.platformInfoService = e), (this.httpClient = t), (this.enclaveApiSettings = r);
        }
        async callEnclaveEndpoint(e) {
          const { body: t, endpoint: r, responseSchema: s } = e,
            o = JSON.stringify(t),
            n = await this.platformInfoService.getPlatformInfo(),
            i = (0, a.Ep)(this.enclaveApiSettings.environment),
            c = (0, a.$m)(this.enclaveApiSettings.environment),
            { decryptedResponse: l } = await U(r, {
              data: o,
              httpClient: this.httpClient,
              enclaveApiSettings: this.enclaveApiSettings,
              rootCertBER: i,
              expectedPCRs: c,
              platformInfo: n
            }),
            d = s.safeParse(JSON.parse(l));
          if (d.success) return d.data;
          throw new Error("Enclave response parsing failed");
        }
        getEnclaveApiSettings() {
          return this.enclaveApiSettings;
        }
      };
      L = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.t, n.e, a.N6])], L);
    },
    29213: (e, t, r) => {
      r.d(t, { i: () => H });
      var s = r(88802),
        o = r(99634),
        n = r(37935),
        i = r(64483),
        a = r(25029),
        c = r(7165);
      const l = c.z.object({ token: c.z.string(), active: c.z.boolean() }).optional();
      var d = r(95681),
        u = r(23347);
      const p = (e) => l.safeParse(e).success;
      class h extends (0, d.Q)({
        persist: !1,
        capacity: u.Y._001KB,
        initialValue: undefined,
        scope: a.F.User,
        storeName: "confidential-scim-state",
        storeTypeGuard: p
      }) {}
      var m = r(63663),
        v = r(87279),
        g = r(15181),
        y = r(57924),
        f = r(95842),
        _ = r(42645),
        S = r(86252),
        E = r(60399),
        b = r(33229),
        w = r(13878);
      const A = "api/scim/GetSCIMConfiguration",
        T = "api/scim/SetSCIMConfiguration",
        C = c.z.object({ token: c.z.string().nullable(), active: c.z.boolean() }),
        I = c.z.object({ token: c.z.string(), active: c.z.boolean() });
      let O = class {
        constructor(e, t, r) {
          (this.enclaveService = e), (this.teamPlansClient = t), (this.carbonClient = r);
        }
        async getConfidentialScimConfig() {
          const e = { token: "", active: !1 },
            { teamUuid: t, adminProvisioningKey: r } = await this.getTeamIdentifiers(),
            s = await this.enclaveService.callEnclaveEndpoint({
              endpoint: A,
              body: { teamUuid: t, adminProvisioningKey: r },
              responseSchema: C
            });
          return (e.active = s.active), (e.token = s.token ?? ""), e;
        }
        async setConfidentialScimConfig(e) {
          const { teamUuid: t, adminProvisioningKey: r } = await this.getTeamIdentifiers();
          await this.enclaveService.callEnclaveEndpoint({
            endpoint: T,
            body: { teamUuid: t, adminProvisioningKey: r, ...e },
            responseSchema: I
          });
        }
        async getTeamIdentifiers() {
          const e = await (0, E.z)(this.teamPlansClient.queries.getTeamId());
          if ((0, v.hx)(e)) throw new Error("Could not get teamId");
          const t = await (0, b.I)(this.carbonClient);
          if ((0, v.hx)(t)) throw new Error("Could not get team info");
          const {
            teamInfo: { uuid: r }
          } = t.data;
          if (!r) throw new Error("No team uuid found. Is confidential team created?");
          const s = e.data.teamId ?? "",
            o = await (0, w.B)(s, this.carbonClient.queries.carbonState);
          if (!o) throw new Error("No admin provisioning key found. Is confidential team created?");
          return { teamUuid: r, adminProvisioningKey: o };
        }
      };
      O = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [f.d, _.e, S._])], O);
      let P = class {
        constructor(e, t) {
          (this.confidentialScimService = e), (this.confidentialScimStore = t);
        }
        async execute({ body: e }) {
          const t = await this.confidentialScimStore.getState();
          try {
            const r = { token: e.token ?? (t?.token || ""), active: e.active ?? !!t?.active };
            return (
              await this.confidentialScimStore.set({ ...r }),
              await this.confidentialScimService.setConfidentialScimConfig({ ...t, ...e }),
              (0, v.Vp)(void 0)
            );
          } catch (e) {
            return await this.confidentialScimStore.set(t), (0, v.Rn)({ tag: e.message });
          }
        }
      };
      P = (0, s.__decorate)([(0, m.W)(g.G), (0, s.__metadata)("design:paramtypes", [O, h])], P);
      var R = r(19603),
        D = r(75437),
        N = r(64532),
        U = r(10370);
      let L = class {
        constructor(e, t, r, s, o) {
          (this.randomValuesGetter = e),
            (this.confidentialScimStore = t),
            (this.confidentialScimService = r),
            (this.ssoClient = s),
            (this.teamPlansClient = o);
        }
        async execute() {
          const e = await this.confidentialScimStore.getState(),
            t = await this.hasNitroTeam();
          try {
            t || (await this.createTeam());
            const e = this.randomValuesGetter.get(64),
              r = (0, U.s)(e);
            return (
              await this.confidentialScimStore.set({ token: r, active: !1 }),
              await this.confidentialScimService.setConfidentialScimConfig({ token: r, active: !1 }),
              (0, v.Vp)(void 0)
            );
          } catch (t) {
            return this.confidentialScimStore.set(e), (0, v.Rn)({ tag: `Something wrong happened: ${t}` });
          }
        }
        async createTeam() {
          const e = await (0, E.z)(this.teamPlansClient.queries.getTeamId());
          if ((0, v.hx)(e)) throw new Error("TeamID not found, are you logged in?");
          await this.ssoClient.commands.initSsoProvisioning({ teamId: `${e.data.teamId}` }), await this.ssoClient.commands.createTeam();
        }
        async hasNitroTeam() {
          try {
            return !!(await this.confidentialScimService.getTeamIdentifiers()).adminProvisioningKey;
          } catch {
            return !1;
          }
        }
      };
      L = (0, s.__decorate)([(0, m.W)(D.S), (0, s.__metadata)("design:paramtypes", [R.Y, h, O, N.E, _.e])], L);
      var F = r(43978),
        M = r(20754),
        x = r(49540);
      let k = class {
        constructor(e, t, r) {
          (this.confidentialScimStore = e), (this.scimConfigurationService = t), (this.scimStore = r);
        }
        execute() {
          return this.confidentialScimStore.state$.pipe((0, F.w)(async (e) => (e ? (0, v.Vp)(e) : await this.getInitState())));
        }
        async getInitState() {
          try {
            const e = await this.scimConfigurationService.getConfidentialScimConfig();
            return await this.scimStore.set(e), (0, v.Vp)(e);
          } catch (e) {
            return (0, v.Vp)({ active: !1, token: null });
          }
        }
      };
      k = (0, s.__decorate)([(0, M.e)(x.I), (0, s.__metadata)("design:paramtypes", [h, O, h])], k);
      var G = r(57318),
        K = r(37182),
        V = r(69885),
        j = r(76264),
        B = r(36577);
      let W = class {
        constructor(e, t, r) {
          (this.enclaveApiSettings = e), (this.confidentialScimService = t), (this.confidentialScimStore = r);
        }
        execute() {
          return this.confidentialScimStore.state$.pipe(
            (0, F.w)(async (e) => {
              if (!e?.token) return (0, v.Rn)({ tag: "Could not load team uuid" });
              const t = await this.confidentialScimService.getTeamIdentifiers(),
                r = new URL(`scim/${t.teamUuid}`, this.enclaveApiSettings.enclaveUrl);
              return (0, v.Vp)({ endpoint: r.href });
            }),
            (0, K.K)(() => (0, V.of)((0, v.Rn)({ tag: "Could not load team uuid" })))
          );
        }
      };
      W = (0, s.__decorate)([(0, M.e)(j.v), (0, s.__metadata)("design:paramtypes", [B.N6, O, h])], W);
      let H = class {};
      H = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.m,
            imports: [G.E, n.D],
            handlers: {
              commands: { updateScimConfiguration: P, generateScimToken: L },
              events: {},
              queries: { scimConfiguration: k, scimEndpoint: W }
            },
            stores: [h],
            providers: [O]
          })
        ],
        H
      );
    },
    13878: (e, t, r) => {
      r.d(t, { B: () => a });
      var s = r(7165),
        o = r(60399),
        n = r(48844);
      const i = s.z.object({
          adminProvisioningKey: s.z
            .object({ adminProvisioningKey: s.z.ostring().nullable(), itemId: s.z.ostring().nullable() })
            .optional()
            .nullable()
        }),
        a = async (e, t) => {
          const r = t({ path: `userSession.teamAdminData.teams.${e}` }).pipe(
            (0, n.nb)({
              success: (e) => {
                const t = i.safeParse(e);
                if (!t.success) throw t.error;
                return t.data.adminProvisioningKey?.adminProvisioningKey ?? null;
              },
              failure: () => ""
            })
          );
          return await (0, o.z)(r);
        };
    },
    33229: (e, t, r) => {
      r.d(t, { I: () => d });
      var s = r(7165),
        o = r(87279),
        n = r(22450);
      const i = s.z.object({ enabled: s.z.boolean() }).optional(),
        a = s.z.object({
          teamInfo: s.z.object({
            uuid: s.z.ostring().nullable(),
            ssoEnabled: s.z.boolean(),
            ssoIsNitroProvider: s.z.boolean(),
            ssoServiceProviderUrl: s.z.ostring().nullable(),
            ssoIdpMetadata: s.z.ostring().nullable(),
            ssoIdpEntrypoint: s.z.ostring().nullable()
          }),
          capabilities: s.z.object({ sso: i })
        }),
        c = s.z.object({ data: a }),
        l = s.z.object({ message: s.z.string(), reason: s.z.nativeEnum(n._V) }),
        d = async (e) => {
          const { getTeamInfo: t } = e.commands,
            r = await t();
          if ((0, o.hx)(r)) {
            switch (l.parse(r.error).reason) {
              case n._V.UNAUTHORIZED:
                return (0, o.Rn)({ tag: "UserNotAuthorized" });
              case n._V.UNKNOWN_ERROR:
                return (0, o.Rn)({ tag: "CouldNotGetTeamStatus" });
              default:
                throw new Error("An unexpected error happened while trying to retrieve team info");
            }
          }
          const {
            data: { teamInfo: s, capabilities: i }
          } = c.parse(r.data);
          return (0, o.Vp)({ teamInfo: s, capabilities: i });
        };
    },
    16445: (e, t, r) => {
      r.d(t, { D: () => Be });
      var s = r(88802),
        o = r(99634),
        n = r(25504),
        i = r(43673),
        a = r(95082),
        c = r(57318);
      class l {}
      var d,
        u = r(63663),
        p = r(87279),
        h = r(94603),
        m = r(7165);
      !(function (e) {
        (e.AUTH_CONFIRM_LOGIN = "api/authentication/ConfirmLogin2"),
          (e.AUTH_REQUEST_LOGIN = "api/authentication/RequestLogin2"),
          (e.AUTH_REQUEST_TEST_LOGIN = "api/authentication/RequestTestLogin2"),
          (e.AUTH_CONFIRM_TEST_LOGIN = "api/authentication/ConfirmTestLogin2"),
          (e.DOMAINS_CREATE_DOMAIN = "api/domains/CreateDomain"),
          (e.DOMAINS_DELETE_DOMAIN = "api/domains/DeleteDomain2"),
          (e.DOMAINS_UPDATE_DOMAIN = "api/domains/UpdateDomain2"),
          (e.DOMAINS_CHECK_DNS_VALIDATION = "api/domains/CheckDNSValidation2"),
          (e.TEAMS_CREATE_TEAM = "api/teams/CreateTeam"),
          (e.TEAMS_GET_TEAM = "api/teams/GetTeam"),
          (e.TEAMS_DELETE_TEAM = "api/teams/DeleteTeam"),
          (e.IDPS_CREATE_IDP = "api/idps/CreateIdp"),
          (e.IDPS_UPDATE_IDP = "api/idps/UpdateIdp"),
          (e.IDPS_DELETE_IDP = "api/idps/DeleteIdp"),
          (e.TEAMS_GET_TEAM_STATUS = "api/teams/GetTeamStatus");
      })(d || (d = {}));
      const v = m.z.object({
          idpAuthorizeUrl: m.z.string(),
          teamUuid: m.z.string(),
          spCallbackUrl: m.z.string(),
          domainName: m.z.string()
        }),
        g = m.z.object({
          exists: m.z.boolean(),
          ssoToken: m.z.string(),
          userServiceProviderKey: m.z.string(),
          currentAuthenticationMethods: m.z.string().array(),
          expectedAuthenticationMethods: m.z.string().array()
        });
      var y = r(86252),
        f = r(95842);
      let _ = class {
        constructor(e, t, r) {
          (this.enclaveService = e), (this.enclaveLoginContext = t), (this.carbonLegacyClient = r);
        }
        async execute(e) {
          const t = e.body.userEmailAddress,
            r = t.slice(t.indexOf("@") + 1);
          try {
            const s = await (async (e, t) => await e.callEnclaveEndpoint({ endpoint: d.AUTH_REQUEST_LOGIN, body: t, responseSchema: v }))(
                this.enclaveService,
                { login: t }
              ),
              { idpAuthorizeUrl: o, teamUuid: n } = s,
              { samlToken: i } = await this.enclaveLoginContext.getSamlFromLogin(o, !0),
              a = btoa(atob(i).replace(/\n/g, "")),
              c = {
                ...(await (async (e, t) => await e.callEnclaveEndpoint({ endpoint: d.AUTH_CONFIRM_LOGIN, body: t, responseSchema: g }))(
                  this.enclaveService,
                  { domainName: r, samlResponse: a, teamUuid: n }
                )),
                login: e.body.userEmailAddress
              };
            return await this.enclaveLoginContext.redirectUserIntoLoginFlow(c), (0, p.Vp)(void 0);
          } catch {
            return (0, p.Rn)({ tag: "LoginFailed" });
          }
        }
      };
      _ = (0, s.__decorate)([(0, u.W)(h.B), (0, s.__metadata)("design:paramtypes", [f.d, l, y._])], _);
      var S = r(21242);
      const E = m.z.object({
          idpUuid: m.z.string().uuid(),
          certificates: m.z.array(m.z.string()),
          entrypoint: m.z.string(),
          creationDateUnix: m.z.number(),
          updateDateUnix: m.z.number()
        }),
        b = m.z.enum(["valid", "pending", "expired", "invalid"]),
        w = m.z.enum(["tokenNotFound", "invalidToken"]),
        A = m.z.object({
          status: b.nullable(),
          verificationToken: m.z.string(),
          lastCheckDateUnix: m.z.number(),
          pendingReason: w.nullable(),
          expiryDateUnix: m.z.number()
        }),
        T = m.z.object({
          creationDateUnix: m.z.number(),
          dnsCheckStatus: A,
          domainName: m.z.string(),
          idpUuid: m.z.ostring(),
          updateDateUnix: m.z.number()
        }),
        C = m.z.enum([
          "NitroComplete",
          "NitroIncomplete",
          "SelfHostedComplete",
          "SelfHostedIncomplete",
          "SsoConnectorIncomplete",
          "SsoConnectorComplete",
          "SsoConnectorToSelfHostedMigration",
          "None",
          "Unknown"
        ]),
        I = m.z.object({
          subdomainValue: m.z.string().nullable(),
          txtValue: m.z.string().nullable(),
          verificationStatus: b.nullable(),
          tokenFound: m.z.string().nullable(),
          pendingReason: w.nullable()
        }),
        O = m.z.array(m.z.object({ domainName: m.z.string().url(), verificationStatus: b, idpUuid: m.z.string().optional().nullable() })),
        P = m.z.object({
          global: m.z.object({
            adminProvisioningKey: m.z.string().nullable(),
            isTeamProvisionedInNitro: m.z.boolean().nullable(),
            inferredSsoState: C,
            teamUuid: m.z.string().nullable(),
            ssoCapable: m.z.boolean().nullable()
          }),
          idpApplication: m.z.object({
            entityId: m.z.string().nullable(),
            acsUrl: m.z.string().nullable(),
            signOnUrl: m.z.string().nullable()
          }),
          idpMetadata: m.z.object({ metadataValue: m.z.string().nullable(), idpUuid: m.z.string().nullable() }),
          domainSetup: O,
          domainVerificationInfo: m.z.record(m.z.string().url(), I),
          enableSSO: m.z.object({ ssoEnabled: m.z.boolean().nullable() })
        });
      var R = r(50179),
        D = r(64718);
      const N = m.z.object({ error: m.z.string() }),
        U = m.z.object({ data: m.z.object({ samlIdpEntryPoint: m.z.string(), samlIdpCertificate: m.z.string() }) }),
        L = async (e, t) => {
          if (null === t) return { samlIdpEntryPoint: "", samlIdpCertificate: "" };
          let r = "";
          if (new D.Y(t).isUrlValid()) {
            const e = await fetch(t);
            r = await e.text();
          } else r = t;
          const { parseMetadataFields: s } = e.commands,
            o = await s({ ssoIdpMetadata: r });
          if ((0, p.d6)(o)) return U.parse(o.data).data;
          throw new Error("failed to parse metadata, please validate first.");
        };
      var F = r(57924),
        M = r(25029),
        x = r(95681),
        k = r(23347);
      const G = (e) => P.safeParse(e).success,
        K = {
          global: {
            adminProvisioningKey: null,
            teamUuid: null,
            isTeamProvisionedInNitro: null,
            inferredSsoState: C.enum.Unknown,
            ssoCapable: null
          },
          idpApplication: { entityId: null, acsUrl: null, signOnUrl: null },
          idpMetadata: { metadataValue: null, idpUuid: null },
          domainSetup: [],
          domainVerificationInfo: {},
          enableSSO: { ssoEnabled: null }
        };
      class V extends (0, x.Q)({
        persist: !1,
        capacity: k.Y._010KB,
        initialValue: K,
        scope: M.F.User,
        storeName: "nitro-sso-provisioning-state",
        storeTypeGuard: G
      }) {}
      const j = "_dashlane-challenge";
      let B = class {
        constructor(e) {
          this.store = e;
        }
        async reset() {
          await this.store.init({
            global: {
              adminProvisioningKey: null,
              teamUuid: null,
              isTeamProvisionedInNitro: null,
              inferredSsoState: C.enum.Unknown,
              ssoCapable: null
            },
            idpApplication: { entityId: null, acsUrl: null, signOnUrl: null },
            idpMetadata: { metadataValue: null, idpUuid: null },
            domainSetup: [],
            domainVerificationInfo: {},
            enableSSO: { ssoEnabled: null }
          });
        }
        set(e) {
          return this.store.set(e);
        }
      };
      B = (0, s.__decorate)([(0, F.GS)(), (0, s.__metadata)("design:paramtypes", [V])], B);
      const W = m.z.object({ dnsVerificationToken: m.z.string() });
      let H = class {
        constructor(e, t, r, s, o) {
          (this.enclaveService = e),
            (this.ssoProvisioningStoreUpdater = t),
            (this.ssoProvisioningStore = r),
            (this.featureFlipsClient = s),
            (this.carbonLegacyClient = o);
        }
        async execute({ body: e }) {
          const t = await this.ssoProvisioningStore.getState();
          if (!t.global.teamUuid) return (0, p.Rn)({ tag: "TeamIdNotFound" });
          if (!t.global.adminProvisioningKey) return (0, p.Rn)({ tag: "AdminProvisioningKeyNotFound" });
          if (!e.domainName) return (0, p.Rn)({ tag: "DomainNameNotProvided" });
          const r = t.idpMetadata.metadataValue ? await L(this.carbonLegacyClient, t.idpMetadata.metadataValue) : null,
            s = {
              domainName: e.domainName,
              adminProvisioningKey: t.global.adminProvisioningKey,
              idpMetadata: r ? { certificate: r.samlIdpCertificate, entrypoint: r.samlIdpEntryPoint } : void 0,
              teamUuid: t.global.teamUuid
            };
          if (new Set(t.domainSetup.map((e) => e.domainName)).has(e.domainName)) return (0, p.Rn)({ tag: "DomainAlreadyProvisioned" });
          const { dnsVerificationToken: o } = await (async (e, t) =>
              await e.callEnclaveEndpoint({ body: t, endpoint: d.DOMAINS_CREATE_DOMAIN, responseSchema: W }))(this.enclaveService, s),
            n = [...t.domainSetup, { idpUuid: t.idpMetadata.idpUuid, domainName: e.domainName, verificationStatus: b.enum.pending }],
            i = {
              ...t.domainVerificationInfo,
              [e.domainName]: { txtValue: o, verificationStatus: b.enum.pending, subdomainValue: j, pendingReason: null, tokenFound: null }
            };
          return (
            await this.ssoProvisioningStoreUpdater.set({
              ...t,
              domainSetup: n,
              domainVerificationInfo: { ...t.domainVerificationInfo, ...i }
            }),
            (0, p.Vp)(void 0)
          );
        }
      };
      H = (0, s.__decorate)([(0, u.W)(R.p), (0, s.__metadata)("design:paramtypes", [f.d, B, V, S.P, y._])], H);
      var z,
        Q = r(2073);
      !(function (e) {
        (e.SSO_CONNECTOR = "sso_connector"), (e.ENCRYPTION_SERVICE = "encryption_service"), (e.NITRO = "nitro_encryption_service");
      })(z || (z = {}));
      const q = m.z.object({ data: m.z.object({ deviceAccessKey: m.z.string(), deviceSecretKey: m.z.string() }) }),
        Y = m.z.object({ data: m.z.object({ devicePrivateKey: m.z.string(), devicePublicKey: m.z.string() }) }),
        $ = m.z.object({ adminProvisioningKey: m.z.string() });
      let X = class {
        constructor(e, t, r, s) {
          (this.enclaveService = e),
            (this.ssoProvisioningStoreUpdater = t),
            (this.ssoProvisioningStore = r),
            (this.carbonClient = s),
            (this.ssoServiceProviderUrl = new URL(this.enclaveService.getEnclaveApiSettings().enclaveUrl).origin);
        }
        async execute() {
          let e = await this.ssoProvisioningStore.getState();
          const t = e.global.teamUuid;
          if (!t) return (0, p.Rn)({ tag: "TeamIdNotFound" });
          const r = await (async (e) => {
            const t = await e.commands.registerTeamDevice({ platform: z.NITRO, deviceName: "Nitro Encryption Service" });
            if ((0, p.hx)(t)) return t;
            const {
                data: { deviceAccessKey: r, deviceSecretKey: s }
              } = q.parse((0, p.db)(t)),
              o = await e.commands.registerTeamDeviceAccount({ deviceAccessKey: r, shouldGenerateDeviceKeyPair: !0 });
            if ((0, p.hx)(o)) return o;
            const {
              data: { devicePrivateKey: n, devicePublicKey: i }
            } = Y.parse((0, p.db)(o));
            return (0, p.Vp)({ deviceAccessKey: r, deviceSecretKey: s, devicePrivateKey: n, devicePublicKey: i });
          })(this.carbonClient);
          if ((0, p.hx)(r)) return (0, p.Rn)({ tag: "RegisterTeamDeviceFailed" });
          const { deviceAccessKey: s, devicePublicKey: o, deviceSecretKey: n, devicePrivateKey: i } = (0, p.db)(r);
          (e = { ...e, global: { ...e.global, inferredSsoState: C.enum.NitroIncomplete } }), await this.ssoProvisioningStoreUpdater.set(e);
          let a = null;
          try {
            if (
              ((a = (
                await (async (e, t) => await e.callEnclaveEndpoint({ endpoint: d.TEAMS_CREATE_TEAM, body: t, responseSchema: $ }))(
                  this.enclaveService,
                  { teamDeviceCredentials: { teamUuid: t, accessKey: s, secretKey: n, sharingPublicKey: o, sharingPrivateKey: i } }
                )
              ).adminProvisioningKey),
              !a)
            )
              return await this.rollBackTeamCreation(e, s), (0, p.Rn)({ tag: "AdminProvisioningKeyNotFound" });
          } catch (t) {
            return this.rollBackTeamCreation(e, s);
          }
          return this.persistAdminProvisionningKey(e, a);
        }
        async persistAdminProvisionningKey(e, t) {
          return (
            await this.carbonClient.commands.persistAdminProvisioningKey({ adminProvisioningKey: t }),
            await this.carbonClient.commands.updateTeamSettings({ ssoServiceProviderUrl: this.ssoServiceProviderUrl }),
            await this.ssoProvisioningStoreUpdater.set({
              ...e,
              global: { ...e.global, adminProvisioningKey: t, isTeamProvisionedInNitro: !0 }
            }),
            (0, p.Vp)(void 0)
          );
        }
        async rollBackTeamCreation(e, t) {
          return (
            await this.carbonClient.commands.deactivateTeamDevice({ teamDeviceAccessKey: t }),
            await this.ssoProvisioningStoreUpdater.set({ ...e, global: { ...e.global, inferredSsoState: C.enum.None } }),
            (0, p.Rn)({ tag: "CreateTeamApiError" })
          );
        }
      };
      X = (0, s.__decorate)([(0, u.W)(Q.p), (0, s.__metadata)("design:paramtypes", [f.d, B, V, y._])], X);
      var Z = r(41689);
      m.z.object({ domainName: m.z.string(), teamUuid: m.z.string(), adminProvisioningKey: m.z.string() });
      const J = ["DOMAIN_NOT_FOUND", "DOMAIN_CONFIGURATION_NOT_FOUND"];
      let ee = class {
        constructor(e, t, r, s) {
          (this.enclaveService = e), (this.ssoProvisioningStoreUpdater = t), (this.ssoProvisioningStore = r), (this.featureFlipsClient = s);
        }
        async execute({ body: e }) {
          const t = await this.ssoProvisioningStore.getState();
          if (!t.global.teamUuid) return (0, p.Rn)({ tag: "TeamIdNotFound" });
          if (!t.global.adminProvisioningKey) return (0, p.Rn)({ tag: "AdminProvisioningKeyNotFound" });
          if (!e.domainName) return (0, p.Rn)({ tag: "DomainNameNotProvided" });
          const r = { domainName: e.domainName, teamUuid: t.global.teamUuid, adminProvisioningKey: t.global.adminProvisioningKey };
          try {
            await (async (e, t) => {
              await e.callEnclaveEndpoint({ endpoint: d.DOMAINS_DELETE_DOMAIN, body: t, responseSchema: m.z.object({}) });
            })(this.enclaveService, r);
          } catch (e) {
            const t = e instanceof Error ? e.message : "Unable to delete domain.";
            if (!J.includes(t)) throw e;
          }
          return await this.applyDeleteDomainOnState(t, e.domainName), (0, p.Vp)(void 0);
        }
        async applyDeleteDomainOnState(e, t) {
          (e.domainSetup = e.domainSetup.filter((e) => e.domainName !== t)),
            delete e.domainVerificationInfo[t],
            await this.ssoProvisioningStoreUpdater.set(e);
        }
      };
      ee = (0, s.__decorate)([(0, u.W)(Z.k), (0, s.__metadata)("design:paramtypes", [f.d, B, V, S.P])], ee);
      var te = r(58895),
        re = r(74746);
      const se = m.z.object({ idpAuthorizeUrl: m.z.string(), spCallbackUrl: m.z.ostring() });
      var oe = r(36577);
      let ne = class {
        constructor(e, t, r, s, o, n) {
          (this.enclaveService = e),
            (this.enclaveLoginContext = t),
            (this.enclaveApiSettings = r),
            (this.platformInfoService = s),
            (this.ssoProvisioningStore = o),
            (this.featureFlips = n);
        }
        async execute(e) {
          const t = await this.ssoProvisioningStore.getState(),
            {
              global: { adminProvisioningKey: r, teamUuid: s },
              idpMetadata: { idpUuid: o }
            } = t,
            n = e.body.domainName;
          if (!(r && n && s && o)) return (0, p.Rn)({ tag: "MissingCommandParameters" });
          try {
            const e = await (async (e, t) =>
                await e.callEnclaveEndpoint({ endpoint: d.AUTH_REQUEST_TEST_LOGIN, body: t, responseSchema: se }))(this.enclaveService, {
                adminProvisioningKey: r,
                teamUuid: s,
                idpUuid: o
              }),
              { samlToken: t } = await this.enclaveLoginContext.getSamlFromLogin(e.idpAuthorizeUrl, !1);
            return (
              await (async (e, t) => {
                await e.callEnclaveEndpoint({ endpoint: d.AUTH_CONFIRM_TEST_LOGIN, body: t, responseSchema: m.z.object({}) });
              })(this.enclaveService, { domainName: n, samlResponse: t, adminProvisioningKey: r, teamUuid: s }),
              await this.enclaveLoginContext.cleanupTestLogin(),
              (0, p.Vp)(void 0)
            );
          } catch {
            return (0, p.Rn)({ tag: "FailedToLoginIntoSsoProvider" });
          }
        }
      };
      ne = (0, s.__decorate)([(0, u.W)(re.b), (0, s.__metadata)("design:paramtypes", [f.d, l, oe.N6, te.t, V, S.P])], ne);
      var ie = r(26457),
        ae = r(65255),
        ce = r(80974);
      const le = m.z.enum(["sso_connector", "encryption_service", "nitro_encryption_service", "command_line"]),
        de = [le.enum.encryption_service, le.enum.nitro_encryption_service, le.enum.sso_connector],
        ue = m.z.object({
          platform: le,
          accessKey: m.z.string(),
          deviceName: m.z.string().nullable(),
          activated: m.z.boolean(),
          creationDateUnix: m.z.number(),
          updateDateUnix: m.z.number()
        }),
        pe = m.z.object({ data: m.z.object({ teamDevices: m.z.array(ue) }) }),
        he = async (e) => {
          const { listTeamDevices: t } = e.commands,
            r = await t();
          if ((0, p.hx)(r)) throw new Error("Failed to get team devices");
          const {
            data: { teamDevices: s }
          } = pe.parse(r.data);
          return s
            .filter((e) => de.includes(e.platform))
            .reduce((e, t) => ((!e && t.activated) || (e && t.activated && t.updateDateUnix > e.updateDateUnix) ? t : e), null);
        },
        me = m.z.object({}),
        ve =
          (m.z.object({ teamUuid: m.z.string().uuid(), adminProvisioningKey: m.z.string(), idpUuid: m.z.string().uuid() }),
          m.z.object({ idpUuid: m.z.string().uuid() })),
        ge = m.z.record(m.z.string(), T),
        ye = m.z.object({ domains: ge, idps: m.z.record(m.z.string(), E), updateDateUnix: m.z.number() });
      var fe = r(33229),
        _e = r(13878),
        Se = r(60399),
        Ee = r(87065);
      let be = class {
        constructor(e, t, r, s, o) {
          (this.enclaveService = e),
            (this.ssoProvisioningStoreUpdater = t),
            (this.carbonLegacyClient = r),
            (this.featureFlipsClient = s),
            (this.appLogger = o),
            (this.fetchInitialStateInfo = async (e) => {
              const t = [
                  (0, _e.B)(e, this.carbonLegacyClient.queries.carbonState),
                  (0, fe.I)(this.carbonLegacyClient),
                  he(this.carbonLegacyClient)
                ],
                [r, s, o] = await Promise.all(t);
              if ((0, p.hx)(s)) return s;
              let n = this.makeGetTeamDecryptedResponse();
              const { teamInfo: i, capabilities: a } = s.data;
              r && i.uuid && (n = await this.performGetTeam(r, i.uuid));
              const c = this.extractCapabilities(a);
              return (0, p.Vp)({ provisioningKey: r, teamInfo: i, teamStatus: n, capabilities: c, currentTeamDevice: o });
            }),
            (this.makeGetTeamDecryptedResponse = () => ({ domains: {}, idps: {}, updateDateUnix: 0 }));
        }
        async execute({ body: { teamId: e } }) {
          if (!e) return (0, p.Rn)({ tag: "TeamIdNotFound" });
          try {
            await this.ssoProvisioningStoreUpdater.reset();
            const r = await this.fetchInitialStateInfo(e);
            if ((0, p.hx)(r)) return r;
            const { teamStatus: s, teamInfo: o, provisioningKey: n, capabilities: i, currentTeamDevice: a } = r.data;
            if (!o.uuid) return (0, p.Rn)({ tag: "TeamIdNotFound" });
            let c = C.enum.Unknown;
            try {
              c = ((e, t, r, s) => {
                if (!r) return C.enum.None;
                if (s && r.platform === le.enum.sso_connector) return C.enum.SsoConnectorToSelfHostedMigration;
                if (t) return e ? C.enum.NitroComplete : C.enum.NitroIncomplete;
                switch (r.platform) {
                  case le.enum.sso_connector:
                    return e ? C.enum.SsoConnectorComplete : C.enum.SsoConnectorIncomplete;
                  case le.enum.encryption_service:
                    return e ? C.enum.SelfHostedComplete : C.enum.SelfHostedIncomplete;
                  case le.enum.nitro_encryption_service:
                    return e ? C.enum.NitroComplete : C.enum.NitroIncomplete;
                }
                throw new Error("Invalid SSO state reached");
              })(o.ssoEnabled, o.ssoIsNitroProvider, a, !!(await this._shouldUseSSOMigration()));
            } catch {
              return (0, p.Rn)({ tag: "InvalidSsoState" });
            }
            return (
              await this.ssoProvisioningStoreUpdater.set({
                global: {
                  adminProvisioningKey: n ?? null,
                  isTeamProvisionedInNitro: !!n,
                  inferredSsoState: c,
                  ssoCapable: i.sso,
                  teamUuid: o.uuid
                },
                idpApplication: {
                  acsUrl: ((t = this.enclaveService.getEnclaveApiSettings().enclaveUrl), t ? `${new URL(t).origin}/saml/callback` : ""),
                  entityId: "dashlane-nitro-sso",
                  signOnUrl: "https://app.dashlane.com"
                },
                idpMetadata: { idpUuid: Object.keys(s.idps)[0] ?? null, metadataValue: o.ssoIdpMetadata ?? null },
                domainSetup: this.getDomainSetupState(s.domains),
                domainVerificationInfo: this.getDomainVerificationInfo(s.domains),
                enableSSO: { ssoEnabled: o.ssoEnabled }
              }),
              (0, p.Vp)(void 0)
            );
          } catch (e) {
            return this.appLogger.error(e), (0, p.Rn)({ tag: "GenericSsoError" });
          }
          var t;
        }
        getDomainSetupState(e) {
          return Object.entries(e).map(([e, t]) => ({ domainName: e, verificationStatus: t.dnsCheckStatus.status ?? "pending" }));
        }
        getDomainVerificationInfo(e) {
          return Object.entries(e).reduce(
            (e, [t, r]) => (
              (e[t] = {
                txtValue: r.dnsCheckStatus.verificationToken,
                verificationStatus: b.parse(r.dnsCheckStatus.status),
                subdomainValue: j,
                pendingReason: r.dnsCheckStatus.pendingReason,
                tokenFound: null
              }),
              e
            ),
            {}
          );
        }
        fixTeamStatusDomains(e, t, r) {
          const s = Object.values(e.idps);
          if (s.length <= 1) return Promise.resolve(e);
          const o = s.sort((e, t) => e.updateDateUnix - t.updateDateUnix).pop();
          return o
            ? (Object.values(e.domains).reduce(
                (e, s) =>
                  s.idpUuid !== o.idpUuid
                    ? e.then(() =>
                        (async (e, t) => await e.callEnclaveEndpoint({ endpoint: d.DOMAINS_UPDATE_DOMAIN, body: t, responseSchema: me }))(
                          this.enclaveService,
                          { domainName: s.domainName, adminProvisioningKey: t, teamUuid: r, idpUuid: o.idpUuid }
                        ).then(() => ((s.idpUuid = o.idpUuid), Promise.resolve()))
                      )
                    : Promise.resolve(),
                Promise.resolve()
              ),
              s.reduce(
                (e, s) =>
                  o.idpUuid !== s.idpUuid
                    ? e
                        .then(() =>
                          (async (e, t) => await e.callEnclaveEndpoint({ body: t, endpoint: d.IDPS_DELETE_IDP, responseSchema: ve }))(
                            this.enclaveService,
                            { teamUuid: r, adminProvisioningKey: t, idpUuid: s.idpUuid }
                          )
                        )
                        .then(() => Promise.resolve())
                    : Promise.resolve(),
                Promise.resolve()
              ),
              (e.idps = { [o.idpUuid]: o }),
              Promise.resolve(e))
            : Promise.resolve(e);
        }
        async performGetTeam(e, t) {
          let r = await (async (e, t) =>
            t.teamUuid && t.adminProvisioningKey
              ? await e.callEnclaveEndpoint({ endpoint: d.TEAMS_GET_TEAM, body: t, responseSchema: ye })
              : { domains: {}, idps: {}, updateDateUnix: 0 })(this.enclaveService, { adminProvisioningKey: e, teamUuid: t });
          return (r = await this.fixTeamStatusDomains(r, e, t)), r;
        }
        extractCapabilities(e) {
          return Object.entries(e).reduce((e, [t, r]) => ({ ...e, [t]: r.enabled }), {});
        }
        _shouldUseSSOMigration() {
          return this._getFeatureFlip(ae.w.ItadminTacEncryptionserviceSSOmigrationReset);
        }
        _getFeatureFlip(e) {
          const { userFeatureFlips: t } = this.featureFlipsClient.queries;
          return (0, Se.z)(
            t().pipe(
              (0, Ee.U)((t) => {
                if ((0, p.d6)(t)) {
                  return (0, p.db)(t)[e];
                }
              })
            )
          );
        }
      };
      be = (0, s.__decorate)([(0, u.W)(ce.S), (0, s.__metadata)("design:paramtypes", [f.d, B, y._, S.P, ie.V])], be);
      var we = r(66012);
      let Ae = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async execute({ body: e }) {
          const {
              commands: { carbon: t }
            } = this.carbonLegacy,
            r = await (async (e, t) => {
              if (null === t) return;
              const r = await e({ name: "parseMetadataFields", args: [{ ssoIdpMetadata: t }] });
              return (0, p.d6)(r) ? void 0 : N.parse(r.error).error;
            })(t, e.metadata);
          return r ? (0, p.Rn)({ tag: r }) : (0, p.Vp)(void 0);
        }
      };
      Ae = (0, s.__decorate)([(0, u.W)(we.l), (0, s.__metadata)("design:paramtypes", [y._])], Ae);
      var Te = r(82249);
      m.z.object({
        teamUuid: m.z.string().uuid(),
        adminProvisioningKey: m.z.string(),
        idpMetadata: m.z.object({ certificates: m.z.array(m.z.string()), entrypoint: m.z.string() })
      });
      const Ce = m.z.object({ idpUuid: m.z.string().uuid() }),
        Ie =
          (m.z.object({
            teamUuid: m.z.string().uuid(),
            adminProvisioningKey: m.z.string(),
            idpMetadata: m.z.object({ idpUuid: m.z.string(), certificates: m.z.array(m.z.string()), entrypoint: m.z.string() })
          }),
          m.z.object({}));
      m.z.object({ idpUuid: m.z.string().uuid() });
      let Oe = class {
        constructor(e, t, r, s, o, n) {
          (this.enclaveService = e),
            (this.enclaveApiSettings = t),
            (this.platformInfoService = r),
            (this.ssoProvisioningStoreUpdater = s),
            (this.ssoProvisioningStore = o),
            (this.carbon = n);
        }
        async execute({ body: e }) {
          const t = await this.ssoProvisioningStore.getState(),
            { adminProvisioningKey: r, teamUuid: s } = t.global;
          if (!r || !s) return (0, p.Rn)({ tag: "internal_error" });
          const { metadata: o } = e;
          let n = "",
            i = "";
          try {
            const e = await L(this.carbon, o);
            (i = e.samlIdpEntryPoint), (n = e.samlIdpCertificate);
          } catch {
            return (0, p.Rn)({ tag: "invalid_metadata_content" });
          }
          try {
            const e = t.idpMetadata.idpUuid,
              a = { adminProvisioningKey: r, teamUuid: s, idpMetadata: { certificates: [n], entrypoint: i } },
              c = e
                ? await (async (e, t) => (
                    await e.callEnclaveEndpoint({ endpoint: d.IDPS_UPDATE_IDP, body: t, responseSchema: Ie }),
                    { idpUuid: t.idpMetadata.idpUuid }
                  ))(this.enclaveService, { ...a, idpMetadata: { ...a.idpMetadata, idpUuid: e } })
                : await (async (e, t) => await e.callEnclaveEndpoint({ endpoint: d.IDPS_CREATE_IDP, body: t, responseSchema: Ce }))(
                    this.enclaveService,
                    a
                  );
            await this.ssoProvisioningStoreUpdater.set({ ...t, idpMetadata: { ...t.idpMetadata, idpUuid: c.idpUuid, metadataValue: o } });
            try {
              await (async (e, { metadata: t, entrypoint: r }) => {
                const s = { ssoIdpMetadata: t || null, ssoIdpEntrypoint: t ? r : null };
                await e({ name: "updateTeamSettings", args: [s] });
              })(this.carbon.commands.carbon, { metadata: o, entrypoint: i });
            } catch (e) {
              return (0, p.Rn)({ tag: "save_metadata_failed" });
            }
          } catch (e) {
            return (0, p.Rn)({ tag: "domain_update_failed" });
          }
          return (0, p.Vp)(void 0);
        }
      };
      Oe = (0, s.__decorate)([(0, u.W)(Te.o), (0, s.__metadata)("design:paramtypes", [f.d, oe.N6, te.t, B, V, y._])], Oe);
      var Pe = r(85355);
      const Re = m.z.object({
        previousStatus: m.z.string(),
        status: m.z.enum(["valid", "pending", "expired", "invalid"]),
        verificationToken: m.z.string(),
        lastCheckDateUnix: m.z.number(),
        pendingReason: m.z.enum(["tokenNotFound", "invalidToken"]).nullable(),
        tokenFound: m.z.string().optional()
      });
      let De = class {
        constructor(e, t, r, s) {
          (this.enclaveService = e), (this.ssoProvisioningStoreUpdater = t), (this.ssoProvisioningStore = r), (this.featureFlips = s);
        }
        async execute(e) {
          const t = await this.ssoProvisioningStore.getState(),
            {
              global: { adminProvisioningKey: r },
              domainVerificationInfo: s,
              domainSetup: o
            } = t,
            n = e.body.domainName;
          if (!r) return (0, p.Rn)({ tag: "AdminProvisioningKeyNotFound" });
          if (!n) return (0, p.Rn)({ tag: "DomainNameNotProvided" });
          let i;
          try {
            i = await (async (e, t) =>
              await e.callEnclaveEndpoint({ endpoint: d.DOMAINS_CHECK_DNS_VALIDATION, body: t, responseSchema: Re }))(this.enclaveService, {
              domainName: n,
              adminProvisioningKey: r,
              teamUuid: t.global.teamUuid ?? ""
            });
          } catch {
            return (0, p.Rn)({ tag: "CouldNotVerifyDns" });
          }
          const a = s[n];
          (a.txtValue = i.verificationToken),
            (a.verificationStatus = i.status),
            (a.tokenFound = i.tokenFound ?? null),
            (a.pendingReason = i.pendingReason);
          const c = o.map((e) => (e.domainName === n && (e.verificationStatus = i.status), e));
          return (
            await this.ssoProvisioningStoreUpdater.set({ ...t, domainSetup: c, domainVerificationInfo: { ...s, [n]: a } }),
            (0, p.Vp)(void 0)
          );
        }
      };
      De = (0, s.__decorate)([(0, u.W)(Pe.o), (0, s.__metadata)("design:paramtypes", [f.d, B, V, S.P])], De);
      var Ne = r(39118);
      let Ue = class {
        constructor(e, t, r) {
          (this.ssoProvisioningStoreUpdater = e), (this.ssoProvisioningStore = t), (this.carbonLegacy = r);
        }
        async execute() {
          const e = await this.ssoProvisioningStore.getState();
          if (e.enableSSO.ssoEnabled) return (0, p.Rn)({ tag: "SsoAlreadyEnabled" });
          const {
              commands: { carbon: t }
            } = this.carbonLegacy,
            r = await (async (e, { ssoEnabled: t }) => {
              const r = await e({ name: "updateTeamSettings", args: [{ ssoEnabled: t }] });
              return !(0, p.hx)(r);
            })(t, { ssoEnabled: !0 });
          return r
            ? (await this.ssoProvisioningStore.set({
                ...e,
                global: { ...e.global, inferredSsoState: C.enum.NitroComplete },
                enableSSO: { ...e.enableSSO, ssoEnabled: !0 }
              }),
              (0, p.Vp)(void 0))
            : (0, p.Rn)({ tag: "EnableSsoFailed" });
        }
      };
      Ue = (0, s.__decorate)([(0, u.W)(Ne.F), (0, s.__metadata)("design:paramtypes", [B, V, y._])], Ue);
      var Le = r(94189),
        Fe = r(26758),
        Me = r(64532);
      const xe = m.z.object({});
      let ke = class {
        constructor(e, t, r, s, o, n, i) {
          (this.enclaveService = e),
            (this.ssoProvisioningStoreUpdater = t),
            (this.ssoProvisioningStore = r),
            (this.appLogger = s),
            (this.ssoClient = o),
            (this.cqrsClient = n),
            (this.carbon = i);
        }
        async execute() {
          const { global: e, enableSSO: t } = await this.ssoProvisioningStore.getState(),
            r = [];
          t.ssoEnabled && r.push((0, p.Rn)({ tag: "SsoAlreadyEnabled" })),
            e.teamUuid || r.push((0, p.Rn)({ tag: "TeamIdNotFound" })),
            e.adminProvisioningKey || r.push((0, p.Rn)({ tag: "NitroTeamNotProvisioned" }));
          const s = [
              this.deactivateTeamDevice.bind(this),
              this.deleteDomainCurrentlyRegistered.bind(this),
              this.deleteCurrentTeam.bind(this),
              this.clearLegacyTeamSettings.bind(this)
            ],
            o = await this.ssoProvisioningStore.getState(),
            n = await this.setCleaningFunctorApplier(o),
            i = await s.reduce(n, Promise.resolve([]));
          return (
            await this.ssoProvisioningStoreUpdater.reset(),
            [...r, ...i].forEach((e) => {
              this.appLogger.error(`[Clear Settings Error]: ${e.tag}`);
            }),
            (0, p.Vp)(void 0)
          );
        }
        setCleaningFunctorApplier(e) {
          return async (t, r) => {
            const s = await t,
              o = await r(e);
            return (0, p.hx)(o) && (this.appLogger.error((0, p.Yv)(o)), s.push((0, p.Yv)(o))), s;
          };
        }
        async deactivateTeamDevice() {
          try {
            const e = await he(this.carbon);
            e?.platform === le.enum.nitro_encryption_service &&
              (await (async (e, t) => {
                const { deactivateTeamDevice: r } = e.commands,
                  s = await r({ teamDeviceAccessKey: t });
                return !(0, p.hx)(s);
              })(this.carbon, e.accessKey));
          } catch {
            return (0, p.Rn)({ tag: "CouldNotDeleteNitroTeam" });
          }
          return (0, p.Vp)(void 0);
        }
        async deleteDomainCurrentlyRegistered(e) {
          await e.domainSetup.reduce(async (e, t) => {
            const r = await e;
            try {
              const e = await this.ssoClient.commands.deleteDomain({ domainName: t.domainName });
              return [...r, e];
            } catch (e) {
              return [...r, (0, p.Rn)({ tag: "CouldNotDeleteNitroDomain" })];
            }
          }, Promise.resolve([]));
          const t = [].find((e) => (0, p.hx)(e));
          return t || (0, p.Vp)(void 0);
        }
        async deleteCurrentTeam(e) {
          const { global: t } = e;
          if (!t.isTeamProvisionedInNitro) return (0, p.Rn)({ tag: "NitroTeamNotProvisioned" });
          const r = { teamUuid: t.teamUuid, adminProvisioningKey: t.adminProvisioningKey };
          try {
            await (async (e, t) => await e.callEnclaveEndpoint({ endpoint: d.TEAMS_DELETE_TEAM, body: t, responseSchema: xe }))(
              this.enclaveService,
              r
            );
          } catch (e) {
            return (0, p.Rn)({ tag: "CouldNotDeleteNitroTeam" });
          }
          return this.removeAdmingProvisionningKey(e);
        }
        async clearLegacyTeamSettings(e) {
          const { global: t } = e;
          if (!t.isTeamProvisionedInNitro) return (0, p.Rn)({ tag: "NitroTeamNotProvisioned" });
          try {
            await (async (e, t) => {
              const { updateTeamSettings: r } = e.commands;
              await r({ ...t });
            })(this.carbon, { ssoServiceProviderUrl: null, ssoIdpMetadata: null, ssoIdpEntrypoint: null });
          } catch (e) {
            return (0, p.Rn)({ tag: "NitroTeamNotProvisioned" });
          }
          return (0, p.Vp)(void 0);
        }
        async removeAdmingProvisionningKey(e) {
          const { global: t } = e;
          if (!t.adminProvisioningKey) return (0, p.Rn)({ tag: "AdminProvisioningKeyNotFound" });
          try {
            const { removeAdminProvisioningKey: e } = this.carbon.commands;
            await e();
          } catch (e) {
            return (0, p.Rn)({ tag: "CouldNotCouldNotDeleteAdminProvisioningKey" });
          }
          return (0, p.Vp)(void 0);
        }
      };
      ke = (0, s.__decorate)([(0, u.W)(Fe.h), (0, s.__metadata)("design:paramtypes", [f.d, B, V, ie.V, Me.E, Le.w, y._])], ke);
      var Ge = r(20754),
        Ke = r(73774),
        Ve = r(1434);
      let je = class {
        constructor(e, t) {
          (this.httpClient = e), (this.ssoProvisioningStore = t);
        }
        execute() {
          return this.ssoProvisioningStore.state$.pipe((0, Ee.U)((e) => (0, p.Vp)(e)));
        }
      };
      je = (0, s.__decorate)([(0, Ge.e)(Ve._), (0, s.__metadata)("design:paramtypes", [Ke.e, V])], je);
      let Be = class {};
      Be = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: a.y,
            handlers: {
              commands: {
                loginUserWithEnclaveSSO: _,
                provisionDomain: H,
                createTeam: X,
                deleteDomain: ee,
                testLoginUserWithEnclaveSSO: ne,
                initSsoProvisioning: be,
                validateMetadata: Ae,
                updateMetadata: Oe,
                checkDNSValidation: De,
                enableSso: Ue,
                clearSettings: ke
              },
              events: {},
              queries: { ssoProvisioning: je }
            },
            configurations: { enclaveLoginContextInfrastructure: { token: l } },
            imports: [n.X, i.i, c.E],
            stores: [V],
            providers: [B],
            requiredFeatureFlips: ["itadmin_tac_encryptionservice_SSOmigration_reset", "setup_rollout_reset_confidential_button"]
          })
        ],
        Be
      );
    },
    26667: (e, t, r) => {
      r.d(t, { X: () => y });
      var s = r(7165),
        o = r(56773),
        n = r(37298),
        i = r(2235),
        a = r(21763),
        c = r(71558),
        l = r(45599),
        d = r(31460),
        u = r(72733),
        p = r(24715),
        h = r(61222),
        m = r(92204),
        v = r(49259);
      const g = s.z.object({ type: s.z.string(), saml: s.z.string() });
      class y {
        constructor() {
          (this.interceptedTabId = void 0),
            (this.originalTabId = void 0),
            (this.samlReceived = !1),
            (this.expectedMessageType = "SamlAssertionIntercepted");
          try {
            this.onMessageListener = new n.j(i.p, this.checkMessageType.bind(this));
          } catch {}
        }
        checkMessageType(e) {
          return !this.samlReceived && e.type === this.expectedMessageType;
        }
        interceptSamlFromTab(e) {
          return new Promise((t, r) => {
            if (!this.onMessageListener) return r(new Error("OnMessage event listener is not available in current context"));
            const s = c.i.addListener((t, r) => {
                t === e.id &&
                  r.url &&
                  e.id &&
                  (0, a.k)({
                    target: { tabId: e.id, allFrames: !0 },
                    files: ["content/contentScripts/dashlane-saml-intercept-script.js"],
                    injectImmediately: !0
                  });
              }),
              n = l.$.addListener((t) => {
                t === e.id && (c.i.removeListener(s), l.$.removeListener(n), r(new Error("Intercepting SAML - tab closed unexpectedly")));
              });
            this.onMessageListener.events$.pipe((0, o.P)()).subscribe(([e]) => {
              const o = g.safeParse(e);
              o.success
                ? ((this.samlReceived = !0), c.i.removeListener(s), l.$.removeListener(n), t({ samlToken: o.data.saml }))
                : r(new Error("Intercepting SAML - received message could not be parsed"));
            });
          });
        }
        async redirectTabToUrl(e) {
          if (this.interceptedTabId) return await (0, d.V)(this.interceptedTabId, { url: e });
          {
            const t = (await (0, u.T)({ windowTypes: ["normal"] })).id;
            return await (0, p.U)({ windowId: t, url: e });
          }
        }
        async getActiveExtensionTabId() {
          const e = await (0, h.I)({ currentWindow: !0, active: !0 }),
            t = e.length > 0 ? e[0] : null,
            r = (0, m.A)("");
          if (t?.id && t.url?.includes(r)) return t.id;
        }
        getSamlFromLogin(e, t) {
          (this.samlReceived = !1),
            (this.originalTabId = void 0),
            this.interceptedTabId && ((0, v.O)([this.interceptedTabId]), (this.interceptedTabId = void 0));
          const r = () => (0, p.U)({ url: e }).then((e) => ((this.interceptedTabId = e.id), this.interceptSamlFromTab(e))),
            s = (t) =>
              (0, d.V)(t, { url: e }).then((e) => {
                if (e) return (this.interceptedTabId = e.id), this.interceptSamlFromTab(e);
                throw new Error("Tab disappeared during nitro login");
              });
          return t
            ? this.getActiveExtensionTabId().then((e) => (e ? s(e) : r()))
            : this.getActiveExtensionTabId().then((e) => ((this.originalTabId = e), r()));
        }
        async redirectUserIntoLoginFlow(e) {
          const t = {
              ssoToken: e.ssoToken,
              exists: e.exists,
              currentAuths: e.currentAuthenticationMethods,
              expectedAuths: e.expectedAuthenticationMethods,
              key: e.userServiceProviderKey,
              login: e.login
            },
            r = Object.entries(t)
              .map((e) => `${e[0]}=${encodeURIComponent(e[1].toString())}`)
              .join("&"),
            s = (0, m.A)(`index.html#/sso?${r}`);
          await this.redirectTabToUrl(s);
        }
        async redirectUserToLoginPage() {
          const e = (0, m.A)("index.html#/login");
          await this.redirectTabToUrl(e);
        }
        async cleanupTestLogin() {
          this.interceptedTabId && (await (0, v.O)([this.interceptedTabId])),
            this.originalTabId && (0, d.V)(this.originalTabId, { active: !0 });
        }
      }
    },
    33470: (e, t, r) => {
      r.d(t, { r: () => i });
      var s = r(86952),
        o = r(20417),
        n = r(9599);
      const i = (0, s.Q)({ name: "sync", commands: { SyncCommand: o.t }, queries: { SyncProgressQuery: n.F }, events: {} });
    },
    20417: (e, t, r) => {
      r.d(t, { t: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    9599: (e, t, r) => {
      r.d(t, { F: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.Device }) {}
    },
    76183: (e, t, r) => {
      var s;
      r.d(t, { L: () => s, _: () => o }),
        (function (e) {
          (e.READY = "ready"), (e.IN_PROGRESS = "in_progress"), (e.SUCCESS = "success"), (e.FAILURE = "failure");
        })(s || (s = {}));
      class o {}
    },
    80310: (e, t, r) => {
      r.d(t, { R: () => C });
      var s = r(88802),
        o = r(99634),
        n = r(25029),
        i = r(33470),
        a = r(76183),
        c = r(87279),
        l = r(63663),
        d = r(20417);
      let u = class {
        constructor(e) {
          this.syncService = e;
        }
        execute(e) {
          const { trigger: t } = e.body;
          return this.syncService.attemptSync(t), Promise.resolve((0, c.Vp)(void 0));
        }
      };
      u = (0, s.__decorate)([(0, l.W)(d.t), (0, s.__metadata)("design:paramtypes", [a._])], u);
      var p = r(20754),
        h = r(9599);
      let m = class {
        constructor(e) {
          this.syncService = e;
        }
        execute() {
          return this.syncService.getSyncState();
        }
      };
      m = (0, s.__decorate)([(0, p.e)(h.F), (0, s.__metadata)("design:paramtypes", [a._])], m);
      var v = r(30523),
        g = r(60399),
        y = r(57924),
        f = r(86252),
        _ = r(48844);
      const S = (e) => "object" == typeof e && null !== e && "status" in e && Object.values(a.L).includes(e.status);
      var E = r(96168);
      class b extends (0, E.Hu)("SyncError", "An error occoured while trying to sync the vault") {}
      let w = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async attemptSync(e) {
          await this.carbonLegacy.commands.carbonLegacyLeeloo({ name: "sessionForceSync", arg: [{ trigger: e }] });
        }
        async waitForSync(e) {
          const t = this.getSyncState().pipe(
            (0, v.h)((e) => !(!(0, c.d6)(e) || !S(e.data)) && [a.L.FAILURE, a.L.SUCCESS].includes(e.data.status)),
            (0, _.DZ)(() => new b()),
            (0, _.lk)((e) => (e.status === a.L.FAILURE ? (0, c.Rn)({ tag: "Sync failed" }) : (0, c.Vp)(void 0)))
          );
          return await this.attemptSync(e), (0, g.z)(t);
        }
        getSyncState() {
          return this.carbonLegacy.queries.carbonState({ path: "userSession.sync" }).pipe(
            (0, _.Qn)((e) => {
              if (!S(e)) throw new Error("Bad sync state format");
              return { status: e.status };
            })
          );
        }
      };
      w = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [f._])], w);
      var A = r(93039);
      let T = class {
        constructor(e) {
          this.syncService = e;
        }
        async run() {
          return await this.syncService.attemptSync(A.Trigger.Periodic), Promise.resolve();
        }
      };
      T = (0, s.__decorate)([(0, y.GS)(), (0, s.__metadata)("design:paramtypes", [a._])], T);
      let C = class {};
      C = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.r,
            handlers: { commands: { sync: u }, events: {}, queries: { syncProgress: m } },
            crons: [{ handler: T, periodInMinutes: 5, name: "periodic-sync-cron", scope: n.F.User }],
            providers: [{ provide: a._, useClass: w }],
            exports: [a._]
          })
        ],
        C
      );
    },
    17305: (e, t, r) => {
      r.d(t, { t: () => p });
      var s = r(86952),
        o = r(3171),
        n = r(14745),
        i = r(35997),
        a = r(5633),
        c = r(5407),
        l = r(71616),
        d = r(48317),
        u = r(90109);
      const p = (0, s.Q)({
        name: "teamAdminNotifications",
        commands: {
          markB2BPlanDiscontinuedSeen: o.q,
          markNewRestrictSharingPolicySeen: n.o,
          markNotificationTrialExtendedSeen: i.D,
          markOfferToExtendFreeTrialSeen: a.R
        },
        events: {},
        queries: {
          hasSeenB2BPlanDiscontinued: c.z,
          hasSeenNewRestrictSharingPolicy: l.x,
          hasSeenNotificationTrialExtended: d.q,
          hasSeenOfferToExtendFreeTrial: u.U
        }
      });
    },
    3171: (e, t, r) => {
      r.d(t, { q: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    14745: (e, t, r) => {
      r.d(t, { o: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    35997: (e, t, r) => {
      r.d(t, { D: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    5633: (e, t, r) => {
      r.d(t, { R: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    5407: (e, t, r) => {
      r.d(t, { z: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    71616: (e, t, r) => {
      r.d(t, { x: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    48317: (e, t, r) => {
      r.d(t, { q: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    90109: (e, t, r) => {
      r.d(t, { U: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    49003: (e, t, r) => {
      r.d(t, { h: () => p });
      var s = r(86952),
        o = r(55958),
        n = r(56524),
        i = r(48975),
        a = r(88313),
        c = r(78651),
        l = r(28789),
        d = r(76560),
        u = r(6725);
      const p = (0, s.Q)({
        name: "teamGetStarted",
        commands: { markVaultAsVisited: l.R, markGetStartedAsSeen: d.g, markNotificationAsSeen: u.f },
        events: {},
        queries: { hasVisitedVault: o.V, hasSeenGetStarted: n.U, hasSeenNotification: i.C, isTeamCreator: a.G7, teamTasksCompletion: c.M }
      });
    },
    76560: (e, t, r) => {
      r.d(t, { g: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    6725: (e, t, r) => {
      r.d(t, { f: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    28789: (e, t, r) => {
      r.d(t, { R: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    56524: (e, t, r) => {
      r.d(t, { U: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    48975: (e, t, r) => {
      r.d(t, { C: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    55958: (e, t, r) => {
      r.d(t, { V: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    88313: (e, t, r) => {
      r.d(t, { G7: () => c, qi: () => a });
      var s = r(99059),
        o = r(25029),
        n = r(96168);
      class i extends (0, n.Hu)("UserNotLogged", "Please log the user") {}
      class a extends (0, n.Hu)("UserNotAdmin", "User is not an admin") {}
      class c extends (0, s.k)({ scope: o.F.User, noUserError: new i() }) {}
    },
    78651: (e, t, r) => {
      r.d(t, { M: () => o });
      var s = r(99059);
      class o extends (0, s.k)() {}
    },
    13823: (e, t, r) => {
      r.d(t, { L: () => n });
      var s = r(86952),
        o = r(2564);
      const n = (0, s.Q)({ name: "teamMembers", commands: { ProposeMembersCommand: o.og }, events: {}, queries: {} });
    },
    2564: (e, t, r) => {
      r.d(t, { Wv: () => m, og: () => v });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.InvalidOrigin = "InvalidOrigin"),
          (e.NoFreeSlot = "NoFreeSlot"),
          (e.NoFreeSlotFreePlan = "NoFreeSlotFreePlan"),
          (e.UserTeamInviteTokenNotFound = "UserTeamInviteTokenNotFound"),
          (e.PaymentFailed = "PaymentFailed"),
          (e.NotBillingAdmin = "NotBillingAdmin"),
          (e.CannotAddSeatDuringGracePeriod = "CannotAddSeatDuringGracePeriod");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.InvalidOrigin, "Invalid origin") {}
      class c extends (0, i.Hu)(s.NoFreeSlot, "No free slot") {}
      class l extends (0, i.Hu)(s.NoFreeSlotFreePlan, "No free slot in free plan") {}
      class d extends (0, i.Hu)(s.UserTeamInviteTokenNotFound, "No invite token to a team available for user") {}
      class u extends (0, i.Hu)(s.PaymentFailed, "Payment failed") {}
      class p extends (0, i.Hu)(s.NotBillingAdmin, "User is not the billing admin") {}
      class h extends (0, i.Hu)(s.CannotAddSeatDuringGracePeriod, "Seats cannot be added during grace period") {}
      function m(e) {
        switch (e) {
          case "invalid_origin":
            return new a();
          case "no_free_slot":
            return new c();
          case "no_free_slot_free_plan":
            return new l();
          case "USER_TEAM_INVITE_TOKEN_NOT_FOUND":
            return new d();
          case "payment_failed":
            return new u();
          case "not_billing_admin":
            return new p();
          case "cannot_add_seat_during_grace_period":
            return new h();
          default:
            throw new Error("Unknown server error");
        }
      }
      class v extends (0, o.g)({ scope: n.F.User }) {}
    },
    49024: (e, t, r) => {
      r.d(t, { R: () => i });
      var s = r(86952),
        o = r(40209),
        n = r(90013);
      const i = (0, s.Q)({
        name: "teamMidcycleTier",
        commands: { ChangeTierMidcycleCommand: o.G, MidcycleTierUpgradePriceCommand: n.R },
        events: {},
        queries: {}
      });
    },
    40209: (e, t, r) => {
      r.d(t, { G: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    90013: (e, t, r) => {
      r.d(t, { R: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    20180: (e, t, r) => {
      r.d(t, { F: () => n });
      var s = r(86952),
        o = r(98861);
      const n = (0, s.Q)({ name: "teamOffers", commands: {}, events: {}, queries: { getTeamOffers: o.g } });
    },
    98861: (e, t, r) => {
      r.d(t, { g: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    46888: (e, t, r) => {
      r.d(t, { B: () => n });
      var s = r(86952),
        o = r(42014);
      const n = (0, s.Q)({ name: "teamPasswordHealth", commands: {}, events: {}, queries: { getReport: o.z } });
    },
    42014: (e, t, r) => {
      r.d(t, { z: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    13511: (e, t, r) => {
      r.d(t, { o: () => f });
      var s = r(86952),
        o = r(25904),
        n = r(82276),
        i = r(26657),
        a = r(26992),
        c = r(9128),
        l = r(30525),
        d = r(89859),
        u = r(19068),
        p = r(80926),
        h = r(64380),
        m = r(65245),
        v = r(704),
        g = r(27056),
        y = r(207);
      const f = (0, s.Q)({
        name: "teamPlanDetails",
        commands: { extendFreeTrial: o.N, requestTeamPlanCancellation: n.y, editTeamPolicies: i.m },
        events: {},
        queries: {
          getTeamBillingInformation: a._,
          getTeamCancellationStatus: c.F,
          getTeamCapabilities: l.Y,
          getTeamCreationDateUnixQuery: d.T,
          getTeamId: u.e,
          getTeamName: p.j,
          getTeamRoles: h.R,
          getTeamPolicies: m.K,
          getTeamSeats: v.W,
          getTeamSecurityScore: g.R,
          getTeamTrialStatus: y.P
        }
      });
    },
    42645: (e, t, r) => {
      r.d(t, { e: () => n });
      var s = r(67837),
        o = r(13511);
      class n extends (0, s.E)(o.o) {}
      (0, s.K)(o.o, n);
    },
    26657: (e, t, r) => {
      r.d(t, { m: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    25904: (e, t, r) => {
      r.d(t, { N: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    82276: (e, t, r) => {
      r.d(t, { y: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    26992: (e, t, r) => {
      r.d(t, { _: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    9128: (e, t, r) => {
      r.d(t, { F: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    30525: (e, t, r) => {
      r.d(t, { Y: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    89859: (e, t, r) => {
      r.d(t, { T: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    19068: (e, t, r) => {
      r.d(t, { e: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    80926: (e, t, r) => {
      r.d(t, { j: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    65245: (e, t, r) => {
      r.d(t, { K: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    64380: (e, t, r) => {
      r.d(t, { R: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    704: (e, t, r) => {
      r.d(t, { W: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    27056: (e, t, r) => {
      r.d(t, { R: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    207: (e, t, r) => {
      r.d(t, { P: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    1701: (e, t, r) => {
      r.d(t, { a: () => a });
      var s = r(86952),
        o = r(57220),
        n = r(36767),
        i = r(56333);
      const a = (0, s.Q)({
        name: "teamVat",
        commands: { DeleteTeamVatCommand: o.Hy, GetTeamVatCommand: n.cf, UpsertTeamVatCommand: i.XW },
        events: {},
        queries: {}
      });
    },
    57220: (e, t, r) => {
      r.d(t, { Hy: () => d, zK: () => l });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.TeamNotFound = "TeamNotFound"), (e.NotBillingAdmin = "NotBillingAdmin");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.TeamNotFound, "The given user is not part of a single team") {}
      class c extends (0, i.Hu)(s.NotBillingAdmin, "The user is not Billing Admin") {}
      function l(e) {
        switch (e) {
          case "TEAM_NOT_FOUND":
            return new a();
          case "not_billing_admin":
            return new c();
          default:
            throw new Error("Unknown server error");
        }
      }
      class d extends (0, o.g)({ scope: n.F.User }) {}
    },
    36767: (e, t, r) => {
      r.d(t, { K$: () => d, cf: () => u });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.TeamNotFound = "TeamNotFound"), (e.VatNumberNotFound = "VatNumberNotFound"), (e.NotBillingAdmin = "NotBillingAdmin");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.TeamNotFound, "The given user is not part of a single team") {}
      class c extends (0, i.Hu)(s.VatNumberNotFound, "The given Team does not have a VAT number") {}
      class l extends (0, i.Hu)(s.NotBillingAdmin, "The user is not Billing Admin") {}
      function d(e) {
        switch (e) {
          case "TEAM_NOT_FOUND":
            return new a();
          case "VAT_NUMBER_NOT_FOUND":
            return new c();
          case "not_billing_admin":
            return new l();
          default:
            throw new Error("Unknown server error");
        }
      }
      class u extends (0, o.g)({ scope: n.F.User }) {}
    },
    56333: (e, t, r) => {
      r.d(t, { XW: () => u, q5: () => d });
      var s,
        o = r(74354),
        n = r(25029),
        i = r(96168);
      !(function (e) {
        (e.TeamNotFound = "TeamNotFound"), (e.NotBillingAdmin = "NotBillingAdmin"), (e.VatNumberNotUpserted = "VatNumberNotUpserted");
      })(s || (s = {}));
      class a extends (0, i.Hu)(s.TeamNotFound, "The given user is not part of a single team") {}
      class c extends (0, i.Hu)(s.NotBillingAdmin, "The user is not Billing Admin") {}
      class l extends (0, i.Hu)(s.VatNumberNotUpserted, "The VAT number couldn't be upserted") {}
      function d(e) {
        switch (e) {
          case "TEAM_NOT_FOUND":
            return new a();
          case "not_billing_admin":
            return new c();
          case "VAT_NUMBER_NOT_UPSERTED":
            return new l();
          default:
            throw new Error("Unknown server error");
        }
      }
      class u extends (0, o.g)({ scope: n.F.User }) {}
    },
    72488: (e, t, r) => {
      r.d(t, { E: () => M });
      var s,
        o = r(88802),
        n = r(99634),
        i = r(93850),
        a = r(17305),
        c = r(63663),
        l = r(87279),
        d = r(3171),
        u = r(25029),
        p = r(95681),
        h = r(23347),
        m = r(10722),
        v = r(7165);
      !(function (e) {
        (e.OfferToExtendFreeTrial = "offerToExtendFreeTrial"),
          (e.NotificationTrialExtended = "notificationTrialExtended"),
          (e.RestrictSharingPolicy = "restrictSharingPolicy"),
          (e.B2BPlanDiscontinued = "b2bPlanDiscontinued");
      })(s || (s = {}));
      const g = v.z.object({ seenNotifications: v.z.record(v.z.nativeEnum(s), v.z.boolean()) }),
        y = (e) => g.safeParse(e).success;
      class f extends (0, p.Q)({
        storage: {
          schemaVersion: 1,
          initialValue: {
            seenNotifications: {
              offerToExtendFreeTrial: !1,
              notificationTrialExtended: !1,
              restrictSharingPolicy: !1,
              b2bPlanDiscontinued: !1
            }
          },
          typeGuard: y
        },
        persist: !0,
        scope: u.F.User,
        storeName: "team-admin-notifications-store",
        capacity: h.Y._010KB,
        codec: m.E
      }) {}
      let _ = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState(),
            t = { ...e.seenNotifications, b2bPlanDiscontinued: !0 };
          return await this.store.set({ ...e, seenNotifications: t }), Promise.resolve((0, l.Vp)(void 0));
        }
      };
      _ = (0, o.__decorate)([(0, c.W)(d.q), (0, o.__metadata)("design:paramtypes", [f])], _);
      var S = r(14745);
      let E = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState(),
            t = { ...e.seenNotifications, restrictSharingPolicy: !0 };
          return await this.store.set({ ...e, seenNotifications: t }), Promise.resolve((0, l.Vp)(void 0));
        }
      };
      E = (0, o.__decorate)([(0, c.W)(S.o), (0, o.__metadata)("design:paramtypes", [f])], E);
      var b = r(35997);
      let w = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState(),
            t = { ...e.seenNotifications, notificationTrialExtended: !0 };
          return await this.store.set({ ...e, seenNotifications: t }), Promise.resolve((0, l.Vp)(void 0));
        }
      };
      w = (0, o.__decorate)([(0, c.W)(b.D), (0, o.__metadata)("design:paramtypes", [f])], w);
      var A = r(5633);
      let T = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState(),
            t = { ...e.seenNotifications, offerToExtendFreeTrial: !0 };
          return await this.store.set({ ...e, seenNotifications: t }), Promise.resolve((0, l.Vp)(void 0));
        }
      };
      T = (0, o.__decorate)([(0, c.W)(A.R), (0, o.__metadata)("design:paramtypes", [f])], T);
      var C = r(87065),
        I = r(20754),
        O = r(5407);
      let P = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, C.U)((e) => (0, l.Vp)(!!e.seenNotifications.b2bPlanDiscontinued)));
        }
      };
      P = (0, o.__decorate)([(0, I.e)(O.z), (0, o.__metadata)("design:paramtypes", [f])], P);
      var R = r(71616);
      let D = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, C.U)((e) => (0, l.Vp)(!!e.seenNotifications.restrictSharingPolicy)));
        }
      };
      D = (0, o.__decorate)([(0, I.e)(R.x), (0, o.__metadata)("design:paramtypes", [f])], D);
      var N = r(48317);
      let U = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, C.U)((e) => (0, l.Vp)(!!e.seenNotifications.notificationTrialExtended)));
        }
      };
      U = (0, o.__decorate)([(0, I.e)(N.q), (0, o.__metadata)("design:paramtypes", [f])], U);
      var L = r(90109);
      let F = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, C.U)((e) => (0, l.Vp)(!!e.seenNotifications.offerToExtendFreeTrial)));
        }
      };
      F = (0, o.__decorate)([(0, I.e)(L.U), (0, o.__metadata)("design:paramtypes", [f])], F);
      let M = class {};
      M = (0, o.__decorate)(
        [
          (0, n.Y)({
            api: a.t,
            imports: [i.n],
            stores: [f],
            handlers: {
              commands: {
                markB2BPlanDiscontinuedSeen: _,
                markNewRestrictSharingPolicySeen: E,
                markNotificationTrialExtendedSeen: w,
                markOfferToExtendFreeTrialSeen: T
              },
              events: {},
              queries: {
                hasSeenB2BPlanDiscontinued: P,
                hasSeenNewRestrictSharingPolicy: D,
                hasSeenNotificationTrialExtended: U,
                hasSeenOfferToExtendFreeTrial: F
              }
            }
          })
        ],
        M
      );
    },
    56922: (e, t, r) => {
      r.d(t, { q: () => H });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(49003),
        a = r(25029),
        c = r(95681),
        l = r(23347),
        d = r(10722),
        u = r(7165);
      const p = u.z.object({
          hasVisitedVault: u.z.boolean(),
          hasSeenGetStarted: u.z.boolean(),
          notifications: u.z.record(u.z.string(), u.z.boolean())
        }),
        h = (e) => p.safeParse(e).success;
      class m extends (0, c.Q)({
        storage: { schemaVersion: 1, initialValue: { hasVisitedVault: !1, hasSeenGetStarted: !1, notifications: {} }, typeGuard: h },
        persist: !0,
        scope: a.F.User,
        storeName: "team-admin-store",
        capacity: l.Y._010KB,
        codec: d.E
      }) {}
      var v = r(87065),
        g = r(20754),
        y = r(56524),
        f = r(87279);
      let _ = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, v.U)((e) => (0, f.Vp)(e.hasSeenGetStarted)));
        }
      };
      _ = (0, s.__decorate)([(0, g.e)(y.U), (0, s.__metadata)("design:paramtypes", [m])], _);
      var S = r(48975);
      let E = class {
        constructor(e) {
          this.store = e;
        }
        execute({ body: e }) {
          return this.store.state$.pipe((0, v.U)((t) => (0, f.Vp)(!!t.notifications[e.notification])));
        }
      };
      E = (0, s.__decorate)([(0, g.e)(S.C), (0, s.__metadata)("design:paramtypes", [m])], E);
      var b = r(55958);
      let w = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, v.U)((e) => (0, f.Vp)(e.hasVisitedVault)));
        }
      };
      w = (0, s.__decorate)([(0, g.e)(b.V), (0, s.__metadata)("design:paramtypes", [m])], w);
      var A = r(43978),
        T = r(69885),
        C = r(61076),
        I = r(86252),
        O = r(88313),
        P = r(42645),
        R = r(48844),
        D = r(57924),
        N = r(87113);
      let U = class {
        constructor(e) {
          (this.serverApiClient = e),
            (this.get = (e) =>
              this.serverApiClient.v1.teams.getTeamMembers({ teamId: parseInt(e, 10), orderBy: "joinedDateUnix", limit: 0 }).pipe(
                (0, R.Qn)(({ data: e }) => e),
                (0, R.DZ)((e) => {
                  throw e;
                })
              ));
        }
      };
      U = (0, s.__decorate)([(0, D.GS)(), (0, s.__metadata)("design:paramtypes", [N.l])], U);
      let L = class {
        constructor(e, t, r) {
          (this.carbon = e),
            (this.getTeamMembersData = t),
            (this.teamPlanDetailsClient = r),
            (this.getUserLogin = () => {
              const { carbonState: e } = this.carbon.queries;
              return e({ path: "state.userSession.account.login" }).pipe(
                (0, v.U)((e) => {
                  if ((0, f.d6)(e) && "string" == typeof e.data) return e.data;
                  throw new Error("No active login");
                })
              );
            }),
            (this.getTeamId = () => {
              const { getTeamId: e } = this.teamPlanDetailsClient.queries;
              return e().pipe(
                (0, A.w)((e) => ((0, f.hx)(e) || !e.data.teamId || "" === e.data.teamId ? (0, T.of)("") : (0, T.of)(e.data.teamId)))
              );
            });
        }
        execute() {
          const e = this.getUserLogin();
          return this.getTeamId().pipe(
            (0, A.w)((t) =>
              "" === t
                ? (0, T.of)((0, f.Rn)(new O.qi()))
                : this.getTeamMembersData.get(t).pipe(
                    (0, C.V)(e),
                    (0, v.U)(([e, t]) => {
                      if ((0, f.hx)(e)) throw new Error("Error : could not retrieve team's members");
                      const { data: r } = e,
                        s = r.members
                          .filter((e) => e.isTeamCaptain && "accepted" === e.status)
                          .sort((e, t) => (e.joinedDateUnix ?? 0) - (t.joinedDateUnix ?? 0));
                      return (0, f.Vp)(s[0]?.login === t);
                    })
                  )
            )
          );
        }
      };
      L = (0, s.__decorate)([(0, g.e)(O.G7), (0, s.__metadata)("design:paramtypes", [I._, U, P.e])], L);
      var F = r(78651);
      let M = class {
        constructor(e) {
          (this.serverApiClient = e),
            (this.get = () =>
              this.serverApiClient.v1.teams.teamStatus({}).pipe(
                (0, R.Qn)(({ data: e }) => e),
                (0, R.DZ)((e) => {
                  throw e;
                })
              ));
        }
      };
      M = (0, s.__decorate)([(0, D.GS)(), (0, s.__metadata)("design:paramtypes", [N.l])], M);
      let x = class {
        constructor(e, t, r) {
          (this.getTeamStatusData = e), (this.getTeamMembersData = t), (this.teamPlanDetailsClient = r);
        }
        execute() {
          return this.teamPlanDetailsClient.queries.getTeamId().pipe(
            (0, A.w)((e) => {
              if ((0, f.hx)(e) || !e.data.teamId || "" === e.data.teamId) throw new Error("Error : could not retrieve teamId");
              return this.getTeamStatusData.get().pipe(
                (0, C.V)(this.getTeamMembersData.get(e.data.teamId)),
                (0, v.U)(([e, t]) => {
                  if ((0, f.hx)(e) || (0, f.hx)(t)) throw new Error("Error : could not retrieve team status or team's members");
                  const { data: r } = e,
                    { data: s } = t,
                    o = r.seats.paid + r.seats.extraFree - r.seats.remaining,
                    n = s.members.filter((e) => "accepted" === e.status);
                  return (0, f.Vp)({
                    hasMinimumMemberCount: o >= 2,
                    hasMoreThanOneAdmin: Object.keys(r.info.teamCaptains).length > 1,
                    hasSecurityScore: !!r.securityScore,
                    hasOnlyOneMember: 1 === n.length,
                    isSharingDisabled: r.info.sharingDisabled ?? !1
                  });
                })
              );
            })
          );
        }
      };
      x = (0, s.__decorate)([(0, g.e)(F.M), (0, s.__metadata)("design:paramtypes", [M, U, P.e])], x);
      var k = r(63663),
        G = r(28789);
      let K = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState();
          return await this.store.set({ ...e, hasVisitedVault: !0 }), Promise.resolve((0, f.Vp)(void 0));
        }
      };
      K = (0, s.__decorate)([(0, k.W)(G.R), (0, s.__metadata)("design:paramtypes", [m])], K);
      var V = r(76560);
      let j = class {
        constructor(e) {
          this.store = e;
        }
        async execute() {
          const e = await this.store.getState();
          return await this.store.set({ ...e, hasSeenGetStarted: !0 }), Promise.resolve((0, f.Vp)(void 0));
        }
      };
      j = (0, s.__decorate)([(0, k.W)(V.g), (0, s.__metadata)("design:paramtypes", [m])], j);
      var B = r(6725);
      let W = class {
        constructor(e) {
          this.store = e;
        }
        async execute({ body: e }) {
          const t = await this.store.getState(),
            r = { ...t.notifications, [e.notification]: !0 };
          return await this.store.set({ ...t, notifications: r }), Promise.resolve((0, f.Vp)(void 0));
        }
      };
      W = (0, s.__decorate)([(0, k.W)(B.f), (0, s.__metadata)("design:paramtypes", [m])], W);
      let H = class {};
      H = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.h,
            stores: [m],
            imports: [n.n],
            providers: [M, U],
            handlers: {
              commands: { markVaultAsVisited: K, markGetStartedAsSeen: j, markNotificationAsSeen: W },
              events: {},
              queries: { hasSeenGetStarted: _, hasSeenNotification: E, hasVisitedVault: w, isTeamCreator: L, teamTasksCompletion: x }
            },
            requiredFeatureFlips: ["onboarding_web_tacgetstarted"]
          })
        ],
        H
      );
    },
    92447: (e, t, r) => {
      r.d(t, { X: () => g });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(13823),
        a = r(63663),
        c = r(2564),
        l = r(60399),
        d = r(57924),
        u = r(87113),
        p = r(48844),
        h = r(87279);
      let m = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        async callProposeMembers({ proposedMemberLogins: e, force: t, origin: r, notificationOptions: s }) {
          try {
            return await (0, l.z)(
              this.serverApiClient.v1.teams.proposeMembers({ proposedMemberLogins: e, force: t, origin: r, notificationOptions: s }).pipe(
                (0, p.DZ)((e) => {
                  if ("BusinessError" === e.tag) return (0, c.Wv)(e.code);
                  throw new Error(e.message);
                }),
                (0, p.lk)((e) => (0, h.Vp)(e.data))
              )
            );
          } catch (e) {
            return (0, h.Rn)({ tag: "failure", error: `Propose Members failed - ${e}` });
          }
        }
      };
      m = (0, s.__decorate)([(0, d.GS)(), (0, s.__metadata)("design:paramtypes", [u.l])], m);
      let v = class {
        constructor(e) {
          this.proposeMembersService = e;
        }
        execute({ body: { proposedMemberLogins: e, force: t, origin: r, notificationOptions: s } }) {
          return this.proposeMembersService.callProposeMembers({ proposedMemberLogins: e, force: t, origin: r, notificationOptions: s });
        }
      };
      v = (0, s.__decorate)([(0, a.W)(c.og), (0, s.__metadata)("design:paramtypes", [m])], v);
      let g = class {};
      g = (0, s.__decorate)(
        [(0, o.Y)({ api: i.L, imports: [n.n], providers: [m], handlers: { commands: { proposeMembers: v }, events: {}, queries: {} } })],
        g
      );
    },
    16834: (e, t, r) => {
      r.d(t, { V: () => E });
      var s,
        o = r(88802),
        n = r(99634),
        i = r(49024),
        a = r(93850),
        c = r(63663),
        l = r(40209),
        d = r(60399),
        u = r(57924),
        p = r(87113);
      !(function (e) {
        (e.PaymentMeanIsNotCreditCard = "PaymentMeanIsNotCreditCard"),
          (e.CurrentPlanStartDateInFuture = "CurrentPlanStartDateInFuture"),
          (e.ChangeTierMidCycleError = "ChangeTierMidCycleError"),
          (e.PaymentMeanIsNotInvoice = "PaymentMeanIsNotInvoice"),
          (e.ChangeTierAmountTooExpensive = "ChangeTierAmountTooExpensive"),
          (e.ErrorCalculatingTierChange = "ErrorCalculatingTierChange"),
          (e.InsufficientAmount = "InsufficientAmount"),
          (e.AssignedPlanSameTierAsCurrentPlan = "AssignedPlanSameTierAsCurrentPlan"),
          (e.SalesTaxMismatch = "SalesTaxMismatch"),
          (e.NotBillingAdmin = "NotBillingAdmin"),
          (e.ChangeTierMidCycleInternalServer = "ChangeTierMidCycleInternalServer");
      })(s || (s = {}));
      var h = r(48844),
        m = r(18533),
        v = r(20195),
        g = r(87279);
      let y = class {
        constructor(e) {
          (this.serverApiClient = e),
            (this.getFunctionalError = (e) => {
              switch (e) {
                case "PAYMENT_MEAN_IS_NOT_CREDITCARD":
                  return { tag: s.PaymentMeanIsNotCreditCard };
                case "CURRENT_PLAN_START_DATE_IN_FUTURE":
                  return { tag: s.CurrentPlanStartDateInFuture };
                case "CHANGE_TIER_MID_CYCLE_ERROR":
                  return { tag: s.ChangeTierMidCycleError };
                case "PAYMENT_MEAN_IS_NOT_INVOICE":
                  return { tag: s.PaymentMeanIsNotInvoice };
                case "CHANGE_TIER_AMOUNT_TOO_EXPENSIVE":
                  return { tag: s.ChangeTierAmountTooExpensive };
                case "ERROR_CALCULATING_TIER_CHANGE_DISCOUNT":
                  return { tag: s.ErrorCalculatingTierChange };
                case "INSUFFICIENT_AMOUNT":
                  return { tag: s.InsufficientAmount };
                case "ASSIGNED_PLAN_SAME_TIER_AS_CURRENT_PLAN":
                  return { tag: s.AssignedPlanSameTierAsCurrentPlan };
                case "sales_tax_mismatch":
                  return { tag: s.SalesTaxMismatch };
                case "not_billing_admin":
                  return { tag: s.NotBillingAdmin };
                default:
                  throw new Error(`ChangeTierMidCycle: error ${e}`);
              }
            });
        }
        changeTierMidcycle({ amountToPay: e, taxes: t, planId: r, couponCode: o, seatsToAdd: n, billingContactEmail: i }) {
          return (0, d.z)(
            this.serverApiClient.v1.teams
              .changeTierMidCycle({ amountToPay: e, taxes: t, planId: r, couponCode: o, seatsToAdd: n, billingContactEmail: i })
              .pipe(
                (0, h.DZ)((e) =>
                  (0, m.EQ)(e, {
                    BusinessError: (e) => this.getFunctionalError(e.code),
                    FetchFailedError: v.j,
                    BadStatus: v.j,
                    InternalServerError: () => ({ tag: s.ChangeTierMidCycleInternalServer }),
                    InvalidRequest: v.j,
                    RateLimited: v.j,
                    ServiceUnavailable: v.j,
                    UnspecifiedBadStatus: v.j
                  })
                ),
                (0, h.Qn)((e) => e.data)
              )
          );
        }
        getMidcycleTierUpgradePrice({ numberOfSeats: e, newPlan: t }) {
          return (0, d.z)(
            this.serverApiClient.v1.teams.getMidCycleTierUpgradePrice({ numberOfSeats: e, newPlan: t }).pipe(
              (0, h.DZ)((e) => (0, g.Rn)({ tag: `MidcycleTierUpgradePriceFailed: ${e.message}` })),
              (0, h.Qn)((e) => e.data)
            )
          );
        }
      };
      y = (0, o.__decorate)([(0, u.GS)(), (0, o.__metadata)("design:paramtypes", [p.l])], y);
      let f = class {
        constructor(e) {
          this.midcycleTierService = e;
        }
        execute({ body: { amountToPay: e, taxes: t, planId: r, couponCode: s, seatsToAdd: o, billingContactEmail: n } }) {
          return this.midcycleTierService.changeTierMidcycle({
            amountToPay: e,
            taxes: t,
            planId: r,
            couponCode: s,
            seatsToAdd: o,
            billingContactEmail: n
          });
        }
      };
      f = (0, o.__decorate)([(0, c.W)(l.G), (0, o.__metadata)("design:paramtypes", [y])], f);
      var _ = r(90013);
      let S = class {
        constructor(e) {
          this.midcycleTierService = e;
        }
        execute({ body: { numberOfSeats: e, newPlan: t } }) {
          return this.midcycleTierService.getMidcycleTierUpgradePrice({ numberOfSeats: e, newPlan: t });
        }
      };
      S = (0, o.__decorate)([(0, c.W)(_.R), (0, o.__metadata)("design:paramtypes", [y])], S);
      let E = class {};
      E = (0, o.__decorate)(
        [
          (0, n.Y)({
            api: i.R,
            imports: [a.n],
            providers: [y],
            handlers: { commands: { changeTierMidcycle: f, midcycleTierUpgradePrice: S }, events: {}, queries: {} }
          })
        ],
        E
      );
    },
    90692: (e, t, r) => {
      r.d(t, { I: () => p });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(20180),
        a = r(20754),
        c = r(87113),
        l = r(48844),
        d = r(98861);
      let u = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        execute({ body: { couponCode: e } }) {
          return this.serverApiClient.v1.teams.getTeamOffers({ couponCode: e, withStarterOffer: !0 }).pipe(
            (0, l.Qn)((e) => e.data),
            (0, l.DZ)((e) => {
              throw new Error(e.message);
            })
          );
        }
      };
      u = (0, s.__decorate)([(0, a.e)(d.g), (0, s.__metadata)("design:paramtypes", [c.l])], u);
      let p = class {};
      p = (0, s.__decorate)(
        [(0, o.Y)({ api: i.F, imports: [n.n], providers: [], handlers: { commands: {}, events: {}, queries: { getTeamOffers: u } } })],
        p
      );
    },
    65529: (e, t, r) => {
      r.d(t, { V: () => g });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(46888),
        a = r(20754),
        c = r(42014),
        l = r(57924),
        d = r(87113),
        u = r(87279),
        p = r(48844),
        h = r(87065);
      let m = class {
        constructor(e) {
          (this.serverApiClient = e),
            (this.getTeamReport = () =>
              this.getTeamReportData().pipe(
                (0, h.U)((e) => {
                  if ((0, u.hx)(e)) throw new Error("could't retrieve team report");
                  const { data: t } = e;
                  return (0, u.Vp)(t);
                })
              )),
            (this.getTeamReportData = () =>
              this.serverApiClient.v1.teams.report({}).pipe(
                (0, p.Qn)(({ data: e }) => e),
                (0, p.DZ)((e) => {
                  throw e;
                })
              ));
        }
      };
      m = (0, s.__decorate)([(0, l.GS)(), (0, s.__metadata)("design:paramtypes", [d.l])], m);
      let v = class {
        constructor(e) {
          this.teamReportService = e;
        }
        execute() {
          return this.teamReportService.getTeamReport();
        }
      };
      v = (0, s.__decorate)([(0, a.e)(c.z), (0, s.__metadata)("design:paramtypes", [m])], v);
      let g = class {};
      g = (0, s.__decorate)(
        [(0, o.Y)({ api: i.B, imports: [n.n], providers: [m], handlers: { commands: {}, events: {}, queries: { getReport: v } } })],
        g
      );
    },
    49355: (e, t, r) => {
      r.d(t, { H: () => Ye });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(13511),
        a = r(34710),
        c = r(63663),
        l = r(87279),
        d = r(25904),
        u = r(60399),
        p = r(57924),
        h = r(87113),
        m = r(48844);
      let v = class {
        constructor(e) {
          (this.serverApiClient = e),
            (this.extendFreeTrial = async () =>
              await (0, u.z)(
                this.serverApiClient.v1.teams.extendFreeTrial({}).pipe(
                  (0, m.DZ)((e) => (0, l.Rn)({ tag: `ExtendFreeTrial command failed with message: ${e.message}` })),
                  (0, m.lk)(() => (0, l.Vp)(void 0))
                )
              ));
        }
      };
      v = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.l])], v);
      var g = r(87065),
        y = r(82567),
        f = r(43956),
        _ = r(86252),
        S = r(7165);
      const E = S.z.array(
        S.z.object({ details: S.z.object({ isBillingAdmin: S.z.boolean(), isTeamAdmin: S.z.boolean(), status: S.z.nativeEnum(f.fE) }) })
      );
      let b = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async isUserTeamAdmin() {
          return await (0, u.z)(
            this.carbonLegacyClient.queries.carbonState({ path: "userSession.spaceData.spaces" }).pipe(
              (0, g.U)((e) => {
                return (
                  !((0, l.hx)(e) || ((t = e.data), !E.safeParse(t).success) || 0 === e.data.length) &&
                  e.data.some((e) => e.details.status === f.fE.Accepted && (e.details.isBillingAdmin || e.details.isTeamAdmin))
                );
                var t;
              })
            )
          );
        }
      };
      var w, A, T, C;
      (b = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [_._])], b)),
        (function (e) {
          (e.Legacy = "legacy"), (e.Starter = "starter"), (e.Team = "team"), (e.Business = "business"), (e.Enterprise = "entreprise");
        })(w || (w = {})),
        (function (e) {
          (e.ProcessOut = "processout"), (e.Invoice = "invoice");
        })(A || (A = {})),
        (function (e) {
          (e.USD = "usd"), (e.EUR = "eur");
        })(T || (T = {})),
        (function (e) {
          (e.Pending = "pending"), (e.Canceled = "canceled"), (e.None = "none");
        })(C || (C = {}));
      S.z.union([
        S.z.literal("chose_other_password_manager"),
        S.z.literal("downsized_employee_count"),
        S.z.literal("missing_critical_features"),
        S.z.literal("no_internal_usage"),
        S.z.literal("other"),
        S.z.literal("technical_issues"),
        S.z.literal("too_expensive")
      ]);
      var I;
      !(function (e) {
        (e.InTeam = "in_team"),
          (e.NotPremium = "not_premium"),
          (e.NoPayment = "no_payment"),
          (e.IsUnpaidFamilyMember = "is_unpaid_family_member"),
          (e.DefaultSettings = "default_settings"),
          (e.NoVPNCapability = "no_vpn_capability"),
          (e.DisabledForFreeUser = "disabled_for_free_user");
      })(I || (I = {}));
      const O = S.z.object({
          allowPersistenceForMasterPassword: S.z.boolean(),
          allowSharing: S.z.boolean(),
          sharingRestrictedToTeam: S.z.boolean(),
          enforce2FA: S.z.boolean(),
          cryptoForcedPayload: S.z.string(),
          disableAutoLoginDomains: S.z.array(S.z.string()),
          enableForcedDomains: S.z.boolean(),
          enablePersonalSpace: S.z.boolean(),
          enableRemoveForcedContent: S.z.boolean(),
          enableVPN: S.z.boolean(),
          forceAutomaticLogout: S.z.number(),
          lockOnExit: S.z.boolean(),
          vaultExportEnabled: S.z.boolean(),
          collectSensitiveDataAuditLogsEnabled: S.z.boolean(),
          ssoEnabled: S.z.boolean(),
          ssoProvisioning: S.z.boolean(),
          teamDomain: S.z.array(S.z.string()),
          restrictSharingToTeam: S.z.boolean(),
          recoveryEnabled: S.z.boolean()
        }),
        P = (e) => {
          switch (e) {
            case "legacy":
            default:
              return w.Legacy;
            case "starter":
              return w.Starter;
            case "team":
              return w.Team;
            case "business":
              return w.Business;
            case "entreprise":
              return w.Enterprise;
          }
        },
        R = (e) => {
          switch (e) {
            case "in_team":
              return I.InTeam;
            case "not_premium":
              return I.NotPremium;
            case "no_payment":
              return I.NoPayment;
            case "is_unpaid_family_member":
              return I.IsUnpaidFamilyMember;
            case "default_settings":
            default:
              return I.DefaultSettings;
            case "no_vpn_capability":
              return I.NoVPNCapability;
            case "disabled_for_free_user":
              return I.DisabledForFreeUser;
          }
        },
        D = (e, t) => ({
          allowPersistenceForMasterPassword: !e.mpPersistenceDisabled,
          allowSharing: !e.sharingDisabled,
          sharingRestrictedToTeam: !!e.sharingRestrictedToTeam,
          enforce2FA: "newDevice" === e.twoFAEnforced,
          cryptoForcedPayload: e.cryptoForcedPayload ?? "",
          disableAutoLoginDomains: e.autologinDomainDisabledArray ?? [],
          enableForcedDomains: !!e.forcedDomainsEnabled,
          enablePersonalSpace: !!e.personalSpaceEnabled,
          enableRemoveForcedContent: !!e.removeForcedContentEnabled,
          enableVPN: !!e.secureWifiEnabled,
          forceAutomaticLogout: Number(e.forceAutomaticLogout || 0),
          lockOnExit: !!e.lockOnExit,
          vaultExportEnabled: !!e.vaultExportEnabled,
          collectSensitiveDataAuditLogsEnabled: !!e.collectSensitiveDataAuditLogsEnabled,
          ssoEnabled: !!e.ssoEnabled,
          ssoProvisioning: "automatic" === e.ssoProvisioning,
          teamDomain: e.teamDomains ?? [],
          restrictSharingToTeam: "boolean" == typeof e.sharingRestrictedToTeam ? e.sharingRestrictedToTeam : t.internalSharingOnly.enabled,
          recoveryEnabled: !!e.recoveryEnabled
        }),
        N = (e, t, r) => {
          const s = [];
          return (
            r?.added && r.added.forEach((t) => s.push({ type: e, value: t })),
            r?.removed && r.removed.forEach((e) => s.push({ type: t, value: e })),
            s
          );
        },
        U = (e, t) => (void 0 !== t ? [{ type: e, value: t }] : []),
        L = (e) => {
          const { enabled: t, info: r } = e;
          let s;
          return (
            r &&
              (s = {
                limit: r.limit ?? void 0,
                maxFileSize: r.maxFileSize ?? void 0,
                quota: r.quota ?? void 0,
                reason: r.reason ? R(r.reason) : void 0
              }),
            { enabled: t, info: s }
          );
        },
        F = (e) => {
          const { activeDirectorySync: t, activityLog: r, phoneSupport: s, samlProvisioning: o, scim: n, sso: i, usageReports: a } = e;
          return {
            activeDirectorySync: L(t),
            activityLog: L(r),
            phoneSupport: L(s),
            samlProvisioning: L(o),
            scim: L(n),
            sso: L(i),
            usageReports: L(a)
          };
        },
        M = (e, t) => ({ ...e, planTier: P(t) }),
        x = (e) => new Set(Object.keys(e));
      var k = r(95681),
        G = r(23347),
        K = r(25029);
      const V = S.z.union([
          S.z.object({
            reason: S.z.union([S.z.custom(), S.z.undefined()]),
            quota: S.z.union([
              S.z.object({ max: S.z.union([S.z.number(), S.z.undefined()]), remaining: S.z.union([S.z.number(), S.z.undefined()]) }),
              S.z.undefined()
            ]),
            maxFileSize: S.z.union([S.z.number(), S.z.undefined()]),
            limit: S.z.union([S.z.number(), S.z.undefined()])
          }),
          S.z.undefined()
        ]),
        j = S.z.object({ paid: S.z.number(), extraFree: S.z.number(), remaining: S.z.number() }),
        B = S.z.object({
          billingMethod: S.z.union([S.z.custom(), S.z.undefined()]),
          creditCardLastDigits: S.z.union([S.z.string(), S.z.undefined()]),
          isFreeTrial: S.z.boolean(),
          isGracePeriod: S.z.boolean(),
          planTier: S.z.custom(),
          lastBillingDateUnix: S.z.number(),
          nextBillingDetails: S.z.object({
            amount: S.z.number(),
            currency: S.z.union([S.z.literal("eur"), S.z.literal("usd")]),
            dateUnix: S.z.number()
          }),
          usersToBeRenewedCount: S.z.number(),
          planDetails: S.z.object({
            currency: S.z.union([S.z.literal("eur"), S.z.literal("usd")]),
            priceRanges: S.z.array(S.z.object({ startMembers: S.z.number(), price: S.z.number(), equivalentPrice: S.z.number() }))
          })
        }),
        W = S.z.object({ enabled: S.z.boolean(), info: V }),
        H = S.z.object({ samlProvisioning: W, sso: W, scim: W, phoneSupport: W, activeDirectorySync: W, activityLog: W, usageReports: W }),
        z = S.z.object({
          isBillingOrFullAdmin: S.z.literal(!0),
          lastRefreshDate: S.z.number(),
          billing: B,
          seats: j,
          capabilities: H,
          securityScore: S.z.number().nullable(),
          creationDateUnix: S.z.number(),
          teamName: S.z.string(),
          teamRoles: S.z.object({ groupManagersIds: S.z.array(S.z.number()), teamCaptainsIds: S.z.set(S.z.string()) }),
          policies: O
        }),
        Q = S.z.object({ isBillingOrFullAdmin: S.z.literal(!1) }),
        q = S.z.discriminatedUnion("isBillingOrFullAdmin", [z, Q]),
        Y = (e) => q.safeParse(e).success;
      class $ extends (0, k.Q)({
        initialValue: { isBillingOrFullAdmin: !1 },
        storeTypeGuard: Y,
        persist: !1,
        scope: K.F.User,
        storeName: "team-admin-store",
        capacity: G.Y._010KB
      }) {}
      let X = class {
        constructor(e, t, r) {
          (this.serverApiClient = e),
            (this.isUserTeamAdminService = t),
            (this.teamAdminStore = r),
            (this.MIN_DELAY_BETWEEN_REFRESHES = 500);
        }
        async refreshState() {
          if (!(await this.isUserTeamAdminService.isUserTeamAdmin())) return void this.teamAdminStore.set({ isBillingOrFullAdmin: !1 });
          const e = await this.teamAdminStore.getState();
          return e.isBillingOrFullAdmin && e.lastRefreshDate + this.MIN_DELAY_BETWEEN_REFRESHES > Date.now()
            ? void 0
            : await (0, u.z)(
                this.serverApiClient.v1.teams.teamStatus({}).pipe(
                  (0, g.U)((e) =>
                    (0, l.hx)(e)
                      ? { isBillingOrFullAdmin: !1 }
                      : ((e) => {
                          const { securityScore: t, creationDateUnix: r, billing: s, capabilities: o, seats: n, planTier: i, info: a } = e,
                            { name: c, groupManagers: l, teamCaptains: d } = a;
                          return {
                            isBillingOrFullAdmin: !0,
                            creationDateUnix: r,
                            teamName: c,
                            securityScore: t,
                            seats: n,
                            capabilities: F(o),
                            billing: M(s, i),
                            teamRoles: { groupManagersIds: l, teamCaptainsIds: x(d) },
                            lastRefreshDate: Date.now(),
                            policies: D(a, o)
                          };
                        })(e.data.data)
                  ),
                  (0, y.b)((e) => {
                    this.teamAdminStore.set(e);
                  })
                )
              );
        }
      };
      X = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.l, b, $])], X);
      let Z = class {
        constructor(e, t) {
          (this.freeTrialService = e), (this.teamAdminService = t);
        }
        async execute() {
          const e = await this.freeTrialService.extendFreeTrial();
          return (0, l.d6)(e) && (await this.teamAdminService.refreshState()), e;
        }
      };
      Z = (0, s.__decorate)([(0, c.W)(d.N), (0, s.__metadata)("design:paramtypes", [v, X])], Z);
      var J,
        ee = r(82276);
      !(function (e) {
        (e.NoInternalUsage = "cancellation_lack_of_adoption"),
          (e.DownsizedEmployeeCount = "cancellation_acquisition_or_restructured"),
          (e.ChoseOtherPasswordManager = "cancellation_switched_to_competitor"),
          (e.MissingCriticalFeatures = "cancellation_lack_of_features"),
          (e.TechnicalIssues = "cancellation_technical_issues"),
          (e.TooExpensive = "cancellation_price"),
          (e.Other = "cancellation_other");
      })(J || (J = {}));
      const te = {
        chose_other_password_manager: J.ChoseOtherPasswordManager,
        downsized_employee_count: J.DownsizedEmployeeCount,
        missing_critical_features: J.MissingCriticalFeatures,
        no_internal_usage: J.NoInternalUsage,
        other: J.Other,
        technical_issues: J.TechnicalIssues,
        too_expensive: J.TooExpensive
      };
      var re = r(85390),
        se = r(10722);
      const oe = (e) => e === C.Canceled || e === C.None || e === C.Pending;
      class ne extends (0, k.Q)({
        storage: { schemaVersion: 1, initialValue: C.None, typeGuard: oe },
        persist: !0,
        scope: K.F.User,
        storeName: "plan-cancellation-store",
        capacity: G.Y._001KB,
        codec: se.E
      }) {}
      let ie = class {
        constructor(e, t, r) {
          (this.serverApiClient = e),
            (this.planCancellationStore = t),
            (this.carbon = r),
            (this.createZendeskCancellationTicket = async (e) =>
              await (0, u.z)(
                this.serverApiClient.v1.teams.createZendeskCancellationTicket(e).pipe(
                  (0, m.DZ)((e) => (0, l.Rn)({ tag: `CreateZendeskCancellationTicket command failed with message: ${e.message}` })),
                  (0, m.lk)(() => (0, l.Vp)(void 0))
                )
              )),
            (this.getZendeskCancellationTicket = () => (this.refreshState(), this.planCancellationStore.state$.pipe((0, g.U)(l.Vp)))),
            (this.serverToDomainCancelStatusMapper = (e, t) => (t ? C.Canceled : void 0 !== e.id ? C.Pending : C.None)),
            (this.getIsRenewalStopped = () =>
              this.carbon.queries.getNodePremiumStatus().pipe(
                (0, g.U)((e) => {
                  if ((0, l.hx)(e)) throw new Error("Cannot retrieve node premium status from Carbon");
                  return e.data.b2bStatus?.currentTeam?.isRenewalStopped;
                })
              )),
            (this.getTickets = () =>
              this.serverApiClient.v1.teams.getZendeskCancellationTicket({}).pipe(
                (0, g.U)((e) => {
                  if ((0, l.hx)(e)) throw new Error(`GetZenDeskCancellationTicket query failed with message: ${e.error}`);
                  return e.data.data;
                })
              ));
        }
        async refreshState() {
          const e = this.getTickets(),
            t = this.getIsRenewalStopped();
          return await (0, u.z)(
            (0, re.a)([e, t]).pipe(
              (0, g.U)(([e, t]) => this.serverToDomainCancelStatusMapper(e, t)),
              (0, y.b)((e) => {
                this.planCancellationStore.set(e);
              })
            )
          );
        }
      };
      ie = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.l, ne, _._])], ie);
      let ae = class {
        constructor(e) {
          this.planCancellationService = e;
        }
        async execute({ body: e }) {
          const { reasons: t } = e,
            r = ((e) => ({ reasons: e.map((e) => te[e]) }))(t),
            s = await this.planCancellationService.createZendeskCancellationTicket(r);
          return (0, l.d6)(s) && (await this.planCancellationService.refreshState()), s;
        }
      };
      ae = (0, s.__decorate)([(0, c.W)(ee.y), (0, s.__metadata)("design:paramtypes", [ie])], ae);
      var ce = r(26657);
      let le = class {
        constructor(e, t) {
          (this.teamAdminService = e), (this.serverApiClient = t);
        }
        async execute({ body: e }) {
          const { teamId: t, policyUpdates: r } = e;
          return (
            await (0, u.z)(
              this.serverApiClient.v1.teams.editSettings(
                ((e, t) => {
                  const r = [
                    ...N("add_team_domain", "remove_team_domain", t.teamDomain),
                    ...N("add_autologin_domain_disabled", "remove_autologin_domain_disabled", t.disableAutoLoginDomains),
                    ...U("set_forced_domains_enabled", t.enableForcedDomains),
                    ...U("set_rm_forced_content_enabled", t.enableRemoveForcedContent),
                    ...U("set_vault_export_enabled", t.vaultExportEnabled),
                    ...U("set_secure_wifi", t.enableVPN),
                    ...U("set_lock_on_exit", t.lockOnExit),
                    ...U("set_collect_sensitive_data_audit_logs_enabled", t.collectSensitiveDataAuditLogsEnabled),
                    ...U("set_sharing_restricted_to_team", t.restrictSharingToTeam),
                    ...((s = "set_sharing_disabled"), (o = t.allowSharing), void 0 !== o ? [{ type: s, value: !o }] : [])
                  ];
                  var s, o;
                  return (
                    void 0 !== t.enforce2FA &&
                      r.push({ type: "set_two_factor_authentication_enforced", value: t.enforce2FA ? "newDevice" : "disabled" }),
                    void 0 !== t.forceAutomaticLogout &&
                      r.push({
                        type: null === t.forceAutomaticLogout ? "unset_force_automatic_logout" : "set_force_automatic_logout",
                        value: t.forceAutomaticLogout
                      }),
                    void 0 !== t.cryptoForcedPayload && r.push({ type: "set_crypto_forced_payload", value: t.cryptoForcedPayload }),
                    void 0 !== t.ssoProvisioning &&
                      r.push({ type: "set_sso_provisioning", value: t.ssoProvisioning ? "automatic" : "disabled" }),
                    { operations: r, teamId: e }
                  );
                })(t, r)
              )
            ),
            await this.teamAdminService.refreshState(),
            (0, l.Vp)(void 0)
          );
        }
      };
      le = (0, s.__decorate)([(0, c.W)(ce.m), (0, s.__metadata)("design:paramtypes", [X, h.l])], le);
      var de = r(162),
        ue = r(20754),
        pe = r(26992),
        he = r(25859),
        me = r(96168);
      class ve extends (0, me.Hu)("UserIsNotAdmin", "User is not an admin") {}
      var ge = r(95557),
        ye = r(10994),
        fe = r(92481),
        _e = r(50793);
      const Se = (e) => {
          if (!e) return new Date();
          const t = (0, ge.Z)(e, "yyyy-MM-dd", new Date());
          return "Invalid Date" !== t.toString() ? t : new Date(e);
        },
        Ee = (e) => {
          const t = Se((0, ye.Z)(e).toString());
          return (0, fe.Z)(t, "yyyy-MM-dd") === (0, fe.Z)(Se(new Date().toString()), "yyyy-MM-dd");
        },
        be = (e) => {
          const t = new Date(),
            r = (0, ye.Z)(e);
          return r.setDate(r.getDate() + 6), (s = r), t.setHours(0, 0, 0, 0) <= s.setHours(0, 0, 0, 0);
          var s;
        },
        we = (e) => (0, _e.Z)((0, ye.Z)(e), new Date());
      let Ae = class {
        constructor(e, t, r) {
          (this.carbon = e),
            (this.teamAdminStore = t),
            (this.teamAdminService = r),
            (this.getTeamTrialStatus = () =>
              (0, he.P)(
                () => (
                  this.teamAdminService.refreshState(),
                  this.teamAdminStore.state$.pipe(
                    (0, g.U)((e) => {
                      if (!e.isBillingOrFullAdmin) return (0, l.Rn)(new ve());
                      const t = {
                        isFreeTrial: e.billing.isFreeTrial,
                        isGracePeriod: e.billing.isGracePeriod,
                        isFirstDayOfTrial: Ee(e.creationDateUnix),
                        isSecondStageOfTrial: be(e.creationDateUnix),
                        daysLeftInTrial: we(e.billing.nextBillingDetails.dateUnix),
                        spaceTier: e.billing.planTier
                      };
                      return (0, l.Vp)(t);
                    })
                  )
                )
              )),
            (this.getTeamBillingDetails = () =>
              (0, re.a)([this.teamAdminStore.state$, this.getTeamSubscriptionInformation()]).pipe(
                (0, g.U)(([e, t]) => {
                  if (!e.isBillingOrFullAdmin) return (0, l.Rn)(new ve());
                  const { billing: r, seats: s } = e,
                    o = {
                      amount: r.nextBillingDetails.amount,
                      currency: "usd" === r.nextBillingDetails.currency ? T.USD : T.EUR,
                      dateUnix: r.nextBillingDetails.dateUnix
                    };
                  return (0, l.Vp)({
                    billingType: "invoice" === t?.billingInformation?.billingType ? A.Invoice : A.ProcessOut,
                    spaceTier: r.planTier,
                    creditCardLastDigits: t?.billingInformation?.last4 ?? null,
                    lastBillingDateUnix: r.lastBillingDateUnix,
                    nextBillingDetails: o,
                    seatsNumber: s.paid + s.extraFree,
                    usersToBeRenewedCount: r.usersToBeRenewedCount,
                    daysLeftUntilNextBillingPeriod: we(r.nextBillingDetails.dateUnix),
                    planDetails: r.planDetails
                  });
                })
              )),
            (this.getTeamCapabilities = () =>
              this.teamAdminStore.state$.pipe((0, g.U)((e) => (e.isBillingOrFullAdmin ? (0, l.Vp)(e.capabilities) : (0, l.Rn)(new ve()))))),
            (this.getTeamCreationDateUnix = () =>
              this.teamAdminStore.state$.pipe(
                (0, g.U)((e) => (e.isBillingOrFullAdmin ? (0, l.Vp)(e.creationDateUnix) : (0, l.Rn)(new ve())))
              )),
            (this.getTeamSeats = () =>
              this.teamAdminStore.state$.pipe((0, g.U)((e) => (e.isBillingOrFullAdmin ? (0, l.Vp)(e.seats) : (0, l.Rn)(new ve()))))),
            (this.getTeamSecurityScore = () =>
              this.teamAdminStore.state$.pipe(
                (0, g.U)((e) => (e.isBillingOrFullAdmin ? (0, l.Vp)(e.securityScore) : (0, l.Rn)(new ve())))
              )),
            (this.getTeamName = () =>
              this.teamAdminStore.state$.pipe((0, g.U)((e) => (e.isBillingOrFullAdmin ? (0, l.Vp)(e.teamName) : (0, l.Rn)(new ve()))))),
            (this.getTeamRoles = () =>
              this.teamAdminStore.state$.pipe((0, g.U)((e) => (e.isBillingOrFullAdmin ? (0, l.Vp)(e.teamRoles) : (0, l.Rn)(new ve()))))),
            (this.getTeamSubscriptionInformation = () => {
              const { getSubscriptionInformation: e } = this.carbon.queries;
              return e().pipe(
                (0, g.U)((e) => {
                  if (!(0, l.d6)(e)) throw new Error("Cannot retrieve subscription information from Carbon");
                  return (0, l.db)(e).b2bSubscription;
                })
              );
            }),
            (this.getTeamPolicies = () =>
              (0, he.P)(
                () => (
                  this.teamAdminService.refreshState(),
                  this.teamAdminStore.state$.pipe((0, g.U)((e) => (e.isBillingOrFullAdmin ? (0, l.Vp)(e.policies) : (0, l.Rn)(new ve()))))
                )
              ));
        }
      };
      Ae = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [_._, $, X])], Ae);
      let Te = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamBillingDetails());
        }
      };
      Te = (0, s.__decorate)([(0, ue.e)(pe._), (0, s.__metadata)("design:paramtypes", [Ae])], Te);
      var Ce = r(9128);
      let Ie = class {
        constructor(e) {
          this.planCancellationService = e;
        }
        execute() {
          return this.planCancellationService.getZendeskCancellationTicket();
        }
      };
      Ie = (0, s.__decorate)([(0, ue.e)(Ce.F), (0, s.__metadata)("design:paramtypes", [ie])], Ie);
      var Oe = r(30525);
      let Pe = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamCapabilities());
        }
      };
      Pe = (0, s.__decorate)([(0, ue.e)(Oe.Y), (0, s.__metadata)("design:paramtypes", [Ae])], Pe);
      var Re = r(89859);
      let De = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamCreationDateUnix());
        }
      };
      De = (0, s.__decorate)([(0, ue.e)(Re.T), (0, s.__metadata)("design:paramtypes", [Ae])], De);
      var Ne = r(19068);
      let Ue = class {
        constructor(e) {
          this.carbon = e;
        }
        execute() {
          const { carbonState: e } = this.carbon.queries;
          return e({ path: "state.userSession.spaceData.spaces" })
            .pipe(
              (0, g.U)((e) => {
                if (!(0, l.d6)(e)) throw new Error("Cannot retrieve user spaces");
                const t = e.data.find((e) => "accepted" === e.details.status);
                return t ? { teamId: t.teamId } : { teamId: null };
              })
            )
            .pipe((0, g.U)(l.Vp));
        }
      };
      Ue = (0, s.__decorate)([(0, ue.e)(Ne.e), (0, s.__metadata)("design:paramtypes", [_._])], Ue);
      var Le = r(80926);
      let Fe = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamName());
        }
      };
      Fe = (0, s.__decorate)([(0, ue.e)(Le.j), (0, s.__metadata)("design:paramtypes", [Ae])], Fe);
      var Me = r(64380);
      let xe = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamRoles());
        }
      };
      xe = (0, s.__decorate)([(0, ue.e)(Me.R), (0, s.__metadata)("design:paramtypes", [Ae])], xe);
      var ke = r(65245);
      let Ge = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamPolicies());
        }
      };
      Ge = (0, s.__decorate)([(0, ue.e)(ke.K), (0, s.__metadata)("design:paramtypes", [Ae])], Ge);
      var Ke = r(704);
      let Ve = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamSeats());
        }
      };
      Ve = (0, s.__decorate)([(0, ue.e)(Ke.W), (0, s.__metadata)("design:paramtypes", [Ae])], Ve);
      var je = r(27056);
      let Be = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamSecurityScore());
        }
      };
      Be = (0, s.__decorate)([(0, ue.e)(je.R), (0, s.__metadata)("design:paramtypes", [Ae])], Be);
      var We = r(207);
      let He = class {
        constructor(e) {
          this.getTeamPlanDetailsService = e;
        }
        execute() {
          return (0, de.D)(this.getTeamPlanDetailsService.getTeamTrialStatus());
        }
      };
      He = (0, s.__decorate)([(0, ue.e)(We.P), (0, s.__metadata)("design:paramtypes", [Ae])], He);
      var ze = r(5237),
        Qe = r(68307);
      let qe = class {
        constructor(e) {
          this.teamAdminService = e;
        }
        async handle() {
          await this.teamAdminService.refreshState();
        }
      };
      qe = (0, s.__decorate)([(0, Qe.b)(ze.M), (0, s.__metadata)("design:paramtypes", [X])], qe);
      let Ye = class {};
      Ye = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.o,
            imports: [n.n],
            providers: [v, Ae, X, b, ie],
            stores: [$, ne],
            handlers: {
              commands: { extendFreeTrial: Z, requestTeamPlanCancellation: ae, editTeamPolicies: le },
              events: { ...(0, o.g)(a.Q, { sessionOpened: qe }) },
              queries: {
                getTeamBillingInformation: Te,
                getTeamCancellationStatus: Ie,
                getTeamCapabilities: Pe,
                getTeamCreationDateUnix: De,
                getTeamId: Ue,
                getTeamName: Fe,
                getTeamRoles: xe,
                getTeamPolicies: Ge,
                getTeamSeats: Ve,
                getTeamSecurityScore: Be,
                getTeamTrialStatus: He
              }
            },
            requiredFeatureFlips: Object.values({
              EcommerceWebSadPathDev: "ecommerce_web_cancel_subscription_flow_dev",
              EcommerceWebSadPathProd: "ecommerce_web_cancel_subscription_flow_prod"
            })
          })
        ],
        Ye
      );
    },
    34431: (e, t, r) => {
      r.d(t, { K: () => S });
      var s = r(88802),
        o = r(99634),
        n = r(93850),
        i = r(1701),
        a = r(63663),
        c = r(57220),
        l = r(60399),
        d = r(57924),
        u = r(87113),
        p = r(48844),
        h = r(87279),
        m = r(36767),
        v = r(56333);
      let g = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        async deleteTeamVat() {
          return await (0, l.z)(
            this.serverApiClient.v1.teams.deleteTeamVat().pipe(
              (0, p.DZ)((e) => {
                if ("BusinessError" === e.tag) return (0, c.zK)(e.code);
                throw new Error(e.message);
              }),
              (0, p.lk)((e) => (0, h.Vp)(e.data))
            )
          );
        }
        async getTeamVat() {
          return await (0, l.z)(
            this.serverApiClient.v1.teams.getTeamVat().pipe(
              (0, p.DZ)((e) => {
                if ("BusinessError" === e.tag) return (0, m.K$)(e.code);
                throw new Error(e.message);
              }),
              (0, p.lk)((e) => (0, h.Vp)(e.data))
            )
          );
        }
        async upsertTeamVat({ newVATNumber: e }) {
          return await (0, l.z)(
            this.serverApiClient.v1.teams.upsertTeamVat({ newVATNumber: e }).pipe(
              (0, p.DZ)((e) => {
                if ("BusinessError" === e.tag) return (0, v.q5)(e.code);
                throw new Error(e.message);
              }),
              (0, p.lk)((e) => (0, h.Vp)(e.data))
            )
          );
        }
      };
      g = (0, s.__decorate)([(0, d.GS)(), (0, s.__metadata)("design:paramtypes", [u.l])], g);
      let y = class {
        constructor(e) {
          this.teamVatService = e;
        }
        execute() {
          return this.teamVatService.deleteTeamVat();
        }
      };
      y = (0, s.__decorate)([(0, a.W)(c.Hy), (0, s.__metadata)("design:paramtypes", [g])], y);
      let f = class {
        constructor(e) {
          this.teamVatService = e;
        }
        execute() {
          return this.teamVatService.getTeamVat();
        }
      };
      f = (0, s.__decorate)([(0, a.W)(m.cf), (0, s.__metadata)("design:paramtypes", [g])], f);
      let _ = class {
        constructor(e) {
          this.teamVatService = e;
        }
        execute({ body: { newVATNumber: e } }) {
          return this.teamVatService.upsertTeamVat({ newVATNumber: e });
        }
      };
      _ = (0, s.__decorate)([(0, a.W)(v.XW), (0, s.__metadata)("design:paramtypes", [g])], _);
      let S = class {};
      S = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.a,
            imports: [n.n],
            providers: [g],
            handlers: { commands: { deleteTeamVat: y, getTeamVat: f, upsertTeamVat: _ }, events: {}, queries: {} }
          })
        ],
        S
      );
    },
    78924: (e, t, r) => {
      r.r(t),
        r.d(t, {
          CanUserAddNewPasswordQuery: () => j.K,
          CollectionsQuery: () => x.I,
          Country: () => E.c,
          CreateCollectionCommand: () => L.e,
          CreateVaultItemCommand: () => a._,
          CreatedEvent: () => p.J,
          DeleteCollectionCommand: () => U.T,
          DeleteVaultItemsCommand: () => c.c,
          DeletedEvent: () => h.s,
          DomainIconDetailsMapSchema: () => b.x,
          DomainIconDetailsQuery: () => v.s,
          DomainIconDetailsSchema: () => b.N,
          EmailType: () => i,
          EmitTemporaryVaultItemEventCommand: () => u.c,
          EventType: () => u.t,
          FilterOperators: () => g.l,
          GetPasswordLimitStatusQuery: () => B.r,
          GetVaultNotificationsStatusQuery: () => D.M,
          IdentityTitle: () => A.t,
          MigrateCategoriesCommand: () => M._,
          NoteColors: () => C.L,
          OperationType: () => F.C,
          PaymentCardColorType: () => w.X,
          PhoneType: () => T.z,
          SecureNoteCategoryQuery: () => y.F,
          SecureNoteSchema: () => C._,
          SetVaultNotificationsStatusCommand: () => R.x,
          SortDirection: () => f.S,
          TempCredentialPreferencesQuery: () => _.M,
          TempCredentialPreferencesUpdateCommand: () => d.m,
          UpdateCollectionCommand: () => F.s,
          UpdateVaultItemCommand: () => l.K,
          UpdatedEvent: () => m.V,
          VaultItemType: () => I.U,
          VaultItemTypeToResultDictionary: () => O,
          VaultItemsCrudClient: () => n,
          VaultItemsQuery: () => S.W,
          VaultOrganizationClient: () => k.C,
          VaultSearchQuery: () => K.W,
          passwordLimitApi: () => V.Z,
          vaultItemsCrudApi: () => s.L,
          vaultNotificationsApi: () => P.e,
          vaultOrganizationApi: () => N.v,
          vaultSearchApi: () => G.R
        });
      var s = r(48430),
        o = r(67837);
      class n extends (0, o.E)(s.L) {}
      (0, o.K)(s.L, n);
      var i,
        a = r(273),
        c = r(31154),
        l = r(54547),
        d = r(55441),
        u = r(47412),
        p = r(3137),
        h = r(49135),
        m = r(72989),
        v = r(55713),
        g = r(9531),
        y = r(83984),
        f = r(24652),
        _ = r(11907),
        S = r(96342),
        E = r(75257),
        b = r(19074),
        w = r(45146);
      !(function (e) {
        (e.Perso = "PERSO"), (e.Pro = "PRO"), (e.NoType = "NO_TYPE");
      })(i || (i = {}));
      var A = r(11329),
        T = r(82009),
        C = r(7149),
        I = r(82706);
      const O = {
        [I.U.Address]: "addressesResult",
        [I.U.BankAccount]: "bankAccountsResult",
        [I.U.Company]: "companiesResult",
        [I.U.Credential]: "credentialsResult",
        [I.U.DriversLicense]: "driversLicensesResult",
        [I.U.Email]: "emailsResult",
        [I.U.FiscalId]: "fiscalIdsResult",
        [I.U.IdCard]: "idCardsResult",
        [I.U.Identity]: "identitiesResult",
        [I.U.Passkey]: "passkeysResult",
        [I.U.Passport]: "passportsResult",
        [I.U.PaymentCard]: "paymentCardsResult",
        [I.U.Phone]: "phonesResult",
        [I.U.Secret]: "secretsResult",
        [I.U.SecureNote]: "secureNotesResult",
        [I.U.SocialSecurityId]: "socialSecurityIdsResult",
        [I.U.Website]: "websitesResult"
      };
      var P = r(22499),
        R = r(12338),
        D = r(19892),
        N = r(99074),
        U = r(25041),
        L = r(533),
        F = r(96862),
        M = r(65378),
        x = r(6519),
        k = r(87969),
        G = r(73883),
        K = r(88994),
        V = r(52484),
        j = r(63197),
        B = r(58684);
    },
    52484: (e, t, r) => {
      r.d(t, { Z: () => i });
      var s = r(86952),
        o = r(63197),
        n = r(58684);
      const i = (0, s.Q)({
        name: "passwordLimit",
        commands: {},
        events: {},
        queries: { canUserAddNewPassword: o.K, getPasswordLimitStatus: n.r }
      });
    },
    63197: (e, t, r) => {
      r.d(t, { K: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    58684: (e, t, r) => {
      r.d(t, { r: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    48430: (e, t, r) => {
      r.d(t, { L: () => g });
      var s = r(86952),
        o = r(273),
        n = r(31154),
        i = r(54547),
        a = r(55441),
        c = r(47412),
        l = r(3137),
        d = r(49135),
        u = r(72989),
        p = r(55713),
        h = r(96342),
        m = r(83984),
        v = r(11907);
      const g = (0, s.Q)({
        name: "vaultItemsCrud",
        commands: {
          createVaultItem: o._,
          deleteVaultItems: n.c,
          updateVaultItem: i.K,
          tempCredentialPreferencesUpdate: a.m,
          emitTemporaryVaultItemEvent: c.c
        },
        events: { createdEvent: l.J, deletedEvent: d.s, updatedEvent: u.V },
        queries: { domainIconDetails: p.s, query: h.W, secureNoteCategory: m.F, tempCredentialPreferences: v.M }
      });
    },
    273: (e, t, r) => {
      r.d(t, { _: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    31154: (e, t, r) => {
      r.d(t, { c: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    47412: (e, t, r) => {
      r.d(t, { c: () => i, t: () => s });
      var s,
        o = r(74354),
        n = r(25029);
      !(function (e) {
        (e.Deleted = "deleted"), (e.Updated = "updated"), (e.Created = "created");
      })(s || (s = {}));
      class i extends (0, o.g)({ scope: n.F.User }) {}
    },
    55441: (e, t, r) => {
      r.d(t, { m: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    54547: (e, t, r) => {
      r.d(t, { K: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    77649: (e, t, r) => {
      r.d(t, { D: () => n });
      var s = r(88885),
        o = r(25029);
      class n extends (0, s.d)({ scope: o.F.User }) {}
    },
    3137: (e, t, r) => {
      r.d(t, { J: () => o });
      var s = r(77649);
      class o extends s.D {}
    },
    49135: (e, t, r) => {
      r.d(t, { s: () => o });
      var s = r(77649);
      class o extends s.D {}
    },
    72989: (e, t, r) => {
      r.d(t, { V: () => o });
      var s = r(77649);
      class o extends s.D {}
    },
    55713: (e, t, r) => {
      r.d(t, { s: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    9531: (e, t, r) => {
      var s;
      r.d(t, { l: () => s }),
        (function (e) {
          (e.Equal = "equal"), (e.LessThan = "lessThan"), (e.GreaterThan = "greaterThan");
        })(s || (s = {}));
    },
    83984: (e, t, r) => {
      r.d(t, { F: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    24652: (e, t, r) => {
      var s;
      r.d(t, { S: () => s }),
        (function (e) {
          (e.Ascend = "ascend"), (e.Descend = "descend");
        })(s || (s = {}));
    },
    11907: (e, t, r) => {
      r.d(t, { M: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    96342: (e, t, r) => {
      r.d(t, { W: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    75257: (e, t, r) => {
      var s;
      r.d(t, { c: () => s }),
        (function (e) {
          (e.NO_TYPE = "NO_TYPE"),
            (e.UNIVERSAL = "UNIVERSAL"),
            (e.AD = "AD"),
            (e.AE = "AE"),
            (e.AF = "AF"),
            (e.AG = "AG"),
            (e.AI = "AI"),
            (e.AL = "AL"),
            (e.AM = "AM"),
            (e.AO = "AO"),
            (e.AQ = "AQ"),
            (e.AR = "AR"),
            (e.AS = "AS"),
            (e.AT = "AT"),
            (e.AU = "AU"),
            (e.AW = "AW"),
            (e.AX = "AX"),
            (e.AZ = "AZ"),
            (e.BA = "BA"),
            (e.BB = "BB"),
            (e.BD = "BD"),
            (e.BE = "BE"),
            (e.BF = "BF"),
            (e.BG = "BG"),
            (e.BH = "BH"),
            (e.BI = "BI"),
            (e.BJ = "BJ"),
            (e.BL = "BL"),
            (e.BM = "BM"),
            (e.BN = "BN"),
            (e.BO = "BO"),
            (e.BR = "BR"),
            (e.BS = "BS"),
            (e.BT = "BT"),
            (e.BV = "BV"),
            (e.BW = "BW"),
            (e.BY = "BY"),
            (e.BZ = "BZ"),
            (e.CA = "CA"),
            (e.CC = "CC"),
            (e.CD = "CD"),
            (e.CF = "CF"),
            (e.CG = "CG"),
            (e.CH = "CH"),
            (e.CI = "CI"),
            (e.CK = "CK"),
            (e.CL = "CL"),
            (e.CM = "CM"),
            (e.CN = "CN"),
            (e.CO = "CO"),
            (e.CR = "CR"),
            (e.CU = "CU"),
            (e.CV = "CV"),
            (e.CX = "CX"),
            (e.CY = "CY"),
            (e.CZ = "CZ"),
            (e.DE = "DE"),
            (e.DJ = "DJ"),
            (e.DK = "DK"),
            (e.DM = "DM"),
            (e.DO = "DO"),
            (e.DZ = "DZ"),
            (e.EC = "EC"),
            (e.EE = "EE"),
            (e.EG = "EG"),
            (e.EH = "EH"),
            (e.ER = "ER"),
            (e.ES = "ES"),
            (e.ET = "ET"),
            (e.FI = "FI"),
            (e.FJ = "FJ"),
            (e.FK = "FK"),
            (e.FM = "FM"),
            (e.FO = "FO"),
            (e.FR = "FR"),
            (e.GA = "GA"),
            (e.GB = "GB"),
            (e.GD = "GD"),
            (e.GE = "GE"),
            (e.GF = "GF"),
            (e.GG = "GG"),
            (e.GH = "GH"),
            (e.GI = "GI"),
            (e.GL = "GL"),
            (e.GM = "GM"),
            (e.GN = "GN"),
            (e.GP = "GP"),
            (e.GQ = "GQ"),
            (e.GR = "GR"),
            (e.GS = "GS"),
            (e.GT = "GT"),
            (e.GU = "GU"),
            (e.GW = "GW"),
            (e.GY = "GY"),
            (e.HK = "HK"),
            (e.HM = "HM"),
            (e.HN = "HN"),
            (e.HR = "HR"),
            (e.HT = "HT"),
            (e.HU = "HU"),
            (e.ID = "ID"),
            (e.IE = "IE"),
            (e.IL = "IL"),
            (e.IM = "IM"),
            (e.IN = "IN"),
            (e.IO = "IO"),
            (e.IQ = "IQ"),
            (e.IR = "IR"),
            (e.IS = "IS"),
            (e.IT = "IT"),
            (e.JE = "JE"),
            (e.JM = "JM"),
            (e.JO = "JO"),
            (e.JP = "JP"),
            (e.KE = "KE"),
            (e.KG = "KG"),
            (e.KH = "KH"),
            (e.KI = "KI"),
            (e.KM = "KM"),
            (e.KN = "KN"),
            (e.KP = "KP"),
            (e.KR = "KR"),
            (e.KW = "KW"),
            (e.KY = "KY"),
            (e.KZ = "KZ"),
            (e.LA = "LA"),
            (e.LB = "LB"),
            (e.LC = "LC"),
            (e.LI = "LI"),
            (e.LK = "LK"),
            (e.LR = "LR"),
            (e.LS = "LS"),
            (e.LT = "LT"),
            (e.LU = "LU"),
            (e.LV = "LV"),
            (e.LY = "LY"),
            (e.MA = "MA"),
            (e.MC = "MC"),
            (e.MD = "MD"),
            (e.ME = "ME"),
            (e.MF = "MF"),
            (e.MG = "MG"),
            (e.MH = "MH"),
            (e.MK = "MK"),
            (e.ML = "ML"),
            (e.MM = "MM"),
            (e.MN = "MN"),
            (e.MO = "MO"),
            (e.MP = "MP"),
            (e.MQ = "MQ"),
            (e.MR = "MR"),
            (e.MS = "MS"),
            (e.MT = "MT"),
            (e.MU = "MU"),
            (e.MV = "MV"),
            (e.MW = "MW"),
            (e.MX = "MX"),
            (e.MY = "MY"),
            (e.MZ = "MZ"),
            (e.NA = "NA"),
            (e.NC = "NC"),
            (e.NE = "NE"),
            (e.NF = "NF"),
            (e.NG = "NG"),
            (e.NI = "NI"),
            (e.NL = "NL"),
            (e.NO = "NO"),
            (e.NP = "NP"),
            (e.NR = "NR"),
            (e.NU = "NU"),
            (e.NZ = "NZ"),
            (e.OM = "OM"),
            (e.PA = "PA"),
            (e.PE = "PE"),
            (e.PF = "PF"),
            (e.PG = "PG"),
            (e.PH = "PH"),
            (e.PK = "PK"),
            (e.PL = "PL"),
            (e.PM = "PM"),
            (e.PN = "PN"),
            (e.PR = "PR"),
            (e.PS = "PS"),
            (e.PT = "PT"),
            (e.PW = "PW"),
            (e.PY = "PY"),
            (e.QA = "QA"),
            (e.RE = "RE"),
            (e.RO = "RO"),
            (e.RS = "RS"),
            (e.RU = "RU"),
            (e.RW = "RW"),
            (e.SA = "SA"),
            (e.SB = "SB"),
            (e.SC = "SC"),
            (e.SD = "SD"),
            (e.SE = "SE"),
            (e.SG = "SG"),
            (e.SH = "SH"),
            (e.SI = "SI"),
            (e.SJ = "SJ"),
            (e.SK = "SK"),
            (e.SL = "SL"),
            (e.SM = "SM"),
            (e.SN = "SN"),
            (e.SO = "SO"),
            (e.SR = "SR"),
            (e.ST = "ST"),
            (e.SV = "SV"),
            (e.SY = "SY"),
            (e.SZ = "SZ"),
            (e.TC = "TC"),
            (e.TD = "TD"),
            (e.TF = "TF"),
            (e.TG = "TG"),
            (e.TH = "TH"),
            (e.TJ = "TJ"),
            (e.TK = "TK"),
            (e.TL = "TL"),
            (e.TM = "TM"),
            (e.TN = "TN"),
            (e.TO = "TO"),
            (e.TR = "TR"),
            (e.TT = "TT"),
            (e.TV = "TV"),
            (e.TW = "TW"),
            (e.TZ = "TZ"),
            (e.UA = "UA"),
            (e.UG = "UG"),
            (e.UM = "UM"),
            (e.US = "US"),
            (e.UY = "UY"),
            (e.UZ = "UZ"),
            (e.VA = "VA"),
            (e.VC = "VC"),
            (e.VE = "VE"),
            (e.VG = "VG"),
            (e.VI = "VI"),
            (e.VN = "VN"),
            (e.VU = "VU"),
            (e.WF = "WF"),
            (e.WS = "WS"),
            (e.XK = "XK"),
            (e.YE = "YE"),
            (e.YT = "YT"),
            (e.ZA = "ZA"),
            (e.ZM = "ZM"),
            (e.ZW = "ZW");
        })(s || (s = {}));
    },
    19074: (e, t, r) => {
      r.d(t, { N: () => i, x: () => a });
      var s = r(7165);
      const o = [
          "crawled",
          "xs",
          "sm",
          "sm@2x",
          "md",
          "md.tiff",
          "xmd",
          "xmd@2x",
          "l",
          "l@2x",
          "xl",
          "xl@2x",
          "46x30",
          "46x30@2x",
          "50x33",
          "50x33@2x",
          "56x56",
          "56x56@2x",
          "118x98",
          "118x98@2x",
          "160x106",
          "160x106@2x"
        ],
        n = (s.z.enum(o), o.reduce((e, t) => e.setKey(t, s.z.string().optional().nullable()), s.z.object({}))),
        i = s.z.object({ backgroundColor: s.z.string(), mainColor: s.z.string(), urls: n }),
        a = s.z.map(s.z.string(), i);
    },
    45146: (e, t, r) => {
      var s;
      r.d(t, { X: () => s }),
        (function (e) {
          (e.Black = "BLACK"),
            (e.Blue1 = "BLUE1"),
            (e.Blue2 = "BLUE2"),
            (e.Gold = "GOLD"),
            (e.Green1 = "GREEN1"),
            (e.Green2 = "GREEN2"),
            (e.Orange = "ORANGE"),
            (e.Red = "RED"),
            (e.Silver = "SILVER"),
            (e.White = "WHITE");
        })(s || (s = {}));
    },
    11329: (e, t, r) => {
      var s;
      r.d(t, { t: () => s }),
        (function (e) {
          (e.Mr = "MR"), (e.Mrs = "MRS"), (e.Miss = "MISS"), (e.Ms = "MS"), (e.Mx = "MX"), (e.NoneOfThese = "NONEOFTHESE");
        })(s || (s = {}));
    },
    82009: (e, t, r) => {
      var s;
      r.d(t, { z: () => s }),
        (function (e) {
          (e.Any = "ANY"),
            (e.Fax = "FAX"),
            (e.Landline = "LANDLINE"),
            (e.Mobile = "MOBILE"),
            (e.WorkFax = "WORKFAX"),
            (e.WorkLandline = "WORKLANDLINE"),
            (e.WorkMobile = "WORKMOBILE");
        })(s || (s = {}));
    },
    7149: (e, t, r) => {
      r.d(t, { L: () => s, _: () => n });
      var s,
        o = r(7165);
      !(function (e) {
        (e.BLUE = "BLUE"),
          (e.BROWN = "BROWN"),
          (e.GRAY = "GRAY"),
          (e.GREEN = "GREEN"),
          (e.ORANGE = "ORANGE"),
          (e.PINK = "PINK"),
          (e.PURPLE = "PURPLE"),
          (e.RED = "RED"),
          (e.YELLOW = "YELLOW");
      })(s || (s = {}));
      const n = o.z.object({
        color: o.z.string(),
        isSecured: o.z.boolean(),
        title: o.z.string(),
        content: o.z.string(),
        categoryId: o.z.string()
      });
    },
    82706: (e, t, r) => {
      var s;
      r.d(t, { U: () => s }),
        (function (e) {
          (e.Address = "KWAddress"),
            (e.BankAccount = "KWBankStatement"),
            (e.Company = "KWCompany"),
            (e.Credential = "KWAuthentifiant"),
            (e.DriversLicense = "KWDriverLicence"),
            (e.Email = "KWEmail"),
            (e.FiscalId = "KWFiscalStatement"),
            (e.IdCard = "KWIDCard"),
            (e.Identity = "KWIdentity"),
            (e.Passkey = "KWPasskey"),
            (e.Passport = "KWPassport"),
            (e.PaymentCard = "KWPaymentMean_creditCard"),
            (e.Phone = "KWPhone"),
            (e.Secret = "KWSecret"),
            (e.SecureNote = "KWSecureNote"),
            (e.SocialSecurityId = "KWSocialSecurityStatement"),
            (e.Website = "KWPersonalWebsite");
        })(s || (s = {}));
    },
    22499: (e, t, r) => {
      r.d(t, { e: () => i });
      var s = r(86952),
        o = r(12338),
        n = r(19892);
      const i = (0, s.Q)({
        name: "vaultNotifications",
        commands: { setVaultNotificationsStatus: o.x },
        events: {},
        queries: { getVaultNotificationsStatus: n.M }
      });
    },
    12338: (e, t, r) => {
      r.d(t, { x: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    19892: (e, t, r) => {
      r.d(t, { M: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    99074: (e, t, r) => {
      r.d(t, { v: () => l });
      var s = r(86952),
        o = r(25041),
        n = r(533),
        i = r(65378),
        a = r(96862),
        c = r(6519);
      const l = (0, s.Q)({
        name: "vaultOrganization",
        commands: { deleteCollection: o.T, createCollection: n.e, migrateCategories: i._, updateCollection: a.s },
        events: {},
        queries: { queryCollections: c.I }
      });
    },
    533: (e, t, r) => {
      r.d(t, { e: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    25041: (e, t, r) => {
      r.d(t, { T: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    65378: (e, t, r) => {
      r.d(t, { _: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.User }) {}
    },
    96862: (e, t, r) => {
      r.d(t, { C: () => s, s: () => i });
      var s,
        o = r(74354),
        n = r(25029);
      !(function (e) {
        (e.SUBSTRACT_VAULT_ITEMS = "subtract_vault_items"), (e.APPEND_VAULT_ITEMS = "append_vault_items");
      })(s || (s = {}));
      class i extends (0, o.g)({ scope: n.F.User }) {}
    },
    6519: (e, t, r) => {
      r.d(t, { I: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    87969: (e, t, r) => {
      r.d(t, { C: () => n });
      var s = r(67837),
        o = r(99074);
      class n extends (0, s.E)(o.v) {}
      (0, s.K)(o.v, n);
    },
    73883: (e, t, r) => {
      r.d(t, { R: () => n });
      var s = r(86952),
        o = r(88994);
      const n = (0, s.Q)({ name: "vaultSearch", commands: {}, events: {}, queries: { search: o.W } });
    },
    88994: (e, t, r) => {
      r.d(t, { W: () => n });
      var s = r(99059),
        o = r(25029);
      class n extends (0, s.k)({ scope: o.F.User }) {}
    },
    11375: (e, t, r) => {
      r.d(t, { a: () => _ });
      var s = r(88802),
        o = r(99634),
        n = r(52484),
        i = r(62025),
        a = r(85390),
        c = r(87065),
        l = r(20754),
        d = r(87279),
        u = r(63197),
        p = r(86252),
        h = r(57924),
        m = r(82706);
      let v = class {
        constructor(e, t) {
          (this.carbon = e),
            (this.vaultRepository = t),
            (this.isPasswordLimitEnabled = () => this._getPasswordsLimitCapability().pipe((0, c.U)((e) => e?.enabled ?? !1))),
            (this.getNumberOfPasswordsLeft = () => {
              const e = this.vaultRepository.fetchVaultItems$({ vaultItemTypes: [m.U.Credential] }).pipe(
                  (0, c.U)((e) => {
                    if (!(0, d.d6)(e)) throw new Error("Cannot retrieve credentials from vault");
                    return (0, d.db)(e).credentialsResult.matchCount;
                  })
                ),
                t = this._getPasswordsLimitCapability().pipe((0, c.U)((e) => e?.info?.limit));
              return (0, a.a)(e, t).pipe(
                (0, c.U)(([e, t]) => {
                  if ("number" == typeof t) return t - e;
                })
              );
            }),
            (this._getPasswordsLimitCapability = () =>
              this.carbon.queries.getNodePremiumStatus().pipe(
                (0, c.U)((e) => {
                  if (!(0, d.d6)(e)) throw new Error("Cannot retrieve node premium status from carbon");
                  return (0, d.db)(e).capabilities?.passwordsLimit;
                })
              ));
        }
      };
      v = (0, s.__decorate)([(0, h.GS)(), (0, s.__metadata)("design:paramtypes", [p._, i.g])], v);
      let g = class {
        constructor(e) {
          this.passwordLimitRepository = e;
        }
        execute() {
          const e = this.passwordLimitRepository.isPasswordLimitEnabled(),
            t = this.passwordLimitRepository.getNumberOfPasswordsLeft();
          return (0, a.a)(e, t).pipe((0, c.U)(([e, t]) => (e && "number" == typeof t ? (0, d.Vp)(t > 0) : (0, d.Vp)(!0))));
        }
      };
      g = (0, s.__decorate)([(0, l.e)(u.K), (0, s.__metadata)("design:paramtypes", [v])], g);
      var y = r(58684);
      let f = class {
        constructor(e) {
          this.passwordLimitRepository = e;
        }
        execute() {
          const e = this.passwordLimitRepository.isPasswordLimitEnabled(),
            t = this.passwordLimitRepository.getNumberOfPasswordsLeft();
          return (0, a.a)(e, t).pipe(
            (0, c.U)(([e, t]) => (e && "number" == typeof t ? (0, d.Vp)({ hasLimit: e, passwordsLeft: t }) : (0, d.Vp)({ hasLimit: !1 })))
          );
        }
      };
      f = (0, s.__decorate)([(0, l.e)(y.r), (0, s.__metadata)("design:paramtypes", [v])], f);
      let _ = class {};
      _ = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.Z,
            stores: [],
            handlers: { commands: {}, events: {}, queries: { canUserAddNewPassword: g, getPasswordLimitStatus: f } },
            providers: [i.g, v],
            requiredFeatureFlips: []
          })
        ],
        _
      );
    },
    94417: (e, t, r) => {
      r.d(t, { z: () => ee });
      var s,
        o = r(88802),
        n = r(99634),
        i = r(37935),
        a = r(48430);
      !(function (e) {
        (e.PasskeysInVaultDev = "vault_web_passkey_dev"), (e.PasskeysInVaultProd = "vault_web_passkey_prod");
      })(s || (s = {}));
      var c = r(63663),
        l = r(87279),
        d = r(86252),
        u = r(82706),
        p = r(273),
        h = r(81459),
        m = r(57924);
      let v = class extends h.f {};
      v = (0, o.__decorate)([(0, m.GS)()], v);
      var g = r(50415);
      (0, g.Enum)(
        "PAYMENT_TYPE_VISA",
        "PAYMENT_TYPE_MASTERCARD",
        "PAYMENT_TYPE_AMEX",
        "PAYMENT_TYPE_DISCOVER",
        "PAYMENT_TYPE_JCB",
        "PAYMENT_TYPE_DINERSCLUB"
      );
      const y = (0, g.Enum)("BLACK", "SILVER", "WHITE", "RED", "ORANGE", "GOLD", "BLUE_1", "BLUE_2", "GREEN_1", "GREEN_2");
      var f = r(18952),
        _ = r(11329),
        S = r(45146),
        E = r(82009),
        b = r(75257);
      const w = {
          [_.t.Mr]: "MR",
          [_.t.Mrs]: "MME",
          [_.t.Miss]: "MLLE",
          [_.t.Ms]: "MS",
          [_.t.Mx]: "MX",
          [_.t.NoneOfThese]: "NONE_OF_THESE"
        },
        A = {
          [S.X.Black]: y.BLACK,
          [S.X.Blue1]: y.BLUE_1,
          [S.X.Blue2]: y.BLUE_2,
          [S.X.Gold]: y.GOLD,
          [S.X.Green1]: y.GREEN_1,
          [S.X.Green2]: y.GREEN_2,
          [S.X.Orange]: y.ORANGE,
          [S.X.Red]: y.RED,
          [S.X.Silver]: y.SILVER,
          [S.X.White]: y.WHITE
        },
        T = {
          [E.z.Any]: f.z.PHONE_TYPE_ANY,
          [E.z.Fax]: f.z.PHONE_TYPE_FAX,
          [E.z.Landline]: f.z.PHONE_TYPE_LANDLINE,
          [E.z.Mobile]: f.z.PHONE_TYPE_MOBILE,
          [E.z.WorkFax]: f.z.PHONE_TYPE_WORK_FAX,
          [E.z.WorkLandline]: f.z.PHONE_TYPE_WORK_LANDLINE,
          [E.z.WorkMobile]: f.z.PHONE_TYPE_WORK_MOBILE
        },
        C = (e) => (e ? Date.parse(e) / 1e3 : null),
        I = {
          [u.U.Address]: (e) => ({ addressFull: e.streetName, addressName: e.itemName, linkedPhone: e.linkedPhoneId, ...e }),
          [u.U.BankAccount]: (e) => ({
            ...e,
            bank: e.bankCode,
            localeFormat: e.country || b.c.US,
            name: e.accountName,
            owner: e.ownerName
          }),
          [u.U.Company]: (e) => ({ name: e.companyName, ...e }),
          [u.U.Credential]: (e) => ({
            login: e.username,
            otpUrl: e.otpURL,
            otpSecret: e.otpSecret,
            secondaryLogin: e.alternativeUsername,
            title: e.itemName,
            url: e.URL,
            linkedWebsites: { addedByUser: e.linkedURLs },
            ...e
          }),
          [u.U.DriversLicense]: (e) => ({
            ...e,
            country: e.country ?? b.c.US,
            expirationDate: C(e.expirationDate),
            idNumber: e.idNumber ?? "",
            issueDate: C(e.issueDate),
            name: e.idName ?? "",
            spaceId: e.spaceId ?? "",
            state: e.state ?? ""
          }),
          [u.U.Email]: (e) => ({ email: e.emailAddress, emailName: e.itemName, ...e }),
          [u.U.FiscalId]: (e) => ({
            ...e,
            country: e.country ?? b.c.US,
            idNumber: e.fiscalNumber ?? "",
            spaceId: e.spaceId ?? "",
            teledeclarantNumber: e.teledeclarantNumber ?? ""
          }),
          [u.U.IdCard]: (e) => ({
            ...e,
            country: e.country ?? b.c.US,
            expirationDate: C(e.expirationDate),
            idNumber: e.idNumber ?? "",
            issueDate: C(e.issueDate),
            name: e.idName ?? "",
            spaceId: e.spaceId ?? ""
          }),
          [u.U.Identity]: (e) => ({ ...e, title: e.title ? w[e.title] : void 0 }),
          [u.U.Passkey]: (e) => ({ ...e }),
          [u.U.Passport]: (e) => ({
            ...e,
            country: e.country ?? b.c.US,
            expirationDate: C(e.expirationDate),
            idNumber: e.idNumber ?? "",
            issueDate: C(e.issueDate),
            name: e.idName ?? "",
            spaceId: e.spaceId ?? "",
            deliveryPlace: e.issuePlace ?? ""
          }),
          [u.U.PaymentCard]: (e) => ({ ...e, cardName: e.itemName, color: e.color ? A[e.color] : void 0, personalNote: e.note }),
          [u.U.Phone]: (e) => ({ ...e, phoneName: e.itemName, number: e.phoneNumber, type: e.type ? T[e.type] : void 0 }),
          [u.U.Secret]: (e) => ({ ...e }),
          [u.U.SecureNote]: (e) => ({ ...e }),
          [u.U.SocialSecurityId]: (e) => ({
            ...e,
            country: e.country ?? b.c.US,
            idNumber: e.idNumber ?? "",
            name: e.idName ?? "",
            spaceId: e.spaceId ?? ""
          }),
          [u.U.Website]: (e) => ({ name: e.itemName, website: e.URL, ...e })
        };
      let O = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.eventEmitter = t);
        }
        async execute({ body: e }) {
          const { vaultItemType: t, content: r, shouldSkipSync: s } = e;
          if ([u.U.DriversLicense, u.U.FiscalId, u.U.IdCard, u.U.Passport, u.U.SocialSecurityId].includes(t)) return this.createId(t, r);
          if (t === u.U.Passkey) return this.createPasskey(r);
          const { commands: o } = this.carbonLegacyClient,
            n = await o.carbonLegacyLeeloo({
              name: "savePersonalDataItem",
              arg: [{ kwType: t, origin: "MANUAL", content: I[t](r), shouldSkipSync: s }]
            });
          if ((0, l.hx)(n)) return this.handleError(t);
          const i = (0, l.db)(n).carbonResult;
          return this.handleSuccess(t, i.itemId);
        }
        handleError(e) {
          return Promise.resolve((0, l.Rn)({ tag: "error", errorMessage: `Failed to create ${e}` }));
        }
        handleSuccess(e, t) {
          return this.eventEmitter.sendEvent("created", { ids: [t], vaultItemType: e }), Promise.resolve((0, l.Vp)({ id: t }));
        }
        async createId(e, t) {
          const {
              commands: { addDriverLicense: r, addFiscalId: s, addIdCard: o, addPassport: n, addSocialSecurityId: i }
            } = this.carbonLegacyClient,
            a = { [u.U.DriversLicense]: r, [u.U.FiscalId]: s, [u.U.IdCard]: o, [u.U.Passport]: n, [u.U.SocialSecurityId]: i },
            c = await a[e](I[e](t));
          return (0, l.hx)(c) ? this.handleError(e) : this.handleSuccess(e, (0, l.db)(c).id);
        }
        async createPasskey(e) {
          const {
              commands: { addPasskey: t }
            } = this.carbonLegacyClient,
            r = await t(e);
          return (0, l.hx)(r) ? this.handleError(u.U.Passkey) : this.handleSuccess(u.U.Passkey, (0, l.db)(r).id);
        }
      };
      O = (0, o.__decorate)([(0, c.W)(p._), (0, o.__metadata)("design:paramtypes", [d._, v])], O);
      var P = r(31154);
      let R = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.eventEmitter = t);
        }
        async execute({ body: e }) {
          const { vaultItemType: t, ids: r } = e,
            { commands: s } = this.carbonLegacyClient,
            o = [],
            n = r.map((e) =>
              s.carbonLegacyLeeloo({ name: "removePersonalDataItem", arg: [{ id: e }] }).then((t) => {
                (0, l.d6)(t) && o.push(e);
              })
            );
          return (
            await Promise.allSettled(n),
            o.length > 0 && this.eventEmitter.sendEvent("deleted", { ids: o, vaultItemType: t }),
            o.length !== r.length
              ? Promise.resolve(
                  (0, l.Rn)({
                    tag: "error",
                    errorMessage: `Error: Failed to delete all ${t}s`,
                    failedDeletionIds: Array.from(new Set(...r, ...o))
                  })
                )
              : Promise.resolve((0, l.Vp)(void 0))
          );
        }
      };
      R = (0, o.__decorate)([(0, c.W)(P.c), (0, o.__metadata)("design:paramtypes", [d._, v])], R);
      var D = r(54547);
      let N = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.eventEmitter = t);
        }
        async execute({ body: e }) {
          const { content: t, id: r, vaultItemType: s, shouldSkipSync: o } = e;
          if ([u.U.DriversLicense, u.U.FiscalId, u.U.IdCard, u.U.Passport, u.U.SocialSecurityId].includes(s)) return this.updateId(s, t, r);
          if (s === u.U.Passkey) return this.updatePasskey(t, r);
          const { commands: n } = this.carbonLegacyClient,
            i = await n.carbonLegacyLeeloo({
              name: "savePersonalDataItem",
              arg: [{ kwType: s, origin: "MANUAL", content: { ...I[s](t), id: r }, shouldSkipSync: o }]
            });
          return (0, l.hx)(i)
            ? Promise.resolve((0, l.Rn)({ tag: "error", errorMessage: `Failed to update ${s}` }))
            : (this.eventEmitter.sendEvent("updated", { ids: [r], vaultItemType: s }), Promise.resolve((0, l.Vp)(void 0)));
        }
        handleError(e) {
          return Promise.resolve((0, l.Rn)({ tag: "error", errorMessage: `Failed to update ${e}` }));
        }
        handleSuccess(e, t) {
          return this.eventEmitter.sendEvent("updated", { ids: [t], vaultItemType: e }), Promise.resolve((0, l.Vp)(void 0));
        }
        async updateId(e, t, r) {
          const {
              commands: { editDriverLicense: s, editFiscalId: o, editIdCard: n, editPassport: i, editSocialSecurityId: a }
            } = this.carbonLegacyClient,
            c = { [u.U.DriversLicense]: s, [u.U.FiscalId]: o, [u.U.IdCard]: n, [u.U.Passport]: i, [u.U.SocialSecurityId]: a },
            d = await c[e]({ ...I[e](t), id: r });
          return (0, l.hx)(d) ? this.handleError(e) : this.handleSuccess(e, r);
        }
        async updatePasskey(e, t) {
          const {
              commands: { updatePasskey: r }
            } = this.carbonLegacyClient,
            s = await r({ ...e, id: t });
          return (0, l.hx)(s) ? this.handleError(u.U.Passkey) : this.handleSuccess(u.U.Passkey, t);
        }
      };
      N = (0, o.__decorate)([(0, c.W)(D.K), (0, o.__metadata)("design:paramtypes", [d._, v])], N);
      var U = r(47412);
      let L = class {
        constructor(e) {
          this.eventEmitter = e;
        }
        execute({ body: e }) {
          const { ids: t, eventType: r } = e;
          return this.eventEmitter.sendEvent(r, { ids: t, vaultItemType: u.U.Credential }), Promise.resolve((0, l.Vp)(void 0));
        }
      };
      L = (0, o.__decorate)([(0, c.W)(U.c), (0, o.__metadata)("design:paramtypes", [v])], L);
      var F = r(55441);
      let M = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async execute({ body: e }) {
          const { credentialId: t, onlyAutofillExactDomain: r, requireMasterPassword: s, useAutoLogin: o, shouldSkipSync: n } = e,
            { commands: i } = this.carbonLegacyClient,
            a = await i.carbonLegacyLeeloo({
              name: "savePersonalDataItem",
              arg: [
                {
                  kwType: u.U.Credential,
                  origin: "MANUAL",
                  content: { id: t, onlyForThisSubdomain: r, autoLogin: o, protectWithMasterPassword: s },
                  shouldSkipSync: n
                }
              ]
            });
          return (0, l.hx)(a)
            ? Promise.resolve((0, l.Rn)({ tag: "error", errorMessage: `Failed to update credential preferences for: ${t}` }))
            : Promise.resolve((0, l.Vp)(void 0));
        }
      };
      M = (0, o.__decorate)([(0, c.W)(F.m), (0, o.__metadata)("design:paramtypes", [d._])], M);
      var x = r(20754),
        k = r(55713),
        G = r(48844),
        K = r(60733),
        V = r(96303),
        j = r(54066),
        B = r(19074);
      let W = class {
        constructor(e, t) {
          (this.carbonLegacyClient = e), (this.md5Hasher = t);
        }
        execute({ body: { domain: e } }) {
          const {
            queries: { carbonState: t }
          } = this.carbonLegacyClient;
          return t({ path: "userSession.iconsCache.domains" }).pipe(
            (0, G.Qn)((t) => {
              if (((r = t), !B.x.safeParse(r).success)) throw new Error("Bad domain icons cache format");
              var r;
              return t.get((0, V.k)(this.md5Hasher.compute((0, j.u)(e))));
            })
          );
        }
      };
      W = (0, o.__decorate)([(0, x.e)(k.s), (0, o.__metadata)("design:paramtypes", [d._, K.f])], W);
      var H = r(96342),
        z = r(62025);
      let Q = class {
        constructor(e) {
          this.vaultRepository = e;
        }
        execute({ body: e }) {
          return this.vaultRepository.fetchVaultItems$(e);
        }
      };
      Q = (0, o.__decorate)([(0, x.e)(H.W), (0, o.__metadata)("design:paramtypes", [z.g])], Q);
      var q = r(83984);
      let Y = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        execute({ body: { id: e } }) {
          const {
            queries: { carbonState: t }
          } = this.carbonLegacyClient;
          return t({ path: "userSession.personalData.noteCategories" }).pipe(
            (0, G.Qn)((t) => {
              if (((r = t), !Array.isArray(r) || (0 !== r.length && "KWSecureNoteCategory" !== r[0].kwType)))
                throw new Error("Bad secure note category format");
              var r;
              const s = t.find((t) => t.Id === e)?.CategoryName;
              return s;
            })
          );
        }
      };
      Y = (0, o.__decorate)([(0, x.e)(q.F), (0, o.__metadata)("design:paramtypes", [d._])], Y);
      var $ = r(87065),
        X = r(11907),
        Z = r(17426);
      let J = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        execute({ body: { credentialId: e = "" } }) {
          const {
            queries: { carbonState: t }
          } = this.carbonLegacyClient;
          return t({ path: "userSession.personalData.credentials" }).pipe(
            (0, $.U)((t) => {
              if ((0, l.hx)(t) || !(0, Z.J)(t.data)) throw new Error("Bad credentials format");
              const r = t.data.find((t) => t.Id === e);
              if (!r) throw new Error("Credential matching provided id not found");
              return (0, l.Vp)({
                useAutoLogin: Boolean(r.AutoLogin),
                onlyAutofillExactDomain: Boolean(r.SubdomainOnly),
                requireMasterPassword: Boolean(r.AutoProtected)
              });
            })
          );
        }
      };
      J = (0, o.__decorate)([(0, x.e)(X.M), (0, o.__metadata)("design:paramtypes", [d._])], J);
      let ee = class {};
      ee = (0, o.__decorate)(
        [
          (0, n.Y)({
            api: a.L,
            handlers: {
              commands: {
                createVaultItem: O,
                deleteVaultItems: R,
                updateVaultItem: N,
                emitTemporaryVaultItemEvent: L,
                tempCredentialPreferencesUpdate: M
              },
              events: {},
              queries: { domainIconDetails: W, query: Q, secureNoteCategory: Y, tempCredentialPreferences: J }
            },
            imports: [i.D],
            providers: [v, z.g],
            requiredFeatureFlips: Object.values(s)
          })
        ],
        ee
      );
    },
    20491: (e, t, r) => {
      r.d(t, { K: () => S });
      var s = r(88802),
        o = r(99634),
        n = r(22499),
        i = r(95681),
        a = r(23347),
        c = r(25029),
        l = r(10722);
      const d = (e) => !(!e || "object" != typeof e) && "isCollectionGuidedIntroEnabled" in e;
      class u extends (0, i.Q)({
        persist: !0,
        storage: { initialValue: { isCollectionGuidedIntroEnabled: !0 }, typeGuard: d, schemaVersion: 1 },
        scope: c.F.User,
        storeName: "vault-notifications",
        capacity: a.Y._001KB,
        codec: l.E
      }) {}
      var p = r(63663),
        h = r(87279),
        m = r(12338);
      let v = class {
        constructor(e) {
          this.store = e;
        }
        async execute({ body: e }) {
          const { notificationName: t, isEnabled: r } = e;
          try {
            const e = await this.store.getState();
            return await this.store.set({ ...e, [t]: r }), (0, h.Vp)(void 0);
          } catch {
            throw new Error("SetVaultNotificationsStatus command from vault-core failed");
          }
        }
      };
      v = (0, s.__decorate)([(0, p.W)(m.x), (0, s.__metadata)("design:paramtypes", [u])], v);
      var g = r(87065),
        y = r(20754),
        f = r(19892);
      let _ = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, g.U)(h.Vp));
        }
      };
      _ = (0, s.__decorate)([(0, y.e)(f.M), (0, s.__metadata)("design:paramtypes", [u])], _);
      let S = class {};
      S = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.e,
            handlers: { commands: { setVaultNotificationsStatus: v }, events: {}, queries: { getVaultNotificationsStatus: _ } },
            stores: [u]
          })
        ],
        S
      );
    },
    55808: (e, t, r) => {
      r.d(t, { H: () => L });
      var s = r(88802),
        o = r(99634),
        n = r(99074),
        i = r(60399),
        a = r(25041),
        c = r(63663),
        l = r(86252),
        d = r(87279),
        u = r(93039),
        p = r(48844);
      const h = (e) =>
        !!Array.isArray(e) &&
        (0 === e.length ||
          e.every((e) => {
            const t = e;
            return "string" == typeof t.Id && "string" == typeof t.Name && Array.isArray(t.VaultItems);
          }));
      function m(e, t) {
        const {
          queries: { carbonState: r }
        } = e;
        return r({ path: "userSession.personalData.collections" }).pipe(
          (0, p.Qn)((e) => {
            if (!h(e)) throw new Error("Collection array has a wrong format");
            return {
              collections: (t && t.length > 0 ? e.filter((e) => t.includes(e.Id)) : e).map((e) => ({
                id: e.Id,
                name: e.Name,
                spaceId: e.SpaceId,
                vaultItems: e.VaultItems.map((e) => ({ id: e.Id, type: e.Type }))
              }))
            };
          })
        );
      }
      function v(e, t, r, s) {
        const o = new u.UserUpdateCollectionEvent({ collectionId: r, action: t, itemCount: s, isShared: !1 });
        return e.commands.carbon({ name: "logEvent", args: [{ event: o }] });
      }
      let g = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async execute({ body: e }) {
          const { id: t } = e,
            r = await (0, i.z)(m(this.carbonLegacyClient, [t]));
          if ((0, d.hx)(r)) throw new Error(`Failed to fetch additional collection info: ${r.error}`);
          const s = await this.carbonLegacyClient.commands.carbon({ name: "deleteCollection", args: [{ id: t }] });
          if ((0, d.hx)(s)) throw new Error(`Failed to delete collection: ${s.error}`);
          return (
            v(this.carbonLegacyClient, u.CollectionAction.Delete, t, r.data.collections[0]?.vaultItems?.length),
            Promise.resolve((0, d.Vp)(void 0))
          );
        }
      };
      g = (0, s.__decorate)([(0, c.W)(a.T), (0, s.__metadata)("design:paramtypes", [l._])], g);
      var y = r(533),
        f = r(28489);
      let _ = class {
        constructor(e) {
          this.carbonLegacy = e;
        }
        async execute({ body: e }) {
          const {
              content: { name: t, spaceId: r = "", vaultItems: s = [] }
            } = e,
            o = await this.carbonLegacy.commands.carbon({ name: "addCollection", args: [{ name: t, spaceId: r, vaultItems: s }] });
          if ((0, d.hx)(o)) throw new Error(`Failed to create collection: ${o.error}`);
          if (
            "object" != typeof (n = o.data.carbonResult) ||
            null === n ||
            !(0, f.l$)(n, "id") ||
            "string" != typeof n.id ||
            !(0, f.l$)(n, "success") ||
            "boolean" != typeof n.success
          )
            throw new Error("Failed to find created collection id");
          var n;
          return (
            v(this.carbonLegacy, u.CollectionAction.Add, o.data.carbonResult.id, s.length),
            s.length && v(this.carbonLegacy, u.CollectionAction.AddCredential, o.data.carbonResult.id, s.length),
            (0, d.Vp)({ id: o.data.id })
          );
        }
      };
      _ = (0, s.__decorate)([(0, c.W)(y.e), (0, s.__metadata)("design:paramtypes", [l._])], _);
      var S = r(65378),
        E = r(94189),
        b = r(25029),
        w = r(95681),
        A = r(23347),
        T = r(10722);
      const C = (e) => !0;
      class I extends (0, w.Q)({
        persist: !0,
        scope: b.F.Device,
        storeName: "collections-store",
        storeTypeGuard: C,
        capacity: A.Y._001KB,
        codec: T.E,
        storage: {
          schemaVersion: 3,
          initialValue: { isCredentialCategoriesMigrated: {} },
          typeGuard: C,
          migrateStorageSchema: () => ({ isCredentialCategoriesMigrated: {} })
        }
      }) {}
      let O = class {
        constructor(e, t, r) {
          (this.client = e), (this.carbonLegacyClient = t), (this.store = r);
        }
        updateCollection(e, t) {
          const { commands: r } = this.client.getClient(n.v);
          return r.updateCollection({ id: e, collection: t });
        }
        createCollection(e) {
          const { commands: t } = this.client.getClient(n.v);
          return t.createCollection({ content: e });
        }
        fetchCategories() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "userSession.personalData.credentialCategories" }).pipe((0, p.Qn)((e) => e));
        }
        async fetchCredentials() {
          const {
              queries: { carbonState: e }
            } = this.carbonLegacyClient,
            t = await (0, i.z)(this.fetchCategories());
          if ((0, d.hx)(t)) throw new Error("Failed to fetch categories");
          const r = t.data;
          return e({ path: "userSession.personalData.credentials" }).pipe(
            (0, p.Qn)((e) => {
              if (((t = e), !Array.isArray(t))) throw new Error("Bad credential format");
              var t;
              return e.map((e) => {
                const t = r.find((t) => t.Id === e.Category)?.CategoryName;
                return { ...e, CategoryName: t };
              });
            })
          );
        }
        async finalizeMigration(e, t) {
          return (t.isCredentialCategoriesMigrated[e] = !0), await this.store.set(t), Promise.resolve((0, d.Vp)(void 0));
        }
        async execute({ body: e }) {
          const t = e;
          if (!t) throw new Error("Failed to fetch username");
          const r = await this.store.getState();
          if (r.isCredentialCategoriesMigrated[t]) return Promise.resolve((0, d.Vp)(void 0));
          const s = await (0, i.z)(await this.fetchCredentials());
          if ((0, d.hx)(s)) throw new Error("Failed to fetch credentials");
          const o = s.data;
          if (0 === o.length) return this.finalizeMigration(t, r);
          const n = await (0, i.z)(m(this.carbonLegacyClient));
          if ((0, d.hx)(n)) throw new Error("Failed to fetch collections");
          const a = n.data.collections;
          a.forEach((e) => {
            "string" != typeof e.spaceId && (e.spaceId = "");
          });
          const c = [];
          for (let e = 0; e < o.length; e++) {
            const t = o[e];
            if (!t.CategoryName) continue;
            const r = t.CategoryName,
              s = t.SpaceId ?? "",
              n = a.find((e) => e.name === r && e.spaceId === s);
            if (n) {
              n.vaultItems.push({ id: t.Id, type: "KWAuthentifiant" });
              continue;
            }
            const i = c.find((e) => e.name === r && e.spaceId === s);
            i
              ? i.vaultItems.push({ id: t.Id, type: "KWAuthentifiant" })
              : c.push({ name: r, spaceId: s, vaultItems: [{ id: t.Id, type: "KWAuthentifiant" }] });
          }
          for (const e of a) await this.updateCollection(e.id, e);
          for (const e of c) await this.createCollection(e);
          return this.finalizeMigration(t, r);
        }
      };
      O = (0, s.__decorate)([(0, c.W)(S._), (0, s.__metadata)("design:paramtypes", [E.w, l._, I])], O);
      var P = r(96862);
      let R = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async execute({ body: e }) {
          const { id: t, collection: r, operationType: s = P.C.APPEND_VAULT_ITEMS } = e,
            o = await (0, i.z)(m(this.carbonLegacyClient, [t]));
          if ((0, d.hx)(o)) throw new Error(`Failed to fetch additional collection info: ${o.error}`);
          const n = o.data.collections[0];
          r.vaultItems && (n.vaultItems = this.mutateCollectionVaultItems(n, s, r.vaultItems));
          const a = await this.carbonLegacyClient.commands.carbon({
            name: "updateCollection",
            args: [{ id: n.id, name: r.name ?? n.name, spaceId: r.spaceId ?? n.spaceId, vaultItems: n.vaultItems }]
          });
          if ((0, d.hx)(a)) throw new Error(`Failed to update collection: ${a.error}`);
          return this.handleLogs(n, r, s), Promise.resolve((0, d.Vp)(void 0));
        }
        handleLogs(e, t, r) {
          t.name && v(this.carbonLegacyClient, u.CollectionAction.Edit, e.id, e.vaultItems.length),
            t.vaultItems &&
              v(
                this.carbonLegacyClient,
                r === P.C.SUBSTRACT_VAULT_ITEMS ? u.CollectionAction.DeleteCredential : u.CollectionAction.AddCredential,
                e.id,
                1
              );
        }
        getDeduplicatedList(e) {
          return [...new Map(e.map((e) => [e.id, e])).values()];
        }
        mutateCollectionVaultItems(e, t, r) {
          return t === P.C.SUBSTRACT_VAULT_ITEMS
            ? e.vaultItems.filter((e) => !r.some((t) => t.id === e.id))
            : this.getDeduplicatedList([...e.vaultItems, ...r]);
        }
      };
      R = (0, s.__decorate)([(0, c.W)(P.s), (0, s.__metadata)("design:paramtypes", [l._])], R);
      var D = r(6519),
        N = r(20754);
      let U = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        execute({ body: e }) {
          const { ids: t } = e;
          return m(this.carbonLegacyClient, t);
        }
      };
      U = (0, s.__decorate)([(0, N.e)(D.I), (0, s.__metadata)("design:paramtypes", [l._])], U);
      let L = class {};
      L = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.v,
            stores: [I],
            handlers: {
              commands: { deleteCollection: g, createCollection: _, migrateCategories: O, updateCollection: R },
              events: {},
              queries: { queryCollections: U }
            },
            requiredFeatureFlips: ["vault_web_collection_migration_space_prod_v2", "vault_web_popupSavedState_release"]
          })
        ],
        L
      );
    },
    17426: (e, t, r) => {
      r.d(t, { J: () => n });
      var s = r(82706),
        o = r(89722);
      const n = (e) => (0, o.w)(e, s.U.Credential);
    },
    89722: (e, t, r) => {
      function s(e, t) {
        if (!Array.isArray(e)) return !1;
        if (0 === e.length) return !0;
        return e[0].kwType === t;
      }
      r.d(t, { w: () => s });
    },
    62025: (e, t, r) => {
      r.d(t, { g: () => ce });
      var s = r(88802),
        o = r(85390),
        n = r(87065),
        i = r(57924),
        a = r(87279),
        c = r(48844),
        l = r(86252),
        d = r(82706),
        u = r(89722);
      const p = (e) => (0, u.w)(e, d.U.Address),
        h = (e) => (0, u.w)(e, d.U.Company),
        m = (e) => (0, u.w)(e, d.U.Email),
        v = (e) => (0, u.w)(e, d.U.Identity),
        g = (e) => (0, u.w)(e, d.U.Phone),
        y = (e) => (0, u.w)(e, d.U.Website),
        f = (e) => (0, u.w)(e, d.U.BankAccount);
      var _ = r(17426);
      const S = (e) => (0, u.w)(e, d.U.DriversLicense),
        E = (e) => (0, u.w)(e, d.U.FiscalId),
        b = (e) => (0, u.w)(e, d.U.IdCard),
        w = (e) => (0, u.w)(e, d.U.Passport),
        A = (e) => (0, u.w)(e, d.U.SocialSecurityId),
        T = (e) => (0, u.w)(e, d.U.Passkey),
        C = (e) => (0, u.w)(e, d.U.PaymentCard),
        I = (e) => (0, u.w)(e, d.U.SecureNote);
      const O = (e) =>
        (function (e, t) {
          if (!Array.isArray(e)) return !1;
          if (0 === e.length) return !0;
          const r = e[0];
          for (let e = 0; e < t.length; e++) {
            const s = t[e];
            if (!Object.prototype.hasOwnProperty.call(r, s)) return !1;
          }
          return !0;
        })(e, ["teamId"]);
      var P = r(9531),
        R = r(92481);
      function D(e, t) {
        return e in t;
      }
      function N(e) {
        const t = {};
        for (const r in e) t[r.charAt(0).toLowerCase() + r.slice(1)] = e[r];
        return t;
      }
      const U = (e) => {
        if (!e || 3 !== e.split("-").length) return "";
        const t = e.split("-"),
          r = Number(t[0]),
          s = Number(t[1]) - 1,
          o = Number(t[2]);
        return (0, R.Z)(new Date(r, s, o), "yyyy-MM-dd");
      };
      function L(e, t, r) {
        return t || r
          ? e.filter(
              (e) =>
                !(
                  t &&
                  !t.every(
                    (t) =>
                      D(t.property, e) &&
                      (function (e, t, r = P.l.Equal) {
                        return { [P.l.Equal]: () => e === t, [P.l.LessThan]: () => e < t, [P.l.GreaterThan]: () => e > t }[r]();
                      })(e[t.property], t.value, t.operator)
                  )
                ) &&
                (r?.(e) ?? !0)
            )
          : e;
      }
      var F = r(24652);
      function M(e, t) {
        if (!t || !e.length || !D(t.property, e[0])) return e;
        const r = t.property,
          s = t.direction || F.S.Ascend;
        return e.sort((e, t) => {
          const o = e[r],
            n = t[r];
          return o || n
            ? o
              ? n
                ? (function (e, t, r) {
                    return "string" == typeof e && "string" == typeof t
                      ? r === F.S.Ascend
                        ? e.localeCompare(t)
                        : t.localeCompare(e)
                      : "number" == typeof e && "number" == typeof t
                      ? r === F.S.Ascend
                        ? e - t
                        : t - e
                      : 0;
                  })(o, n, s)
                : s === F.S.Ascend
                ? 1
                : -1
              : s === F.S.Ascend
              ? -1
              : 1
            : 0;
        });
      }
      const x = (e) => {
          const { AddressName: t, LinkedPhone: r, StreetName: s, AddressFull: o, StateLevel2: n, ...i } = e;
          return { ...N(i), itemName: t, linkedPhoneId: r, streetName: s || o };
        },
        k = (e) => {
          const { BankAccountName: t, BankAccountOwner: r, BankAccountIBAN: s, BankAccountBIC: o, BankAccountBank: n, ...i } = e;
          return { ...N(i), accountName: t, bankCode: n || "", BIC: o, country: i.LocaleFormat, IBAN: s, ownerName: r };
        },
        G = (e) => {
          const { Name: t, PersonalNote: r, ...s } = e;
          return { ...N(s), companyName: t };
        },
        K = (e) => {
          const {
            AnonId: t,
            CreationDatetime: r,
            Email: s,
            Id: o,
            LastBackupTime: n,
            LastUse: i,
            LinkedServices: a,
            LocaleFormat: c,
            Login: l,
            Note: d,
            OtpSecret: u,
            OtpUrl: p,
            Password: h,
            SecondaryLogin: m,
            SpaceId: v,
            Title: g,
            Url: y,
            UserModificationDatetime: f,
            UserSelectedUrl: _
          } = e;
          return {
            ...N({
              AnonId: t,
              CreationDatetime: r,
              Email: s,
              Id: o,
              LastBackupTime: n,
              LastUse: i,
              LocaleFormat: c,
              Note: d,
              Password: h,
              SpaceId: v,
              UserModificationDatetime: f
            }),
            alternativeUsername: m,
            itemName: g ?? "",
            linkedURLs: a?.associated_domains.map((e) => e.domain) ?? [],
            otpURL: p,
            otpSecret: u,
            URL: y || _ || "",
            username: l
          };
        },
        V = (e) => {
          const { DeliveryDate: t, ExpireDate: r, Fullname: s, LinkedIdentity: o, Number: n, DateOfBirth: i, Sex: a, ...c } = e;
          return { ...N(c), idName: s, idNumber: n, issueDate: U(t), expirationDate: U(r), country: c.LocaleFormat };
        },
        j = (e) => {
          const { EmailName: t, Email: r, Type: s, ...o } = e;
          return { ...N(o), itemName: t, emailAddress: r, type: s };
        },
        B = (e) => ({ ...N(e), country: e.LocaleFormat }),
        W = (e) => {
          const { DateOfBirth: t, DeliveryDate: r, ExpireDate: s, Fullname: o, LinkedIdentity: n, Number: i, Sex: a, ...c } = e;
          return { ...N(c), idName: o, idNumber: i, issueDate: U(r), expirationDate: U(s), country: c.LocaleFormat };
        };
      var H = r(11329);
      const z = { "": void 0, MR: H.t.Mr, MME: H.t.Mrs, MLLE: H.t.Miss, MS: H.t.Ms, MX: H.t.Mx, NONE_OF_THESE: H.t.NoneOfThese },
        Q = (e) => {
          const { Title: t, ...r } = e;
          return { ...N(r), title: z[t] };
        },
        q = (e) => {
          const {
            DeliveryDate: t,
            DeliveryPlace: r,
            ExpireDate: s,
            Fullname: o,
            LinkedIdentity: n,
            Number: i,
            DateOfBirth: a,
            Sex: c,
            ...l
          } = e;
          return {
            ...N(l),
            idName: o,
            idNumber: i || "",
            issueDate: U(t),
            issuePlace: r || "",
            expirationDate: U(s),
            country: l.LocaleFormat
          };
        };
      var Y = r(45146);
      const $ = {
          BLACK: Y.X.Black,
          BLUE_1: Y.X.Blue1,
          BLUE_2: Y.X.Blue2,
          GOLD: Y.X.Gold,
          GREEN_1: Y.X.Green1,
          GREEN_2: Y.X.Green2,
          ORANGE: Y.X.Orange,
          RED: Y.X.Red,
          SILVER: Y.X.Silver,
          WHITE: Y.X.White
        },
        X = (e) => {
          const {
            Name: t,
            CCNote: r,
            Color: s,
            Bank: o,
            CardNumberLastDigits: n,
            IssueNumber: i,
            StartMonth: a,
            StartYear: c,
            Type: l,
            ...d
          } = e;
          return { ...N(d), itemName: t, color: $[s], note: r || "" };
        };
      var Z = r(18952),
        J = r(82009);
      const ee = {
          [Z.z.PHONE_TYPE_ANY]: J.z.Any,
          [Z.z.PHONE_TYPE_FAX]: J.z.Fax,
          [Z.z.PHONE_TYPE_LANDLINE]: J.z.Landline,
          [Z.z.PHONE_TYPE_MOBILE]: J.z.Mobile,
          [Z.z.PHONE_TYPE_WORK_FAX]: J.z.WorkFax,
          [Z.z.PHONE_TYPE_WORK_LANDLINE]: J.z.WorkLandline,
          [Z.z.PHONE_TYPE_WORK_MOBILE]: J.z.WorkMobile
        },
        te = (e) => {
          const { PhoneName: t, Number: r, Type: s, ...o } = e;
          return { ...N(o), itemName: t, phoneNumber: r, type: ee[s] };
        };
      var re = r(7149);
      const se = (e) => {
          const { Secured: t, Type: r, Category: s, ...o } = e;
          return { ...N(o), categoryId: s, isSecured: t, color: re.L[r] || re.L.GRAY };
        },
        oe = (e) => {
          const { DateOfBirth: t, LinkedIdentity: r, Sex: s, SocialSecurityFullname: o, SocialSecurityNumber: n, ...i } = e;
          return { ...N(i), idName: o, idNumber: n, country: i.LocaleFormat };
        },
        ne = (e) => {
          const { Website: t, Name: r, PersonalNote: s, ...o } = e;
          return { ...N(o), itemName: r, URL: t };
        },
        ie = (e) => (0, u.w)(e, d.U.Secret),
        ae = (e) => ({ ...N(e) });
      let ce = class {
        constructor(e) {
          (this.carbonLegacyClient = e),
            (this.getVaultItems$TypeDictionary = {
              [d.U.Address]: this.getVaultItems$("addressesResult", p, x),
              [d.U.BankAccount]: this.getVaultItems$("bankAccountsResult", f, k),
              [d.U.Company]: this.getVaultItems$("companiesResult", h, G),
              [d.U.Credential]: this.getVaultItems$("credentialsResult", _.J, K),
              [d.U.DriversLicense]: this.getVaultItems$("driversLicensesResult", S, V, "driverLicenses"),
              [d.U.Email]: this.getVaultItems$("emailsResult", m, j),
              [d.U.FiscalId]: this.getVaultItems$("fiscalIdsResult", E, B),
              [d.U.IdCard]: this.getVaultItems$("idCardsResult", b, W),
              [d.U.Identity]: this.getVaultItems$("identitiesResult", v, Q),
              [d.U.Passkey]: this.getVaultItems$("passkeysResult", T, N),
              [d.U.Passport]: this.getVaultItems$("passportsResult", w, q),
              [d.U.PaymentCard]: this.getVaultItems$("paymentCardsResult", C, X),
              [d.U.Phone]: this.getVaultItems$("phonesResult", g, te),
              [d.U.Secret]: this.getVaultItems$("secretsResult", ie, ae),
              [d.U.SecureNote]: this.getVaultItems$("secureNotesResult", I, se, "notes"),
              [d.U.SocialSecurityId]: this.getVaultItems$("socialSecurityIdsResult", A, oe),
              [d.U.Website]: this.getVaultItems$("websitesResult", y, ne, "personalWebsites")
            }),
            (this.getEmptyVaultItemsQueryResult = () => ({
              addressesResult: this.getEmptyItemsQueryResult(),
              bankAccountsResult: this.getEmptyItemsQueryResult(),
              companiesResult: this.getEmptyItemsQueryResult(),
              credentialsResult: this.getEmptyItemsQueryResult(),
              driversLicensesResult: this.getEmptyItemsQueryResult(),
              emailsResult: this.getEmptyItemsQueryResult(),
              fiscalIdsResult: this.getEmptyItemsQueryResult(),
              idCardsResult: this.getEmptyItemsQueryResult(),
              identitiesResult: this.getEmptyItemsQueryResult(),
              passkeysResult: this.getEmptyItemsQueryResult(),
              passportsResult: this.getEmptyItemsQueryResult(),
              paymentCardsResult: this.getEmptyItemsQueryResult(),
              phonesResult: this.getEmptyItemsQueryResult(),
              secretsResult: this.getEmptyItemsQueryResult(),
              secureNotesResult: this.getEmptyItemsQueryResult(),
              socialSecurityIdsResult: this.getEmptyItemsQueryResult(),
              websitesResult: this.getEmptyItemsQueryResult()
            })),
            (this.getEmptyItemsQueryResult = () => ({ items: [], matchCount: 0 }));
        }
        initializeVaultItemsQueryParams(e) {
          const { ids: t, pageSize: r, pageNumber: s, propertyFilters: o, propertySorting: n } = e;
          (this.ids = t), (this.propertyFilters = o), (this.propertySorting = n), (this.pageSize = r), (this.pageNumber = s);
        }
        fetchVaultItems$(e, t) {
          const { vaultItemTypes: r, ...s } = e;
          this.initializeVaultItemsQueryParams(s), (this.additionalFilterFunc = t);
          const i = (0, o.a)(r.map((e) => this.getVaultItems$TypeDictionary[e])),
            c = this.getEmptyVaultItemsQueryResult();
          return i.pipe(
            (0, n.U)(
              (e) => (
                e.forEach((e) => {
                  if ("failure" === e.tag) throw new Error("Error while fetching vault items");
                  Object.assign(c, e.data);
                }),
                (0, a.Vp)(c)
              )
            )
          );
        }
        getVaultItems$(e, t, r, s) {
          return (
            (s = s ?? e.replace("Result", "")),
            (0, o.a)([this.getCarbonVaultItems$(e, t, s), this.getQuarantinedSpaces$()], (e, t) =>
              (0, a.Vp)(
                (function (e, t, r, s) {
                  return e.flatMap((e) =>
                    t.some((t) => t.teamId === e.SpaceId) || (s && !s.some((t) => t.toUpperCase() === e.Id.toUpperCase())) ? [] : r(e)
                  );
                })(e, t, r, this.ids)
              )
            ).pipe(
              (0, c.Qn)((t) => {
                const r = M(L(t, this.propertyFilters, this.additionalFilterFunc), this.propertySorting);
                return { [e]: { items: this.getPage(r), matchCount: r.length } };
              })
            )
          );
        }
        getPage(e) {
          return this.pageNumber && this.pageSize ? e.slice(this.pageSize * (this.pageNumber - 1), this.pageSize * this.pageNumber) : e;
        }
        getCarbonVaultItems$(e, t, r) {
          const {
            queries: { carbonState: s }
          } = this.carbonLegacyClient;
          return s({ path: `userSession.personalData.${r}` }).pipe(
            (0, n.U)((r) => {
              if ((0, a.hx)(r) || !t(r.data)) throw new Error(`Bad ${e} format`);
              return r.data;
            })
          );
        }
        getQuarantinedSpaces$() {
          const {
            queries: { carbonState: e }
          } = this.carbonLegacyClient;
          return e({ path: "userSession.spaceData.spaces" }).pipe(
            (0, n.U)((e) => {
              if ((0, a.hx)(e) || !O(e.data)) throw new Error("Bad spaces format");
              return e.data.filter((e) => this.isPremiumStatusSpaceQuarantined(e.details));
            })
          );
        }
        isPremiumStatusSpaceQuarantined(e) {
          return "accepted" !== e.status.toLowerCase() && Boolean(e.info.removeForcedContentEnabled);
        }
      };
      ce = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [l._])], ce);
    },
    36988: (e, t, r) => {
      r.d(t, { U: () => y });
      var s = r(88802),
        o = r(99634),
        n = r(73883),
        i = r(85390),
        a = r(43978),
        c = r(20754),
        l = r(87279),
        d = r(48844),
        u = r(85612),
        p = r(82706),
        h = r(88994),
        m = r(87969),
        v = r(62025);
      let g = class {
        constructor(e, t, r) {
          (this.vaultRepository = e),
            (this.vaultOrganizationClient = t),
            (this.sharingCollectionsClient = r),
            (this.separator = ","),
            (this.collections = []),
            (this.searchQuery = ""),
            (this.normalizeString = (e) =>
              e
                .normalize("NFD")
                .replace(/[\u0300-\u036f]/g, "")
                .toLowerCase()),
            (this.isVaultItemMatch = (e) => {
              let t = "";
              return (
                this.collections.forEach((r) => {
                  r.vaultItems.some((t) => t.id === e.id) && (t += `${r.name}${this.separator}`);
                }),
                this.isMatch(e, t)
              );
            });
        }
        execute({ body: e }) {
          const { vaultItemTypes: t, searchQuery: r, ...s } = e;
          this.searchQuery = r;
          const {
              queries: { queryCollections: o }
            } = this.vaultOrganizationClient,
            {
              queries: { sharedCollectionsWithItems: n }
            } = this.sharingCollectionsClient;
          return (0, i.a)([o({}), n()]).pipe(
            (0, a.w)(([e, r]) => {
              if ((0, l.hx)(e) || (0, l.hx)(r)) throw new Error("Error querying collections");
              return (
                (this.collections = e.data.collections.concat(r.data)),
                t
                  ? this.vaultRepository.fetchVaultItems$({ vaultItemTypes: t, ...s }, this.isVaultItemMatch)
                  : this.vaultRepository.fetchVaultItems$({ vaultItemTypes: Object.values(p.U), ...s }, this.isVaultItemMatch)
              );
            }),
            (0, d.Qn)((e) => {
              let r;
              if (t) r = { items: [], matchCount: 0 };
              else {
                const e = this.collections.filter((e) => this.isMatch(e));
                r = { items: e, matchCount: e.length };
              }
              return { ...e, collectionsResult: r };
            })
          );
        }
        isMatch(e, t = "") {
          return (
            (t += Object.values(e)
              .filter((e) => "object" != typeof e)
              .join(this.separator)),
            this.normalizeString(t).includes(this.normalizeString(this.searchQuery))
          );
        }
      };
      g = (0, s.__decorate)([(0, c.e)(h.W), (0, s.__metadata)("design:paramtypes", [v.g, m.C, u.L])], g);
      let y = class {};
      y = (0, s.__decorate)([(0, o.Y)({ api: n.R, handlers: { commands: {}, events: {}, queries: { search: g } }, providers: [v.g] })], y);
    },
    43866: (e, t, r) => {
      r.d(t, { d: () => s });
      class s {
        constructor() {
          (this.shutdownHooks = []), (this.externalComponentReadyConditions = []), (this.appReadyHooks = []);
        }
        addExternalComponentReadyCondition(e) {
          this.externalComponentReadyConditions.push(e);
        }
        addAppReadyHook(e) {
          this.appReadyHooks.push(e);
        }
        addShutdownHook(e) {
          this.shutdownHooks.push(e);
        }
        removeShutdownHook(e) {
          const t = this.shutdownHooks.indexOf(e);
          t >= 0 && this.shutdownHooks.splice(t, 1);
        }
        startup() {
          const e = this.waitAndTriggerAppReady();
          if (!this.externalComponentReadyConditions.length) return e;
          this.addShutdownHook(async () => await e);
        }
        async shutDown() {
          for (; this.shutdownHooks.length > 0; ) {
            const e = this.shutdownHooks.pop();
            e && (await e());
          }
        }
        async waitAndTriggerAppReady() {
          await Promise.all(this.externalComponentReadyConditions.map((e) => e())), await this.executeStartupHooks(this.appReadyHooks);
        }
        async executeStartupHooks(e) {
          for (; e.length > 0; ) {
            const t = e.shift();
            if (t) {
              const e = await t();
              e && this.addShutdownHook(e);
            }
          }
        }
      }
    },
    21904: (e, t, r) => {
      r.d(t, { O: () => c, r: () => l });
      var s = r(60399),
        o = r(24966),
        n = r(87065),
        i = r(30523),
        a = r(58376);
      class c {
        async waitTimeout(e) {
          await (0, s.z)(this.createObservableTimer(e, e));
        }
      }
      class l extends c {
        constructor() {
          super(...arguments),
            (this.subscribers$ = new o.X(new Set())),
            (this.time = 0),
            (this.pendingTimerCount$ = this.subscribers$.pipe((0, n.U)((e) => e.size)));
        }
        fireTimer(e = 1) {
          (this.time += e),
            [...this.subscribers$.value].forEach((e) => {
              e.next(this.time);
            });
        }
        async allSubscribersDisconnected() {
          await (0, s.z)(this.pendingTimerCount$.pipe((0, i.h)((e) => !e)));
        }
        createObservableTimer() {
          return new a.y(
            (e) => (
              this.subscribers$.next(new Set([...this.subscribers$.value, e])),
              () => {
                this.subscribers$.next(new Set([...this.subscribers$.value].filter((t) => t !== e)));
              }
            )
          );
        }
      }
    },
    96259: (e, t, r) => {
      r.d(t, { t: () => n, u: () => i });
      var s = r(8987),
        o = r(49329);
      const n = (e, t) =>
          (() => {
            const e = (t) => ({
              define: () => t,
              with: (r) => {
                const s = { api: r.module, main: r.on, queryOnly: r.queryOnly ?? [] },
                  o = { [r.module.name]: s };
                return e({ ...t, ...o });
              }
            });
            return e({});
          })()
            .with({ module: s.t$, on: e })
            .with({ module: o.e, on: e }),
        i = n("node", []);
    },
    26457: (e, t, r) => {
      r.d(t, { V: () => s, W: () => o });
      class s {}
      class o extends s {
        log() {}
        error() {}
        warn() {}
        trace() {}
      }
    },
    10514: (e, t, r) => {
      r.d(t, { H: () => n, Y: () => s });
      r(65192);
      var s,
        o = r(21869);
      !(function (e) {
        (e.Command = "command"), (e.Query = "query"), (e.Event = "event"), (e.Init = "init"), (e.Cron = "cron");
      })(s || (s = {}));
      const n = { body: void 0, context: new o.f(), module: "module", name: "command", type: s.Command };
    },
    49069: (e, t, r) => {
      r.d(t, { u: () => je, W: () => Be });
      var s = r(10722),
        o = r(30523),
        n = r(60399),
        i = r(1484),
        a = r(28489);
      var c = r(31408),
        l = r(42949),
        d = r(94189),
        u = r(96917),
        p = r(16855),
        h = r(83081),
        m = r(43866),
        v = r(26457),
        g = r(88802),
        y = r(17988),
        f = r(10514);
      const _ = { name: "api", commands: {}, events: {}, queries: {} };
      var S = r(25029),
        E = r(95087),
        b = r(87279),
        w = r(8987);
      async function A(e) {
        const t = await (0, n.z)(e.getClient(w.t$).queries.activeUser());
        if ((0, b.d6)(t) && t.data.userName) return t.data.userName;
      }
      var T = r(21869),
        C = r(22838);
      let I = class {
        constructor(e, t, r) {
          (this.introspection = e), (this.moduleRef = t), (this.clients = r);
        }
        async execute(e) {
          const t = i.ContextIdFactory.getByRequest(e),
            { type: r } = e,
            s = () => e.context.getOrAdd(T.l.UserName, async () => await A(this.clients));
          if (!(e.module in this.introspection.modules)) throw new Error("Unknown module " + e.module);
          const o = this.introspection.modules[e.module],
            n = o.api ?? _,
            a = o.handlers ?? C.TB;
          switch (r) {
            case f.Y.Query: {
              const { queries: r } = n;
              if (e.name in r) {
                const o = r[e.name],
                  n = new o(e.body),
                  i = a.queries[e.name];
                o.metadata.scope === S.F.User && (await s());
                return { result: (await this.moduleRef.resolve(i, t, { strict: !1 })).execute(n, { name: e.name }) };
              }
              throw new Error("Unknown query " + e.name);
            }
            case f.Y.Command: {
              const { commands: r } = n;
              if (e.name in r) {
                const o = r[e.name],
                  n = new o(e.body),
                  i = a.commands[e.name];
                o.metadata.scope === S.F.User && (await s());
                const c = await this.moduleRef.resolve(i, t, { strict: !1 });
                return { result: await c.execute(n, { name: e.name }) };
              }
              throw new Error("Unknown command " + e.name);
            }
            case f.Y.Event: {
              const { events: r } = n;
              if (e.name in r) {
                const o = r[e.name],
                  n = new o(e.body),
                  i = Object.values(this.introspection.modules).flatMap((t) => (t.handlers ?? C.TB).events[e.module]?.events[e.name]);
                o.metadata.scope === S.F.User && (await s());
                const a = await Promise.all(
                  i
                    .filter((e) => this.introspection.supportedEventHandlers.has(e))
                    .map(async (e) => await this.moduleRef.resolve(e, t, { strict: !1 }))
                );
                return void (await Promise.all(a.map((e) => e.handle(n))));
              }
              throw new Error("Unknown event " + e.name);
            }
            case f.Y.Cron: {
              const r = (o.crons ?? []).find((t) => t.name === e.name);
              if (!r) throw new Error("unknown cron " + e.name);
              if (r.scope === S.F.User) {
                if (!(await s())) return { result: !1 };
              }
              const n = await this.moduleRef.resolve(r.handler, t, { strict: !1 });
              return n.isRunnable && !(await n.isRunnable()) ? { result: !1 } : (await n.run(), { result: !0 });
            }
          }
          (0, E.U)(r);
        }
      };
      (0, g.__decorate)(
        [
          (0, y.All)(),
          (0, g.__param)(0, (0, y.Req)()),
          (0, g.__metadata)("design:type", Function),
          (0, g.__metadata)("design:paramtypes", [Object]),
          (0, g.__metadata)("design:returntype", Promise)
        ],
        I.prototype,
        "execute",
        null
      ),
        (I = (0, g.__decorate)(
          [(0, y.Controller)({ scope: y.Scope.REQUEST, durable: !1 }), (0, g.__metadata)("design:paramtypes", [C.Q1, i.ModuleRef, d.m])],
          I
        ));
      var O = r(21904),
        P = r(11053),
        R = r(38144),
        D = r(23711),
        N = r(43702),
        U = r(91199),
        L = r(4603),
        F = r(75994),
        M = r(9671),
        x = r(71949),
        k = r(56860);
      let G = class {
        catch(e, t) {
          t.switchToHttp().getResponse().fail(e);
        }
      };
      G = (0, g.__decorate)([(0, y.Catch)(Error)], G);
      const K = {
        provide: T.f,
        scope: y.Scope.REQUEST,
        inject: [i.REQUEST],
        useFactory: (e) => {
          const t = (() => {
            switch (e.type) {
              case f.Y.Command:
              case f.Y.Event:
              case f.Y.Query:
              case f.Y.Cron:
                return e.context;
              case f.Y.Init:
                return new T.f();
              default:
                (0, E.U)(e);
            }
          })();
          return t.getOrAdd(T.l.UseCaseId, () => String(i.ContextIdFactory.getByRequest(e).id)), t;
        }
      };
      var V = r(97631);
      class j {
        static create({
          brokers: { cqrs: e, event: t },
          configProviders: r,
          keyValueStorageInfrastructure: o,
          lifeCycle: n,
          logger: a,
          modules: g,
          nodeConfiguration: y,
          storeInfrastructureFactory: f,
          timers: _,
          jsonFetcher: S,
          defaultDeviceStorageEncryptionCodecProvider: E,
          defaultUserStorageEncryptionCodecProvider: b,
          storeList: w,
          interceptors: A,
          introspection: B,
          moduleClientsProviders: W,
          userUseCaseScopeProvider: H
        }) {
          return {
            module: j,
            providers: [
              c.ExplorerService,
              { provide: U.QI, useValue: o },
              { provide: m.d, useValue: n },
              { provide: p.$, useValue: y },
              { provide: l.d, useValue: e },
              { provide: u.a, useValue: t },
              { provide: F.X, useValue: S },
              d.w,
              d.m,
              ...r,
              { provide: v.V, useValue: a },
              K,
              { provide: h.G, useValue: f },
              { provide: O.O, useValue: _ },
              P.u1,
              { provide: L.u, useValue: new L.u(o) },
              D.z,
              E,
              b,
              N.b,
              s.E,
              { provide: C.Q1, useValue: B },
              { provide: k.D, useValue: w },
              x.X,
              M.J,
              { provide: i.APP_FILTER, useClass: G },
              ...A.flatMap((e) => [{ provide: i.APP_INTERCEPTOR, useClass: e }, e]),
              ...W,
              H
            ],
            imports: [...g],
            exports: [
              m.d,
              p.$,
              l.d,
              u.a,
              d.w,
              d.m,
              ...r.map(({ provide: e }) => e),
              v.V,
              T.f,
              h.G,
              O.O,
              P.u1,
              D.z,
              R.h,
              R.s,
              N.b,
              s.E,
              L.u,
              U.QI,
              F.X,
              x.X,
              M.J,
              C.Q1,
              ...W.map(({ provide: e }) => e),
              V.g
            ],
            controllers: [I],
            global: !0
          };
        }
      }
      var B = r(24966),
        W = r(17350),
        H = r(162),
        z = r(46420);
      const Q = () => {},
        q = () => {
          throw new Error("Not supported");
        };
      class Y {
        constructor(e, t, r) {
          (this.cqrsBroker = e),
            (this.eventsBroker = t),
            (this.cronsBroker = r),
            (this.isListening$ = new B.X(!1)),
            (this.use = q),
            (this.get = q),
            (this.post = q),
            (this.head = q),
            (this.delete = q),
            (this.put = q),
            (this.options = q),
            (this.patch = q),
            (this.end = q),
            (this.applyVersionFilter = q),
            (this.disconnect = Q),
            (this.close = Q),
            (this.status = q),
            (this.render = q),
            (this.redirect = q),
            (this.setHeader = q),
            (this.enableCors = q),
            (this.initHttpServer = q),
            (this.registerParserMiddleware = q),
            (this.createMiddlewareFactory = q);
        }
        isHeadersSent() {
          return !1;
        }
        bindHandler(e) {
          if (this.cqrsCallbacks || this.eventCallbacks) throw new Error("Handler already registered");
          (this.cqrsCallbacks = {
            onCommand: (t, r, s, o) =>
              new Promise((n, i) => {
                e(
                  { type: f.Y.Command, module: t, name: r, body: s, context: o },
                  { type: f.Y.Command, value: { result: (0, b.Vp)(void 0) }, reply: (e) => n(e), fail: (e) => i(e) }
                );
              }),
            onQuery: (t, r, s, o) => {
              const n = new Promise((n, i) => {
                e(
                  { type: f.Y.Query, module: t, name: r, body: s, context: o },
                  { type: f.Y.Query, value: { result: W.E }, reply: (e) => n(e), fail: (e) => i(e) }
                );
              });
              return (0, H.D)(n).pipe((0, z.J)());
            }
          }),
            (this.eventCallbacks = {
              onLocalEvent: (t, r, s, o, n) =>
                new Promise((r, i) => {
                  e({ type: f.Y.Event, body: o, context: n, name: s, module: t }, { type: f.Y.Event, reply: () => r(), fail: (e) => i(e) });
                })
            }),
            (this.cronCallbacks = (t, r) =>
              new Promise((s, o) => {
                e(
                  { type: f.Y.Cron, context: new T.f(), module: t, name: r },
                  { type: f.Y.Cron, value: { result: !1 }, reply: (e) => s(e), fail: (e) => o(e) }
                );
              }));
        }
        all(e, t) {
          if (!t) throw new Error("Provide a handler");
          return this.bindHandler(t);
        }
        async listen() {
          if (!this.cqrsCallbacks || !this.eventCallbacks || !this.cronCallbacks) throw new Error("Please call `all(path, handler)` first");
          const e = await this.cqrsBroker.connect(this.cqrsCallbacks).start(),
            t = await this.eventsBroker.connect(this.eventCallbacks).start(),
            r = await this.cronsBroker.connect(this.cronCallbacks).start(),
            { isListening$: s } = this;
          (this.disconnect = () => {
            e.stop(), t.stop(), r.stop(), s.complete();
          }),
            (this.close = this.disconnect),
            this.isListening$.next(!0);
        }
        reply(e, t) {
          switch (e.type) {
            case f.Y.Query:
            case f.Y.Command:
              e.reply(t.result);
              break;
            case f.Y.Event:
              e.reply();
              break;
            case f.Y.Cron:
              e.reply(t.result);
              break;
            default:
              (0, E.U)(e);
          }
        }
        getInstance() {
          return this;
        }
        getHttpServer() {
          return { once: Q, address: () => "", removeListener: Q };
        }
        getType() {
          return "AppCoreNode";
        }
      }
      const $ = () => {};
      class X extends i.AbstractHttpAdapter {
        constructor(e, t, r) {
          super(new Y(e, t, r)),
            (this.createMiddlewareFactory = this.instance.createMiddlewareFactory),
            (this.close = this.instance.close),
            (this.reply = this.instance.reply),
            (this.useStaticAssets = $),
            (this.setViewEngine = $),
            (this.getRequestHostname = $),
            (this.status = $),
            (this.render = $),
            (this.redirect = $),
            (this.setNotFoundHandler = $),
            (this.setHeader = $),
            (this.registerParserMiddleware = $),
            (this.enableCors = $),
            (this.setErrorHandler = $),
            (this.end = $),
            (this.isListening$ = this.instance.isListening$);
        }
        initHttpServer() {
          this.setHttpServer({ once: $, address: () => "", removeListener: $ });
        }
        getRequestMethod() {
          return y.RequestMethod.ALL;
        }
        getRequestUrl() {
          return "/";
        }
        getType() {
          return "CoreApp";
        }
        isHeadersSent() {
          return !1;
        }
        applyVersionFilter() {
          throw new Error("Versioning not supported");
        }
      }
      var Z = r(40945),
        J = r(90171);
      class ee extends v.V {
        log() {}
        warn(e, ...t) {
          return console.warn(e, t);
        }
        error(e, ...t) {
          return console.error(e, t);
        }
        trace(e, ...t) {
          return console.trace(e, t);
        }
      }
      class te extends O.O {
        get time() {
          return Date.now();
        }
        createObservableTimer(e, t) {
          return (0, J.H)(e, t);
        }
      }
      class re extends F.X {
        fetch() {
          return Promise.reject(
            new Error(
              "Please add a jsonFetcher to the application. Probably you are seing that in unit tests.\nIf this is the case, please mock whatever service is requiring to fetch the data"
            )
          );
        }
      }
      var se = r(79063);
      const oe = (e, t) =>
        t.reduce(
          (t, r) => {
            const s = Reflect.getMetadata(se.o, r.module);
            if (!(0, C.Vy)(s)) return t;
            s.onFrameworkInit &&
              (s.onFrameworkInit instanceof Array
                ? (t.onFrameworkInits = t.onFrameworkInits.concat(s.onFrameworkInit))
                : t.onFrameworkInits.push(s.onFrameworkInit));
            const o = s.api?.name ?? s.sharedModuleName ?? "unnamed";
            return (
              t.configProviders.push(
                ...(function (e, t, r, s) {
                  if (!r.configurations) return [];
                  const { configurations: o } = r,
                    n = [];
                  return (
                    Object.keys(o).forEach((e) => {
                      const r = o[e].token,
                        i = s.configurations?.[e];
                      if (!i) throw new Error(`Missing '${e}' configuration for '${t}' module`);
                      n.push({ ...i, provide: r });
                    }),
                    Object.keys(s.configurations ?? {}).forEach((s) => {
                      r.configurations?.[s] || e.error(`Unknown '${s}' configuration for '${t}' module will be unused`);
                    }),
                    n
                  );
                })(e, o, s, r)
              ),
              s.api?.name && t.modulesMetadata.set(s.api.name, s),
              t.modules.push(r.module),
              s.crons && t.crons.push(...s.crons.map((e) => ({ ...e, moduleName: o }))),
              s.handlers?.events && t.eventHandlers.push(...Object.values(s.handlers.events).flatMap((e) => Object.values(e.events))),
              s.stores && t.stores.push(...s.stores),
              (t.allDeclarations[o] = s),
              t
            );
          },
          {
            configProviders: new Array(),
            modules: new Array(),
            modulesMetadata: new Map(),
            onFrameworkInits: new Array(),
            crons: new Array(),
            eventHandlers: new Array(),
            stores: new Array(),
            allDeclarations: (0, a.Ay)({})
          }
        );
      var ne = r(54452),
        ie = r(15524),
        ae = r(69594),
        ce = r(17321),
        le = r(65192);
      function de(e) {
        const { parameterProvider: t, token: r } = e;
        switch (t.type) {
          case ce.j.CLASS_PROVIDER:
            return { provide: r, useClass: t.useClass };
          case ce.j.VALUE_PROVIDER:
            return { provide: r, useValue: t.useValue };
          default:
            (0, E.U)(t);
        }
      }
      var ue = r(99634),
        pe = r(37920),
        he = r(31638),
        me = r(63364);
      class ve extends me.fW {
        constructor() {
          super(W.E);
        }
      }
      const ge = {
        sink: (0, he.z)(
          new (class {
            logException() {
              return Promise.resolve();
            }
            start() {
              return Promise.resolve({ stop: () => Promise.resolve() });
            }
          })()
        ),
        uncaughtErrorSource: (0, he.z)(new ve())
      };
      var ye = r(57924),
        fe = r(68475),
        _e = r(43004);
      let Se = class {
        constructor(e) {
          this.logger = e;
        }
        handle(e) {
          const { error: t, fileLocation: r, lineNumber: s, origin: o } = e,
            [n, i] = t instanceof fe.c ? [t.exception, t.useCaseStacktrace] : [t];
          return this.logger.captureException(n, { fileLocation: r, lineNumber: s, origin: o, useCaseStacktrace: i }, _e.w.CRITICAL);
        }
      };
      Se = (0, g.__decorate)([(0, ye.GS)(), (0, g.__metadata)("design:paramtypes", [pe.v])], Se);
      let Ee = class {
        constructor(e, t, r, s) {
          (this.sink = e), (this.lifeCycle = t), (this.moduleRef = r), (this.uncaughtErrorsSource = s);
        }
        onFrameworkInit() {
          this.lifeCycle.addAppReadyHook(async () => {
            const { stop: e } = await this.sink.start(),
              t = this.uncaughtErrorsSource.events$.subscribe(this.onUncaughtErrorEvent.bind(this));
            return () => {
              t.unsubscribe(), e();
            };
          });
        }
        onUncaughtErrorEvent(e) {
          this.moduleRef.get(Se).handle(e);
        }
      };
      Ee = (0, g.__decorate)([(0, ye.ar)(), (0, g.__metadata)("design:paramtypes", [me.qD, m.d, i.ModuleRef, me.fW])], Ee);
      var be,
        we = r(428);
      let Ae = (be = class {
        static configure(e) {
          return {
            module: be,
            configurations: { ...ge, sink: e.sink, ...(e.uncaughtErrorSource ? { uncaughtErrorSource: e.uncaughtErrorSource } : {}) }
          };
        }
      });
      Ae = be = (0, g.__decorate)(
        [
          (0, ue.Y)({
            sharedModuleName: "exception-logging",
            providers: [pe.v, { provide: i.APP_INTERCEPTOR, useClass: fe.x }, we.F, Se],
            configurations: { sink: { token: me.qD }, uncaughtErrorSource: { token: me.fW } },
            exports: [pe.v, we.F],
            onFrameworkInit: Ee,
            requiredFeatureFlips: []
          })
        ],
        Ae
      );
      var Te = r(43978),
        Ce = r(69885);
      const Ie = { tag: "" };
      let Oe = class {
        constructor(e, t, r, s) {
          (this.request = e), (this.clients = t), (this.config = r), (this.introspection = s);
        }
        intercept(e, t) {
          const { request: r } = this,
            { appDefinition: s } = this.config;
          if (r.type === f.Y.Cron) return this.checkCronActiveUser(t, r);
          if (!(r.module in s)) return t.handle();
          const o = s[r.module].api;
          switch (r.type) {
            case f.Y.Query:
              return this.checkQueryActiveUser(t, r, o);
            case f.Y.Command:
              return this.checkCommandActiveUser(t, r, o);
            case f.Y.Event:
              return this.checkEventActiveUser(t, r, o);
            default:
              (0, E.U)(r);
          }
        }
        checkCronActiveUser(e, t) {
          const r = (this.introspection.modules[t.module].crons ?? []).find((e) => e.name === t.name);
          if (!r) throw new Error("No such cron " + t.name);
          return r.scope === S.F.Device
            ? e.handle()
            : this.checkActiveUserPromise(e, t.context, { noUserError: Ie, scope: S.F.User }, "Cron");
        }
        checkQueryActiveUser(e, t, r) {
          const { queries: s } = r;
          if (t.name in s) {
            const r = s[t.name],
              { metadata: o } = r;
            return this.checkActiveUserObservable(e, t.context, o, `Query ${t.module}.${t.name}`);
          }
          return e.handle();
        }
        checkCommandActiveUser(e, t, r) {
          const { commands: s } = r;
          if (t.name in s) {
            const r = s[t.name],
              { metadata: o } = r;
            return this.checkActiveUserPromise(e, t.context, o, `Command ${t.module}.${t.name}`);
          }
          return e.handle();
        }
        checkEventActiveUser(e, t, r) {
          const { events: s } = r;
          if (t.name in s) {
            const r = s[t.name],
              { metadata: o } = r;
            return this.checkActiveUserPromise(e, t.context, o, `Event ${t.module}.${t.name}`);
          }
          return e.handle();
        }
        checkActiveUserPromise(e, t, r, s) {
          if (r.scope !== S.F.User) return e.handle();
          const { noUserError: o } = r;
          return (0, H.D)(t.getOrAdd(T.l.UserName, () => A(this.clients))).pipe(
            (0, Te.w)((t) => {
              if (t) return e.handle();
              if (o) return (0, Ce.of)({ result: (0, b.Rn)(o) });
              throw new Error(`Not logged in : ${s}`);
            })
          );
        }
        checkActiveUserObservable(e, t, r, s) {
          if (r.scope !== S.F.User) return e.handle();
          const { noUserError: o } = r;
          return (0, H.D)(t.getOrAdd(T.l.UserName, () => A(this.clients))).pipe(
            (0, Te.w)((t) => {
              if (t) return e.handle();
              if (o) return (0, Ce.of)({ result: new B.X((0, b.Rn)(o)) });
              throw new Error(`Not logged in : ${s}`);
            })
          );
        }
      };
      Oe = (0, g.__decorate)(
        [
          (0, y.Injectable)({ scope: y.Scope.REQUEST }),
          (0, g.__param)(0, (0, y.Inject)(i.REQUEST)),
          (0, g.__metadata)("design:paramtypes", [Object, d.m, p.$, C.Q1])
        ],
        Oe
      );
      class Pe {
        constructor(e, t) {
          (this.storage = e), (this.storageKey = `crons.${t}`);
        }
        async setState(e) {
          await this.storage.set(this.storageKey, JSON.stringify(e));
        }
        async getState() {
          const e = await this.storage.get(this.storageKey);
          if (!e) return { entries: [] };
          const t = JSON.parse(e);
          return (r = t) &&
            "object" == typeof r &&
            "entries" in r &&
            Array.isArray(r.entries) &&
            r.entries.every((e) =>
              (function (e) {
                return (
                  !!e &&
                  "object" == typeof e &&
                  "dueTimestamp" in e &&
                  "moduleName" in e &&
                  "name" in e &&
                  "string" == typeof e.name &&
                  "string" == typeof e.moduleName &&
                  "number" == typeof e.dueTimestamp
                );
              })(e)
            )
            ? t
            : { entries: [] };
          var r;
        }
      }
      var Re = r(34987);
      const De = 6e4;
      function Ne(e) {
        return Math.ceil(e / De) * De;
      }
      function Ue(e) {
        return Math.floor(e / De) * De;
      }
      class Le {
        constructor(e, t) {
          (this.infra = e), (this.definitions = t);
        }
        async init() {
          const e = Ne(this.infra.timers.time),
            t = await this.infra.repository.getState(),
            r = this.definitions.filter((e) => !t.entries.find((t) => t.name === e.name && t.moduleName === e.moduleName)),
            s = {
              entries: [
                ...t.entries.filter((e) => this.definitions.find((t) => t.name === e.name && t.moduleName === e.moduleName)),
                ...r.map((t) => ({ ...t, dueTimestamp: e + t.periodInMinutes * De }))
              ]
            };
          await this.infra.repository.setState(s);
        }
        connect(e) {
          const { infra: t, definitions: r } = this;
          return {
            start: async () => {
              await this.init();
              const s = t.cronSource.alarm$
                .pipe(
                  (0, Re.b)(async () => {
                    const s = await t.repository.getState(),
                      o = Ne(t.timers.time),
                      n = Ue(t.timers.time),
                      i = s.entries.filter((e) => e.dueTimestamp <= o);
                    await Promise.allSettled(
                      i.map((o) => {
                        const i = r.find((e) => e.moduleName === o.moduleName && e.name === o.name);
                        if (!i) throw new Error("we should have a declaration");
                        return (async function (r, s, o, n) {
                          let i = !1;
                          try {
                            i = await e(o.moduleName, o.name);
                          } finally {
                            i && ((o.dueTimestamp = Ue(r + n.periodInMinutes * De)), await t.repository.setState(s));
                          }
                        })(n, s, o, i);
                      })
                    );
                  })
                )
                .subscribe();
              return {
                stop: () => {
                  s.unsubscribe();
                }
              };
            }
          };
        }
      }
      let Fe = class {
        constructor(e, t) {
          (this.request = e), (this.useCaseStacktraceRepo = t);
        }
        intercept(e, t) {
          return this.useCaseStacktraceRepo.append(this.request.name), t.handle();
        }
      };
      Fe = (0, g.__decorate)(
        [
          (0, y.Injectable)({ scope: y.Scope.REQUEST }),
          (0, g.__param)(0, (0, y.Inject)(i.REQUEST)),
          (0, g.__metadata)("design:paramtypes", [Object, we.F])
        ],
        Fe
      );
      class Me {
        constructor(e, t) {
          this.client = e.getClient(t);
        }
        get commands() {
          return this.client.commands;
        }
        get queries() {
          return this.client.queries;
        }
      }
      var xe = r(69008),
        ke = r(33920);
      let Ge;
      var Ke = r(73656);
      const Ve = [Fe, Oe],
        je = async ({
          appDefinition: e,
          channels: t,
          currentNode: r,
          implementations: c,
          otherModules: v = [],
          logger: g = new ee(),
          storeInfrastructureFactory: y = new h.N(),
          channelsListener: _ = ne.y,
          timers: S = new te(),
          keyValueStorageInfrastructure: E = new ie.s(),
          jsonFetcher: b = new re(),
          cronSource: w = new ae._C(S),
          defaultDeviceStorageEncryptionCodec: A = { type: ce.j.CLASS_PROVIDER, useClass: s.E },
          defaultUserStorageEncryptionCodec: I = { type: ce.j.CLASS_PROVIDER, useClass: s.E },
          exceptionLogging: O = ge
        }) => {
          const P = () => {
            throw new Error("Aborted");
          };
          (Ke.abort = P), (Ke.exit = P);
          const D = [
              ...[Ae.configure(O)],
              ...v,
              ...Object.keys(c)
                .map((e) => e)
                .map((e) => c[e])
            ],
            {
              configProviders: N,
              modules: U,
              modulesMetadata: L,
              onFrameworkInits: F,
              crons: M,
              eventHandlers: x,
              stores: G,
              allDeclarations: K
            } = oe(g, D),
            B = new k.D();
          G.forEach((e) => {
            B.registerClass(e);
          }),
            ((e, t, r) => {
              const s = new Set([...r.keys()]),
                o = new Set(
                  Object.values(e)
                    .filter((e) => e.main === t || e.queryOnly.includes(t))
                    .map((e) => e.api.name)
                ),
                n = [...o].filter((e) => !s.has(e)),
                i = [...s].filter((e) => !o.has(e));
              if (n.length > 0) throw new Error("These APIs are not implemented " + JSON.stringify(n));
              if (i.length > 0) throw new Error("Some implementations do not have APIS " + JSON.stringify(i));
            })(e, r, L);
          const W = ((e) =>
              [...e.entries()].reduce(
                (e, [t, r]) => {
                  const s = r.handlers?.events ?? {};
                  return (
                    (e[t] = Object.values(s).reduce((e, t) => (t.name ? ((e[t.name] = Object.keys(t.events)), e) : e), (0, a.Ay)({}))), e
                  );
                },
                (0, a.Ay)({})
              ))(L),
            H = new p.$({ appDefinition: e, channels: t, channelsListener: _, currentNode: r, subscriptions: W }),
            z = new l.d(H),
            Q = new u.a(H),
            q = new Le({ cronSource: w, repository: new Pe(E, r), timers: S }, M),
            Y = new X(z, Q, q),
            $ = de({ token: R.h, parameterProvider: A }),
            J = de({ token: R.s, parameterProvider: I }),
            se = new m.d(),
            ue = new C.Q1(new Set(x), K),
            pe = (function (e) {
              const t = [];
              return (
                Object.values(e).forEach((e) => {
                  const { api: r } = e,
                    { ClientClass: s } = r;
                  s && ((0, ye.GS)()(s), t.push({ provide: s, useFactory: (e) => new Me(e, r), inject: [d.w] }));
                }),
                t
              );
            })(e),
            he = {
              useFactory: (e, t, r) => {
                const s = e.get(T.l.UserName);
                if (s) return (Ge && Ge.status !== ke.p.Closed) || (Ge = new V.g(s, r, t)), Promise.resolve(Ge);
              },
              provide: V.g,
              inject: [T.f, xe.Q, m.d]
            },
            me = j.create({
              nodeConfiguration: H,
              brokers: { cqrs: z, event: Q },
              modules: U,
              configProviders: N,
              logger: g,
              lifeCycle: se,
              storeInfrastructureFactory: y,
              timers: S,
              keyValueStorageInfrastructure: E,
              jsonFetcher: b,
              defaultDeviceStorageEncryptionCodecProvider: $,
              defaultUserStorageEncryptionCodecProvider: J,
              storeList: B,
              interceptors: Ve,
              introspection: ue,
              moduleClientsProviders: pe,
              userUseCaseScopeProvider: he
            }),
            ve = await i.NestFactory.create(me, Y, { logger: g }),
            fe = await ve.init();
          await (async function (e, t) {
            const r = Object.freeze({ id: -1 }),
              s = e.map(async (e) => {
                const s = { type: f.Y.Init, [le.REQUEST_CONTEXT_ID]: r };
                t.registerRequestByContextId(s, r);
                const o = await t.resolve(e, r, { strict: !1 });
                await o.onFrameworkInit();
              });
            await Promise.all(s);
          })(F, fe),
            ve.listen("");
          const _e = Y.isListening$.pipe((0, o.h)((e) => !!e));
          return (
            await (0, n.z)(_e),
            se.addShutdownHook(() => ve.close()),
            await se.startup(),
            {
              stop: () => se.shutDown(),
              createClient: () => (0, Z.R)(e, z),
              sendEvent: (e, t, r, s) => Q.publishEvent(e, t, r, s ?? new T.f())
            }
          );
        },
        Be = (e) => je({ ...e, appDefinition: e.appDefinition, channels: {}, currentNode: "node" });
    },
    42949: (e, t, r) => {
      r.d(t, { d: () => v });
      var s = r(162),
        o = r(60399),
        n = r(30523),
        i = r(87065),
        a = r(17350),
        c = r(95087),
        l = r(28489);
      const d = (e) => "response" === e.type,
        u = (e, t, r, s) =>
          Object.keys(e).reduce(
            (o, n) => {
              const { commandMailbox: i, queryMailbox: a } = ((o) => {
                const { main: n, queryOnly: i } = e[o],
                  a = { type: "local", onMessage: s };
                if (n === t) return { commandMailbox: a, queryMailbox: a };
                const c = { type: "remote", channel: r[n] };
                return { commandMailbox: c, queryMailbox: t && i.includes(t) ? a : c };
              })(n);
              return (o[`command-${n}`] = i), (o[`query-${n}`] = a), o;
            },
            (0, l.Ay)({})
          );
      var p = r(65488),
        h = r(21869);
      const m = () => (0, s.D)([]);
      class v {
        constructor(e) {
          this.config = e;
        }
        async sendCommand(e, t, r, s) {
          if (!this.broker) throw new Error("call connect() first");
          return await (0, o.z)(
            this.broker
              .sendMessage(`command-${e}`, { type: "command", module: e, commandName: String(t), command: r, context: s.toSerializable() })
              .pipe(
                (0, n.h)(d),
                (0, i.U)((e) => e.response)
              )
          );
        }
        sendQuery(e, t, r, s) {
          if (!this.broker) throw new Error("call connect() first");
          return this.broker
            .sendMessage(`query-${e}`, { type: "query", module: e, queryName: String(t), query: r, context: s.toSerializable() })
            .pipe(
              (0, n.h)(d),
              (0, i.U)((e) => e.response)
            );
        }
        connect(e) {
          const t = e
              ? (t, r, o) => {
                  switch (r.type) {
                    case "response":
                      return a.E;
                    case "command":
                      return (0, s.D)(
                        e.onCommand(r.module, r.commandName, r.command, h.f.fromSerializable(r.context), { isReminder: o.isReminder })
                      ).pipe((0, i.U)((e) => ({ type: "response", response: e })));
                    case "query":
                      return (0, s.D)(e.onQuery(r.module, r.queryName, r.query, h.f.fromSerializable(r.context))).pipe(
                        (0, i.U)((e) => ({ type: "response", response: e }))
                      );
                  }
                  (0, c.U)(r);
                }
              : m,
            r = u(this.config.appDefinition, this.config.currentNode, this.config.channels, t);
          return (this.broker = new p.U(r)), this.broker.connect(Object.values(this.config.channels), this.config.channelsListener);
        }
      }
    },
    94189: (e, t, r) => {
      r.d(t, { m: () => d, w: () => l });
      var s = r(88802),
        o = r(57924),
        n = r(16855),
        i = r(42949),
        a = r(40945),
        c = r(21869);
      let l = class {
        constructor(e, t, r) {
          (this.broker = e), (this.configuration = t), (this.context = r);
        }
        getClient(e) {
          return (0, a.c)(this.configuration.appDefinition, this.broker, e.name, this.context);
        }
      };
      l = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.d, n.$, c.f])], l);
      let d = class {
        constructor(e, t) {
          (this.configuration = e), (this.broker = t);
        }
        getClient(e) {
          return (0, a.c)(this.configuration.appDefinition, this.broker, e.name);
        }
      };
      d = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.$, i.d])], d);
    },
    40945: (e, t, r) => {
      r.d(t, { R: () => i, c: () => n });
      var s = r(28489),
        o = r(21869);
      const n = (e, t, r, n) => ({
          commands: Object.keys(e[r].api.commands).reduce(
            (e, s) => (
              (e[s] = (e) => {
                const i = n ?? new o.f();
                return t.sendCommand(r, s, e, i);
              }),
              e
            ),
            (0, s.Ay)({})
          ),
          queries: Object.keys(e[r].api.queries).reduce(
            (e, s) => (
              (e[s] = (e) => {
                const i = n ?? new o.f();
                return t.sendQuery(r, s, e, i);
              }),
              e
            ),
            (0, s.Ay)({})
          )
        }),
        i = (e, t, r) => {
          const n = (n) =>
              Object.keys(e[n].api.commands).reduce(
                (e, s) => (
                  (e[s] = (e) => {
                    const i = r ?? new o.f();
                    return t.sendCommand(n, s, e, i);
                  }),
                  e
                ),
                (0, s.Ay)({})
              ),
            i = (n) =>
              Object.keys(e[n].api.queries).reduce(
                (e, s) => (
                  (e[s] = (e) => {
                    const i = r ?? new o.f();
                    return t.sendQuery(n, s, e, i);
                  }),
                  e
                ),
                (0, s.Ay)({})
              );
          return Object.keys(e)
            .map((e) => e)
            .reduce((e, t) => ((e[t] = { commands: n(t), queries: i(t) }), e), {});
        };
    },
    81459: (e, t, r) => {
      r.d(t, { C: () => d, f: () => l });
      var s = r(88802),
        o = r(17988),
        n = r(57924),
        i = r(93417),
        a = r(96917),
        c = r(21869);
      let l = class {
        constructor(e, t, r) {
          (this.apiName = e), (this.broker = t), (this.context = r);
        }
        sendEvent(e, t) {
          return this.broker.publishEvent(this.apiName, e, t, this.context);
        }
      };
      l = (0, s.__decorate)(
        [(0, n.GS)(), (0, s.__param)(0, (0, o.Inject)(i.r)), (0, s.__metadata)("design:paramtypes", [Object, a.a, c.f])],
        l
      );
      let d = class {
        constructor(e, t) {
          (this.apiName = e), (this.broker = t);
        }
        sendEvent(e, t, r) {
          return this.broker.publishEvent(this.apiName, e, t, r ?? new c.f());
        }
      };
      d = (0, s.__decorate)([(0, n.GS)(), (0, s.__param)(0, (0, o.Inject)(i.r)), (0, s.__metadata)("design:paramtypes", [Object, a.a])], d);
    },
    96917: (e, t, r) => {
      r.d(t, { a: () => v });
      var s = r(88802),
        o = r(162),
        n = r(87065),
        i = r(17350),
        a = r(69885),
        c = r(65488),
        l = r(28489);
      const d = { type: "ask" },
        u = { type: "eventResponse" };
      var p = r(57924),
        h = r(16855),
        m = r(21869);
      let v = class {
        constructor(e) {
          (this.regenerateReverseSubscriptionMap = () => {
            const { configuration: e, subscriberToEvent: t } = this,
              r = e.getModuleNames().reduce((e, t) => ({ ...e, [t]: new Map() }), {});
            return e.getNodeList().reduce((e, r) => {
              const s = t[r];
              return (
                Object.entries(s).forEach(([t, s]) => {
                  const o = e[t];
                  s.forEach((e) => {
                    const t = [...(o.get(e) ?? []), r];
                    o.set(e, t);
                  });
                }),
                e
              );
            }, r);
          }),
            (this.configuration = e);
          const t = Object.entries(e.appDefinition).reduce((e, [t, r]) => ((e[t] = Object.keys(r.api.events)), e), {});
          (this.subscriberToEvent = this.configuration.getNodeList().reduce((e, r) => ((e[r] = { ...t }), e), {})),
            (this.eventToSubscriber = this.regenerateReverseSubscriptionMap());
        }
        async publishEvent(e, t, r, s) {
          const { broker: o, eventToSubscriber: n } = this;
          if (!o) throw new Error("Not started");
          const i = (n[e].get(t) ?? []).map((o) => ({
            type: "event",
            context: s.toSerializable(),
            event: r,
            eventName: t,
            moduleSource: e,
            nodeDestination: o
          }));
          await Promise.all(
            i.map(async (e) => {
              await o.trySendMessage(`event-${e.nodeDestination}`, e);
            })
          );
        }
        connect(e) {
          const { configuration: t } = this,
            r = Object.keys(t.subscriptions).reduce((e, r) => ({ ...e, ...t.subscriptions[r] }), (0, l.Ay)({})),
            s = { type: "subscriptions", nodeName: t.currentNode, subscribesTo: r },
            p = ((e, t) =>
              e
                .getNodeList()
                .reduce(
                  (r, s) => (
                    s === e.currentNode
                      ? (r[`event-${s}`] = { type: "local", onMessage: t })
                      : (r[`event-${s}`] = { type: "remote", channel: e.channels[s] }),
                    r
                  ),
                  (0, l.Ay)({})
                ))(this.configuration, (t, r, c) => {
              switch (r.type) {
                case "event":
                  return (0, o.D)(
                    e.onLocalEvent(r.moduleSource, r.nodeDestination, r.eventName, r.event, m.f.fromSerializable(r.context), c)
                  ).pipe((0, n.U)(() => u));
                case "eventResponse":
                  return i.E;
                case "subscriptions":
                  return (
                    (this.subscriberToEvent[r.nodeName] = r.subscribesTo),
                    (this.eventToSubscriber = this.regenerateReverseSubscriptionMap()),
                    (0, a.of)(u)
                  );
                case "ask":
                  return (0, a.of)(s);
              }
            }),
            h = new c.U(p);
          return (
            t.getNodeList().map(async (e) => {
              await h.trySendMessage(`event-${e}`, s), await h.trySendMessage(`event-${e}`, d);
            }),
            (this.broker = h),
            h.connect(Object.values(t.channels), t.channelsListener)
          );
        }
      };
      v = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.$])], v);
    },
    63663: (e, t, r) => {
      r.d(t, { W: () => o });
      var s = r(57924);
      function o(e) {
        const t = (0, s.GS)();
        return (r) => {
          Reflect.defineMetadata("dl-handler", r, e), t(r);
        };
      }
    },
    11053: (e, t, r) => {
      r.d(t, { Tx: () => u, b2: () => d, u1: () => p });
      var s = r(88802),
        o = r(6220),
        n = r(7074),
        i = r(58376),
        a = r(57924),
        c = r(21904),
        l = r(94189);
      function d(e) {
        return e;
      }
      class u {
        constructor(e, t, { args: r, commandName: s }) {
          const i = t.commands[s];
          this.refreshObservable$ = e.pipe(
            (0, o.z)(async () => {
              await i(r);
            }),
            (0, n.B)({})
          );
        }
        withRefresh() {
          return (e) =>
            new i.y((t) => {
              const r = this.refreshObservable$.subscribe();
              return r.add(e.subscribe(t)), r;
            });
        }
      }
      let p = class {
        constructor(e, t) {
          (this.timers = e), (this.cqrsClient = t), (this.map = new WeakMap());
        }
        getRefresher(e) {
          const t = this.map.get(e);
          if (t) return t;
          return new u(this.timers.createObservableTimer(e.period, e.period), this.cqrsClient.getClient(e.api), e);
        }
      };
      p = (0, s.__decorate)([(0, a.GS)(), (0, s.__metadata)("design:paramtypes", [c.O, l.m])], p);
    },
    68307: (e, t, r) => {
      r.d(t, { b: () => o });
      var s = r(57924);
      function o(e) {
        const t = (0, s.GS)();
        return (r) => {
          if (Reflect.hasMetadata("dl-handlers", e)) {
            const t = Reflect.getMetadata("dl-handlers", e);
            Reflect.defineMetadata("dl-handlers", [...t, r], e);
          } else Reflect.defineMetadata("dl-handlers", [r], e);
          t(r);
        };
      }
    },
    20754: (e, t, r) => {
      r.d(t, { e: () => o });
      var s = r(57924);
      function o(e) {
        const t = (0, s.GS)();
        return (r) => {
          Reflect.defineMetadata("dl-handler", r, e), t(r);
        };
      }
    },
    79063: (e, t, r) => {
      r.d(t, { o: () => s });
      const s = "dl-module";
    },
    38679: (e, t, r) => {
      r.d(t, { H: () => c });
      var s = r(1484),
        o = r(78776),
        n = r(57924),
        i = r(64987),
        a = r(43866);
      const c = (e, t) => {
        const r = t.token ?? (0, o.Z)();
        class c {
          constructor() {
            this.mutex = new i.WU();
          }
          getOrCreate(e, t) {
            return this.mutex.runExclusive(
              async () => (
                this.instance ||
                  (t.addShutdownHook(() => {
                    this.invalidate();
                  }),
                  (this.instance = await e())),
                this.instance
              )
            );
          }
          invalidate() {
            this.instance = void 0;
          }
        }
        (0, n.GS)()(c);
        const l = c,
          d = {
            token: e,
            inject: [c, a.d, s.ModuleRef, s.REQUEST],
            asyncFactory: (e, t, o, n) => {
              const i = s.ContextIdFactory.getByRequest(n);
              return e.getOrCreate(() => o.resolve(r, i), t);
            }
          };
        return [{ ...t, token: r }, l, d];
      };
    },
    57924: (e, t, r) => {
      r.d(t, { GS: () => n, ar: () => i, xB: () => o });
      var s = r(17988);
      function o() {
        return (0, s.Global)();
      }
      function n(e) {
        return (0, s.Injectable)({ scope: e?.neverReuseInstance ? s.Scope.TRANSIENT : s.Scope.DEFAULT });
      }
      const i = () => n();
    },
    99634: (e, t, r) => {
      r.d(t, { Y: () => f, g: () => g });
      r(60171);
      var s = r(79063),
        o = r(17988),
        n = r(93417),
        i = r(88802),
        a = r(43702),
        c = r(23711),
        l = r(91199),
        d = r(21869);
      const u = new a.b(),
        p = new c.z();
      let h = class {
        constructor(e, t, r) {
          (this.kv = e), (this.prefix = `batch-storage.${r}.${t.get(d.l.UserName)}`);
        }
        async getBatchState(e) {
          const t = await this.kv.get(`${this.prefix}.${e}`);
          return t ? this.stringToState(t) : { queue: [] };
        }
        async setBatchState(e, t) {
          const r = this.stateToString(t);
          return await this.kv.set(`${this.prefix}.${e}`, r);
        }
        stateToString(e) {
          const t = u.encode(e);
          return p.encode(t);
        }
        stringToState(e) {
          const t = p.decode(e);
          return u.decode(t);
        }
      };
      h = (0, i.__decorate)([(0, i.__param)(2, (0, o.Inject)(n.r)), (0, i.__metadata)("design:paramtypes", [l.QI, d.f, String])], h);
      class m {
        getProviders(e) {
          if (!e.length) return [];
          return [
            ...e.map((e) => ({ provide: e, inject: [h, e.Definition.chunkProcessor], useFactory: (t, r) => new e(t, r) })),
            ...e.map(({ Definition: { chunkProcessor: e } }) => e),
            h
          ];
        }
      }
      var v = r(5711);
      const g = (e, t) => ({ [e.name]: { name: e.name, events: t } }),
        y = (e, t) => {
          const { exports: r = [], imports: s = [], providers: o = [], onFrameworkInit: n = [], stores: i = [], crons: a = [] } = e,
            c = [n, t.onFrameworkInit ?? []].flat();
          return {
            ...e,
            exports: r.concat(t.exports ?? []),
            imports: s.concat(t.imports ?? []),
            providers: o.concat(t.providers ?? []),
            onFrameworkInit: c,
            stores: i.concat(t.stores ?? []),
            crons: a.concat(t.crons ?? [])
          };
        };
      function f(e) {
        const { composes: t = [] } = e;
        e = t.reduce((e, t) => y(e, t), e);
        const {
            exports: r = [],
            imports: i = [],
            handlers: a = { commands: {}, events: {}, queries: {} },
            providers: c = [],
            onFrameworkInit: l = [],
            stores: d,
            batchExecutors: u,
            crons: p
          } = e,
          h = e.api?.name ?? e.sharedModuleName,
          g = h ? (0, v.N)(...(d ?? [])) : [],
          f = h ? new m().getProviders(u ?? []) : [],
          _ = [
            ...c,
            ...(p ?? []).map((e) => e.handler),
            ...g,
            ...f,
            ...Object.values(a.commands),
            ...Object.values(a.queries),
            ...Object.values(a.events)
              .map((e) => Object.values(e.events))
              .reduce((e, t) => [...e, ...t], new Array()),
            ...(l instanceof Array ? l : [l]),
            { provide: n.r, useValue: h }
          ],
          { asyncProviders: S, basicClassProviders: E } = _.reduce(
            (e, t) => {
              return "object" == typeof (r = t) && "token" in r && "asyncFactory" in r && "function" == typeof r.asyncFactory
                ? { asyncProviders: [...e.asyncProviders, t], basicClassProviders: e.basicClassProviders }
                : { asyncProviders: e.asyncProviders, basicClassProviders: [...e.basicClassProviders, t] };
              var r;
            },
            { asyncProviders: new Array(), basicClassProviders: new Array() }
          ),
          b = [...E, ...S.map((e) => ({ provide: e.token, useFactory: e.asyncFactory, inject: e.inject }))],
          w = (0, o.Module)({ exports: r, imports: i, providers: b });
        return (t) => (Reflect.defineMetadata(s.o, e, t), w(t));
      }
    },
    93417: (e, t, r) => {
      r.d(t, { r: () => s });
      const s = "frameworkModuleName";
    },
    22838: (e, t, r) => {
      r.d(t, { Q1: () => n, TB: () => s, Vy: () => o });
      const s = { commands: {}, events: {}, queries: {} },
        o = (e) =>
          !(!e || "object" != typeof e) &&
          !(e.api && !(e.api.commands && e.api.events && e.api.name && e.api.queries && e.handlers)) &&
          !(e.exports && !Array.isArray(e.exports)) &&
          !(e.handlers && !e.api) &&
          !(e.imports && !Array.isArray(e.imports)) &&
          !(e.providers && !Array.isArray(e.providers));
      class n {
        constructor(e, t) {
          (this.supportedEventHandlers = e), (this.modules = t);
        }
      }
    },
    31638: (e, t, r) => {
      r.d(t, { $: () => n, z: () => o });
      var s = r(17321);
      function o(e) {
        return { type: s.j.VALUE_PROVIDER, useValue: e };
      }
      function n(e) {
        return { type: s.j.CLASS_PROVIDER, useClass: e };
      }
    },
    17321: (e, t, r) => {
      var s;
      r.d(t, { j: () => s }),
        (function (e) {
          (e.VALUE_PROVIDER = "value_provider"), (e.CLASS_PROVIDER = "class_provider");
        })(s || (s = {}));
    },
    63411: (e, t, r) => {
      r.d(t, { B: () => a });
      var s = r(25029),
        o = r(95087),
        n = r(38679),
        i = r(97956);
      const a = (e, t, r) => {
        switch (e) {
          case s.F.Device:
            return (0, n.H)(t, r);
          case s.F.User:
            return (0, i.M)(t, r);
          default:
            (0, o.U)(e);
        }
      };
    },
    97956: (e, t, r) => {
      r.d(t, { M: () => c });
      var s = r(1484),
        o = r(78776),
        n = r(64987),
        i = r(21869),
        a = r(97631);
      const c = (e, t) => {
        const r = t.token ?? (0, o.Z)();
        class c {
          constructor() {
            (this.instances = new Map()), (this.mutex = new n.WU());
          }
          getOrCreate(e, t, r) {
            return this.mutex.runExclusive(async () => {
              const s = this.instances.get(e);
              if (s) return s;
              r.addCloseHook(() => {
                this.invalidate(e);
              });
              const o = await t();
              return this.instances.set(e, o), o;
            });
          }
          invalidate(e) {
            this.instances.delete(e);
          }
        }
        const l = c,
          d = {
            token: e,
            inject: [c, i.f, s.ModuleRef, s.REQUEST, a.g],
            asyncFactory: (t, o, n, a, c) => {
              const l = s.ContextIdFactory.getByRequest(a),
                d = o.getOrDefault(i.l.UserName, "");
              if ("" === d) throw new Error(`Provider ${e} is a user-scoped singleton but there is no user`);
              if (!c) throw new Error("No user scope available");
              return t.getOrCreate(d, () => n.resolve(r, l), c);
            }
          };
        return [{ token: r, asyncFactory: t.asyncFactory, inject: [...(t.inject ?? []), i.f] }, l, d];
      };
    },
    9671: (e, t, r) => {
      r.d(t, { J: () => S, f: () => E });
      var s = r(88802),
        o = r(1484),
        n = r(17988),
        i = r(60399),
        a = r(87065),
        c = r(89618),
        l = r(37182),
        d = r(69885),
        u = r(70493),
        p = r(87279),
        h = r(10514),
        m = r(43004),
        v = r(37920),
        g = r(21869),
        y = r(68475),
        f = r(428),
        _ = r(94189);
      let S = class {
        constructor(e, t, r, s) {
          (this.request = e), (this.logger = t), (this.useCaseStacktraceRepo = r), (this.cqrsClient = s);
        }
        async do(...e) {
          return (await Promise.all(e.map((e) => this.doOne(e)))).every((e) => !!e);
        }
        async doOne(e, t = "method") {
          try {
            const r = await e();
            if ((0, p.AZ)(r) && (0, p.hx)(r)) throw new Error(`Allowed to fail ${t} has failed`);
            return !0;
          } catch (e) {
            const { request: t, useCaseStacktraceRepo: r } = this,
              [s, o] = e instanceof y.c ? [e.exception, e.useCaseStacktrace] : [e, r.read()];
            try {
              await Promise.race([
                new Promise((e) => setTimeout(e, 100)),
                this.logger.captureException(
                  s,
                  {
                    moduleName: t?.module,
                    useCaseId: t?.context.get(g.l.UseCaseId),
                    useCaseName: t?.name,
                    useCaseStacktrace: o,
                    featureFlips: await this.getUserFeatureFlips()
                  },
                  m.w.WARNING
                )
              ]);
            } catch (e) {}
            return !1;
          }
        }
        async conditionallyAllowToFailOne(e, t) {
          return t ? this.doOne(e) : (await e(), !0);
        }
        getUserFeatureFlips() {
          const {
            queries: { userFeatureFlips: e }
          } = this.cqrsClient.getClient(u.cV);
          return (0, i.z)(
            e().pipe(
              (0, a.U)((e) => ((0, p.d6)(e) ? (0, p.db)(e) : {})),
              (0, c.V)(50),
              (0, l.K)(() => (0, d.of)({}))
            )
          );
        }
      };
      function E() {
        return new S(h.H, (0, v.G)(), f.U, { getClient: () => ({ queries: { userFeatureFlips: () => (0, d.of)((0, p.Vp)({})) } }) });
      }
      S = (0, s.__decorate)(
        [(0, s.__param)(0, (0, n.Inject)(o.REQUEST)), (0, s.__metadata)("design:paramtypes", [Object, v.v, f.F, _.w])],
        S
      );
    },
    73774: (e, t, r) => {
      r.d(t, { e: () => h });
      var s = r(88802),
        o = r(69885),
        n = r(34987),
        i = r(48844),
        a = r(95087);
      class c {
        constructor(e, t) {
          this.pipeline = this.initPipeline(e, this.dedupeInterceptorsById(t));
        }
        handle(e) {
          return this.pipeline.handle(e);
        }
        dedupeInterceptorsById(e) {
          const t = e.reduce((e, t) => (e.set(t.id, t), e), new Map());
          return Array.from(t.values());
        }
        initPipeline(e, t) {
          return t.reduceRight((e, t) => ({ handle: (r) => t.intercept(r, e.handle.bind(e)) }), e);
        }
      }
      var l = r(4043);
      class d {
        constructor(e) {
          (this.backend = e), (this.interceptors = new Map());
        }
        addInterceptor(e) {
          this.interceptors.set(e.id, e);
        }
        request(...e) {
          return this.makeRequest(...e);
        }
        delete(e, t) {
          return this.makeRequest("DELETE", e, t);
        }
        get(e, t) {
          return this.makeRequest("GET", e, t);
        }
        head(e, t) {
          return this.makeRequest("HEAD", e, t);
        }
        options(e, t) {
          return this.makeRequest("OPTIONS", e, t);
        }
        patch(e, t, r) {
          return this.makeRequest("PATCH", e, { body: t, ...r });
        }
        post(e, t, r) {
          return this.makeRequest("POST", e, { body: t, ...r });
        }
        put(e, t, r) {
          return this.makeRequest("PUT", e, { body: t, ...r });
        }
        makeRequest(...e) {
          let t, r, s;
          if (1 === e.length) (t = e[0]), (r = "response");
          else {
            const [o, n, i] = e;
            (t = new l.a(o, n, void 0 !== i.body ? i.body : null, {
              headers: i.headers,
              params: i.params,
              responseType: i.responseType ?? "json",
              withCredentials: i.withCredentials
            })),
              (r = i.observe ?? "body"),
              "json" === i.responseType && "body" === i.observe && (s = i.responseBodyDecoder);
          }
          const d = new c(this.backend, Array.from(this.interceptors.values())),
            u = (0, o.of)(this.addContentTypeRequestHeader(t)).pipe((0, n.b)((e) => d.handle(e)));
          switch (r) {
            case "body":
              switch (t.responseType) {
                case "arraybuffer":
                  return u.pipe((0, i.Gx)((e) => e.arrayBuffer()));
                case "text":
                  return u.pipe((0, i.Gx)((e) => e.text()));
                case "json":
                  return u.pipe((0, i.Gx)((e) => e.json(s)));
                default:
                  (0, a.U)(t.responseType);
              }
              break;
            case "response":
              return u;
            default:
              (0, a.U)(r);
          }
        }
        addContentTypeRequestHeader(e) {
          if (!e.headers.has("content-type")) {
            const t = e.detectContentTypeHeader();
            if (t) return e.clone({ headers: e.headers.set("content-type", t) });
          }
          return e;
        }
      }
      var u = r(22253),
        p = r(57924);
      let h = class extends d {
        constructor(e) {
          super(e);
        }
      };
      h = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [u.j])], h);
    },
    25504: (e, t, r) => {
      r.d(t, { X: () => a });
      var s = r(88802),
        o = r(22253),
        n = r(99634),
        i = r(73774);
      let a = class {};
      a = (0, s.__decorate)(
        [(0, n.Y)({ providers: [i.e], configurations: { infrastructure: { token: o.j } }, exports: [i.e], sharedModuleName: "http" })],
        a
      );
    },
    64827: (e, t, r) => {
      r.r(t),
        r.d(t, {
          AcknowledgedChannel: () => N.N,
          AllowedToFail: () => ie.J,
          AppLifeCycle: () => i.d,
          AppLogger: () => o.V,
          AppTimers: () => a.O,
          BadStatus: () => b.R,
          BaseEventEmitter: () => H.f,
          ChannelMessageBroker: () => P.U,
          ChannelState: () => R.D,
          CommandHandler: () => F.W,
          CommandRefresherFactory: () => k.u1,
          ContextLessCqrsClient: () => W.m,
          ContextlessBaseEventEmitter: () => H.C,
          CqrsBroker: () => G.d,
          CqrsClient: () => W.w,
          CqrsCommandRefresher: () => k.Tx,
          CronLowLevelSource: () => Se.R_,
          DefaultEncryptionCodecForDeviceData: () => se.h,
          DefaultEncryptionCodecForUserData: () => se.s,
          EventHandler: () => x.b,
          ExceptionCriticality: () => T.w,
          ExceptionLogger: () => I.v,
          ExceptionLoggingSink: () => C.qD,
          FetchFailedError: () => b.a,
          FrameworkInit: () => u.ar,
          FrameworkRequestContextValues: () => Q.l,
          Global: () => u.xB,
          HttpBackend: () => g.j,
          HttpClient: () => w.e,
          HttpHeaders: () => y.W,
          HttpModule: () => A.X,
          HttpParams: () => f.L,
          HttpRequest: () => _.a,
          HttpResponse: () => S.Z,
          HttpStatusCode: () => E.W,
          Injectable: () => u.GS,
          JsonApplicationResourceFetcher: () => Ee.X,
          JsonApplicationResourceLoader: () => be.K,
          KeyValueStorageFactory: () => re.u,
          KeyValueStorageInfrastructure: () => te.QI,
          ManualTriggeredTimers: () => a.r,
          MemoryChannel: () => R.q,
          MemoryKeyValueStorageInfrastructure: () => oe.s,
          MemoryStoreInfrastructureFactory: () => ne.N,
          MockJsonApplicationResourceFetcher: () => Ee.W,
          Module: () => d.Y,
          NoDynamicChannels: () => D.y,
          NodeConfiguration: () => L.$,
          NodeEventBroker: () => K.a,
          NodeModulesIntrospection: () => p.Q1,
          NodeToModuleEventBroker: () => j,
          NullCronTaskHandler: () => Se.ql,
          NullLogger: () => o.W,
          NullStorage: () => te.hL,
          ParameterProviderType: () => c.j,
          QueryHandler: () => M.e,
          RequestContext: () => Q.f,
          RequestContextModule: () => ee.q,
          SingleNodeAppBuilder: () => n.u,
          Store: () => me.y,
          StoreCapacity: () => ue.Y,
          StoreFlusher: () => he.X,
          StoreInfrastructureFactory: () => ne.G,
          TaskTrackingModule: () => O.c,
          TimerBasedCronSource: () => Se._C,
          UncaughtErrorSource: () => C.fW,
          createApplicationClient: () => Y,
          createClientFactory: () => q,
          createCqrsClient: () => B.c,
          createCqrsClients: () => B.R,
          createNullAllowedToFail: () => ie.f,
          createSingleChannelListener: () => D.v,
          defineApplication: () => n.t,
          defineBatchExecutor: () => _e,
          defineStore: () => de.Q,
          deviceScopedSingletonProvider: () => v.H,
          getQueryValue: () => J,
          getStoresProviders: () => pe.N,
          isExceptionLogEntry: () => T.h,
          isSendMessageRequest: () => U.F,
          isVersionedData: () => te.Ot,
          mockStore: () => le,
          provideClass: () => l.$,
          provideValue: () => l.z,
          refresherCreationToken: () => k.b2,
          scopedSingleton: () => m.B,
          sendMessageRequest: () => U.k,
          startApplicationNode: () => s.u,
          startSingleApplicationNode: () => s.W,
          useEventsOfModule: () => d.g,
          userScopedSingletonProvider: () => h.M
        });
      var s = r(49069),
        o = r(26457),
        n = r(96259),
        i = r(43866),
        a = r(21904),
        c = r(17321),
        l = r(31638),
        d = r(99634),
        u = r(57924),
        p = r(22838),
        h = r(97956),
        m = r(63411),
        v = r(38679),
        g = r(22253),
        y = r(4607),
        f = r(69912),
        _ = r(4043),
        S = r(12964),
        E = r(25994),
        b = r(73155),
        w = r(73774),
        A = r(25504),
        T = r(43004),
        C = r(63364),
        I = r(37920),
        O = r(7876),
        P = r(65488),
        R = r(15572),
        D = r(54452),
        N = r(58649),
        U = r(45244),
        L = r(16855),
        F = r(63663),
        M = r(20754),
        x = r(68307),
        k = r(11053),
        G = r(42949),
        K = r(96917),
        V = r(28489);
      class j {
        constructor(e) {
          (this.publishEvent = (e, t, r, s) => this.broker.publishEvent(e, t, r, s)), (this.broker = new K.a(e));
          const t = e
            .getModuleNames()
            .reduce(
              (t, r) => ({ ...t, [r]: Object.keys(e.appDefinition[r].api.events).reduce((e, t) => ((e[t] = []), e), (0, V.Ay)({})) }),
              (0, V.Ay)({})
            );
          this.localSubscribersMap = Object.keys(e.subscriptions)
            .map((e) => e)
            .reduce((t, r) => {
              const s = e.subscriptions[r];
              return (
                Object.keys(s)
                  .map((e) => e)
                  .forEach((e) => {
                    const o = s[e] ?? [],
                      n = t[e];
                    o.forEach((e) => {
                      n[e].push(r);
                    });
                  }),
                t
              );
            }, t);
        }
        connect(e) {
          const { localSubscribersMap: t, broker: r } = this;
          return r.connect({
            onLocalEvent: async (r, s, o, n, i, a) => {
              const c = t[r][o];
              await Promise.all(
                c.map(async (t) => {
                  await e.onEvent(r, t, o, n, i, a);
                })
              );
            }
          });
        }
      }
      var B = r(40945),
        W = r(94189),
        H = r(81459);
      function z(e) {
        const t = (e) => ({
            build: () => e,
            withMockedCommand: (r, s) => ((e.commands[r] = s), t(e)),
            withMockedQuery: (r, s) => ((e.queries[r] = s), t(e))
          }),
          r = { commands: {}, queries: {} };
        for (const t of Object.keys(e.commands))
          r.commands[t] = jest.fn(() => {
            throw new Error(`command ${t} of module ${e.name} is called but not mocked`);
          });
        for (const t of Object.keys(e.queries))
          r.queries[t] = jest.fn(() => {
            throw new Error(`query ${t} of module ${e.name} is called but not mocked`);
          });
        return t(r);
      }
      var Q = r(21869);
      const q = () => {
        const e = (t, r) => {
          const s = new L.$({ appDefinition: t, channels: {}, channelsListener: D.y, currentNode: "", subscriptions: {} }),
            o = new G.d(s);
          let n;
          const i = async () => {
            if (n) return n;
            const e = r.build(),
              t = o.connect({
                onCommand: (t, r, s) => {
                  if (!(t in e)) throw new Error(`${t} is not mocked`);
                  return e[t].commands[r](s);
                },
                onQuery: (t, r, s) => {
                  if (!(t in e)) throw new Error(`${t} is not mocked`);
                  return e[t].queries[r](s);
                }
              });
            return (n = await t.start()), n;
          };
          return {
            buildClient: async (e) => {
              const t = new W.w(o, s, e ?? new Q.f());
              return await i(), t;
            },
            buildContextlessClient: async () => {
              const e = new W.m(s, o);
              return await i(), e;
            },
            withMock: (s, o) => {
              const n = { ...t, ...(0, V.Ay)({ [s.name]: { api: s, main: "", queryOnly: [] } }) },
                i = r.withModule(s, o);
              return e(n, i);
            }
          };
        };
        return e(
          {},
          (function () {
            const e = new Map(),
              t = {
                withModule: (r, s) => {
                  const o = r.name;
                  if (void 0 === s) {
                    const s = z(r).build();
                    return e.set(o, s), t;
                  }
                  if ("function" == typeof s) {
                    const n = z(r);
                    return e.set(o, s(n).build()), t;
                  }
                  return e.set(o, s), t;
                },
                build: (t) => {
                  const r = t ? Object.keys(t) : [...e.keys()];
                  return Array.from(r).reduce(
                    (r, s) => ({ ...r, [s]: e.get(s) ?? z(t ? t[s].api : { name: "", commands: {}, events: {}, queries: {} }).build() }),
                    {}
                  );
                }
              };
            return t;
          })()
        );
      };
      function Y({ appDefinition: e, channels: t, channelsListener: r }) {
        const s = new L.$({ appDefinition: e, channels: t, channelsListener: r, currentNode: null, subscriptions: {} }),
          o = new G.d(s),
          n = () => {
            throw new Error("Unexpected request received by detached application client");
          },
          i = o.connect({ onCommand: n, onQuery: n }).start();
        return { client: (0, B.R)(e, o), stop: async () => (await i).stop() };
      }
      var $ = r(27149),
        X = r(60399),
        Z = r(89618);
      async function J(e, t = 1e4) {
        if (!(0, $.b)(e)) throw new Error("Error in getQueryValue: the argument is not an observable");
        try {
          return await (0, X.z)(e.pipe((0, Z.V)({ first: t })));
        } catch (e) {
          throw new Error("Error in getQueryValue: " + e);
        }
      }
      var ee = r(23370),
        te = r(91199),
        re = r(4603),
        se = r(38144),
        oe = r(15524),
        ne = r(83081),
        ie = r(9671),
        ae = r(10722);
      const ce = new ne.N();
      async function le(e, t) {
        const r = new e("mockedModuleName", e.Definition, ce, "user", (0, ie.f)(), te.hL, new ae.E());
        return t && (await r.set(t)), r;
      }
      var de = r(95681),
        ue = r(23347),
        pe = r(5711),
        he = r(71949),
        me = r(49959),
        ve = r(64987);
      const ge = 16,
        ye = 0.5,
        fe = 1.3;
      function _e(e) {
        var t;
        const {
          chunkControl: { decrement: r = ye, increment: s = fe, initialSize: o = ge } = { decrement: ye, increment: fe, initialSize: ge }
        } = e;
        const n = new ve.WU();
        return (
          ((t = class {
            constructor(e, t) {
              (this.repository = e), (this.processor = t);
            }
            async dispatchBatch(e) {
              await n.runExclusive(async () => {
                const t = await this.pushItemsInQueue(e);
                for (; t.queue.length > 0; ) await this.processOneChunkFromQueue(t);
              });
            }
            async pushItemsInQueue(t) {
              const r = await this.repository.getBatchState(e.name),
                s = t.filter((e) => !r.queue.find((t) => t === e));
              return s.length && (r.queue.push(...s), await this.repository.setBatchState(e.name, r)), r;
            }
            async processOneChunkFromQueue(t) {
              const n = (function (e) {
                  const { lastStartedChunkFirstId: t, lastStartedChunkSize: n = o } = e;
                  if (!t) return o;
                  const i = !e.queue.find((e) => e === t);
                  return Math.max(1, i ? Math.ceil(n * s) : Math.floor(n * r));
                })(t),
                i = Math.min(n, t.queue.length);
              if (!i) throw new Error("Should have something to process");
              await this.repository.setBatchState(e.name, { ...t, lastStartedChunkSize: i, lastStartedChunkFirstId: t.queue[0] });
              const a = t.queue.splice(0, i);
              await this.processor.processChunk(a), await this.repository.setBatchState(e.name, t);
            }
          }).Definition = e),
          t
        );
      }
      var Se = r(69594),
        Ee = r(75994),
        be = r(67978);
    },
    37920: (e, t, r) => {
      r.d(t, { G: () => l, v: () => c });
      var s = r(88802),
        o = r(17988),
        n = r(26457),
        i = r(63364),
        a = r(43004);
      let c = class {
        constructor(e, t) {
          (this.sink = e), (this.logger = t);
        }
        captureException(e, t, r = a.w.CRITICAL) {
          try {
            const s = e instanceof Error ? e : new Error("Invalid exception type"),
              o = this.createExceptionLogEntry(t, s, r);
            return this.sink.logException(o);
          } catch (r) {
            this.logger.error("Failed to capture exception", r, e, t);
          }
          return Promise.resolve();
        }
        createExceptionLogEntry(e, t, r) {
          return {
            callStack: t.stack ?? "",
            criticality: r,
            featuresFlipped: this.mapFeatures(e.featureFlips ?? {}),
            fileLocation: e.fileLocation,
            lineNumber: e.lineNumber,
            message: t.message,
            moduleName: e.moduleName,
            origin: e.origin,
            timestamp: Date.now(),
            useCaseId: e.useCaseId,
            useCaseName: e.useCaseName,
            useCaseStacktrace: e.useCaseStacktrace
          };
        }
        mapFeatures(e) {
          return Object.keys(e).reduce((t, r) => (e[r] ? [r, ...t] : t), []);
        }
      };
      function l() {
        return new c(new i.p$(), new n.W());
      }
      c = (0, s.__decorate)([(0, o.Injectable)(), (0, s.__metadata)("design:paramtypes", [i.qD, n.V])], c);
    },
    63364: (e, t, r) => {
      r.d(t, { fW: () => n, p$: () => o, qD: () => s });
      class s {}
      class o extends s {
        logException() {
          return Promise.resolve();
        }
        start() {
          return Promise.resolve({ stop: () => Promise.resolve() });
        }
      }
      class n {
        constructor(e) {
          this.events$ = e;
        }
      }
    },
    68475: (e, t, r) => {
      r.d(t, { c: () => g, x: () => y });
      var s = r(88802),
        o = r(17988),
        n = r(25313),
        i = r(60399),
        a = r(37182),
        c = r(87065),
        l = r(70493),
        d = r(69008),
        u = r(87279),
        p = r(21869),
        h = r(37920),
        m = r(428),
        v = r(94189);
      class g extends Error {
        constructor(e, t) {
          super("ApplicationRequestError"), (this.exception = e), (this.useCaseStacktrace = t);
        }
      }
      let y = class {
        constructor(e, t, r, s) {
          (this.logger = e), (this.useCaseStacktraceRepo = t), (this.cqrsClient = r), (this.requestContextClient = s);
        }
        intercept(e, t) {
          const r = e.getArgByIndex(0);
          return t.handle().pipe((0, a.K)(this.handleException(r)));
        }
        handleException(e) {
          const { useCaseStacktraceRepo: t } = this;
          return (r) => {
            if (t.isInitialUseCase()) {
              const [s, o] = r instanceof g ? [r.exception, r.useCaseStacktrace] : [r, t.read()];
              return this.captureException(e, s, o), (0, n._)(() => s);
            }
            const s = r instanceof g ? r : new g(r, t.read());
            return (0, n._)(() => s);
          };
        }
        async getUserFeatureFlips() {
          if (
            !(await (0, i.z)(this.requestContextClient.queries.activeUser().pipe((0, c.U)((e) => (0, u.d6)(e) && !!(0, u.db)(e).userName))))
          )
            return Promise.resolve({});
          const {
            queries: { userFeatureFlips: e }
          } = this.cqrsClient.getClient(l.cV);
          return await (0, i.z)(e().pipe((0, c.U)((e) => ((0, u.d6)(e) ? (0, u.db)(e) : {}))));
        }
        async captureException(e, t, r) {
          this.logger.captureException(t, {
            moduleName: e.module,
            useCaseName: e.name,
            useCaseId: e.context.get(p.l.UseCaseId),
            featureFlips: await this.getUserFeatureFlips(),
            useCaseStacktrace: r
          });
        }
      };
      y = (0, s.__decorate)(
        [(0, o.Injectable)({ scope: o.Scope.REQUEST }), (0, s.__metadata)("design:paramtypes", [h.v, m.F, v.w, d.Q])],
        y
      );
    },
    43004: (e, t, r) => {
      var s;
      function o(e) {
        return (
          !(!e || "object" != typeof e) &&
          "criticality" in e &&
          "timestamp" in e &&
          "message" in e &&
          "callStack" in e &&
          (e.criticality === s.CRITICAL || e.criticality === s.WARNING) &&
          "string" == typeof e.message &&
          "string" == typeof e.callStack
        );
      }
      r.d(t, { h: () => o, w: () => s }),
        (function (e) {
          (e.WARNING = "warning"), (e.CRITICAL = "critical");
        })(s || (s = {}));
    },
    428: (e, t, r) => {
      r.d(t, { F: () => a, U: () => c });
      var s = r(88802),
        o = r(17988),
        n = r(21869);
      const i = "USE_CASE_STACKTRACE";
      let a = class {
        constructor(e) {
          this.requestContext = e;
        }
        isInitialUseCase() {
          return (this.requestContext.get(i) ?? []).length <= 1;
        }
        read() {
          return this.requestContext.getOrAddSync(i, () => []) ?? [];
        }
        append(e) {
          const { requestContext: t } = this,
            r = t.get(i) ?? [];
          t.set(i, [...r, e]);
        }
      };
      a = (0, s.__decorate)([(0, o.Injectable)(), (0, s.__metadata)("design:paramtypes", [n.f])], a);
      const c = new a(new n.f());
    },
    7876: (e, t, r) => {
      r.d(t, { c: () => w });
      var s = r(88802),
        o = r(49329),
        n = r(99634),
        i = r(42339),
        a = r(87279),
        c = r(63663),
        l = r(25029),
        d = r(95681),
        u = r(23347);
      const p = (e) =>
        "object" == typeof e &&
        null !== e &&
        "swStartTime" in e &&
        "taskTrackingList" in e &&
        "string" == typeof e.swStartTime &&
        "object" == typeof e.taskTrackingList;
      class h extends (0, d.Q)({
        persist: !1,
        initialValue: { swStartTime: "", taskTrackingList: {} },
        scope: l.F.Device,
        storeName: "task-tracking",
        storeTypeGuard: p,
        capacity: u.Y._001KB
      }) {}
      let m = class {
        constructor(e) {
          this.store = e;
        }
        async execute({ body: e }) {
          const t = new Date().toISOString(),
            { taskName: r, feature: s, businessDomain: o } = e,
            n = { taskName: r, feature: s, businessDomain: o, startTime: t, serviceWorkerInterruptionCount: 0 },
            i = await this.store.getState();
          return await this.store.set({ ...i, taskTrackingList: { ...i.taskTrackingList, [t]: n } }), Promise.resolve((0, a.Vp)({ id: t }));
        }
      };
      m = (0, s.__decorate)([(0, c.W)(i.g), (0, s.__metadata)("design:paramtypes", [h])], m);
      var v = r(86252),
        g = r(93039),
        y = r(43866),
        f = r(57924);
      let _ = class {
        constructor(e, t, r) {
          (this.store = e), (this.carbonLegacyClient = t), (this.appLifecycle = r);
        }
        onFrameworkInit() {
          this.appLifecycle.addAppReadyHook(async () => {
            const e = await this.store.getState(),
              t = { ...e.taskTrackingList },
              r = Object.keys(e.taskTrackingList).map(async (r) => {
                const { taskName: s, feature: o, businessDomain: n, startTime: i } = e.taskTrackingList[r],
                  a = new g.UserMv3ExtensionTaskInterruptionEvent({
                    businessDomain: n,
                    feature: o,
                    taskName: s,
                    taskStartDateTime: i,
                    serviceWorkerStartDateTime: e.swStartTime
                  }),
                  c = this.carbonLegacyClient;
                await c.commands.carbon({ name: "logEvent", args: [{ event: a }] }), delete t[r];
              });
            await Promise.all(r), await this.store.set({ swStartTime: new Date().toISOString(), taskTrackingList: t });
          });
        }
      };
      _ = (0, s.__decorate)([(0, f.ar)(), (0, s.__metadata)("design:paramtypes", [h, v._, y.d])], _);
      var S = r(29876),
        E = r(26457);
      let b = class {
        constructor(e, t, r) {
          (this.store = e), (this.carbonLegacyClient = t), (this.logger = r);
        }
        async execute({ body: e }) {
          const { taskTrackingId: t } = e,
            r = await this.store.getState(),
            s = r.taskTrackingList[t];
          if (!s) return this.logger.trace("Trying to track a task that does not exist"), (0, a.Vp)(void 0);
          const { taskName: o, feature: n, businessDomain: i, startTime: c, serviceWorkerInterruptionCount: l } = s,
            d = new g.UserMv3ExtensionTaskReportEvent({
              businessDomain: i,
              feature: n,
              serviceWorkerInterruptionCount: l,
              serviceWorkerStartDateTime: r.swStartTime,
              taskName: o,
              taskStartDateTime: c,
              taskEndDateTime: new Date().toISOString()
            }),
            u = this.carbonLegacyClient;
          await u.commands.carbon({ name: "logEvent", args: [{ event: d }] });
          const p = { ...r.taskTrackingList };
          return delete p[t], await this.store.set({ swStartTime: r.swStartTime, taskTrackingList: p }), (0, a.Vp)(void 0);
        }
      };
      b = (0, s.__decorate)([(0, c.W)(S.y), (0, s.__metadata)("design:paramtypes", [h, v._, E.V])], b);
      let w = class {};
      w = (0, s.__decorate)(
        [
          (0, n.Y)({
            api: o.e,
            handlers: { commands: { startTaskTracking: m, terminateTaskTracking: b }, events: {}, queries: {} },
            stores: [h],
            onFrameworkInit: _,
            providers: []
          })
        ],
        w
      );
    },
    58649: (e, t, r) => {
      r.d(t, { N: () => f });
      var s = r(6136),
        o = r(98187),
        n = r(15023),
        i = r(30523),
        a = r(16433),
        c = r(89618),
        l = r(37182),
        d = r(17350),
        u = r(97280),
        p = r(42946),
        h = r(162),
        m = r(2049),
        v = r(6220),
        g = r(7074),
        y = r(78776);
      class f {
        constructor(e, t = 3e4) {
          const r = e.status$.pipe((0, s.x)());
          let f = !1;
          const _ = new o.x(),
            S = _.pipe(
              (0, v.z)(async (s) => {
                const o = (0, y.Z)();
                let v = !1;
                const g = e.messages$.pipe(
                    (0, n.o)(() => !f),
                    (0, i.h)((e) => "acknowledgement" === e.type && e.id === o),
                    (0, a.q)(1),
                    (0, c.V)(t),
                    (0, l.K)(() => d.E),
                    (0, u.d)(1)
                  ),
                  _ = g.subscribe(() => {
                    (v = !0), _.unsubscribe();
                  }),
                  S = r
                    .pipe(
                      (0, n.o)(() => !v && !f),
                      (0, p.z)(() => (0, h.D)(e.sendMessage({ type: "send", id: o, message: s.message })))
                    )
                    .subscribe();
                try {
                  await (0, m.n)(g), S.unsubscribe(), s.resolve();
                } catch (e) {
                  S.unsubscribe(), s.reject(e);
                }
              })
            ).subscribe();
          (this.stop = () => ((f = !0), S.unsubscribe(), e.stop())),
            (this.send = (e) =>
              new Promise((t, r) => {
                const s = { message: e, resolve: t, reject: r };
                _.next(s);
              })),
            (this.channelState$ = e.status$),
            (this.receivedMessages$ = e.messages$.pipe(
              (0, i.h)((e) => "send" === e.type),
              (0, v.z)(async (t) => {
                if ("send" === t.type) return await e.sendMessage({ type: "acknowledgement", id: t.id }), t.message;
              }),
              (0, g.B)()
            ));
        }
      }
    },
    65488: (e, t, r) => {
      r.d(t, { U: () => w });
      var s = r(24966),
        o = r(2049),
        n = r(30523),
        i = r(6220),
        a = r(162),
        c = r(87065),
        l = r(37182),
        d = r(69885),
        u = r(64659);
      const p = (e) => {
          if (!e || "object" != typeof e) return !1;
          return "unSubscription" === e.type;
        },
        h = (e, t, r) => {
          const s = new Set(r),
            o = new Map(),
            h = t.receivedMessages$.pipe((0, n.h)(p)).subscribe((e) => {
              const t = o.get(e.id);
              t?.unsubscribe(), o.delete(e.id);
            }),
            m = t.receivedMessages$
              .pipe(
                (0, n.h)((e) => {
                  return (
                    !(!(t = e) || "object" != typeof t) && "start" === t.type && s.has(e.definition.destination) && !o.has(e.definition.id)
                  );
                  var t;
                }),
                (0, i.z)((e) =>
                  (0, a.D)(
                    (async (e) => (
                      o.set(e.definition.id, { unsubscribe: () => {} }),
                      await t.send({ type: "initial-acknowledgement", id: e.definition.id }),
                      e
                    ))(e)
                  )
                )
              )
              .subscribe((r) => {
                const s = r.definition.destination,
                  n = e(s, r.definition.content, r.metadata),
                  p = { type: "end", id: r.definition.id },
                  h = n
                    .pipe(
                      (0, c.U)((e) => ({ id: r.definition.id, data: e, type: "data" })),
                      (0, l.K)((e) => {
                        const t = { id: r.definition.id, type: "error", errorMessage: e.message };
                        return (0, d.of)(t);
                      }),
                      (0, u.l)(p),
                      (0, i.z)((e) => (0, a.D)(t.send(e)))
                    )
                    .subscribe();
                o.set(r.definition.id, {
                  unsubscribe: () => {
                    h.unsubscribe();
                  }
                });
              });
          return {
            unsubscribe: () => {
              m.unsubscribe(), h.unsubscribe();
              for (const e of o.values()) e.unsubscribe();
            }
          };
        };
      var m = r(58376),
        v = r(85390),
        g = r(15023),
        y = r(6136),
        f = r(42946),
        _ = r(60399),
        S = r(15572),
        E = r(78776);
      var b = r(28489);
      class w {
        constructor(e) {
          this.stopped$ = new s.X(!1);
          const t = { routes: (0, b.Ay)({}) };
          this.routes = (() => {
            const { routes: r } = Object.keys(e).reduce((t, r) => {
              const s = e[r];
              if (
                ("local" === s.type &&
                  (t.routes[r] = { send: s.onMessage, trySend: async (...e) => (await (0, o.n)(s.onMessage(...e)), !0) }),
                "remote" === s.type)
              ) {
                const e = ((e, t) => {
                  const r = (r, s, o) => {
                    const i = { content: s, destination: String(r), id: (0, E.Z)() };
                    return new m.y((r) => {
                      let s = { type: "start", definition: i, metadata: o };
                      const l = (0, v.a)({ message: e.receivedMessages$, stopped: t })
                          .pipe(
                            (0, g.o)(({ stopped: e }) => !e),
                            (0, c.U)(({ message: e }) => e)
                          )
                          .subscribe((e) => {
                            var t;
                            (t = e) && "object" == typeof t && "initial-acknowledgement" === t.type && e.id === i.id
                              ? (s = { ...s, metadata: { ...s.metadata, isReminder: !0 } })
                              : ((e) => !(!e || "object" != typeof e) && "data" === e.type)(e) && e.id === i.id
                              ? r.next(e.data)
                              : ((e) => !(!e || "object" != typeof e) && "error" === e.type)(e) && e.id === i.id
                              ? r.error(new Error(e.errorMessage))
                              : ((e) => !(!e || "object" != typeof e) && "end" === e.type)(e) && e.id === i.id && r.complete();
                          }),
                        d = (0, v.a)({
                          sendTimes: e.channelState$.pipe(
                            (0, y.x)(),
                            (0, n.h)((e) => e === S.D.Connected)
                          ),
                          stopped: t
                        })
                          .pipe(
                            (0, g.o)(({ stopped: e }) => !e),
                            (0, f.z)(() => (0, a.D)(e.send(s)))
                          )
                          .subscribe();
                      return () => {
                        e.send({ type: "unSubscription", id: i.id }), d.unsubscribe(), l.unsubscribe();
                      };
                    });
                  };
                  return {
                    send: r,
                    trySend: async (t, s, n) => (await (0, _.z)(e.channelState$)) === S.D.Connected && (await (0, o.n)(r(t, s, n)), !0)
                  };
                })(s.channel, this.stopped$);
                t.routes[r] = e;
              }
              return t;
            }, t);
            return r;
          })();
        }
        connect(e, t) {
          let r = !1;
          return {
            start: () => {
              if (r) throw new Error("Already started");
              r = !0;
              const s = (e) => h((e, t, r) => this.routes[e].send(e, t, r), e, Object.keys(this.routes)),
                o = e.map(s),
                n = new Map(),
                i = t.connectedChannels$.subscribe((e) => {
                  const t = [...n.entries()].filter(([t]) => !(t in e)),
                    r = Object.keys(e).filter((e) => !n.has(e));
                  t.forEach(([e, t]) => {
                    n.delete(e), t.unsubscribe();
                  }),
                    r.forEach((t) => {
                      const r = e[t],
                        o = s(r);
                      n.set(t, o);
                    });
                });
              return Promise.resolve({
                stop: () => ([...o, i, ...n.values()].forEach((e) => e.unsubscribe()), this.stopped$.next(!0), Promise.resolve())
              });
            }
          };
        }
        sendMessage(e, t) {
          return this.routes[e].send(e, t, { isReminder: !1 });
        }
        trySendMessage(e, t) {
          return this.routes[e].trySend(e, t, { isReminder: !1 });
        }
      }
    },
    15572: (e, t, r) => {
      r.d(t, { D: () => s, q: () => i });
      var s,
        o = r(98187),
        n = r(24966);
      !(function (e) {
        (e.Connected = "Connected"), (e.Disconnected = "Disconnected");
      })(s || (s = {}));
      class i {
        constructor() {
          (this.sentMessages$ = new o.x()),
            (this.receivedMessagesSubject$ = new o.x()),
            (this.channelStateSubject$ = new n.X(s.Disconnected));
        }
        send(e) {
          if (this.channelStateSubject$.value !== s.Connected) throw new Error("Channel is not connected");
          return this.sentMessages$.next(e), Promise.resolve();
        }
        get receivedMessages$() {
          return this.receivedMessagesSubject$;
        }
        get channelState$() {
          return this.channelStateSubject$;
        }
        stop() {
          this.receivedMessages$.complete();
        }
        connect(e) {
          if (this.channelStateSubject$.value === s.Connected) return { disconnect: () => {} };
          const t = this.sentMessages$.subscribe((t) => {
            e.receivedMessages$.next(t);
          });
          return (
            this.channelState$.next(s.Connected),
            {
              disconnect: () => {
                this.channelState$.next(s.Disconnected), t.unsubscribe();
              }
            }
          );
        }
      }
    },
    54452: (e, t, r) => {
      r.d(t, { v: () => n, y: () => o });
      var s = r(24966);
      const o = { connectedChannels$: new s.X({}) },
        n = (e) => ({ connectedChannels$: new s.X({ channel: e }) });
    },
    45244: (e, t, r) => {
      r.d(t, { F: () => o, k: () => s });
      const s = ({ channelName: e, message: t }) => ({ channelName: e, message: t, type: "graphene-message" }),
        o = (e) => {
          if (!e || "object" != typeof e) return !1;
          return "graphene-message" === e.type;
        };
    },
    16855: (e, t, r) => {
      r.d(t, { $: () => s });
      class s {
        constructor(e) {
          (this.appDefinition = e.appDefinition),
            (this.currentNode = e.currentNode),
            (this.channels = e.channels),
            (this.subscriptions = e.subscriptions),
            (this.channelsListener = e.channelsListener);
        }
        getNodeList() {
          return this.currentNode ? [...this.getRemoteNodeList(), this.currentNode] : this.getRemoteNodeList();
        }
        getRemoteNodeList() {
          return Object.keys(this.channels);
        }
        getModuleNames() {
          return Object.keys(this.appDefinition);
        }
      }
    },
    21869: (e, t, r) => {
      r.d(t, { f: () => o, l: () => s });
      const s = { UseCaseId: "USE_CASE_ID", UserName: "USER_NAME" };
      class o {
        constructor() {
          this.entries = {};
        }
        get(e) {
          return this.entries[e];
        }
        getOrDefault(e, t) {
          return this.entries[e] ?? t;
        }
        getOrFail(e) {
          if (!this.has(e)) throw new Error(`No ${e} in request context`);
          return this.entries[e];
        }
        has(e) {
          return e in this.entries;
        }
        async getOrAdd(e, t) {
          return this.has(e) || this.set(e, await t()), this.get(e);
        }
        getOrAddSync(e, t) {
          return this.has(e) || this.set(e, t()), this.get(e);
        }
        set(e, t) {
          this.entries[e] = t;
        }
        toSerializable() {
          return this.entries;
        }
        static fromSerializable(e) {
          const t = new o();
          for (const [r, s] of Object.entries(e)) t.entries[r] = s;
          return t;
        }
        clone() {
          return o.fromSerializable(JSON.parse(JSON.stringify(this.toSerializable())));
        }
        withValue(e, t) {
          return this.set(e, t), this;
        }
      }
    },
    75994: (e, t, r) => {
      r.d(t, { W: () => o, X: () => s });
      class s {}
      class o extends s {
        constructor(e) {
          super(), (this.files = e);
        }
        fetch(e) {
          return e in this.files ? Promise.resolve(this.files[e]) : Promise.reject(new Error("404 not found :" + e));
        }
      }
    },
    67978: (e, t, r) => {
      r.d(t, { K: () => c });
      var s = r(88802),
        o = r(162),
        n = r(25859),
        i = r(57924),
        a = r(75994);
      let c = class {
        constructor(e, t) {
          (this.url = e), (this.fetcher = t), (this.value$ = (0, o.D)((0, n.P)(() => this.get())));
        }
        async load() {
          await this.get();
        }
        async get() {
          const { value: e } = this;
          if (e) return e;
          const t = await this.fetcher.fetch(this.url),
            r = await this.loadResource(t);
          return (this.value = r), r;
        }
      };
      c = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [String, a.X])], c);
    },
    23370: (e, t, r) => {
      r.d(t, { q: () => E });
      var s = r(88802),
        o = r(87279),
        n = r(8987),
        i = r(87065),
        a = r(6136),
        c = r(25029),
        l = r(95681),
        d = r(23347);
      const u = (e) => !(!e || "object" != typeof e) && "userName" in e;
      class p extends (0, l.Q)({
        initialValue: { userName: void 0 },
        persist: !1,
        scope: c.F.Device,
        storeName: "active-user-store",
        storeTypeGuard: u,
        capacity: d.Y._001KB
      }) {}
      var h = r(20754),
        m = r(63663),
        v = r(81459),
        g = r(57924);
      let y = class extends v.f {};
      y = (0, s.__decorate)([(0, g.GS)()], y);
      let f = class {
        constructor(e) {
          this.activeUserStore = e;
        }
        execute() {
          return this.activeUserStore.state$.pipe(
            (0, i.U)((e) => e.userName),
            (0, a.x)(),
            (0, i.U)((e) => (0, o.Vp)({ userName: e }))
          );
        }
      };
      f = (0, s.__decorate)([(0, h.e)(n.p), (0, s.__metadata)("design:paramtypes", [p])], f);
      let _ = class {
        constructor(e, t) {
          (this.activeUserStore = e), (this.eventEmitter = t);
        }
        async execute({ body: { userName: e } }) {
          return (
            await this.activeUserStore.set({ userName: e }),
            e && this.eventEmitter.sendEvent("activeUserSet", { userName: e }),
            (0, o.Vp)(void 0)
          );
        }
      };
      _ = (0, s.__decorate)([(0, m.W)(n.r$), (0, s.__metadata)("design:paramtypes", [p, y])], _);
      var S = r(99634);
      let E = class {};
      E = (0, s.__decorate)(
        [
          (0, S.Y)({
            api: n.t$,
            handlers: { commands: { setActiveUser: _ }, events: {}, queries: { activeUser: f } },
            stores: [p],
            providers: [y]
          })
        ],
        E
      );
    },
    38144: (e, t, r) => {
      r.d(t, { h: () => n, s: () => i });
      var s = r(88802),
        o = r(17988);
      let n = class {};
      n = (0, s.__decorate)([(0, o.Injectable)()], n);
      let i = class {};
      i = (0, s.__decorate)([(0, o.Injectable)()], i);
    },
    4603: (e, t, r) => {
      r.d(t, { u: () => o });
      class s {
        constructor(e, t, r) {
          (this.storage = e), (this.baseKey = t), (this.initialValueFactory = r);
        }
        clear() {
          return this.storage.remove(this.baseKey);
        }
        async read() {
          const e = await this.storage.get(this.baseKey);
          return !e && this.initialValueFactory ? await this.initialValueFactory() : e;
        }
        async write(e) {
          await this.storage.set(this.baseKey, e);
        }
      }
      class o {
        constructor(e) {
          this.storage = e;
        }
        createBackend(e, t, r, o) {
          const n = r ? `${e}.${t}.${r}` : `${e}.${t}`;
          return new s(this.storage, n, o);
        }
      }
    },
    15524: (e, t, r) => {
      r.d(t, { s: () => s });
      class s {
        constructor() {
          this.memory = new Map();
        }
        set(e, t) {
          return this.memory.set(e, t), Promise.resolve();
        }
        getAllKeys() {
          return Promise.resolve([...this.memory.keys()]);
        }
        remove(e) {
          return this.memory.get(e) ? (this.memory.delete(e), Promise.resolve()) : Promise.resolve();
        }
        get(e) {
          return Promise.resolve(this.memory.get(e));
        }
      }
    },
    91199: (e, t, r) => {
      function s(e, t) {
        return null !== e && "object" == typeof e && "version" in e && "content" in e && t(e.content);
      }
      r.d(t, { Ot: () => s, QI: () => n, hL: () => o });
      const o = { read: () => Promise.resolve(void 0), write: () => Promise.resolve(), clear: () => Promise.resolve() };
      class n {}
    },
    95681: (e, t, r) => {
      r.d(t, { Q: () => u });
      var s = r(57924),
        o = r(49499),
        n = r(10722),
        i = r(91199);
      class a {
        constructor(e, t, r, s, i) {
          (this.encryptionCodec = e),
            (this.serializationCodec = t),
            (this.transportStorageCodec = r),
            (this.backend = s),
            (this.definition = i),
            (this.codec = (0, o.x)(r, e, t));
          const a = new n.E();
          this.bypassedDecryptionDecoder = (0, o.x)(r, a, t);
        }
        async read() {
          const e = await this.backend.read();
          if (!e) return;
          const { decoded: t, hasBypassedDecryption: r } = await this.decodeData(e),
            { definition: s } = this;
          if (!(0, i.Ot)(t, s.typeGuard)) {
            if (!s.typeGuard(t))
              throw (
                (r && (await this.rawWrite(t)),
                new Error(`Can't migrate non-versioned Storage : Typeguard ${s.typeGuard.name} check failed.`))
              );
            return await this.write(t), t;
          }
          if (t.version < s.schemaVersion) {
            if (!s.migrateStorageSchema) throw (r && (await this.rawWrite(t)), new Error("migrateStorage is undefined"));
            const e = s.migrateStorageSchema(t);
            return await this.write(e), e;
          }
          r && (await this.write(t.content));
          const { content: o } = t;
          if (!s.typeGuard(o)) throw new Error("Type guard failed");
          return o;
        }
        async write(e) {
          const t = { version: this.definition.schemaVersion, content: e };
          await this.rawWrite(t);
        }
        clear() {
          return this.backend.clear();
        }
        async rawWrite(e) {
          const t = await this.codec.encode(e);
          await this.backend.write(t);
        }
        async decodeData(e) {
          const { codec: t, bypassedDecryptionDecoder: r } = this;
          try {
            return { decoded: await t.decode(e), hasBypassedDecryption: !1 };
          } catch (t) {
            try {
              return { decoded: await r.decode(e), hasBypassedDecryption: !0 };
            } catch {
              throw t;
            }
          }
        }
      }
      const c = (e) => {
        var t;
        return (
          ((t = class extends a {
            constructor(t, r, s, o) {
              super(t, r, s, o, e);
            }
          }).Definition = e),
          t
        );
      };
      var l = r(49959);
      const d = (e) =>
        e.persist
          ? {
              persist: !0,
              codec: e.codec,
              scope: e.scope,
              storeName: e.storeName,
              storeTypeGuard: e.storeTypeGuard,
              isCache: e.isCache,
              storage: c(e.storage)
            }
          : { persist: !1, initialValue: e.initialValue, scope: e.scope, storeName: e.storeName };
      function u(e) {
        var t;
        const r = d(e),
          o =
            (((t = class extends l.y {
              constructor(e, t, r, s, o, n, i) {
                super(e, t, r, s, o, n, i);
              }
            }).Definition = r),
            t);
        return (0, s.GS)()(o), o;
      }
    },
    23347: (e, t, r) => {
      var s;
      r.d(t, { Y: () => s }),
        (function (e) {
          (e._001KB = "1KB"), (e._010KB = "10KB"), (e._100KB = "100KB"), (e.Unlimited = "Unlimited");
        })(s || (s = {}));
    },
    71949: (e, t, r) => {
      r.d(t, { X: () => a });
      var s = r(88802),
        o = r(17988),
        n = r(1484),
        i = r(56860);
      let a = class {
        constructor(e, t, r) {
          (this.moduleRef = e), (this.request = t), (this.storeList = r);
        }
        async prepare() {
          const e = n.ContextIdFactory.getByRequest(this.request);
          this.storeList.instances = await Promise.all(this.storeList.classes.map((t) => this.moduleRef.resolve(t, e, { strict: !1 })));
        }
        async flush() {
          const { instances: e } = this.storeList;
          if (!e.length) throw new Error("Stores not instantiated");
          const t = e.map((e) => e.persist());
          await Promise.all(t);
        }
      };
      a = (0, s.__decorate)(
        [
          (0, o.Injectable)(),
          (0, s.__param)(1, (0, o.Inject)(n.REQUEST)),
          (0, s.__metadata)("design:paramtypes", [n.ModuleRef, Object, i.D])
        ],
        a
      );
    },
    83081: (e, t, r) => {
      r.d(t, { N: () => i, G: () => n });
      var s = r(24966);
      class o {
        constructor(e) {
          (this.initValue = e), (this.state$ = new s.X(e));
        }
        set(e) {
          return this.state$.next(e), Promise.resolve();
        }
        init(e) {
          return this.state$.next(e), Promise.resolve();
        }
        stop() {
          this.state$.complete();
        }
        getState() {
          return Promise.resolve(this.state$.value);
        }
        clear() {
          return this.state$.next(this.initValue), Promise.resolve();
        }
        clearStorage() {
          return Promise.resolve();
        }
        update(e) {
          return this.set(e(this.state$.value)), Promise.resolve();
        }
        persist() {
          return Promise.resolve();
        }
        load() {
          return Promise.resolve();
        }
      }
      class n {}
      class i extends n {
        createUserScopedInfrastructure() {
          return new o({ timestamp: void 0 });
        }
        createDeviceScopedInfrastructure() {
          return new o({ timestamp: void 0 });
        }
      }
    },
    56860: (e, t, r) => {
      r.d(t, { D: () => s });
      class s {
        constructor() {
          (this.registeredClasses = []), (this.preparedInstances = []);
        }
        get classes() {
          return this.registeredClasses;
        }
        get instances() {
          return this.preparedInstances;
        }
        set instances(e) {
          this.preparedInstances = e;
        }
        registerClass(e) {
          this.registeredClasses.push(e);
        }
      }
    },
    5711: (e, t, r) => {
      r.d(t, { N: () => _ });
      var s = r(1484),
        o = r(78776),
        n = r(25029),
        i = r(43866),
        a = r(63411),
        c = r(83081),
        l = r(93417),
        d = r(43702),
        u = r(23711),
        p = r(38144),
        h = r(4603),
        m = r(21869);
      const v = { [n.F.Device]: p.h, [n.F.User]: p.s };
      var g = r(9671),
        y = r(97631);
      function f(e) {
        const t = e.Definition.persist
            ? (function (e, t, r) {
                const {
                  EncryptionCodec: s = v[t],
                  SerializationCodec: i = d.b,
                  TransportStorageCodec: c = u.z,
                  initialValue: p,
                  schemaVersion: g
                } = r.Definition;
                class y {
                  constructor(e, t, r, s) {
                    (this.encryptionCodec = e), (this.serializationCodec = t), (this.transportStorageCodec = r), (this.backend = s);
                  }
                }
                class f extends r {
                  constructor(e) {
                    super(e.encryptionCodec, e.serializationCodec, e.transportStorageCodec, e.backend);
                  }
                }
                const _ = { token: (0, o.Z)(), inject: [y], asyncFactory: (e) => Promise.resolve(new f(e)) };
                return [
                  {
                    token: y,
                    inject: [l.r, s, i, c, h.u, ...(t === n.F.User ? [m.f] : [])],
                    asyncFactory: async (r, s, o, i, a, c) => {
                      const l = await a.createBackend(r, e, (t === n.F.User ? c?.get(m.l.UserName) : "") ?? "", async () => {
                        const e = { version: g, content: p },
                          t = await o.encode(e),
                          r = await s.encode(t);
                        return await i.encode(r);
                      });
                      return new y(s, o, i, l);
                    }
                  },
                  ...(0, a.B)(t, r, _)
                ];
              })(e.Definition.storeName, e.Definition.scope, e.Definition.storage)
            : [],
          r = {
            token: (0, o.Z)(),
            inject: [
              l.r,
              i.d,
              c.G,
              e.Definition.scope === n.F.User ? m.f : s.REQUEST,
              g.J,
              y.g,
              ...(e.Definition.persist ? [e.Definition.storage, e.Definition.codec] : [])
            ],
            asyncFactory: async (t, r, s, o, i, a, c, l) => {
              const d = new e(t, e.Definition, s, (e.Definition.scope === n.F.User ? o.get(m.l.UserName) : "") ?? "", i, c, l),
                u = async () => {
                  await d.clear(), d.stop();
                };
              if (e.Definition.scope === n.F.User) {
                if (!a) throw new Error("No user scope available");
                a.addCloseHook(u);
              } else r.addShutdownHook(u);
              return await d.load(), d;
            }
          };
        return [...t, ...(0, a.B)(e.Definition.scope, e, r)];
      }
      function _(...e) {
        return e.flatMap((e) => f(e));
      }
    },
    49959: (e, t, r) => {
      r.d(t, { y: () => u });
      var s = r(24966),
        o = r(85390),
        n = r(87065),
        i = r(6136),
        a = r(30523),
        c = r(60399),
        l = r(25029),
        d = r(95087);
      class u {
        constructor(e, t, r, c, u, p, h) {
          (this.conf = t), (this.allowedToFail = u), (this.storage = p), (this.codec = h);
          (this.infrastructure = (() => {
            switch (t.scope) {
              case l.F.Device:
                return r.createDeviceScopedInfrastructure(e, t.storeName, t.storeTypeGuard);
              case l.F.User:
                if (!c) throw new Error("Attempting to create a user-scoped store without a user");
                return r.createUserScopedInfrastructure(e, t.storeName, c, t.storeTypeGuard);
            }
            (0, d.U)(t.scope);
          })()),
            (this.timeGetter = () => Date.now()),
            (this.localState$ = new s.X({ timestamp: void 0 })),
            (this.mergedState$ = (0, o.a)({ infra: this.infrastructure.state$, current: this.localState$ }).pipe(
              (0, n.U)(({ current: e, infra: t }) => (t.timestamp && (!e.timestamp || t.timestamp > e.timestamp) ? t : e)),
              (0, i.x)()
            ));
          const m = t.persist ? void 0 : t.initialValue;
          this.state$ = this.mergedState$.pipe(
            (0, a.h)((e) => !t.persist || !!e.timestamp),
            (0, n.U)((e) => e.data ?? m)
          );
        }
        getState() {
          return (0, c.z)(this.state$);
        }
        async set(e) {
          await this.setWithoutPersist(e), await this.persist();
        }
        async setWithoutPersist(e) {
          const t = { data: e, timestamp: this.timeGetter() };
          this.localState$.next(t), await this.infrastructure.set(t);
        }
        init(e) {
          const t = { data: e, timestamp: 0 };
          return this.localState$.next(t), Promise.resolve();
        }
        async clear() {
          this.localState$.next({ timestamp: void 0 }), await this.infrastructure.clear();
        }
        async clearStorage() {
          if (!this.storage) throw new Error("Persisted stores should have storage");
          await this.storage.clear();
        }
        stop() {
          this.localState$.complete();
        }
        async update(e) {
          const t = await this.getState();
          await this.set(e(t));
        }
        async load() {
          const e = await this.infrastructure.getState();
          if (e.timestamp) return void this.localState$.next(e);
          const { conf: t, codec: r, storage: s } = this;
          if (!t.persist) return;
          if (!r || !s) throw new Error("Persisted stores should have conf/storage");
          (await this.allowedToFail.conditionallyAllowToFailOne(async () => {
            const e = (await s.read()) ?? t.storage.Definition.initialValue,
              o = await r.decode(e);
            await this.setWithoutPersist(o);
          }, !!t.isCache)) || (await this.setWithoutPersist(await r.decode(t.storage.Definition.initialValue)));
        }
        async persist() {
          const { conf: e, codec: t, storage: r } = this;
          if (!e.persist) return;
          if (!t || !r) throw new Error("Persisted stores should have conf/storage");
          const s = await this.getState(),
            o = await t.encode(s);
          await r.write(o);
        }
      }
    },
    69594: (e, t, r) => {
      r.d(t, { R_: () => o, _C: () => n, ql: () => s });
      class s {
        run() {
          return Promise.resolve();
        }
        isRunnable() {
          return !1;
        }
      }
      class o {}
      class n extends o {
        constructor(e) {
          super(), (this.alarm$ = e.createObservableTimer(6e4, 6e4));
        }
      }
    },
    33920: (e, t, r) => {
      r.d(t, { F: () => o, p: () => s });
      const s = { Open: "open", Closed: "closed" };
      class o {
        constructor(e) {
          (this.lifecycle = e),
            (this.status = s.Open),
            (this.onAppShutdown = () => this.close()),
            (this.closeHooks = []),
            e.addShutdownHook(this.onAppShutdown);
        }
        async close() {
          for (; this.closeHooks.length > 0; ) {
            const e = this.closeHooks.pop();
            e && (await e());
          }
          (this.status = s.Closed), this.lifecycle.removeShutdownHook(this.onAppShutdown);
        }
        addCloseHook(e) {
          this.closeHooks.push(e);
        }
      }
    },
    97631: (e, t, r) => {
      r.d(t, { g: () => p });
      var s = r(88802),
        o = r(78263),
        n = r(30523),
        i = r(16433),
        a = r(17988),
        c = r(87279),
        l = r(69008),
        d = r(33920),
        u = r(43866);
      let p = class extends d.F {
        constructor(e, t, r) {
          super(t),
            (this.requestContext = r),
            r.queries
              .activeUser()
              .pipe((0, o.G)(), (0, n.h)(this.thisUserGotDeactivated(e)), (0, i.q)(1))
              .subscribe(() => {
                this.close();
              });
        }
        thisUserGotDeactivated(e) {
          return ([t, r]) => {
            if (!(0, c.d6)(t) || !(0, c.d6)(r)) return !1;
            const s = (0, c.db)(t).userName,
              o = (0, c.db)(r).userName;
            return s === e && void 0 === o;
          };
        }
      };
      p = (0, s.__decorate)([(0, a.Injectable)(), (0, s.__metadata)("design:paramtypes", [String, u.d, l.Q])], p);
    },
    37204: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.analyticsApi = t.TrackPageViewCommand = t.TrackEventCommand = void 0);
      const s = r(85888),
        o = r(70986);
      class n extends (0, o.defineCommand)({ scope: o.UseCaseScope.Device }) {}
      t.TrackEventCommand = n;
      class i extends (0, o.defineCommand)({ scope: o.UseCaseScope.Device }) {}
      (t.TrackPageViewCommand = i),
        (t.analyticsApi = (0, s.defineModuleApi)({
          commands: { TrackEventCommand: n, TrackPageViewCommand: i },
          events: {},
          name: "analytics",
          queries: {}
        }));
    },
    7022: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    52389: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(37204), t), o(r(7022), t);
    },
    82142: (e, t) => {
      function r(e) {
        const t = (e) => ({
            build: () => e,
            withMockedCommand: (r, s) => ((e.commands[r] = s), t(e)),
            withMockedQuery: (r, s) => ((e.queries[r] = s), t(e))
          }),
          r = { commands: {}, queries: {} };
        for (const t of Object.keys(e.commands))
          r.commands[t] = jest.fn(() => {
            throw new Error(`command ${t} of module ${e.name} is called but not mocked`);
          });
        for (const t of Object.keys(e.queries))
          r.queries[t] = jest.fn(() => {
            throw new Error(`query ${t} of module ${e.name} is called but not mocked`);
          });
        return t(r);
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.appClientMockBuilder = void 0),
        (t.appClientMockBuilder = function () {
          const e = new Map(),
            t = {
              withModule: (s, o) => {
                const n = s.name;
                if (void 0 === o) {
                  const o = r(s).build();
                  return e.set(n, o), t;
                }
                if ("function" == typeof o) {
                  const i = r(s);
                  return e.set(n, o(i).build()), t;
                }
                return e.set(n, o), t;
              },
              build: (t) => {
                const s = t ? Object.keys(t) : [...e.keys()];
                return Array.from(s).reduce(
                  (s, o) => ({ ...s, [o]: e.get(o) ?? r(t ? t[o].api : { name: "", commands: {}, events: {}, queries: {} }).build() }),
                  {}
                );
              }
            };
          return t;
        });
    },
    67202: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.appClientMockBuilder = void 0);
      var s = r(82142);
      Object.defineProperty(t, "appClientMockBuilder", {
        enumerable: !0,
        get: function () {
          return s.appClientMockBuilder;
        }
      });
    },
    54072: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.CommandMessage = void 0);
      const s = r(98653);
      class o extends s.RequestMessage {
        constructor(e) {
          super(), (this.body = e);
        }
      }
      t.CommandMessage = o;
    },
    98653: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.UseCaseScope = t.RequestMessage = void 0);
      (t.RequestMessage = class {}),
        (function (e) {
          (e.User = "user"), (e.Device = "device");
        })(t.UseCaseScope || (t.UseCaseScope = {}));
    },
    85088: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.EMPTY_QUERY_RESULT = t.PAGINATION_START_PAGE_INDEX = t.FilterOperationName = void 0),
        (function (e) {
          (e.Equals = "equals"), (e.Differs = "differs"), (e.Matches = "matches"), (e.In = "in"), (e.Contains = "contains");
        })(t.FilterOperationName || (t.FilterOperationName = {})),
        (t.PAGINATION_START_PAGE_INDEX = 1),
        (t.EMPTY_QUERY_RESULT = { items: [], itemCount: 0, page: t.PAGINATION_START_PAGE_INDEX, pageCount: 1 });
    },
    77939: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.defineCarbonCommand = t.defineCommand = void 0);
      const s = r(54072),
        o = r(98653);
      t.defineCommand = (...[e = { scope: o.UseCaseScope.User }]) => {
        var t;
        return ((t = class extends s.CommandMessage {}).metadata = e), t;
      };
      t.defineCarbonCommand = (e = { scope: o.UseCaseScope.User }) => {
        var t;
        return ((t = class extends s.CommandMessage {}).metadata = e), t;
      };
    },
    1941: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.defineQuery = void 0);
      const s = r(70522),
        o = r(98653);
      t.defineQuery = (e = { scope: o.UseCaseScope.User }) => {
        var t;
        return ((t = class extends s.QueryMessage {}).metadata = e), t;
      };
    },
    70986: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.defineQuery =
          t.defineCarbonCommand =
          t.defineCommand =
          t.UseCaseScope =
          t.FilterOperationName =
          t.EMPTY_QUERY_RESULT =
          t.PAGINATION_START_PAGE_INDEX =
          t.QueryMessage =
          t.CommandMessage =
            void 0);
      var s = r(54072);
      Object.defineProperty(t, "CommandMessage", {
        enumerable: !0,
        get: function () {
          return s.CommandMessage;
        }
      });
      var o = r(70522);
      Object.defineProperty(t, "QueryMessage", {
        enumerable: !0,
        get: function () {
          return o.QueryMessage;
        }
      });
      var n = r(85088);
      Object.defineProperty(t, "PAGINATION_START_PAGE_INDEX", {
        enumerable: !0,
        get: function () {
          return n.PAGINATION_START_PAGE_INDEX;
        }
      });
      var i = r(85088);
      Object.defineProperty(t, "EMPTY_QUERY_RESULT", {
        enumerable: !0,
        get: function () {
          return i.EMPTY_QUERY_RESULT;
        }
      }),
        Object.defineProperty(t, "FilterOperationName", {
          enumerable: !0,
          get: function () {
            return i.FilterOperationName;
          }
        });
      var a = r(98653);
      Object.defineProperty(t, "UseCaseScope", {
        enumerable: !0,
        get: function () {
          return a.UseCaseScope;
        }
      });
      var c = r(77939);
      Object.defineProperty(t, "defineCommand", {
        enumerable: !0,
        get: function () {
          return c.defineCommand;
        }
      }),
        Object.defineProperty(t, "defineCarbonCommand", {
          enumerable: !0,
          get: function () {
            return c.defineCarbonCommand;
          }
        });
      var l = r(1941);
      Object.defineProperty(t, "defineQuery", {
        enumerable: !0,
        get: function () {
          return l.defineQuery;
        }
      });
    },
    70522: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.QueryMessage = void 0);
      const s = r(98653);
      class o extends s.RequestMessage {
        constructor(e) {
          super(), (this.body = e);
        }
      }
      t.QueryMessage = o;
    },
    49631: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.EventMessage = t.defineEvent = void 0);
      var s = r(84776);
      Object.defineProperty(t, "defineEvent", {
        enumerable: !0,
        get: function () {
          return s.defineEvent;
        }
      }),
        Object.defineProperty(t, "EventMessage", {
          enumerable: !0,
          get: function () {
            return s.EventMessage;
          }
        });
    },
    84776: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.defineEvent = t.EventMessage = void 0);
      const s = r(98653);
      class o {
        constructor(e) {
          this.body = e;
        }
      }
      t.EventMessage = o;
      t.defineEvent = (e = { scope: s.UseCaseScope.User }) => {
        var t;
        return ((t = class extends o {}).metadata = e), t;
      };
    },
    90693: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(52389), t),
        o(r(70986), t),
        o(r(35079), t),
        o(r(85888), t),
        o(r(49631), t),
        o(r(67202), t),
        o(r(22396), t),
        o(r(28601), t);
    },
    35079: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(36518), t);
    },
    82397: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.taskTrackingApi = void 0);
      const s = r(85888),
        o = r(96609),
        n = r(7797);
      t.taskTrackingApi = (0, s.defineModuleApi)({
        name: "taskTracking",
        commands: { startTaskTracking: o.StartTaskTrackingCommand, terminateTaskTracking: n.TerminateTaskTrackingCommand },
        events: {},
        queries: {}
      });
    },
    39948: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(96609), t), o(r(7797), t);
    },
    96609: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.StartTaskTrackingCommand = void 0);
      const s = r(70986);
      class o extends (0, s.defineCommand)({ scope: s.UseCaseScope.Device }) {}
      t.StartTaskTrackingCommand = o;
    },
    7797: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.TerminateTaskTrackingCommand = void 0);
      const s = r(70986);
      class o extends (0, s.defineCommand)({ scope: s.UseCaseScope.Device }) {}
      t.TerminateTaskTrackingCommand = o;
    },
    36518: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.taskTrackingApi = void 0);
      var n = r(82397);
      Object.defineProperty(t, "taskTrackingApi", {
        enumerable: !0,
        get: function () {
          return n.taskTrackingApi;
        }
      }),
        o(r(39948), t);
    },
    17286: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    24164: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.featureFlipsApi = t.UserFeatureFlipQuery = t.UserFeatureFlipsQuery = void 0);
      const s = r(70986),
        o = r(8369);
      class n extends (0, s.defineQuery)({ scope: s.UseCaseScope.User }) {}
      t.UserFeatureFlipsQuery = n;
      class i extends (0, s.defineQuery)({ scope: s.UseCaseScope.Device }) {}
      (t.UserFeatureFlipQuery = i),
        (t.featureFlipsApi = (0, o.defineModuleApi)({
          commands: {},
          events: {},
          name: "featureFlips",
          queries: { UserFeatureFlipsQuery: n, UserFeatureFlipQuery: i }
        }));
    },
    71057: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.FeatureFlipsClient = void 0);
      const s = r(23767),
        o = r(24164);
      class n extends (0, s.defineModuleClient)(o.featureFlipsApi) {}
      (t.FeatureFlipsClient = n), (0, s.registerModuleClient)(o.featureFlipsApi, n);
    },
    85888: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        o(r(8369), t),
        o(r(21697), t),
        o(r(17286), t),
        o(r(6964), t),
        o(r(23767), t),
        o(r(24164), t),
        o(r(71057), t),
        o(r(27646), t);
    },
    23767: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.registerModuleClient = t.defineModuleClient = void 0),
        (t.defineModuleClient = function (e) {
          var t;
          return (
            ((t = class {
              get commands() {
                throw new Error("Not implemented");
              }
              get queries() {
                throw new Error("Not implemented");
              }
            }).api = e),
            t
          );
        }),
        (t.registerModuleClient = function (e, t) {
          e.ClientClass = t;
        });
    },
    8369: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.defineModuleApi = void 0);
      const r = (e, t) =>
        Object.entries(e).reduce(
          (e, [r, s]) => (
            (e[((e, t) => (e.endsWith(t) ? e.charAt(0).toLowerCase() + e.substring(1, e.length - t.length) : e))(r, t)] = s), e
          ),
          {}
        );
      t.defineModuleApi = (e) => ({
        name: e.name,
        commands: r(e.commands, "Command"),
        queries: r(e.queries, "Query"),
        events: r(e.events, "Event")
      });
    },
    6964: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.requestContextApi = t.ActiveUserSetEvent = t.SetActiveUserCommand = t.ActiveUserQuery = void 0);
      const s = r(70986),
        o = r(49631),
        n = r(8369);
      class i extends (0, s.defineQuery)({ scope: s.UseCaseScope.Device }) {}
      t.ActiveUserQuery = i;
      class a extends (0, s.defineCommand)({ scope: s.UseCaseScope.Device }) {}
      t.SetActiveUserCommand = a;
      class c extends (0, o.defineEvent)({ scope: s.UseCaseScope.User }) {}
      (t.ActiveUserSetEvent = c),
        (t.requestContextApi = (0, n.defineModuleApi)({
          commands: { SetActiveUserCommand: a },
          events: { activeUserSet: c },
          name: "requestContext",
          queries: { ActiveUserQuery: i }
        }));
    },
    27646: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.RequestContextClient = void 0);
      const s = r(23767),
        o = r(6964);
      class n extends (0, s.defineModuleClient)(o.requestContextApi) {}
      (t.RequestContextClient = n), (0, s.registerModuleClient)(o.requestContextApi, n);
    },
    21697: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.NullModuleApi = void 0),
        (t.NullModuleApi = { name: "api", commands: {}, events: {}, queries: {} });
    },
    48304: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.platformInfoApi = t.PlatformInfoQuery = void 0);
      const s = r(70986),
        o = r(85888);
      class n extends (0, s.defineQuery)({ scope: s.UseCaseScope.Device }) {}
      (t.PlatformInfoQuery = n),
        (t.platformInfoApi = (0, o.defineModuleApi)({ name: "platformInfo", commands: {}, events: {}, queries: { PlatformInfoQuery: n } }));
    },
    24199: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.PlatformInfoClient = void 0);
      const s = r(85888),
        o = r(48304);
      class n extends (0, s.defineModuleClient)(o.platformInfoApi) {}
      (t.PlatformInfoClient = n), (0, s.registerModuleClient)(o.platformInfoApi, n);
    },
    22396: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(48304), t), o(r(24199), t), o(r(84289), t);
    },
    84289: (e, t) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.ApplicationBuildType = void 0),
        (function (e) {
          (e.DEV = "DEV"), (e.QA = "QA"), (e.NIGHTLY = "NIGHTLY"), (e.BETA = "BETA"), (e.PRODUCTION = "PRODUCTION");
        })(t.ApplicationBuildType || (t.ApplicationBuildType = {}));
    },
    38783: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.webServicesApi = t.EditSettingsForStagingCommand = t.SettingsForStagingQuery = void 0);
      const s = r(70986),
        o = r(85888);
      class n extends (0, s.defineQuery)({ scope: s.UseCaseScope.Device }) {}
      t.SettingsForStagingQuery = n;
      class i extends (0, s.defineCommand)({ scope: s.UseCaseScope.Device }) {}
      (t.EditSettingsForStagingCommand = i),
        (t.webServicesApi = (0, o.defineModuleApi)({
          commands: { EditSettingsForStagingCommand: i },
          events: {},
          name: "webServices",
          queries: { SettingsForStagingQuery: n }
        }));
    },
    56651: (e, t, r) => {
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.WebServicesClient = void 0);
      const s = r(85888),
        o = r(38783);
      class n extends (0, s.defineModuleClient)(o.webServicesApi) {}
      (t.WebServicesClient = n), (0, s.registerModuleClient)(o.webServicesApi, n);
    },
    28601: function (e, t, r) {
      var s =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var o = Object.getOwnPropertyDescriptor(t, r);
                (o && !("get" in o ? !t.__esModule : o.writable || o.configurable)) ||
                  (o = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    }
                  }),
                  Object.defineProperty(e, s, o);
              }
            : function (e, t, r, s) {
                void 0 === s && (s = r), (e[s] = t[r]);
              }),
        o =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || s(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), o(r(38783), t), o(r(56651), t);
    },
    20587: (e, t, r) => {
      r.d(t, { L5: () => i, Yu: () => c, mf: () => a });
      var s = r(86952),
        o = r(74354),
        n = r(25029);
      class i extends (0, o.g)({ scope: n.F.Device }) {}
      class a extends (0, o.g)({ scope: n.F.Device }) {}
      const c = (0, s.Q)({ commands: { TrackEventCommand: i, TrackPageViewCommand: a }, events: {}, name: "analytics", queries: {} });
    },
    25029: (e, t, r) => {
      r.d(t, { F: () => o, z: () => s });
      class s {}
      var o;
      !(function (e) {
        (e.User = "user"), (e.Device = "device");
      })(o || (o = {}));
    },
    74354: (e, t, r) => {
      r.d(t, { A: () => i, g: () => n });
      var s = r(25029);
      class o extends s.z {
        constructor(e) {
          super(), (this.body = e);
        }
      }
      const n = (...[e = { scope: s.F.User }]) => {
          var t;
          return ((t = class extends o {}).metadata = e), t;
        },
        i = (e = { scope: s.F.User }) => {
          var t;
          return ((t = class extends o {}).metadata = e), t;
        };
    },
    99059: (e, t, r) => {
      r.d(t, { k: () => n });
      var s = r(25029);
      class o extends s.z {
        constructor(e) {
          super(), (this.body = e);
        }
      }
      const n = (e = { scope: s.F.User }) => {
        var t;
        return ((t = class extends o {}).metadata = e), t;
      };
    },
    88885: (e, t, r) => {
      r.d(t, { d: () => n });
      var s = r(25029);
      class o {
        constructor(e) {
          this.body = e;
        }
      }
      const n = (e = { scope: s.F.User }) => {
        var t;
        return ((t = class extends o {}).metadata = e), t;
      };
    },
    49329: (e, t, r) => {
      r.d(t, { e: () => i });
      var s = r(86952),
        o = r(42339),
        n = r(29876);
      const i = (0, s.Q)({
        name: "taskTracking",
        commands: { startTaskTracking: o.g, terminateTaskTracking: n.y },
        events: {},
        queries: {}
      });
    },
    42339: (e, t, r) => {
      r.d(t, { g: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    29876: (e, t, r) => {
      r.d(t, { y: () => n });
      var s = r(74354),
        o = r(25029);
      class n extends (0, s.g)({ scope: o.F.Device }) {}
    },
    70493: (e, t, r) => {
      r.d(t, { cV: () => c, fV: () => a, r6: () => i });
      var s = r(99059),
        o = r(25029),
        n = r(86952);
      class i extends (0, s.k)({ scope: o.F.User }) {}
      class a extends (0, s.k)({ scope: o.F.Device }) {}
      const c = (0, n.Q)({
        commands: {},
        events: {},
        name: "featureFlips",
        queries: { UserFeatureFlipsQuery: i, UserFeatureFlipQuery: a }
      });
    },
    21242: (e, t, r) => {
      r.d(t, { P: () => n });
      var s = r(67837),
        o = r(70493);
      class n extends (0, s.E)(o.cV) {}
      (0, s.K)(o.cV, n);
    },
    67837: (e, t, r) => {
      function s(e) {
        var t;
        return (
          ((t = class {
            get commands() {
              throw new Error("Not implemented");
            }
            get queries() {
              throw new Error("Not implemented");
            }
          }).api = e),
          t
        );
      }
      function o(e, t) {
        e.ClientClass = t;
      }
      r.d(t, { E: () => s, K: () => o });
    },
    86952: (e, t, r) => {
      r.d(t, { Q: () => o });
      const s = (e, t) =>
          Object.entries(e).reduce(
            (e, [r, s]) => (
              (e[((e, t) => (e.endsWith(t) ? e.charAt(0).toLowerCase() + e.substring(1, e.length - t.length) : e))(r, t)] = s), e
            ),
            {}
          ),
        o = (e) => ({ name: e.name, commands: s(e.commands, "Command"), queries: s(e.queries, "Query"), events: s(e.events, "Event") });
    },
    8987: (e, t, r) => {
      r.d(t, { W_: () => d, p: () => c, r$: () => l, t$: () => u });
      var s = r(99059),
        o = r(25029),
        n = r(74354),
        i = r(88885),
        a = r(86952);
      class c extends (0, s.k)({ scope: o.F.Device }) {}
      class l extends (0, n.g)({ scope: o.F.Device }) {}
      class d extends (0, i.d)({ scope: o.F.User }) {}
      const u = (0, a.Q)({
        commands: { SetActiveUserCommand: l },
        events: { activeUserSet: d },
        name: "requestContext",
        queries: { ActiveUserQuery: c }
      });
    },
    69008: (e, t, r) => {
      r.d(t, { Q: () => n });
      var s = r(67837),
        o = r(8987);
      class n extends (0, s.E)(o.t$) {}
      (0, s.K)(o.t$, n);
    },
    50540: (e, t, r) => {
      r.d(t, { J: () => a, a: () => i });
      var s = r(99059),
        o = r(25029),
        n = r(86952);
      class i extends (0, s.k)({ scope: o.F.Device }) {}
      const a = (0, n.Q)({ name: "platformInfo", commands: {}, events: {}, queries: { PlatformInfoQuery: i } });
    },
    59894: (e, t, r) => {
      var s;
      r.d(t, { P: () => s }),
        (function (e) {
          (e.DEV = "DEV"), (e.QA = "QA"), (e.NIGHTLY = "NIGHTLY"), (e.BETA = "BETA"), (e.PRODUCTION = "PRODUCTION");
        })(s || (s = {}));
    },
    97191: (e, t, r) => {
      r.d(t, { Dm: () => l, Lt: () => a, bH: () => c });
      var s = r(99059),
        o = r(25029),
        n = r(74354),
        i = r(86952);
      class a extends (0, s.k)({ scope: o.F.Device }) {}
      class c extends (0, n.g)({ scope: o.F.Device }) {}
      const l = (0, i.Q)({
        commands: { EditSettingsForStagingCommand: c },
        events: {},
        name: "webServices",
        queries: { SettingsForStagingQuery: a }
      });
    },
    1665: (e, t, r) => {
      r.d(t, { I: () => h });
      var s = r(88802),
        o = r(20587),
        n = r(99634),
        i = r(63663),
        a = r(87279),
        c = r(86252),
        l = r(57924);
      let d = class {
        constructor(e) {
          this.carbonLegacyClient = e;
        }
        async trackEvent(e) {
          const { carbon: t } = this.carbonLegacyClient.commands,
            r = await t({ name: "logEvent", args: [{ event: e }] });
          if ((0, a.hx)(r)) throw new Error("TrackEvent from carbon failed");
        }
        async trackPageView(e, t) {
          const { carbon: r } = this.carbonLegacyClient.commands,
            s = await r({ name: "logPageView", args: [{ pageView: e, browseComponent: t }] });
          if ((0, a.hx)(s)) throw new Error("TrackPageView from carbon failed");
        }
      };
      d = (0, s.__decorate)([(0, l.GS)(), (0, s.__metadata)("design:paramtypes", [c._])], d);
      let u = class {
        constructor(e) {
          this.analyticsService = e;
        }
        async execute({ body: { event: e } }) {
          return await this.analyticsService.trackEvent(e), (0, a.Vp)(void 0);
        }
      };
      u = (0, s.__decorate)([(0, i.W)(o.L5), (0, s.__metadata)("design:paramtypes", [d])], u);
      let p = class {
        constructor(e) {
          this.analyticsService = e;
        }
        async execute({ body: { pageView: e, browseComponent: t } }) {
          return await this.analyticsService.trackPageView(e, t), (0, a.Vp)(void 0);
        }
      };
      p = (0, s.__decorate)([(0, i.W)(o.mf), (0, s.__metadata)("design:paramtypes", [d])], p);
      let h = class {};
      h = (0, s.__decorate)(
        [(0, n.Y)({ api: o.Yu, providers: [d], handlers: { commands: { trackEvent: u, trackPageView: p }, events: {}, queries: {} } })],
        h
      );
    },
    79256: (e, t, r) => {
      r.d(t, { y: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        async derive(e, t, r) {
          const { deriveKeyArgon2d: s } = this.config.crypto;
          return await s(e, t, r);
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    114: (e, t, r) => {
      r.d(t, { i: () => i });
      var s = r(88802),
        o = r(57924);
      const n = {
        computeHash: () => Promise.resolve(new ArrayBuffer(32)),
        decryptAes256: (e, t, r) => Promise.resolve(r),
        deriveKeyArgon2d: () => Promise.resolve(new ArrayBuffer(32)),
        deriveKeyPbkdf2: () => Promise.resolve(new ArrayBuffer(32)),
        encryptAes256: (e, t, r) => Promise.resolve(r),
        generateKeyAes256: () => Promise.resolve(new ArrayBuffer(32)),
        generateKeyPairRsaOaep: () => Promise.resolve({ privateKey: new ArrayBuffer(32), publicKey: new ArrayBuffer(32) }),
        getRandomValues: (e) => new Uint8Array(e),
        signHmacSha: () => Promise.resolve(new ArrayBuffer(32)),
        unsafeComputeMd5Hash: () => new ArrayBuffer(1),
        verifyHmacSha: () => Promise.resolve(!0),
        decryptRsaOaep: function (e, t) {
          return Promise.resolve(t);
        },
        encryptRsaOaep: function (e, t) {
          return Promise.resolve(t);
        },
        signRsassaPkcs1: function (e, t) {
          return Promise.resolve(t);
        }
      };
      let i = class {
        constructor(e) {
          this.crypto = e;
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [Object])], i);
      new i(n);
    },
    37935: (e, t, r) => {
      r.d(t, { D: () => Y });
      var s = r(88802),
        o = r(99634),
        n = r(79256),
        i = r(114),
        a = r(31186),
        c = r(25594),
        l = r(56268),
        d = r(31222),
        u = r(57924),
        p = r(74017);
      let h = class {
        constructor(e) {
          this.config = e;
        }
        async verify(e, t, r, s = p.x) {
          const { verifyHmacSha: o } = this.config.crypto;
          return await o(e, t, r, s);
        }
      };
      h = (0, s.__decorate)([(0, u.GS)(), (0, s.__metadata)("design:paramtypes", [i.i])], h);
      var m = r(92258),
        v = r(71634),
        g = r(83919),
        y = r(56130),
        f = r(65613),
        _ = r(40369),
        S = r(12554),
        E = r(77970),
        b = r(40173),
        w = r(28008),
        A = r(22513),
        T = r(60733),
        C = r(19603),
        I = r(95087),
        O = r(89685);
      const P = "flexible";
      var R = r(69591);
      const D = "KWC3",
        N = 0;
      var U = r(38291);
      const L = 32,
        F = 4;
      function M(e) {
        const t = e.slice(L, L + F),
          r = (0, O.v)(t);
        var s;
        if (((s = r), [D, U.PD].includes(s))) return r;
      }
      function x(e) {
        const t = M(e);
        return (
          t ||
          ((function (e) {
            const t = new Uint8Array(e).slice(0, 1);
            return (0, O.v)(t.buffer) === R.F;
          })(e)
            ? P
            : void 0)
        );
      }
      var k = r(60745),
        G = r(82933),
        K = r(94805),
        V = r(16698);
      const j = { type: D, derivation: K.Yi, cipher: V.No };
      function B(e) {
        const t = (function ({ transportableData: e, marker: t }) {
          const { derivation: r, type: s } = t,
            { saltLength: o } = r,
            n = N + o + s.length;
          return { salt: e.slice(N, N + o), encipheredContents: e.slice(n) };
        })({ transportableData: e, marker: j });
        return { salt: t.salt, type: D, encipheredContents: t.encipheredContents, derivationConfig: K.Yi, cipherConfig: V.No };
      }
      var W = r(12087);
      async function H(e, t, r, s) {
        const o = B(s),
          { deriveKeyPbkdf2: n } = t,
          { derivationConfig: i, salt: a } = o,
          c = await (0, W.E)(n, r, i, e, a),
          { computeHash: l } = t,
          {
            cipherConfig: {
              ivLength: d,
              bytesToKey: { iterations: u, keyLength: p }
            }
          } = o,
          h = await (async function (e, t, r, s, o, n) {
            const i = (0, G.K)(t, n.slice(0, 8));
            let a = i,
              c = new ArrayBuffer(0);
            for (let t = 0; t < r; t++) {
              const t = await e(a, "SHA-1");
              (c = (0, G.K)(c, t)), (a = (0, G.K)(t, i));
            }
            const l = o + s;
            return Promise.resolve(c.slice(o, l));
          })(l, c, u, d, p, a),
          { decryptAes256: m } = t,
          { encipheredContents: v } = o;
        return m(c, h, v);
      }
      var z = r(7449);
      let Q = class {
        constructor(e, t) {
          (this.config = e), (this.derivationCache = t);
        }
        decrypt(e, t) {
          return (async function (e, t, r, s) {
            const o = x(s);
            if (!o) throw new Error("Cannot find marker type");
            switch (o) {
              case D:
                return await H(e, t, r, s);
              case U.PD:
                return await (0, z.I)(e, t, s);
              case P:
                return (0, k.F)(e, t, r, s);
              default:
                (0, I.U)(o);
            }
          })(e, this.config.crypto, this.derivationCache, t);
        }
      };
      Q = (0, s.__decorate)([(0, u.GS)(), (0, s.__metadata)("design:paramtypes", [i.i, a.E])], Q);
      var q = r(708);
      let Y = class {};
      Y = (0, s.__decorate)(
        [
          (0, o.Y)({
            sharedModuleName: "cryptography",
            configurations: { infrastructure: { token: i.i } },
            providers: [n.y, a.E, c.a, l._, q.y, d.q, h, m.c, v.$, g.o, y.k, f.n, _.F, C.Y, S.g, E.H, b.e, w.k, A.Z, Q, T.f],
            exports: [n.y, a.E, c.a, l._, q.y, d.q, h, m.c, v.$, g.o, y.k, f.n, _.F, C.Y, S.g, E.H, b.e, w.k, A.Z, Q, T.f]
          })
        ],
        Y
      );
    },
    31186: (e, t, r) => {
      r.d(t, { E: () => c });
      var s = r(88802),
        o = r(57924),
        n = r(82933),
        i = r(10370);
      class a {
        constructor() {
          this.derivateKeyCache = new Map();
        }
        getCacheKey(...e) {
          const t = e.reduce((e, t) => (0, n.K)(e, t), new ArrayBuffer(0));
          return (0, i.s)(t);
        }
        getCachedDerivation(e) {
          return this.derivateKeyCache.get(e);
        }
        setCachedDerivation({ cacheKey: e, data: t }) {
          this.getCachedDerivation(e) || this.derivateKeyCache.set(e, t);
        }
      }
      let c = class extends a {};
      c = (0, s.__decorate)([(0, o.GS)()], c);
    },
    25594: (e, t, r) => {
      r.d(t, { a: () => c });
      var s = r(88802),
        o = r(57924),
        n = r(60745),
        i = r(114),
        a = r(31186);
      let c = class {
        constructor(e, t) {
          (this.config = e), (this.derivationCache = t);
        }
        decrypt(e, t) {
          return (0, n.F)(e, this.config.crypto, this.derivationCache, t);
        }
      };
      c = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.i, a.E])], c);
    },
    56268: (e, t, r) => {
      r.d(t, { _: () => _ });
      var s = r(88802),
        o = r(57924),
        n = r(82933),
        i = r(95087),
        a = r(54066),
        c = r(69591),
        l = r(33055),
        d = r(94805);
      function u(e) {
        const t = c.F + e.join(c.F) + c.F;
        return (0, a.u)(t);
      }
      function p({ cipher: e, derivation: t }) {
        const { algorithm: r } = t;
        switch (r) {
          case "argon2d":
            return (function ({ cipher: e, derivation: t }) {
              const { count: r, index: s } = l.ARGON2D_MARKER_SCHEMA,
                o = new Array(r);
              return (
                (o[s.version] = c.g),
                (o[s.derivation] = t.algorithm),
                (o[s.saltLength] = t.saltLength),
                (o[s.tCost] = t.tCost),
                (o[s.mCost] = t.mCost),
                (o[s.parallelism] = t.parallelism),
                (o[s.cipher] = e.algorithm),
                (o[s.mode] = e.mode),
                (o[s.ivLength] = e.ivLength),
                u(o)
              );
            })({ cipher: e, derivation: t });
          case "pbkdf2":
            return (function ({ cipher: e, derivation: t }) {
              const { count: r, index: s } = l.PBKDF2_MARKER_SCHEMA,
                o = new Array(r);
              return (
                (o[s.version] = c.g),
                (o[s.derivation] = t.algorithm),
                (o[s.saltLength] = t.saltLength),
                (o[s.iterations] = t.iterations),
                (o[s.hashAlgorithm] = t.hashAlgorithm),
                (o[s.cipher] = e.algorithm),
                (o[s.mode] = e.mode),
                (o[s.ivLength] = e.ivLength),
                u(o)
              );
            })({ cipher: e, derivation: t });
          case "noderivation":
            return (function ({ cipher: e, derivation: t }) {
              const { count: r, index: s } = l.NODERIVATION_MARKER_SCHEMA,
                o = new Array(r);
              return (
                (o[s.version] = c.g),
                (o[s.derivation] = t.algorithm),
                (o[s.cipher] = e.algorithm),
                (o[s.mode] = e.mode),
                (o[s.ivLength] = e.ivLength),
                u(o)
              );
            })({ cipher: e, derivation: t });
          default:
            (0, i.U)(r);
        }
      }
      var h = r(58396),
        m = r(6424),
        v = r(6752);
      async function g(e, t, r, s, o, i, a) {
        const { algorithm: c } = r,
          l = "pbkdf2" === c || "argon2d" === c;
        if (l && !a?.salt) throw new Error("Need salt for derivation");
        const { deriveKeyArgon2d: u, deriveKeyPbkdf2: g } = t,
          y = l && a?.salt ? await (0, v.b)(e, a.salt, g, u, r, s) : e,
          { mode: f } = o,
          { computeHash: _ } = t,
          { encryptionKey: S, signatureKey: E } = "cbchmac64" === f ? await (0, h.U)(y) : await (0, m.Y)(y, _),
          { getRandomValues: b } = t,
          w = b(o.ivLength),
          { encryptAes256: A } = t,
          T = await A(S, w, i),
          { signHmacSha: C } = t,
          I = (0, n.K)(w, T),
          O = await C(E, I);
        return (function (e) {
          const { encipheredContents: t, cipherConfig: r, derivationConfig: s, salt: o, signature: i, iv: a } = e;
          if ((o?.byteLength ?? 0) !== (0, d.m9)(s))
            throw new Error(`Salt length ${o?.byteLength ?? 0} does not match derivation algorithm ${s.algorithm} expectation`);
          const c = p({ cipher: r, derivation: s });
          return o && "noderivation" !== s.algorithm ? (0, n.K)(c, o, a, i, t) : (0, n.K)(c, a, i, t);
        })({
          type: "flexible",
          version: 1,
          derivationConfig: r,
          cipherConfig: o,
          salt: a?.salt,
          iv: w,
          signature: O,
          encipheredContents: T
        });
      }
      var y = r(114),
        f = r(31186);
      let _ = class {
        constructor(e, t) {
          (this.config = e), (this.derivationCache = t);
        }
        async encrypt(e, t, r, s, o) {
          return await g(e, this.config.crypto, r, this.derivationCache, s, t, o);
        }
      };
      _ = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [y.i, f.E])], _);
    },
    708: (e, t, r) => {
      r.d(t, { y: () => c });
      var s = r(88802),
        o = r(57924),
        n = r(60745);
      var i = r(114),
        a = r(31186);
      let c = class {
        constructor(e, t) {
          (this.config = e), (this.derivationCache = t);
        }
        verifySignature(e, t) {
          return (async function (e, t, r, s) {
            const { verifyHmacSha: o } = t,
              { signatureKey: i, signature: a, dataToSign: c } = await (0, n.V)(e, t, r, s);
            return o(i, a, c);
          })(e, this.config.crypto, this.derivationCache, t);
        }
      };
      c = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.i, a.E])], c);
    },
    31222: (e, t, r) => {
      r.d(t, { q: () => a });
      var s = r(88802),
        o = r(57924),
        n = r(74017),
        i = r(114);
      let a = class {
        constructor(e) {
          this.config = e;
        }
        async sign(e, t, r = n.x) {
          const { signHmacSha: s } = this.config.crypto;
          return await s(e, t, r);
        }
      };
      a = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.i])], a);
    },
    92258: (e, t, r) => {
      r.d(t, { c: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        generate() {
          const { generateKeyAes256: e } = this.config.crypto;
          return e();
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    71634: (e, t, r) => {
      r.d(t, { $: () => a });
      var s = r(88802),
        o = r(57924),
        n = r(7449),
        i = r(114);
      let a = class {
        constructor(e) {
          this.config = e;
        }
        decrypt(e, t) {
          return (0, n.I)(e, this.config.crypto, t);
        }
      };
      a = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.i])], a);
    },
    83919: (e, t, r) => {
      r.d(t, { o: () => h });
      var s = r(88802),
        o = r(57924),
        n = r(16698),
        i = r(82933),
        a = r(54066),
        c = r(38291);
      var l = r(6424);
      async function d(e, t, r, s, o, n) {
        const { computeHash: d } = t,
          { encryptionKey: u, signatureKey: p } = await (0, l.Y)(e, d),
          { getRandomValues: h } = t,
          { ivLength: m } = s,
          v = h(m),
          { encryptAes256: g } = t,
          y = await g(u, v, o),
          { signHmacSha: f } = t,
          _ = (0, i.K)(v, y),
          S = { type: "KWC5", derivationConfig: r, cipherConfig: s, iv: v, signature: await f(p, _), encipheredContents: y },
          { padding: E } = n;
        return (function ({ secureData: e, randomValues: t }) {
          if (t.byteLength !== c.en) throw new Error("Encoding kwc5 requires 16 random bytes");
          const { encipheredContents: r, iv: s, type: o, signature: n } = e,
            l = (0, a.u)(o);
          return (0, i.K)(s, t, l, n, r);
        })({ secureData: S, randomValues: E });
      }
      var u = r(94805),
        p = r(114);
      let h = class {
        constructor(e) {
          this.config = e;
        }
        encrypt(e, t) {
          const { getRandomValues: r } = this.config.crypto,
            s = { padding: r(n.BU.padding) };
          return d(e, this.config.crypto, u.oo, n.BU, t, s);
        }
      };
      h = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [p.i])], h);
    },
    55119: (e, t, r) => {
      function s() {
        return new Uint32Array([
          57920321, 977424202, 1999259334, 3390546403, 3917439743, 16505144, 3027631148, 3235565160, 2643335823, 1420105356, 998514539,
          2704347781, 1011257802, 823882961, 790991339, 3929284516
        ]).buffer;
      }
      r.d(t, { S: () => s });
    },
    56130: (e, t, r) => {
      r.d(t, { k: () => a });
      var s = r(88802),
        o = r(57924),
        n = r(25594),
        i = r(55119);
      let a = class {
        constructor(e) {
          this.flexibleDecryptor = e;
        }
        async decrypt(e) {
          const t = (0, i.S)();
          return await this.flexibleDecryptor.decrypt(t, e);
        }
      };
      a = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.a])], a);
    },
    65613: (e, t, r) => {
      r.d(t, { n: () => c });
      var s = r(88802),
        o = r(57924),
        n = r(89685),
        i = r(56130),
        a = r(40369);
      let c = class {
        constructor(e, t) {
          (this.obfuscationKeyDecryptor = e), (this.obfuscationKeyEncryptor = t);
        }
        async encode(e) {
          return await this.obfuscationKeyEncryptor.encrypt(e);
        }
        async decode(e) {
          return (0, n.v)(e).startsWith("$1$noderivation$aes256$cbchmac64$16$") ? await this.obfuscationKeyDecryptor.decrypt(e) : e;
        }
      };
      c = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [i.k, a.F])], c);
    },
    40369: (e, t, r) => {
      r.d(t, { F: () => l });
      var s = r(88802),
        o = r(57924),
        n = r(94805),
        i = r(16698),
        a = r(56268),
        c = r(55119);
      let l = class {
        constructor(e) {
          this.flexibleEncryptor = e;
        }
        async encrypt(e) {
          const t = (0, c.S)();
          return await this.flexibleEncryptor.encrypt(t, e, n.oo, i.gO);
        }
      };
      l = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [a._])], l);
    },
    19603: (e, t, r) => {
      r.d(t, { Y: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        get(e) {
          const { getRandomValues: t } = this.config.crypto;
          return t(e).buffer;
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    12554: (e, t, r) => {
      r.d(t, { g: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        decrypt(e, t, r = "SHA-256") {
          const { decryptRsaOaep: s } = this.config.crypto;
          return s(e, t, r);
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    77970: (e, t, r) => {
      r.d(t, { H: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        encrypt(e, t, r = "SHA-256") {
          const { encryptRsaOaep: s } = this.config.crypto;
          return s(e, t, r);
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    40173: (e, t, r) => {
      r.d(t, { e: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        generate(e = "SHA-256") {
          const { generateKeyPairRsaOaep: t } = this.config.crypto;
          return t(e);
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    28008: (e, t, r) => {
      r.d(t, { k: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        async sign(e, t, r = "SHA-256") {
          const { signRsassaPkcs1: s } = this.config.crypto;
          return await s(e, t, r);
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    22513: (e, t, r) => {
      r.d(t, { Z: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        async compute(e, t) {
          const { computeHash: r } = this.config.crypto;
          return await r(e, t);
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    60733: (e, t, r) => {
      r.d(t, { f: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(114);
      let i = class {
        constructor(e) {
          this.config = e;
        }
        compute(e) {
          const { unsafeComputeMd5Hash: t } = this.config.crypto;
          return t(e);
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.i])], i);
    },
    65255: (e, t, r) => {
      r.d(t, { w: () => s });
      const s = {
        AuthsyncExtensionArkRelease: "authsync_extension_ark_release",
        B2CWebPostTrialBanner: "b2c_web_postTrialBanner",
        B2CRestrictPasswordFreePlanPhase1: "b2c_web_restrict_password_free_plan_phase1",
        B2CRestrictPasswordFreePlanPhase2: "b2c_web_restrict_password_free_plan_phase2",
        B2CRestrictPasswordFreePlan: "b2c_web_restrict_password_free_plan_dev",
        BBCOM238Duo: "BBCOM-238-duo",
        CollectionsPageEnabled: "vault_web_collectionpage_dev",
        SAEXSendSharing: "SAEXSendSharing",
        DarkwebMonitoringWebRelease: "darkwebMonitoringWebRelease",
        DwiMultipleDomainsProd: "dwi_multiple_domains_prod",
        DisableSecureNotes: "disableSecureNotes",
        EcommerceWebOfferToExtendPhase1: "ecommerce_web_offerToExtend_phase1",
        EcommerceWebChromeratingV2: "ecommerce_web_chromerating_V2",
        EcommerceWebPaywallUpdate: "ecommerce_web_paywall_update",
        EcommerceWebB2BDiscontinuationDev: "ecommerce_web_b2bDiscontinuation_dev",
        EcommerceWebB2BDiscontinuationPhase1: "ecommerce_web_b2bDiscontinuation_phase1",
        EcommerceWebB2BDiscontinuationPhase2: "ecommerce_web_b2bDiscontinuation_phase2",
        GrowthproductDSLPaywallDemogorgon: "growthproduct_DSLPaywall_demogorgon",
        ImsWebWeakMpProd: "ims_web_weak_mp_prod",
        ItadminSAEXCryptoMigrationPhase3V1: "itadmin_SAEX_CryptoMigration_Phase3_v1",
        ItadminTacEncryptionserviceSSOmigrationReset: "itadmin_tac_encryptionservice_SSOmigration_reset",
        ItadminTacPhonesupport: "itadmin_tac_phonesupport",
        OnboardingWebTeamsignuppage: "onboarding_web_teamsignuppage",
        OnboardingWebAdminVaultGetStartedGuide: "onboarding_web_adminVaultGetStartedGuide",
        PasswordHealthWeb: "passwordHealthWeb",
        SaexOnboardingHubAddPasswords: "saexOnboardingHubAddPasswords",
        SaexSecureNoteAttachmentsForrelease: "saex_SecureNoteAttachments_forrelease",
        TechWeekWebDisplayLabs: "techWeek_web_displayLabs",
        TechweekWebAttachmentsForIdsV1: "techweek_web_attachmentsForIds_v1",
        TechweekWebExpiredLabelforIDDev: "techweek_web_expiredLabelforID_dev",
        WebplatformWebPrideColors: "webplatform_web_prideColors",
        WebproductExtensionActivateChangeMasterPasswordRelease: "webproduct_extension_ActivateChangeMasterPassword_release",
        WebproductExtensionShowUserConsentOptions: "webproduct_extension_ShowUserConsentOptions",
        SupportMarkdownInSecureNotes: "webproduct_extension_securenotesmarkdown_dev",
        SharingVaultOtpSetupDev: "sharingVault_web_otp_setup_dev",
        SecretManagementDev: "ace_secrets_vault_dev"
      };
    },
    82482: (e, t, r) => {
      r.d(t, { k: () => k });
      var s = r(88802),
        o = r(99634),
        n = r(70493),
        i = r(8987),
        a = r(93850),
        c = r(85390),
        l = r(16433),
        d = r(87065),
        u = r(30523),
        p = r(68307),
        h = r(9671),
        m = r(22838),
        v = r(20754),
        g = r(69008),
        y = r(87279),
        f = r(60399),
        _ = r(57924),
        S = r(48844),
        E = r(87113);
      let b = class {
        constructor(e) {
          this.serverApiClient = e;
        }
        getFeatureFlipsForActiveUser(e) {
          return (0, f.z)(
            this.serverApiClient.v1.features.getAndEvaluateForUser({ features: e }).pipe(
              (0, S.nb)({
                success: (e) => e.data.enabledFeatures,
                failure: () => {
                  throw new Error("Unable to fetch enabled feature flips for the active user");
                }
              })
            )
          );
        }
        getAvailableFeatureFlips() {
          return (0, f.z)(
            this.serverApiClient.v1.features.listAvailableFeatureFlips({}).pipe(
              (0, S.nb)({
                success: (e) => e.data.features.map((e) => e.name),
                failure: () => {
                  throw new Error("Unable to fetch available feature flips");
                }
              })
            )
          );
        }
      };
      b = (0, s.__decorate)([(0, _.GS)(), (0, s.__metadata)("design:paramtypes", [E.l])], b);
      var w = r(95681),
        A = r(23347),
        T = r(25029),
        C = r(10722);
      const I = (e) => !(!e || "object" != typeof e) && "featureFlips" in e;
      class O extends (0, w.Q)({
        persist: !0,
        scope: T.F.Device,
        storeName: "feature-flip-store",
        capacity: A.Y._010KB,
        codec: C.E,
        storage: { initialValue: { featureFlips: {} }, schemaVersion: 1, typeGuard: I }
      }) {}
      class P extends (0, w.Q)({
        persist: !0,
        scope: T.F.User,
        storeName: "feature-flip-store",
        capacity: A.Y._010KB,
        codec: C.E,
        storage: { initialValue: { featureFlips: {} }, schemaVersion: 1, typeGuard: I }
      }) {}
      var R;
      !(function (e) {
        (e.Success = "Success"), (e.Pending = "Pending"), (e.Loading = "Loading"), (e.Cache = "Cache");
      })(R || (R = {}));
      class D extends (0, w.Q)({
        persist: !1,
        initialValue: { refreshStatus: R.Pending },
        scope: T.F.Device,
        storeName: "feature-flip-refresh-store",
        capacity: A.Y._001KB
      }) {}
      function N(e, t) {
        return !(!(0, y.d6)(e) || (0, y.db)(e).userName) || !(0, y.d6)(e) || !(0, y.db)(e).userName || [R.Success, R.Cache].includes(t);
      }
      let U = class {
        constructor(e, t, r, s, o, n) {
          (this.allowedToFailForGetAvailableFeatureFlips = e),
            (this.allowedToFailForGetFeatureFlipsForActiveUser = t),
            (this.featureFlipsService = r),
            (this.featureFlipsStore = s),
            (this.featureFlipsRefreshStore = o),
            (this.introspection = n);
        }
        async handle({ body: e }) {
          if (!e.userName)
            return (
              await this.featureFlipsRefreshStore.set({ refreshStatus: R.Pending }),
              void (await this.featureFlipsStore.set({ featureFlips: {} }))
            );
          await this.featureFlipsRefreshStore.set({ refreshStatus: R.Loading });
          const t = this.introspection.modules,
            r = Object.keys(t).reduce((e, r) => {
              const s = t[r];
              if (s.requiredFeatureFlips) for (const t of s.requiredFeatureFlips) e.add(t);
              return e;
            }, new Set()),
            s = Array.from(r);
          let o = [];
          await this.allowedToFailForGetAvailableFeatureFlips.doOne(() =>
            this.featureFlipsService.getAvailableFeatureFlips().then((e) => {
              o = e.filter((e) => r.has(e));
            })
          );
          const n = 0 === o.length ? s : o;
          await this.allowedToFailForGetFeatureFlipsForActiveUser.doOne(async () => {
            try {
              const e = await this.featureFlipsService.getFeatureFlipsForActiveUser(n),
                t = new Set(e),
                r = new Set(o),
                i = s.reduce((e, s) => ((e[s] = t.has(s) || (!r.has(s) && void 0)), e), {});
              await this.featureFlipsStore.set({ featureFlips: i }), await this.featureFlipsRefreshStore.set({ refreshStatus: R.Success });
            } catch (e) {
              throw (await this.featureFlipsRefreshStore.set({ refreshStatus: R.Cache }), e);
            }
          });
        }
      };
      U = (0, s.__decorate)([(0, p.b)(i.W_), (0, s.__metadata)("design:paramtypes", [h.J, h.J, b, P, D, m.Q1])], U);
      let L = class {
        constructor(e, t, r) {
          (this.featureFlipsStore = e), (this.featureFlipsRefreshStore = t), (this.requestContextClient = r);
        }
        execute() {
          return (0, c.a)([
            this.requestContextClient.queries.activeUser().pipe((0, l.q)(1)),
            this.featureFlipsRefreshStore.state$.pipe((0, d.U)((e) => e.refreshStatus)),
            this.featureFlipsStore.state$.pipe((0, d.U)((e) => e.featureFlips))
          ]).pipe(
            (0, u.h)(([e, t]) => N(e, t)),
            (0, d.U)(([e, , t]) => {
              if ((0, y.d6)(e)) return (0, y.db)(e).userName ? (0, y.Vp)(t) : (0, y.Vp)({});
              throw new Error("Cannot determine if user is logged in");
            })
          );
        }
      };
      L = (0, s.__decorate)([(0, v.e)(n.r6), (0, s.__metadata)("design:paramtypes", [P, D, g.Q])], L);
      let F = class {
        constructor(e, t, r) {
          (this.featureFlipsStore = e), (this.featureFlipsRefreshStore = t), (this.requestContextClient = r);
        }
        execute({ body: e }) {
          const { featureFlip: t } = e;
          return (0, c.a)([
            this.requestContextClient.queries.activeUser().pipe((0, l.q)(1)),
            this.featureFlipsRefreshStore.state$.pipe((0, d.U)((e) => e.refreshStatus)),
            this.featureFlipsStore.state$.pipe((0, d.U)((e) => e.featureFlips))
          ]).pipe(
            (0, u.h)(([e, t]) => N(e, t)),
            (0, d.U)(([e, , r]) => {
              if ((0, y.d6)(e)) return (0, y.db)(e).userName ? (0, y.Vp)(r[t]) : (0, y.Vp)(void 0);
              throw new Error("Cannot determine if user is logged in");
            })
          );
        }
      };
      F = (0, s.__decorate)([(0, v.e)(n.fV), (0, s.__metadata)("design:paramtypes", [P, D, g.Q])], F);
      var M = r(65255);
      let x = class {
        constructor(e) {
          this.featureFlipsStoreLegacy = e;
        }
        onFrameworkInit() {
          this.featureFlipsStoreLegacy.clearStorage();
        }
      };
      x = (0, s.__decorate)([(0, _.ar)(), (0, s.__metadata)("design:paramtypes", [O])], x);
      let k = class {};
      k = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: n.cV,
            providers: [b],
            imports: [a.n],
            exports: [b],
            handlers: {
              commands: {},
              queries: { userFeatureFlips: L, userFeatureFlip: F },
              events: { ...(0, o.g)(i.t$, { activeUserSet: U }) }
            },
            stores: [O, P, D],
            requiredFeatureFlips: Object.values(M.w),
            onFrameworkInit: x
          })
        ],
        k
      );
    },
    43673: (e, t, r) => {
      r.d(t, { i: () => p });
      var s = r(88802),
        o = r(50540),
        n = r(99634),
        i = r(58895),
        a = r(86252),
        c = r(20754),
        l = r(48844),
        d = r(87279);
      let u = class {
        constructor(e) {
          this.carbon = e;
        }
        execute() {
          return this.carbon.queries.getPlatformInfo().pipe((0, l.lk)((e) => (0, d.Vp)(e)));
        }
      };
      u = (0, s.__decorate)([(0, c.e)(o.a), (0, s.__metadata)("design:paramtypes", [a._])], u);
      let p = class {};
      p = (0, s.__decorate)(
        [(0, n.Y)({ api: o.J, providers: [i.t], exports: [i.t], handlers: { commands: {}, events: {}, queries: { platformInfo: u } } })],
        p
      );
    },
    58895: (e, t, r) => {
      r.d(t, { t: () => u });
      var s = r(88802),
        o = r(60399),
        n = r(57924),
        i = r(94189),
        a = r(48844),
        c = r(20195),
        l = r(59894),
        d = r(6936);
      let u = class {
        constructor(e) {
          this.client = e;
        }
        getPlatformInfo() {
          return (0, o.z)(
            this.client
              .getClient(d.W)
              .queries.getPlatformInfo()
              .pipe((0, a.nb)({ success: (e) => e, failure: c.j }))
          );
        }
      };
      u = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [i.m])], u);
      l.P.PRODUCTION;
    },
    29659: (e, t, r) => {
      r.d(t, { c: () => d });
      var s = r(88802),
        o = r(57924),
        n = r(26457),
        i = r(87279),
        a = r(86252),
        c = r(93039),
        l = r(88268);
      let d = class extends l.tI {
        constructor(e, t) {
          super(), (this.carbonLegacyClient = e), (this.appLogger = t);
        }
        async decipher(e, t) {
          const { carbon: r } = this.carbonLegacyClient.commands,
            s = await r({ name: "decipherRemoteFile", args: [{ cipheredFileContent: e, fileMetaData: t }] });
          if ((0, i.hx)(s)) return (0, i.Rn)(c.RemoteFileUpdateError.DecipherError);
          const { carbonResult: o } = (0, i.db)(s);
          return ((e) =>
            "object" == typeof e && null !== e && Object.entries(e).some(([e, t]) => "decipheredFile" === e && t instanceof ArrayBuffer))(o)
            ? (0, i.Vp)(o.decipheredFile)
            : (0, i.Rn)(c.RemoteFileUpdateError.DecipherError);
        }
      };
      d = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [a._, n.V])], d);
    },
    39995: (e, t, r) => {
      r.d(t, { Q: () => c });
      var s = r(88802),
        o = r(57924),
        n = r(7537),
        i = r(58376),
        a = r(60399);
      let c = class {
        constructor() {
          (this.filesToCheck = {}),
            (this.publishSubscriber = new n.t()),
            (this.updatedFileStream$ = new i.y((e) => {
              this.publishSubscriber.next(e), this.publishSubscriber.complete();
            }));
        }
        publish(e) {
          (0, a.z)(this.publishSubscriber).then((t) => t.next(e));
        }
        fileSubscription(e) {
          return (this.filesToCheck = { ...this.filesToCheck, ...e }), this.updatedFileStream$;
        }
        getFilesToCheck() {
          return this.filesToCheck;
        }
      };
      c = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [])], c);
    },
    47190: (e, t, r) => {
      r.d(t, { P: () => f });
      var s = r(88802),
        o = r(87279),
        n = r(48844),
        i = r(18533),
        a = r(93039),
        c = r(57924),
        l = r(73774),
        d = r(69885),
        u = r(60399),
        p = r(87065),
        h = r(87113),
        m = r(88268),
        v = r(94143),
        g = r(25994);
      const y = (e) => e[1].status === v.nQ;
      let f = class extends m.gG {
        constructor(e, t) {
          super(), (this.httpClient = e), (this.serverApiClient = t);
        }
        async downloadRemoteFileUpdate(e) {
          const t = await this._getFileMeta(e);
          return (0, o.hx)(t) ? [(0, d.of)(t)] : this._retrieveFilesFromServer((0, o.db)(t));
        }
        _getFileMeta(e) {
          return (0, u.z)(
            this.serverApiClient.v1.file.getFileMeta(e).pipe(
              (0, p.U)((e) => {
                if ((0, o.hx)(e)) return (0, o.Rn)(a.RemoteFileUpdateError.ServerError);
                const t = (0, o.db)(e);
                return (
                  (r = t.data),
                  Object.values(r).every((e) => "object" == typeof e && void 0 !== e.status && v.PQ.has(e.status))
                    ? (0, o.Vp)(t.data)
                    : (0, o.Rn)(a.RemoteFileUpdateError.ServerError)
                );
                var r;
              })
            )
          );
        }
        _retrieveFilesFromServer(e) {
          return Object.entries(e)
            .filter(y)
            .map(([e, t]) => this._getBufferFromURL(e, t));
        }
        _getBufferFromURL(e, t) {
          return this.httpClient
            .get(t.url, { observe: "body", responseType: "arraybuffer" })
            .pipe((0, n.Qn)(this._handleSuccess(e, t)), (0, n.DZ)(this._handleFailure));
        }
        _handleFailure(e) {
          return (0, i.EQ)(e, {
            BadStatus: (e) => (e.response.status === g.W.NotModified ? v.ek : a.RemoteFileUpdateError.DownloadError),
            FetchFailedError: () => a.RemoteFileUpdateError.DownloadError
          });
        }
        _handleSuccess(e, t) {
          return (r) => ({ fileName: e, buffer: r, updatedFile: t });
        }
      };
      f = (0, s.__decorate)([(0, c.GS)(), (0, s.__metadata)("design:paramtypes", [l.e, h.l])], f);
    },
    88268: (e, t, r) => {
      r.d(t, { gG: () => s, pF: () => n, tI: () => o });
      class s {}
      class o {}
      class n {}
    },
    73881: (e, t, r) => {
      r.d(t, { Q: () => y });
      var s = r(88802),
        o = r(99634),
        n = r(25504),
        i = r(25029),
        a = r(47190),
        c = r(82482),
        l = r(57924),
        d = r(39995),
        u = r(88268);
      let p = class {
        constructor(e, t) {
          (this.remoteFileUpdateService = e), (this.dispatcherService = t);
        }
        run() {
          const e = this.dispatcherService.getFilesToCheck();
          this.remoteFileUpdateService.observeRemoteFileUpdates(e).subscribe((e) => {
            this.dispatcherService.publish(e);
          }),
            this.remoteFileUpdateService.downloadAndDecipherRemoteFiles();
        }
      };
      p = (0, s.__decorate)([(0, l.GS)(), (0, s.__metadata)("design:paramtypes", [u.pF, d.Q])], p);
      var h = r(93850),
        m = r(29659),
        v = r(83958),
        g = r(1665);
      let y = class {};
      y = (0, s.__decorate)(
        [
          (0, o.Y)({
            sharedModuleName: "RemoteFileUpdateModule",
            configurations: {
              remoteFileUpdateInfrastructure: { token: u.pF },
              remoteFileUpdateDownloaderInfrastructure: { token: u.gG },
              decipherInfrastructure: { token: u.tI }
            },
            crons: [{ handler: p, periodInMinutes: 30, name: "RFUCron", scope: i.F.User }],
            providers: [v.U, m.c, a.P, d.Q],
            imports: [c.k, n.X, h.n, g.I],
            exports: [v.U, m.c, a.P, d.Q]
          })
        ],
        y
      );
    },
    83958: (e, t, r) => {
      r.d(t, { U: () => S });
      var s = r(88802),
        o = r(57924),
        n = r(26457),
        i = r(94189),
        a = r(87279),
        c = r(7537),
        l = r(58376),
        d = r(91501),
        u = r(6220),
        p = r(87065),
        h = r(60399),
        m = r(20587),
        v = r(29659),
        g = r(47190),
        y = r(88268),
        f = r(94143),
        _ = r(93039);
      let S = class extends y.pF {
        constructor(e, t, r, s) {
          super(),
            (this.appLogger = e),
            (this.rfuDownloaderService = t),
            (this.rfuDecipheringService = r),
            (this.cqrsClient = s),
            (this._filesToCheck = {}),
            (this._emitDownloadedFilesUpdate$ = new c.t()),
            (this._downloadedFileStream$ = new l.y((e) => {
              this._emitDownloadedFilesUpdate$.next((t) => {
                e.next(t);
              }),
                this._emitDownloadedFilesUpdate$.complete();
            }));
        }
        observeRemoteFileUpdates(e) {
          return (this._filesToCheck = { ...this._filesToCheck, ...e }), this._downloadedFileStream$;
        }
        async downloadAndDecipherRemoteFiles() {
          const e = (await this.rfuDownloaderService.downloadRemoteFileUpdate(this._filesToCheck)).map((e) =>
            this._downloadAndDecipherSingleFile(e)
          );
          (0, d.D)(e).subscribe((e) => {
            const t = e.reduce((e, t) => {
              if ((0, a.hx)(t)) {
                const r = (0, a.Yv)(t);
                return r === f.ek || this.sendRFUEvents(_.FlowStep.Error, r), e;
              }
              const r = (0, a.db)(t);
              return this.sendRFUEvents(_.FlowStep.Complete), { ...e, [r.fileName]: r };
            }, {});
            this._callEmitDownloadedFilesUpdate(t);
          });
        }
        async _applyDecipheringStep(e) {
          const t = e.updatedFile.key ? await this.rfuDecipheringService.decipher(e.buffer, e.updatedFile) : (0, a.Vp)(e.buffer);
          return (0, a.d6)(t) ? (0, a.Vp)({ ...e, buffer: (0, a.db)(t) }) : t;
        }
        _downloadAndDecipherSingleFile(e) {
          return e.pipe(
            (0, u.z)((e) => ((0, a.d6)(e) ? this._applyDecipheringStep((0, a.db)(e)) : Promise.resolve(e))),
            (0, p.U)((e) => {
              if ((0, a.hx)(e)) return e;
              const { fileName: t, updatedFile: r, buffer: s } = (0, a.db)(e);
              return (0, a.Vp)({ fileName: t, revision: r.revision, buffer: s, lastDownloadTimestamp: Date.now() });
            })
          );
        }
        _callEmitDownloadedFilesUpdate(e) {
          return (0, h.z)(this._emitDownloadedFilesUpdate$).then((t) => {
            t(e);
          });
        }
        sendRFUEvents(e, t = undefined) {
          const { trackEvent: r } = this.cqrsClient.getClient(m.Yu).commands;
          r({
            event: new _.UserReceiveRemoteFileUpdateEvent({
              flowStep: e,
              remoteFileUpdateError: t,
              packageSource: _.PackageSource.Graphene
            })
          });
        }
      };
      S = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.V, g.P, v.c, i.w])], S);
    },
    94143: (e, t, r) => {
      r.d(t, { PQ: () => o, ek: () => n, nQ: () => s });
      const s = "update_available",
        o = new Set([s, "not_updated", "not_found", "error_server"]),
        n = "not_modified";
    },
    16988: (e, t, r) => {
      r.d(t, { L: () => s });
      class s {}
    },
    32697: (e, t, r) => {
      r.d(t, { u: () => N });
      var s = r(88802),
        o = r(24966),
        n = r(60399),
        i = r(30523),
        a = r(87065),
        c = r(6136),
        l = r(34987),
        d = r(14888),
        u = r(43004),
        p = r(57924),
        h = r(73774),
        m = r(91199),
        v = r(26457),
        g = r(43702);
      var y,
        f = r(23711),
        _ = r(49499),
        S = r(87279),
        E = r(58895),
        b = r(16988),
        w = r(69912);
      function A(e) {
        switch (e) {
          case u.w.CRITICAL:
            return y.ERROR;
          case u.w.WARNING:
            return y.WARNING;
        }
      }
      !(function (e) {
        (e[(e.UNKNOWN = 0)] = "UNKNOWN"), (e[(e.WARNING = 1)] = "WARNING"), (e[(e.ERROR = 2)] = "ERROR");
      })(y || (y = {}));
      const T = (e, t) => ({
        action: "logOnline",
        code: A(t.criticality),
        type: e.platformName,
        version: e.appVersion,
        additionalInfo: JSON.stringify({ manifestVersion: e.manifestVersion, ...(t.origin ? { origin: t.origin } : {}) }),
        browser: e.browser,
        browserVersion: e.browserVersion,
        exceptiontype: t.domainName ?? "grapheneException",
        message: t.message,
        os: e.os,
        osVersion: e.osVersion,
        sessionId: t.sessionId,
        stack: t.callStack,
        initialUseCaseModule: t.moduleName,
        initialUseCaseName: t.useCaseName,
        errorCount: 1,
        featureFlips: (t.featuresFlipped ?? []).join(","),
        line: t.lineNumber,
        file: t.fileLocation
      });
      function C(e, t) {
        return new w.L(
          "string" == typeof (r = T(e, t))
            ? r
            : Object.keys(r).reduce((e, t) => {
                const s = r[t];
                return void 0 === s || (e[t] = "string" == typeof s ? s : JSON.stringify(s)), e;
              }, {})
        );
        var r;
      }
      const I = { "Content-Type": "application/x-www-form-urlencoded" },
        O = ".graphene.exceptionLogs",
        P = new g.b(),
        R = new (class {
          constructor(e) {
            this.typeGuard = e;
          }
          decode(e) {
            if (this.typeGuard(e)) return e;
            throw new Error("Bad type");
          }
          encode(e) {
            return e;
          }
        })(
          (e) =>
            !(!e || "object" != typeof e) &&
            (0 === Object.keys(e).length ||
              (Object.keys(e).every((e) => "string" == typeof e) &&
                Object.values(e).every((e) => {
                  return (
                    !!((t = e) && "object" == typeof t && "entry" in t && "id" in t && "date" in t) &&
                    "string" == typeof t.id &&
                    "number" == typeof t.date &&
                    (0, u.h)(t.entry)
                  );
                  var t;
                })))
        ),
        D = new f.z();
      let N = class {
        constructor(e, t, r, s, n) {
          (this.httpClient = e),
            (this.kvStore = t),
            (this.logger = r),
            (this.settings = s),
            (this.platformInfoService = n),
            (this.queue$ = new o.X({})),
            (this.logExceptionsCount = {}),
            (this.platformInfo = null),
            (this.url = `${this.settings.serverEndpoint ?? "https://kck3hlb9.dashlane.com"}/1/softwarelog/create`),
            (this.codec = (0, _.x)(D, P, R));
        }
        async logException(e) {
          console.error(e);
          const t = this.settings.maxExceptionCountPerSession ?? 10,
            r = e.message.length ? e.message : "UNKNOWN_EXCEPTION";
          if (r in this.logExceptionsCount) {
            const e = this.logExceptionsCount[r];
            if (e === t) return Promise.resolve();
            this.logExceptionsCount[r] = e + 1;
          } else this.logExceptionsCount[r] = 1;
          const s = await this.enqueue(e);
          await (0, n.z)(this.queue$.pipe((0, i.h)((e) => !(s in e) || !!e[s].error)));
        }
        async start() {
          (this.platformInfo = await this.platformInfoService.getPlatformInfo()), await this.loadQueue();
          const e = this.settings.retryDelay ?? 6e4,
            t = this.queue$
              .pipe(
                (0, a.U)((e) => Object.keys(e)),
                (0, c.x)((e, t) => t.every((t) => e.includes(t))),
                (0, l.b)(() => this.processQueue()),
                (0, d.X)({ delay: e })
              )
              .subscribe();
          return {
            stop: async () => {
              t.unsubscribe(), await this.saveQueue();
            }
          };
        }
        async ignoreError(e) {
          try {
            return await e(), !0;
          } catch (e) {
            return this.logger.error("failed to send error log", e), !1;
          }
        }
        async saveQueue() {
          await this.ignoreError(async () => {
            const e = await this.codec.encode(this.queue$.value);
            await this.kvStore.set(O, e);
          });
        }
        async loadQueue() {
          await this.ignoreError(async () => {
            const e = await this.kvStore.get(O);
            if (!e || "" === e) return void this.queue$.next({});
            const t = await this.codec.decode(e),
              r = Date.now() - (this.settings.durationInQueue ?? 864e5);
            for (const e of Object.keys(t)) t[e].date < r && delete t[e];
            this.queue$.next(t);
          });
        }
        async enqueue(e) {
          const t = { date: Date.now(), entry: e, id: `${Date.now()}-${Math.random()}` };
          return (this.queue$.value[t.id] = t), await this.saveQueue(), this.queue$.next(this.queue$.value), t.id;
        }
        async processQueue() {
          const e = this.platformInfo;
          if (!e) throw new Error("No platform info");
          for (; Object.keys(this.queue$.value).length > 0; ) {
            const t = Object.keys(this.queue$.value)[0],
              r = this.queue$.value[t];
            if (
              !(await this.ignoreError(async () => {
                const t = await (0, n.z)(
                  this.httpClient.post(this.url, C(e, r.entry), {
                    headers: { ...I, "Client-Agent": ((s = e), `version:${s.appVersion},platform:${s.platformName}}`) },
                    observe: "response"
                  })
                );
                var s;
                if (!(0, S.d6)(t)) throw new Error("Failed to send log");
              }))
            )
              throw (
                ((this.queue$.value[t].error = !0), this.queue$.next(this.queue$.value), new Error("failed to send an item from the queue"))
              );
            delete this.queue$.value[t], await this.saveQueue();
          }
          this.queue$.next(this.queue$.value);
        }
      };
      N = (0, s.__decorate)([(0, p.GS)(), (0, s.__metadata)("design:paramtypes", [h.e, m.QI, v.V, b.L, E.t])], N);
    },
    64555: (e, t, r) => {
      r.d(t, { F: () => l });
      var s = r(88802),
        o = r(99634),
        n = r(25504),
        i = r(43673),
        a = r(32697),
        c = r(16988);
      let l = class {};
      l = (0, s.__decorate)(
        [
          (0, o.Y)({
            sharedModuleName: "software-exception-sink",
            imports: [n.X, i.i],
            providers: [a.u],
            exports: [a.u],
            configurations: { settings: { token: c.L } }
          })
        ],
        l
      );
    },
    71993: (e, t, r) => {
      r.d(t, { t: () => l });
      var s = r(10722),
        o = r(25029),
        n = r(95681),
        i = r(23347);
      const a = { drift: null },
        c = (e) => !(!e || "object" != typeof e || !("drift" in e)) && (null === e.drift || "number" == typeof e.drift);
      class l extends (0, n.Q)({
        storeTypeGuard: c,
        storeName: "clocksync",
        storage: { initialValue: a, schemaVersion: 1, typeGuard: c },
        scope: o.F.Device,
        isCache: !0,
        persist: !0,
        capacity: i.Y._001KB,
        codec: s.E
      }) {}
    },
    68259: (e, t, r) => {
      r.d(t, { E: () => x, F: () => k });
      var s = r(88802),
        o = r(60399),
        n = r(89618),
        i = r(57924),
        a = r(73774),
        c = r(9671),
        l = r(71937),
        d = r(58895);
      class u {
        constructor(e) {
          this.store = e;
        }
        async getServerToClientClockDrift() {
          const { drift: e } = await this.store.getState();
          return e;
        }
        storeServerToClientClockDrift(e) {
          return this.store.update(() => ({ drift: e }));
        }
      }
      var p = r(18590),
        h = r(71993),
        m = r(54404),
        v = r(77837),
        g = r(33027),
        y = r(9536),
        f = r(69865),
        _ = r(62361),
        S = r(4119),
        E = r(59091),
        b = r(52839),
        w = r(55127),
        A = r(7181),
        T = r(91406),
        C = r(73873),
        I = r(84626),
        O = r(42882),
        P = r(32739);
      const R = {
        v1: {
          account: m.m,
          accountrecovery: v.u,
          authentication: g.V,
          darkwebmonitoring: y.D,
          features: f.A,
          file: _.$,
          invitation: S.R,
          payments: E.H,
          pwleak: b.J,
          sharingUserdevice: w.b,
          secretTransfer: A.V,
          teams: T.p,
          time: C.q,
          useractivity: I.V,
          userconsents: O.G,
          vpn: P.V
        }
      };
      var D = r(31222),
        N = r(22513);
      const U = "CF-Access-Client-Id",
        L = "CF-Access-Client-Secret";
      class F {
        constructor(e) {
          (this.cloudflareKeys = e), (this.id = "ServerApiForStagingInterceptor");
        }
        intercept(e, t) {
          if (e.url.startsWith("https://api.dashlane.com/") || !this.cloudflareKeys) return t(e);
          if (!e.headers.has(U) && !e.headers.has(L)) {
            const { cloudflareAccessKey: r, cloudflareSecretKey: s } = this.cloudflareKeys;
            return t(e.clone({ headers: e.headers.set(U, r).set(L, s) }));
          }
          return t(e);
        }
      }
      var M = r(86758);
      let x = class {
        constructor(e, t, r, s, o, n, i, a) {
          (this.serverApiConfig = e),
            (this.httpClient = t),
            (this.clockDriftStore = r),
            (this.hmacSigner = s),
            (this.secureHasher = o),
            (this.platformInfoService = n),
            (this.allowedToFail = i),
            (this.settingsForStagingStore = a);
        }
        async init() {
          const { clockDriftStore: e, serverApiConfig: t, secureHasher: r, httpClient: s, hmacSigner: o } = this,
            n = new u(e),
            i = await this.platformInfoService.getPlatformInfo(),
            { appKeys: a } = t,
            c = await this.settingsForStagingStore.getState(),
            d = this.initBaseUrl(c, t),
            p = this.initCloudflareKeys(c, t);
          s.addInterceptor(new F(p));
          const h = (0, l.d)({
            secureHasher: r,
            httpClient: s,
            timeSyncStore: n,
            hmacSigner: o,
            apis: R,
            config: {
              appKeys: a,
              baseUrl: d,
              platformInfo: {
                platformName: i.platformName,
                version: i.appVersion || "unknown",
                osversion: i.osVersion || "unknown",
                language: i.lang || "unknown"
              }
            }
          });
          await this.initClockDrift(h), (this.rawSdk = h);
        }
        get sdk() {
          if (!this.rawSdk) throw new Error("ConfiguredServerSdk not initialized");
          return this.rawSdk;
        }
        initBaseUrl(e, t) {
          const r = e.api;
          return r.override ? r.baseUrlOverride : t.baseUrl;
        }
        initCloudflareKeys(e, t) {
          const r = e.api;
          return r.override
            ? { cloudflareAccessKey: r.cloudflareAccessKeyOverride, cloudflareSecretKey: r.cloudflareSecretKeyOverride }
            : t.cloudflareKeys;
        }
        async initClockDrift(e) {
          await this.allowedToFail.doOne(async () => {
            const { drift: t } = await this.clockDriftStore.getState();
            null === t && (await (0, o.z)(e.refreshClockDrift().pipe((0, n.V)({ first: 5e3 }))));
          });
        }
      };
      function k() {
        return {
          token: x,
          asyncFactory: async (e, t, r, s, o, n, i, a) => {
            const c = new x(e, t, r, s, o, n, i, a);
            return await c.init(), c;
          },
          inject: [p.$y, a.e, h.t, D.q, N.Z, d.t, c.J, M.L]
        };
      }
      x = (0, s.__decorate)([(0, i.GS)(), (0, s.__metadata)("design:paramtypes", [p.$y, a.e, h.t, D.q, N.Z, d.t, c.J, M.L])], x);
    },
    63281: (e, t, r) => {
      r.d(t, { B: () => i });
      var s = r(88802),
        o = r(57924),
        n = r(68259);
      let i = class {
        constructor(e) {
          this.configuredServerSdk = e;
        }
        get v1() {
          return this.configuredServerSdk.sdk.v1;
        }
      };
      i = (0, s.__decorate)([(0, o.GS)(), (0, s.__metadata)("design:paramtypes", [n.E])], i);
    },
    87113: (e, t, r) => {
      r.d(t, { l: () => d });
      var s = r(88802),
        o = r(34987),
        n = r(57924),
        i = r(64839),
        a = r(62694),
        c = r(68259),
        l = r(21534);
      let d = class {
        constructor(e, t) {
          (this.appliedV1Services = this.buildInjectedServices("v1", e.sdk)), (this.credentialsService = t);
        }
        get v1() {
          return this.appliedV1Services;
        }
        buildInjectedServices(e, t) {
          return Object.keys(t[e]).reduce((r, s) => ({ ...r, [s]: this.buildInjectedApiServices(e, t, s) }), {});
        }
        buildInjectedApiServices(e, t, r) {
          return Object.getOwnPropertyNames(Object.getPrototypeOf(t.v1[r]))
            .filter((e) => "constructor" !== e)
            .reduce((s, o) => ({ ...s, [o]: this.buildInjectedRouteService(t, e, r, o) }), {});
        }
        buildInjectedRouteService(e, t, r, s) {
          const n = a.t[r][s];
          if (!n) throw new Error("Unable to find endpoint descriptor");
          const { authType: c } = n;
          return (...n) => {
            const a = e[t][r],
              l = a[s].bind(a);
            if (c === i.d.USER_DEVICE) return this.credentialsService.getActiveUserDeviceCredentials().pipe((0, o.b)((e) => l(e, ...n)));
            if ([i.d.NONE, i.d.APP].includes(c)) return l(...n);
            throw new Error("Not supported");
          };
        }
      };
      d = (0, s.__decorate)([(0, n.GS)(), (0, s.__metadata)("design:paramtypes", [c.E, l.n])], d);
    },
    21534: (e, t, r) => {
      r.d(t, { n: () => u });
      var s = r(88802),
        o = r(87065),
        n = r(34987),
        i = r(87279),
        a = r(57924),
        c = r(94189),
        l = r(18590),
        d = r(8987);
      let u = class {
        constructor(e, t) {
          (this.cqrsClient = e), (this.infra = t);
        }
        getActiveUserDeviceCredentials() {
          const {
            queries: { activeUser: e }
          } = this.cqrsClient.getClient(d.t$);
          return e().pipe(
            (0, o.U)((e) => {
              if ((0, i.d6)(e)) return (0, i.db)(e);
              throw new Error("Failed to get active user");
            }),
            (0, n.b)(({ userName: e }) => {
              if (!e) throw new Error("No active user available");
              return this.infra.getDeviceCredentialsForUser(e);
            })
          );
        }
      };
      u = (0, s.__decorate)([(0, a.GS)(), (0, s.__metadata)("design:paramtypes", [c.w, l.se])], u);
    },
    18590: (e, t, r) => {
      r.d(t, { $y: () => s, se: () => o });
      class s {
        constructor(e) {
          (this.baseUrl = e.baseUrl), (this.appKeys = e.appKeys), (this.cloudflareKeys = e.cloudflareKeys);
        }
      }
      class o {}
      new (class extends o {
        getDeviceCredentialsForUser(e) {
          return Promise.resolve({ deviceAccessKey: "", deviceSecretKey: "", login: e });
        }
      })();
    },
    93850: (e, t, r) => {
      r.d(t, { n: () => b });
      var s = r(88802),
        o = r(99634),
        n = r(25504),
        i = r(97191),
        a = r(43673),
        c = r(87113),
        l = r(63281),
        d = r(18590),
        u = r(71993),
        p = r(21534),
        h = r(68259),
        m = r(37935),
        v = r(86758),
        g = r(87279),
        y = r(63663);
      let f = class {
        constructor(e) {
          this.store = e;
        }
        async execute(e) {
          const t = await this.store.getState();
          return await this.store.set({ ...t, ...e.body }), (0, g.Vp)(void 0);
        }
      };
      f = (0, s.__decorate)([(0, y.W)(i.bH), (0, s.__metadata)("design:paramtypes", [v.L])], f);
      var _ = r(87065),
        S = r(20754);
      let E = class {
        constructor(e) {
          this.store = e;
        }
        execute() {
          return this.store.state$.pipe((0, _.U)((e) => (0, g.Vp)(e)));
        }
      };
      E = (0, s.__decorate)([(0, S.e)(i.Lt), (0, s.__metadata)("design:paramtypes", [v.L])], E);
      let b = class {};
      b = (0, s.__decorate)(
        [
          (0, o.Y)({
            api: i.Dm,
            handlers: { commands: { editSettingsForStaging: f }, queries: { settingsForStaging: E }, events: {} },
            providers: [l.B, c.l, p.n, (0, h.F)()],
            exports: [l.B, c.l],
            configurations: { serverApi: { token: d.$y }, serverApiInfrastructure: { token: d.se } },
            stores: [u.t, v.L],
            imports: [m.D, n.X, a.i]
          })
        ],
        b
      );
    },
    86758: (e, t, r) => {
      r.d(t, { L: () => c });
      var s = r(10722),
        o = r(25029),
        n = r(95681),
        i = r(23347);
      const a = { api: { override: !1 }, nitro: { override: !1 } };
      class c extends (0, n.Q)({
        storeTypeGuard: (e) => !0,
        storeName: "webServicesSettingsForStaging",
        storage: { initialValue: a, schemaVersion: 1, typeGuard: (e) => !0 },
        scope: o.F.Device,
        persist: !0,
        isCache: !1,
        capacity: i.Y._001KB,
        codec: s.E
      }) {}
    },
    10370: (e, t, r) => {
      r.d(t, { s: () => n });
      var s = r(46041);
      function o(e) {
        const t = e.length,
          r = [];
        for (let o = 0; o < t; o += 3)
          r.push(s.T[e[o] >> 2]),
            r.push(s.T[((3 & e[o]) << 4) | (e[o + 1] >> 4)]),
            r.push(s.T[((15 & e[o + 1]) << 2) | (e[o + 2] >> 6)]),
            r.push(s.T[63 & e[o + 2]]);
        return r.join("");
      }
      function n(e, t = s.V) {
        const r = new Uint8Array(e),
          n = r.length,
          i = t % 3,
          a = 0 === i ? t : t + (3 - i),
          c = Math.ceil(n / a);
        let l = "",
          d = -1;
        for (; d++ < c; ) {
          const e = d * a,
            t = d === c - 1 ? n : (d + 1) * a,
            s = o(r.slice(e, t));
          l = l.concat(s);
        }
        return n % 3 == 2 ? l.substring(0, l.length - 1) + "=" : n % 3 == 1 ? l.substring(0, l.length - 2) + "==" : l;
      }
    },
    89685: (e, t, r) => {
      r.d(t, { v: () => o });
      const s = Math.pow(2, 14) - 1;
      function o(e) {
        const t = new Uint8Array(e),
          r = t.length;
        let o = "",
          n = s;
        for (let e = 0; e < r; e += n) {
          e + n > r && (n = r - e);
          const s = t.subarray(e, e + n);
          o += String.fromCharCode(...s);
        }
        return o;
      }
    },
    68376: (e, t, r) => {
      r.d(t, { L: () => o });
      var s = r(46803);
      function o(e) {
        const t = new Uint8Array(e),
          r = [];
        for (let e = 0; e < t.byteLength; e++) r[e >>> 2] |= t[e] << (24 - (e % 4) * 8);
        return s.lib.WordArray.create(r, t.byteLength);
      }
    },
    66122: (e, t, r) => {
      r.d(t, { R: () => n });
      var s = r(46041);
      const o = new Uint8Array(256);
      for (let e = 0; e < s.T.length; e++) o[s.T.charCodeAt(e)] = e;
      function n(e) {
        let t = 0.75 * e.length;
        const r = e.length;
        let s,
          n,
          i,
          a,
          c,
          l = 0;
        e.endsWith("=") && (t--, "=" === e[e.length - 2] && t--);
        const d = new ArrayBuffer(t),
          u = new Uint8Array(d);
        for (s = 0; s < r; s += 4)
          (n = o[e.charCodeAt(s)]),
            (i = o[e.charCodeAt(s + 1)]),
            (a = o[e.charCodeAt(s + 2)]),
            (c = o[e.charCodeAt(s + 3)]),
            (u[l++] = (n << 2) | (i >> 4)),
            (u[l++] = ((15 & i) << 4) | (a >> 2)),
            (u[l++] = ((3 & a) << 6) | (63 & c));
        return d;
      }
    },
    96303: (e, t, r) => {
      function s(e) {
        return Array.prototype.map.call(new Uint8Array(e), (e) => ("00" + e.toString(16)).slice(-2)).join("");
      }
      r.d(t, { k: () => s });
    },
    82933: (e, t, r) => {
      function s(...e) {
        const t = e.reduce((e, t) => e + t.byteLength, 0),
          r = new Uint8Array(t);
        return e.reduce((e, t) => (r.set(new Uint8Array(t), e), e + t.byteLength), 0), r.buffer;
      }
      r.d(t, { K: () => s });
    },
    46041: (e, t, r) => {
      r.d(t, { T: () => o, V: () => s });
      const s = Math.pow(10, 6),
        o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    },
    83168: (e, t, r) => {
      r.d(t, { B: () => i });
      var s = r(3417),
        o = r.n(s),
        n = r(54066);
      function i(e) {
        const { asn1: t, pki: r } = o(),
          s = r.privateKeyFromPem(e),
          i = r.privateKeyToAsn1(s),
          a = r.wrapRsaPrivateKey(i),
          c = t.toDer(a).getBytes();
        return (0, n.u)(c);
      }
    },
    54066: (e, t, r) => {
      function s(e) {
        const t = new ArrayBuffer(e.length),
          r = new Uint8Array(t);
        for (let t = 0; t < e.length; ++t) r[t] = e.charCodeAt(t);
        return t;
      }
      r.d(t, { u: () => s });
    },
    43293: (e, t, r) => {
      r.d(t, { N: () => n });
      var s = r(30543),
        o = r(46041);
      function n(e, t = o.V) {
        const r = e.length;
        if (0 === r) return "";
        let n = "",
          i = 0,
          a = Math.min(i + t, r);
        for (; a <= r; ) {
          const o = e.charCodeAt(a - 1);
          if (o >= 55296 && o <= 56319) {
            if ((a++, a > r)) throw new Error("Invalid string provided to utf8ChunkEncode");
            continue;
          }
          const c = e.slice(i, a),
            l = s.encode(c);
          if (((n = n.concat(l)), a === r)) break;
          (i = a), (a = Math.min(i + t, r));
        }
        return n;
      }
    },
    69806: (e, t, r) => {
      function s(e) {
        const { sigBytes: t, words: r } = e,
          s = new Uint8Array(t);
        let o = 0,
          n = 0;
        for (; o !== t; ) {
          const e = r[n++];
          if (((s[o++] = (4278190080 & e) >>> 24), o === t)) break;
          if (((s[o++] = (16711680 & e) >>> 16), o === t)) break;
          if (((s[o++] = (65280 & e) >>> 8), o === t)) break;
          s[o++] = 255 & e;
        }
        return s.buffer;
      }
      r.d(t, { o: () => s });
    },
    84473: (e, t, r) => {
      r.d(t, { W: () => n });
      var s = r(75994),
        o = r(92204);
      class n extends s.X {
        async fetch(e) {
          const t = (0, o.A)(e);
          return (await fetch(t)).json();
        }
      }
    },
    37298: (e, t, r) => {
      r.d(t, { j: () => o });
      var s = r(58376);
      class o {
        constructor(e, t) {
          (this.source = e), (this.filter = t);
          let r = [];
          const o = new Set();
          (this.listener = (e, t) => {
            if (!this.filter(e, t)) return !1;
            o.size ? o.forEach((r) => r.next([e, t])) : r.push([e, t]);
          }),
            (this.events$ = new s.y(
              (e) => (
                o.size || (r.forEach((t) => e.next(t)), (r = [])),
                o.add(e),
                () => {
                  o.delete(e);
                }
              )
            )),
            this.source.addListener(this.listener);
        }
        stop() {
          this.source.removeListener(this.listener);
        }
      }
    },
    64391: (e, t, r) => {
      r.d(t, { O: () => c, x: () => a });
      var s = r(5900),
        o = r.n(s),
        n = r(68376),
        i = r(69806);
      function a(e, t) {
        if (self.crypto.subtle) return self.crypto.subtle.digest({ name: t }, e);
        if ("SHA-1" === t) {
          const t = (0, n.L)(e),
            r = (0, i.o)(o()(t));
          return Promise.resolve(r);
        }
        return Promise.reject(new Error("Unsupported hash method"));
      }
      function c(e, t) {
        if ("SHA-1" === t) {
          const t = (0, n.L)(e);
          return (0, i.o)(o()(t));
        }
        throw new Error("Unsupported hash method");
      }
    },
    86381: (e, t, r) => {
      r.d(t, { $: () => n });
      var s = r(22609),
        o = r(83961);
      async function n(e, t, r) {
        const n = await (0, o.Y)(e);
        return self.crypto.subtle.decrypt({ name: s.z, iv: t }, n, r);
      }
    },
    39560: (e, t, r) => {
      r.d(t, { G: () => o });
      var s = r(83407);
      async function o(e, t, r) {
        const o = { name: s.$, hash: { name: r } },
          n = await self.crypto.subtle.importKey("pkcs8", e, o, !1, ["decrypt"]);
        return self.crypto.subtle.decrypt(o, n, t);
      }
    },
    76254: (e, t, r) => {
      r.d(t, { f: () => n });
      var s = r(35558),
        o = r.n(s);
      async function n(e, t, r) {
        const { tCost: n, mCost: i, parallelism: a } = r,
          { hash: c } = await o().hash({
            pass: new Uint8Array(e),
            salt: new Uint8Array(t),
            time: n,
            mem: i,
            hashLen: 32,
            parallelism: a,
            type: s.ArgonType.Argon2d
          });
        return c.buffer;
      }
    },
    80954: (e, t, r) => {
      r.d(t, { x: () => o });
      var s = r(22609);
      async function o(e, t, r) {
        const o = await self.crypto.subtle.importKey("raw", e, "PBKDF2", !1, ["deriveKey"]),
          n = { name: s.z, length: 256 },
          { iterations: i, hashType: a } = r,
          c = { name: "PBKDF2", salt: t, iterations: i, hash: { name: a } },
          l = await self.crypto.subtle.deriveKey(c, o, n, !0, ["encrypt", "decrypt"]);
        return self.crypto.subtle.exportKey("raw", l);
      }
    },
    48264: (e, t, r) => {
      r.d(t, { P: () => n });
      var s = r(22609),
        o = r(83961);
      async function n(e, t, r) {
        const n = await (0, o.Y)(e);
        return self.crypto.subtle.encrypt({ name: s.z, iv: t }, n, r);
      }
    },
    64396: (e, t, r) => {
      r.d(t, { b: () => o });
      var s = r(83407);
      async function o(e, t, r) {
        const o = { name: s.$, hash: { name: r } },
          n = await self.crypto.subtle.importKey("spki", e, o, !1, ["encrypt"]);
        return self.crypto.subtle.encrypt(o, n, t);
      }
    },
    420: (e, t, r) => {
      r.d(t, { o: () => o });
      var s = r(22609);
      async function o() {
        const e = await self.crypto.subtle.generateKey({ name: s.z, length: s.N }, !0, ["encrypt", "decrypt"]);
        return self.crypto.subtle.exportKey("raw", e);
      }
    },
    26857: (e, t, r) => {
      r.d(t, { Y: () => n });
      var s = r(83407);
      const o = new Uint8Array([1, 0, 1]);
      async function n(e) {
        const t = await self.crypto.subtle.generateKey({ name: s.$, modulusLength: 2048, publicExponent: o, hash: { name: e } }, !0, [
            "encrypt",
            "decrypt"
          ]),
          { privateKey: r, publicKey: n } = t;
        return { privateKey: await self.crypto.subtle.exportKey("pkcs8", r), publicKey: await self.crypto.subtle.exportKey("spki", n) };
      }
    },
    39911: (e, t, r) => {
      function s(e) {
        const t = new Uint8Array(e);
        return self.crypto.getRandomValues(t);
      }
      r.d(t, { P: () => s });
    },
    83961: (e, t, r) => {
      r.d(t, { Y: () => o });
      var s = r(22609);
      function o(e) {
        return self.crypto.subtle.importKey("raw", e, s.z, !1, ["encrypt", "decrypt"]);
      }
    },
    48297: (e, t, r) => {
      function s(e, t) {
        return self.crypto.subtle.importKey("raw", e, { name: "HMAC", hash: { name: t } }, !0, ["sign", "verify"]);
      }
      r.d(t, { r: () => s });
    },
    43838: (e, t, r) => {
      r.d(t, { n: () => n });
      var s = r(74017),
        o = r(48297);
      async function n(e, t, r = s.x) {
        const n = await (0, o.r)(e, r);
        return self.crypto.subtle.sign({ name: "HMAC", hash: { name: r } }, n, t);
      }
    },
    39387: (e, t, r) => {
      r.d(t, { f: () => o });
      var s = r(83407);
      async function o(e, t, r) {
        const o = { name: s.x, hash: { name: r } },
          n = await self.crypto.subtle.importKey("pkcs8", e, o, !1, ["sign"]);
        return self.crypto.subtle.sign(o, n, t);
      }
    },
    396: (e, t, r) => {
      r.d(t, { H: () => a });
      var s = r(90278),
        o = r.n(s),
        n = r(68376),
        i = r(69806);
      function a(e) {
        const t = (0, n.L)(e);
        return (0, i.o)(o()(t));
      }
    },
    57487: (e, t, r) => {
      r.d(t, { o: () => n });
      var s = r(74017),
        o = r(48297);
      async function n(e, t, r, n = s.x) {
        const i = await (0, o.r)(e, n);
        return self.crypto.subtle.verify({ name: "HMAC", hash: { name: n } }, i, t, r);
      }
    },
    83074: (e, t, r) => {
      r.d(t, { A: () => m });
      var s = r(87065),
        o = r(93192),
        n = r(90171),
        i = r(47968),
        a = r(37182),
        c = r(69885),
        l = r(51992),
        d = r(73155),
        u = r(12964),
        p = r(4607),
        h = r(87279);
      class m {
        constructor() {
          (this.toHttpResult = (e) => (e instanceof d.a ? (0, h.Rn)(e) : e.ok ? (0, h.Vp)(e) : (0, h.Rn)(new d.R(e)))),
            (this.toHttpResponse = (e) =>
              e instanceof d.a
                ? e
                : new u.Z({
                    body: e.body,
                    url: e.url,
                    status: e.status,
                    statusText: e.statusText,
                    headers: this.mapToHttpHeaders(e.headers)
                  }));
        }
        handle(e) {
          const t = this.getTimeout$(e.timeout),
            r = this.doFetch(e).pipe((0, s.U)(this.toHttpResponse), (0, s.U)(this.toHttpResult));
          return (0, o.S)(t, r);
        }
        getTimeout$(e) {
          return e ? (0, n.H)(e).pipe((0, s.U)(() => (0, h.Rn)(new d.a()))) : i.C;
        }
        doFetch(e) {
          return (0, l.U)(e.url, {
            method: e.method,
            body: e.serializeBody(),
            headers: this.getHeaders(e),
            credentials: e.withCredentials ? "include" : "omit",
            mode: e.mode
          }).pipe(
            (0, a.K)((e) => {
              if (!(e instanceof TypeError)) throw e;
              return (0, c.of)(new d.a());
            })
          );
        }
        mapToHttpHeaders(e) {
          const t = new p.W();
          return e.forEach((e, r) => t.set(r, e)), t;
        }
        getHeaders(e) {
          return e.headers.keys().reduce((t, r) => ({ ...t, [r]: e.headers.get(r) }), {});
        }
      }
    },
    50400: (e, t, r) => {
      r.r(t),
        r.d(t, {
          BrowserCronSource: () => De,
          BrowserPortConnector: () => He,
          BrowserPortListener: () => Ge.P,
          BrowserPortListenerChannel: () => Ye,
          BufferedEventStream: () => i.j,
          ExtensionCronSource: () => Ne.y,
          ExtensionLocalStorageInfrastructure: () => we.e,
          HttpFetchBackend: () => I.A,
          IndexDbKeyValueStorage: () => Oe,
          IndexDbStorage: () => Ie,
          JsonExtensionResourceFetcher: () => n.W,
          JsonWebAppResourceFetcher: () => o,
          PageToWorkerChannel: () => ke,
          computeHash: () => a.x,
          computeHashSynchronous: () => a.O,
          cookieRemoveByDomain: () => Q,
          decryptAes256: () => c.$,
          decryptAesEcb256: () => p,
          decryptRsaOaep: () => h.G,
          deriveKeyArgon2d: () => m.f,
          deriveKeyPbkdf2: () => v.x,
          disableBrowserNativeAutofill: () => k,
          enablePrivacyService: () => x,
          encryptAes256: () => g.P,
          encryptRsaOaep: () => y.b,
          generateKeyAes256: () => f.o,
          generateKeyPairRsaOaep: () => _.Y,
          getLanguage: () => N,
          getRandomValues: () => S.P,
          getShortcutValues: () => oe,
          isMv3Environment: () => Ue,
          makeStoreInfrastructure: () => be.e,
          signHmacSha: () => E.n,
          signRsassaPkcs1: () => b.f,
          storageLocalItemExists: () => ae,
          unsafeComputeMd5Hash: () => w.H,
          updateToolbarIcon: () => B,
          verifyHmacSha: () => A.o,
          verifyRsassaPkcs1: () => C,
          webappClose: () => Ee,
          webappOpen: () => fe
        });
      var s = r(75994);
      class o extends s.X {
        constructor(e) {
          super(), (this.publicPath = e);
        }
        async fetch(e) {
          return (await fetch(new URL(e.replace(/^\/*/, ""), this.publicPath).href)).json();
        }
      }
      var n = r(84473),
        i = r(37298),
        a = r(64391),
        c = r(86381),
        l = r(89685),
        d = r(68376),
        u = r(69806);
      function p(e, t) {
        const r = (0, l.v)(t),
          s = (0, d.L)(e);
        return (0, u.o)(CryptoJS.AES.decrypt(r, s, { mode: CryptoJS.mode.ECB }));
      }
      var h = r(39560),
        m = r(76254),
        v = r(80954),
        g = r(48264),
        y = r(64396),
        f = r(420),
        _ = r(26857),
        S = r(39911),
        E = r(43838),
        b = r(39387),
        w = r(396),
        A = r(57487),
        T = r(83407);
      async function C(e, t, r, s) {
        const o = { name: T.x, hash: { name: s } },
          n = await self.crypto.subtle.importKey("spki", e, o, !1, ["verify"]);
        return self.crypto.subtle.verify(o, n, t, r);
      }
      var I = r(83074);
      const O = new Set(["en", "fr", "es", "ja", "de", "pt", "it", "ko", "zh", "nl", "sv"]),
        P = "en";
      function R(e) {
        return e.substr(0, 2);
      }
      function D(e) {
        const t = R(e);
        return O.has(t);
      }
      function N() {
        const e = [navigator.language].concat(navigator.languages).find(D);
        if (!e) return P;
        if (!e.includes("-")) return e;
        return R(e);
      }
      var U = r(30754),
        L = r(82324),
        F = r(81805);
      const M = " ";
      async function x(e, t) {
        try {
          const { levelOfControl: t } = await (0, U.U)(e);
          if ("controllable_by_this_extension" !== t && "controlled_by_this_extension" !== t) {
            const r = [`Impossible to change browser setting: ${e}.`, `Extension prevented from changing: ${t}`].join(M);
            throw new Error(r);
          }
        } catch (t) {
          if ((0, L.b)(t)) {
            throw new Error(`Browser setting not supported: ${e}`);
          }
          if ((0, L.I)(t)) throw t.runtimeError;
          throw t;
        }
        try {
          await (0, F.t)(e, t);
        } catch (e) {
          throw (0, L.I)(e) ? e.runtimeError : e;
        }
      }
      async function k() {
        const e = ["autofillAddressEnabled", "autofillCreditCardEnabled", "passwordSavingEnabled"].map((e) => x(e, !1));
        await Promise.all(e);
      }
      var G = r(84318),
        K = r(16241);
      const V = { nightly: "icon_nightly_auth", mv2: "icon_auth", mv3: "icon_mv3_auth" },
        j = "icon_not_auth";
      async function B({ isUserAuthenticated: e }) {
        const t = `icons/action/${
            e
              ? (function () {
                  const e = (0, G.W)();
                  return e.name.includes("Nightly") ? V.nightly : e.name.includes("Beta") || 3 === e.manifest_version ? V.mv3 : V.mv2;
                })()
              : j
          }`,
          r = { 16: `${t}.png`, 32: `${t}@2x.png` };
        await (0, K.B)(r);
      }
      var W = r(329),
        H = r(98641);
      function z(e) {
        return `${"http" + (e.secure ? "s" : "")}://${e.domain.startsWith(".") ? e.domain.substring(1) : e.domain}${e.path}`;
      }
      async function Q(e) {
        const t = await (0, W.g)({ domain: e });
        return Promise.all(t.map((e) => (0, H.O)({ url: z(e), name: e.name })));
      }
      var q = r(28509),
        Y = r(90123);
      const $ = /^_execute(_browser){0,1}_action$/,
        X = "+";
      var Z;
      function J(e) {
        return $.test(e.name ?? "");
      }
      function ee(e) {
        const t = e.toUpperCase();
        switch (t) {
          case "⌃":
          case "CTRL":
            return q.isMacOS() ? Z.Command : Z.Ctrl;
          case "SHIFT":
          case "⇧":
            return Z.Shift;
          case "COMMAND":
          case "⌘":
            return Z.Command;
          case "MACCTRL":
            return Z.MacCtrl;
          default:
            return t;
        }
      }
      function te(e) {
        const t = Object.values(Z),
          r = t.indexOf(e);
        return -1 === r ? t.length : r;
      }
      function re(e, t) {
        return te(e) - te(t);
      }
      function se(e) {
        switch (e) {
          case Z.Ctrl:
          case Z.MacCtrl:
            return "Ctrl";
          case Z.Shift:
            return "⇧";
          case Z.Command:
            return "⌘";
          default:
            return e;
        }
      }
      async function oe() {
        const e = await (0, Y.g)(),
          t = e.find(J)?.shortcut;
        if (!t) return;
        const r = (function (e) {
          return e.split(e.includes(X) ? X : "");
        })(t);
        return r.map(ee).sort(re).map(se);
      }
      !(function (e) {
        (e.Command = "Command"), (e.Ctrl = "Ctrl"), (e.MacCtrl = "MacCtrl"), (e.Shift = "Shift");
      })(Z || (Z = {}));
      var ne = r(39680),
        ie = r(41808);
      async function ae(e) {
        if ((0, ne.G)()) {
          return (await (0, ne.y)(e)) > 0;
        }
        const t = await (0, ie.U)(e),
          r = void 0 === t[e],
          s = null === t[e];
        return !r && !s;
      }
      var ce = r(92204),
        le = r(24715),
        de = r(72733),
        ue = r(57306),
        pe = r(31460),
        he = r(61222);
      async function me() {
        const e = await (0, he.I)({}),
          t = (0, ce.A)("");
        return e.filter((e) => "string" == typeof e.url && e.url.startsWith(t)).filter((e) => "" !== e.url);
      }
      const ve = "index.html";
      function ge() {
        return `${(0, ce.A)("")}${ve}`;
      }
      function ye({ identifier: e, queryInfo: t, name: r }) {
        const s = ge();
        if (!r) return s;
        const o = e ? `#${r}/${e}` : `#${r}`,
          n = t
            ? `?${(function (e) {
                return Object.keys(e)
                  .map((t) => `${t}=${e[t]}`)
                  .join("&");
              })(t)}`
            : "";
        return encodeURI(`${s}${o}${n}`);
      }
      async function fe({ id: e, query: t, route: r }) {
        const s = ye({ identifier: e, queryInfo: t, name: r }),
          o = await me();
        o.length
          ? await (async function ({ path: e, tabs: t }) {
              const r = await (0, de.T)(),
                s = (function ({ existingTabs: e, focusedWindow: t }) {
                  const r = e.filter((e) => e.active),
                    s = r.find((e) => e.windowId === t.id),
                    o = r.pop(),
                    n = e.pop();
                  return s ?? o ?? n;
                })({ existingTabs: t, focusedWindow: r });
              if (!s) return;
              if ((s.windowId !== r.id && (0, ue.V)(s.windowId, { focused: !0 }), !s.id)) return;
              const o = { active: !0, ...(e === ge() ? {} : { url: e }) };
              await (0, pe.V)(s.id, o);
            })({ path: s, tabs: o })
          : await (async function (e) {
              const t = { url: e };
              await (0, le.U)(t);
            })(s);
      }
      var _e = r(15904),
        Se = r(49259);
      async function Ee() {
        const e = await me();
        if (!e.length) return;
        const t = (0, _e.a)(),
          r = e.map((e) => e.id).filter((e) => "number" == typeof e && e !== t);
        await (0, Se.O)(r);
      }
      var be = r(10026),
        we = r(62853),
        Ae = r(96168),
        Te = r(87279);
      class Ce extends (0, Ae.Hu)("NotSupported", "Index DB is not supported in this environment") {}
      class Ie {
        constructor(e, t, r) {
          (this.DB_STORE_NAME = e), (this.DB_VERSION = t), (this.DB_OBJECT_STORE_NAME = r);
        }
        getIndexedDB() {
          return new Promise((e, t) => {
            const r = self.indexedDB;
            if (!r) return t(new Error("indexedDB is not supported in this environment"));
            const s = r.open(this.DB_STORE_NAME, this.DB_VERSION);
            (s.onerror = function () {
              "InvalidStateError" === s.error?.name && e((0, Te.Rn)(new Ce())), t(s.error);
            }),
              (s.onupgradeneeded = () => {
                s.result.objectStoreNames.contains(this.DB_OBJECT_STORE_NAME) || s.result.createObjectStore(this.DB_OBJECT_STORE_NAME);
              }),
              (s.onsuccess = function () {
                (s.onsuccess = null), e((0, Te.Vp)(s.result));
              });
          });
        }
        async isSupported() {
          return (0, Te.d6)(await this.getIndexedDB());
        }
        async getStore(e = "readwrite") {
          const t = await this.getIndexedDB();
          if (!(0, Te.d6)(t)) throw new Error("Failed to get db");
          return t.data.transaction([this.DB_OBJECT_STORE_NAME], e).objectStore(this.DB_OBJECT_STORE_NAME);
        }
        async readItem(e) {
          const t = await this.getStore("readonly");
          return new Promise((r) => {
            const s = t.get(e);
            s.onsuccess = () => {
              (s.onsuccess = null), r(s.result);
            };
          });
        }
        async getAllKeys() {
          const e = await this.getStore("readonly");
          return new Promise((t) => {
            const r = e.getAllKeys();
            r.onsuccess = () => {
              t(r.result.map((e) => String(e)));
            };
          });
        }
        async removeItem(e) {
          const t = await this.getStore("readwrite");
          return new Promise((r) => {
            const s = t.delete(e);
            s.onsuccess = () => {
              (s.onsuccess = null), r();
            };
          });
        }
        async writeItem(e, t) {
          const r = await this.getStore("readwrite");
          return new Promise((s) => {
            const o = r.put(t, e);
            o.onsuccess = () => {
              (o.onsuccess = null), s();
            };
          });
        }
        async itemExists(e) {
          const t = await this.readItem(e);
          return null != t;
        }
      }
      class Oe {
        constructor() {
          this.storageLayer = new Ie("dashlane-ng", 1, "module-data");
        }
        isSupported() {
          return this.storageLayer.isSupported();
        }
        getAllKeys() {
          return this.storageLayer.getAllKeys();
        }
        async set(e, t) {
          return await this.storageLayer.writeItem(e, t);
        }
        remove(e) {
          return this.storageLayer.removeItem(e);
        }
        async get(e) {
          return (await this.storageLayer.readItem(e)) ?? void 0;
        }
      }
      var Pe = r(69594),
        Re = r(58376);
      class De extends Pe.R_ {
        constructor() {
          super(...arguments),
            (this.alarm$ = new Re.y((e) => {
              const t = self.setInterval(() => {
                e.next();
              }, 6e4);
              return () => {
                self.clearInterval(t);
              };
            }));
        }
      }
      var Ne = r(3460);
      function Ue() {
        return (
          "undefined" != typeof chrome &&
          void 0 !== chrome.runtime &&
          void 0 !== chrome.runtime.getManifest &&
          3 === (0, G.W)().manifest_version
        );
      }
      var Le = r(15572),
        Fe = r(45244),
        Me = r(69885),
        xe = r(7074);
      class ke {
        constructor(e, t) {
          (this.worker = e),
            (this.channelName = t),
            (this.status$ = (0, Me.of)(Le.D.Connected)),
            (this.messages$ = new Re.y((t) => {
              const r = (e) => {
                (0, Fe.F)(e.data) && !e.origin && t.next(e.data.message);
              };
              return (
                e.addEventListener("message", r),
                () => {
                  e.removeEventListener("message", r);
                }
              );
            }).pipe((0, xe.B)()));
        }
        async sendMessage(e) {
          this.worker.postMessage((0, Fe.k)({ channelName: this.channelName, message: e }));
        }
        stop() {
          return Promise.resolve();
        }
      }
      var Ge = r(66917),
        Ke = r(24966),
        Ve = r(97280),
        je = r(6220),
        Be = r(60399),
        We = r(5441);
      class He {
        constructor(e) {
          (this.status$ = new Ke.X(Le.D.Connected)),
            (this.port$ = new Re.y((t) => {
              let r;
              const s = this.status$;
              function o() {
                r?.onDisconnect.removeListener(o);
                const n = (0, We.$)({ name: e });
                s.next(Le.D.Disconnected), n.onDisconnect.addListener(o), t.next(n), s.next(Le.D.Connected), (r = n);
              }
              return (
                o(),
                () => {
                  r?.onDisconnect.removeListener(o), r?.disconnect();
                }
              );
            }).pipe((0, Ve.d)(1))),
            (this.portSubscription = this.port$.subscribe()),
            (this.messages$ = this.port$.pipe(
              (0, je.z)(
                (t) =>
                  new Re.y((r) => {
                    const s = (t) => {
                      (0, Fe.F)(t) && t.channelName === e && r.next(t.message);
                    };
                    return (
                      t.onMessage.addListener(s),
                      () => {
                        t.onMessage.removeListener(s);
                      }
                    );
                  })
              )
            ));
        }
        async sendMessage(e) {
          const t = await (0, Be.z)(this.port$);
          t.postMessage((0, Fe.k)({ channelName: t.name, message: e }));
        }
        stop() {
          return this.portSubscription.unsubscribe(), this.status$.next(Le.D.Disconnected), Promise.resolve();
        }
      }
      var ze = r(87065),
        Qe = r(43978),
        qe = r(17350);
      class Ye {
        constructor(e) {
          (this.listener = new Ge.P(e)),
            (this.channel$ = this.listener.connectedChannels$.pipe(
              (0, ze.U)((e) => {
                const t = Object.values(e);
                if (t.length) return t[0];
              }),
              (0, Ve.d)(1)
            )),
            (this.receivedMessages$ = this.channel$.pipe((0, Qe.w)((e) => (e ? e.receivedMessages$ : qe.E)))),
            (this.channelState$ = this.channel$.pipe((0, ze.U)((e) => (e ? Le.D.Connected : Le.D.Disconnected))));
        }
        async send(e) {
          const t = await (0, Be.z)(this.channel$);
          if (!t) throw new Error("Channel is not connected");
          await t.send(e);
        }
        stop() {
          this.listener.stop();
        }
      }
    },
    10026: (e, t, r) => {
      r.d(t, { e: () => _ });
      var s = r(83081),
        o = r(32012),
        n = r(58376),
        i = r(7074),
        a = r(24966),
        c = r(85390),
        l = r(15023),
        d = r(87065),
        u = r(26603),
        p = r(56847),
        h = r(52477),
        m = r(15026);
      function v(e) {
        return JSON.parse(JSON.stringify(e));
      }
      class g {
        constructor() {
          this.events$ = new n.y((e) => {
            const t = (t) => {
              e.next(t);
            };
            return u.r.addListener(t), () => u.r.removeListener(t);
          }).pipe((0, i.B)());
        }
      }
      class y {
        constructor(e, t, r) {
          (this.stopped$ = new a.X(!1)), (this.key = t), (this.typeGuard = r ?? ((e) => !0));
          const s = new n.y((r) => {
            this.getState().then((e) => {
              r.next(e);
            });
            const s = e.events$.subscribe((e) => {
              if (t in e) {
                const { newValue: s } = e[t];
                return r.next(this.asDataWithTimestamp(s));
              }
            });
            return () => s.unsubscribe();
          });
          this.state$ = (0, c.a)({ state: s, isStopped: this.stopped$ }).pipe(
            (0, l.o)(({ isStopped: e }) => !e, !1),
            (0, d.U)(({ state: e }) => e)
          );
        }
        async update(e) {
          return this.set(e(await this.getState()));
        }
        persist() {
          return Promise.resolve();
        }
        load() {
          return Promise.resolve();
        }
        set(e) {
          return (0, p.t)(v({ [this.key]: e }));
        }
        init(e) {
          return (0, p.t)(v({ [this.key]: e }));
        }
        clear() {
          return (0, h.O)(this.key);
        }
        clearStorage() {
          return Promise.resolve();
        }
        stop() {
          this.stopped$.next(!0);
        }
        async getState() {
          const e = (await (0, m.U)(this.key))[this.key];
          return this.asDataWithTimestamp(e);
        }
        asDataWithTimestamp(e) {
          return e &&
            "object" == typeof e &&
            "timestamp" in e &&
            "number" == typeof e.timestamp &&
            e.timestamp &&
            "data" in e &&
            this.typeGuard(e.data)
            ? { timestamp: e.timestamp, data: e.data }
            : { timestamp: void 0 };
        }
      }
      class f extends s.G {
        constructor() {
          super(...arguments), (this.source = new g());
        }
        createUserScopedInfrastructure(e, t, r, s) {
          const o = `graphene.${e}.${t}.${r}`;
          return new y(this.source, o, s);
        }
        createDeviceScopedInfrastructure(e, t, r) {
          const s = `graphene.${e}.${t}`;
          return new y(this.source, s, r);
        }
      }
      function _() {
        return (0, o.G)() ? new f() : new s.N();
      }
    },
    62853: (e, t, r) => {
      r.d(t, { e: () => i });
      var s = r(41808),
        o = r(9244),
        n = r(45441);
      class i {
        async getAllKeys() {
          return Object.keys(await (0, s.U)(null));
        }
        async get(e) {
          const t = (await (0, s.U)([e]))[e];
          if (t) {
            if ("string" != typeof t)
              throw new Error(
                `[ChromeLocalStorage] - cannot read content of ${e} properly. Type is\n        ${typeof t} but should be 'string'`
              );
            return t;
          }
        }
        async set(e, t) {
          await (0, o.t)({ [e]: t });
        }
        async remove(e) {
          await (0, n.O)([e]);
        }
      }
    },
    3460: (e, t, r) => {
      r.d(t, { y: () => u });
      var s = r(69594),
        o = r(58376),
        n = r(97280),
        i = r(31034),
        a = r(18477),
        c = r(65496);
      const l = "cron-source",
        d = () =>
          (0, c.G)()
            ? new o.y((e) => {
                const t = (t) => {
                  t.name === l && e.next();
                };
                return (
                  (0, i.U)(l, { delayInMinutes: 1, periodInMinutes: 1 }),
                  a.i.addListener(t),
                  () => {
                    a.i.removeListener(t);
                  }
                );
              })
            : new o.y((e) => {
                const t = self.setInterval(() => {
                  e.next();
                }, 6e4);
                return () => {
                  self.clearInterval(t);
                };
              });
      class u extends s.R_ {
        constructor() {
          super(...arguments), (this.alarm$ = d().pipe((0, n.d)(1))), (this.subscription = this.alarm$.subscribe());
        }
        stop() {
          this.subscription.unsubscribe();
        }
      }
    },
    66917: (e, t, r) => {
      r.d(t, { P: () => p });
      var s = r(78776),
        o = r(24966),
        n = r(58376),
        i = r(87065),
        a = r(45244),
        c = r(15572),
        l = r(58649),
        d = r(20500),
        u = r(37298);
      class p {
        constructor(e) {
          this.connectedChannels$ = new o.X({});
          const t = new n.y((t) => {
            const r = {},
              n = (n) => {
                const d = (0, s.Z)();
                if (n.name !== e) return;
                const p = new u.j(
                    { addListener: (e) => n.onMessage.addListener(e), removeListener: (e) => n.onMessage.removeListener(e) },
                    (t) => (0, a.F)(t) && t.channelName === e
                  ),
                  h = new Promise((e) => {
                    const t = () => {
                      n.onDisconnect.removeListener(t), e(null);
                    };
                    n.onDisconnect.addListener(t);
                  }),
                  m = new o.X(c.D.Connected);
                h.then(() => {
                  p.stop(), m.next(c.D.Disconnected), delete r[d], t.next(r);
                });
                const v = {
                    messages$: p.events$.pipe((0, i.U)(([e]) => e.message)),
                    sendMessage: (t) => (n.postMessage((0, a.k)({ channelName: e, message: t })), Promise.resolve()),
                    stop: () => (n.disconnect(), Promise.resolve()),
                    status$: m
                  },
                  g = new l.N(v);
                (r[d] = g), t.next(r);
              };
            return (
              d.b.addListener(n),
              () => {
                d.b.removeListener(n);
              }
            );
          });
          this.subscription = t.subscribe((e) => this.connectedChannels$.next(e));
        }
        stop() {
          this.subscription.unsubscribe();
        }
      }
    },
    23711: (e, t, r) => {
      r.d(t, { z: () => n });
      var s = r(66122),
        o = r(10370);
      class n {
        decode(e) {
          return (0, s.R)(e);
        }
        encode(e) {
          return (0, o.s)(e);
        }
      }
    },
    49499: (e, t, r) => {
      function s(...e) {
        const t = [...e].reverse();
        return {
          decode: async (t) => {
            for (const r of e) t = await r.decode(t);
            return t;
          },
          encode: async (e) => {
            for (const r of t) e = await r.encode(e);
            return e;
          }
        };
      }
      r.d(t, { x: () => s });
    },
    43702: (e, t, r) => {
      r.d(t, { b: () => n });
      var s = r(89685),
        o = r(54066);
      class n {
        decode(e) {
          return JSON.parse((0, s.v)(e));
        }
        encode(e) {
          return (0, o.u)(JSON.stringify(e));
        }
      }
    },
    10722: (e, t, r) => {
      r.d(t, { E: () => o });
      const s = (e) => e;
      class o {
        constructor() {
          (this.encode = s), (this.decode = s);
        }
      }
    },
    16698: (e, t, r) => {
      r.d(t, { BU: () => n, No: () => i, Nw: () => s, gO: () => o });
      const s = { algorithm: "aes256", mode: "cbchmac", ivLength: 16 },
        o = { algorithm: "aes256", mode: "cbchmac64", ivLength: 16 },
        n = { algorithm: "aes256", mode: "cbchmac", ivLength: 16, padding: 16, bytesToKey: 0, reuseSalt: !1 },
        i = {
          algorithm: "aes256",
          mode: "cbc",
          ivLength: 16,
          saltLength: 32,
          padding: 0,
          bytesToKey: { algorithm: "sha1", iterations: 3, keyLength: 32 }
        };
    },
    94805: (e, t, r) => {
      r.d(t, { E1: () => n, Yi: () => a, b9: () => c, m9: () => l, mr: () => o, oo: () => i });
      var s = r(95087);
      const o = { algorithm: "argon2d", saltLength: 16, tCost: 3, mCost: 32768, parallelism: 2 },
        n = { algorithm: "pbkdf2", saltLength: 16, iterations: 2e5, hashAlgorithm: "sha256" },
        i = { algorithm: "noderivation" },
        a = { algorithm: "pbkdf2", saltLength: 32, iterations: 10204, hashAlgorithm: "sha1" };
      function c(e) {
        return ["argon2d", "pbkdf2", "noderivation"].some((t) => t === e);
      }
      function l(e) {
        switch (e.algorithm) {
          case "argon2d":
          case "pbkdf2":
            return e.saltLength;
          case "noderivation":
            return 0;
          default:
            (0, s.U)(e);
        }
      }
    },
    69591: (e, t, r) => {
      r.d(t, { F: () => s, g: () => o });
      const s = "$",
        o = 1;
    },
    33055: (e, t, r) => {
      r.d(t, { ARGON2D_MARKER_SCHEMA: () => s, NODERIVATION_MARKER_SCHEMA: () => n, PBKDF2_MARKER_SCHEMA: () => o });
      const s = {
          count: 9,
          index: { version: 0, derivation: 1, saltLength: 2, tCost: 3, mCost: 4, parallelism: 5, cipher: 6, mode: 7, ivLength: 8 }
        },
        o = {
          count: 8,
          index: { version: 0, derivation: 1, saltLength: 2, iterations: 3, hashAlgorithm: 4, cipher: 5, mode: 6, ivLength: 7 }
        },
        n = { count: 5, index: { version: 0, derivation: 1, cipher: 2, mode: 3, ivLength: 4 } };
    },
    38291: (e, t, r) => {
      r.d(t, { PD: () => s, RB: () => i, en: () => o, jK: () => n });
      const s = "KWC5",
        o = 16,
        n = 32,
        i = 0;
    },
    6752: (e, t, r) => {
      r.d(t, { b: () => n });
      var s = r(54066);
      var o = r(12087);
      function n(e, t, r, n, i, a) {
        if (0 === e.byteLength) throw new Error("Attempting to derivate a key from an empty input");
        return "pbkdf2" === i.algorithm
          ? (0, o.E)(r, a, i, e, t)
          : (async function (e, t, r, o, n) {
              const { tCost: i, mCost: a, parallelism: c } = r,
                l = (0, s.u)(Object.values(r).join("")),
                d = t.getCacheKey(o, n, l),
                u = t.getCachedDerivation(d);
              if (u) return u;
              const p = { tCost: i, mCost: a, parallelism: c },
                h = await e(o, n, p);
              return t.setCachedDerivation({ cacheKey: d, data: h }), h;
            })(n, a, i, e, t);
      }
    },
    12087: (e, t, r) => {
      r.d(t, { E: () => n });
      var s = r(54066),
        o = r(95087);
      async function n(e, t, r, n, i) {
        const a = (0, s.u)(Object.values(r).join("")),
          c = t.getCacheKey(n, i, a),
          l = t.getCachedDerivation(c);
        if (l) return l;
        const d = (function (e) {
            switch (e) {
              case "sha1":
                return "SHA-1";
              case "sha256":
                return "SHA-256";
              case "sha384":
                return "SHA-384";
              case "sha512":
                return "SHA-512";
              default:
                (0, o.U)(e);
            }
          })(r.hashAlgorithm),
          u = await e(n, i, { iterations: r.iterations, hashType: d });
        return t.setCachedDerivation({ cacheKey: c, data: u }), u;
      }
    },
    60745: (e, t, r) => {
      r.d(t, { F: () => G, V: () => k });
      var s = r(82933),
        o = r(89685),
        n = r(95087),
        i = r(94805);
      function a({ transportableData: e, marker: t, metadata: r }) {
        const s = t.length + r.length;
        return e.substring(s);
      }
      var c = r(54066);
      function l({ encipheredContents: e, marker: t, metadata: r }) {
        const { derivation: s, cipher: o, type: n, version: i } = t,
          { iv: a, salt: l, signature: d } = r;
        return {
          type: n,
          version: i,
          derivationConfig: s,
          cipherConfig: o,
          salt: (0, c.u)(l),
          signature: (0, c.u)(d),
          iv: (0, c.u)(a),
          encipheredContents: (0, c.u)(e)
        };
      }
      function d({ str: e, substr: t, occurrence: r }) {
        if (r < 1) return -1;
        let s = 0,
          o = -1;
        for (; s < r; ) {
          if (((o = e.indexOf(t, o + 1)), o < 0)) return o;
          s++;
        }
        return o;
      }
      var u = r(69591);
      function p({ transportableData: e, makeMarker: t, schema: r }) {
        const s = r.count + 1,
          o = d({ str: e, substr: u.F, occurrence: s }),
          n = e.substring(1, o).split(u.F);
        if (n.length !== r.count) throw new Error("Marker and schema length mismatch");
        return t({ bytes: o + 1, markerSchema: r, values: n });
      }
      var h = r(7165);
      const m = h.z.object({ algorithm: h.z.literal("aes256"), mode: h.z.literal("cbchmac"), ivLength: h.z.literal(16) }),
        v = h.z.object({ algorithm: h.z.literal("aes256"), mode: h.z.literal("cbchmac64"), ivLength: h.z.literal(16) }),
        g = h.z.union([m, v]),
        y = h.z.object({
          algorithm: h.z.literal("argon2d"),
          saltLength: h.z.literal(16),
          tCost: h.z.number(),
          mCost: h.z.number(),
          parallelism: h.z.number()
        }),
        f = h.z.object({
          algorithm: h.z.literal("pbkdf2"),
          saltLength: h.z.union([h.z.literal(16), h.z.literal(32)]),
          iterations: h.z.number(),
          hashAlgorithm: h.z.enum(["sha1", "sha256"])
        }),
        _ = h.z.object({ algorithm: h.z.literal("noderivation") }),
        S = h.z.literal("flexible"),
        E = h.z.object({ version: h.z.literal(1), type: S, length: h.z.number(), derivation: y, cipher: m });
      function b({ bytes: e, markerSchema: t, values: r }) {
        const { version: s, derivation: o, saltLength: n, tCost: i, mCost: a, parallelism: c, cipher: l, mode: d, ivLength: u } = t.index,
          p = E.safeParse({
            version: Number(r[s]),
            type: "flexible",
            length: e,
            derivation: { algorithm: r[o], saltLength: Number(r[n]), tCost: Number(r[i]), mCost: Number(r[a]), parallelism: Number(r[c]) },
            cipher: { algorithm: r[l], mode: r[d], ivLength: Number(r[u]) }
          });
        if (!p.success) throw new Error(p.error.message);
        return p.data;
      }
      var w = r(33055);
      const A = 32;
      function T({ transportableData: e, marker: t }) {
        const { length: r, derivation: s, cipher: o } = t,
          n = s.saltLength,
          { ivLength: i } = o,
          a = r + 0,
          c = a + n,
          l = c + i;
        return { iv: e.substring(c, c + i), length: n + i + A, salt: e.substring(a, a + n), signature: e.substring(l, l + A) };
      }
      const C = h.z.object({ version: h.z.literal(1), type: S, length: h.z.number(), derivation: _, cipher: g });
      function I({ bytes: e, markerSchema: t, values: r }) {
        const { version: s, cipher: o, mode: n, ivLength: i } = t.index,
          a = C.safeParse({
            version: Number(r[s]),
            type: "flexible",
            length: e,
            derivation: { algorithm: "noderivation" },
            cipher: { algorithm: r[o], mode: r[n], ivLength: Number(r[i]) }
          });
        if (!a.success) throw new Error(a.error.message);
        return a.data;
      }
      function O() {
        return (e) => {
          const t = p({ transportableData: e, makeMarker: I, schema: w.NODERIVATION_MARKER_SCHEMA }),
            r = (function ({ transportableData: e, marker: t }) {
              const { length: r, cipher: s } = t,
                { ivLength: o } = s,
                n = r + 0,
                i = n + o;
              return { iv: e.substring(n, n + o), length: o + A, signature: e.substring(i, i + A) };
            })({ transportableData: e, marker: t });
          return (function ({ encipheredContents: e, marker: t, metadata: r }) {
            const { derivation: s, cipher: o, type: n, version: i } = t,
              { iv: a, signature: l } = r;
            return {
              type: n,
              version: i,
              derivationConfig: s,
              cipherConfig: o,
              signature: (0, c.u)(l),
              iv: (0, c.u)(a),
              encipheredContents: (0, c.u)(e)
            };
          })({ encipheredContents: a({ transportableData: e, marker: t, metadata: r }), marker: t, metadata: r });
        };
      }
      const P = h.z.object({ version: h.z.literal(1), type: S, length: h.z.number(), derivation: f, cipher: m });
      function R({ bytes: e, markerSchema: t, values: r }) {
        const { version: s, derivation: o, saltLength: n, iterations: i, hashAlgorithm: a, cipher: c, mode: l, ivLength: d } = t.index,
          u = P.safeParse({
            version: Number(r[s]),
            type: "flexible",
            length: e,
            derivation: { algorithm: r[o], saltLength: Number(r[n]), iterations: Number(r[i]), hashAlgorithm: r[a] },
            cipher: { algorithm: r[c], mode: r[l], ivLength: Number(r[d]) }
          });
        if (!u.success) throw new Error(u.error.message);
        return u.data;
      }
      function D({ transportableData: e, index: t }) {
        const r = t + 1,
          s = d({ str: e, substr: u.F, occurrence: r }),
          o = d({ str: e, substr: u.F, occurrence: r + 1 });
        if (-1 === s || -1 === o) throw new Error("Marker info indices not found");
        return e.substring(s + 1, o);
      }
      const N = 0,
        U = 1;
      function L(e) {
        switch (e) {
          case "argon2d":
            return (e) => {
              const t = p({ transportableData: e, makeMarker: b, schema: w.ARGON2D_MARKER_SCHEMA }),
                r = T({ transportableData: e, marker: t });
              return l({ encipheredContents: a({ transportableData: e, marker: t, metadata: r }), marker: t, metadata: r });
            };
          case "pbkdf2":
            return (e) => {
              const t = p({ transportableData: e, makeMarker: R, schema: w.PBKDF2_MARKER_SCHEMA }),
                r = T({ transportableData: e, marker: t });
              return l({ encipheredContents: a({ transportableData: e, marker: t, metadata: r }), marker: t, metadata: r });
            };
          case "noderivation":
            return O();
          default:
            (0, n.U)(e);
        }
      }
      var F = r(6424),
        M = r(58396),
        x = r(6752);
      async function k(e, t, r, n) {
        const a = (function (e) {
            const t = (0, o.v)(e),
              r = D({ transportableData: t, index: N });
            if (Number(r) !== u.g) throw new Error("Marker version not supported");
            const s = D({ transportableData: t, index: U });
            if (!(0, i.b9)(s)) throw new Error("Derivation algorithm not supported");
            return L(s)(t);
          })(n),
          { deriveKeyArgon2d: c, deriveKeyPbkdf2: l } = t,
          { derivationConfig: d, salt: p } = a,
          { algorithm: h } = d,
          m = "pbkdf2" === h || "argon2d" === h;
        if (m && !p) throw new Error("Need salt for derivation");
        const v = m && p ? await (0, x.b)(e, p, l, c, d, r) : e,
          { mode: g } = a.cipherConfig,
          { computeHash: y } = t,
          { encryptionKey: f, signatureKey: _ } = "cbchmac64" === g ? await (0, M.U)(v) : await (0, F.Y)(v, y),
          { iv: S, encipheredContents: E } = a,
          b = (0, s.K)(S, E),
          { signature: w } = a;
        return { signatureKey: _, signature: w, dataToSign: b, encryptionKey: f, iv: S, encipheredContents: E };
      }
      async function G(e, t, r, s) {
        const { verifyHmacSha: o } = t,
          { signatureKey: n, signature: i, dataToSign: a, encryptionKey: c, iv: l, encipheredContents: d } = await k(e, t, r, s);
        if (!(await o(n, i, a))) throw new Error("Signature cannot be verified");
        const { decryptAes256: u } = t;
        return u(c, l, d);
      }
    },
    7449: (e, t, r) => {
      r.d(t, { I: () => d });
      var s = r(82933),
        o = r(94805),
        n = r(16698),
        i = r(38291);
      const a = { type: "KWC5", derivation: o.oo, cipher: n.BU };
      function c(e) {
        const t = (function ({ transportableData: e, marker: t }) {
          const { cipher: r, type: s } = t,
            { ivLength: o } = r,
            n = i.RB + o + i.en + s.length,
            a = n + i.jK;
          return { iv: e.slice(i.RB, i.RB + o), signature: e.slice(n, n + i.jK), encipheredContents: e.slice(a) };
        })({ transportableData: e, marker: a });
        return {
          iv: t.iv,
          type: i.PD,
          signature: t.signature,
          encipheredContents: t.encipheredContents,
          derivationConfig: o.oo,
          cipherConfig: n.BU
        };
      }
      var l = r(6424);
      async function d(e, t, r) {
        const o = c(r),
          { computeHash: n } = t,
          { encryptionKey: i, signatureKey: a } = await (0, l.Y)(e, n),
          { iv: d, encipheredContents: u } = o,
          p = (0, s.K)(d, u),
          { verifyHmacSha: h } = t,
          { signature: m } = o;
        if (!(await h(a, m, p))) throw new Error("Signature cannot be verified");
        const { decryptAes256: v } = t;
        return v(i, d, u);
      }
    },
    58396: (e, t, r) => {
      function s(e) {
        const t = new Uint8Array(e),
          r = e.byteLength / 2,
          s = t.slice(0, r),
          o = t.slice(r);
        return Promise.resolve({ encryptionKey: s.buffer, signatureKey: o.buffer });
      }
      r.d(t, { U: () => s });
    },
    6424: (e, t, r) => {
      r.d(t, { Y: () => o });
      const s = "SHA-512";
      async function o(e, t) {
        const r = await t(e, s),
          o = new Uint8Array(r),
          n = r.byteLength / 2,
          i = o.slice(0, n),
          a = o.slice(n, r.byteLength);
        return { encryptionKey: i.buffer, signatureKey: a.buffer };
      }
    },
    22609: (e, t, r) => {
      r.d(t, { N: () => o, z: () => s });
      const s = "AES-CBC",
        o = 256;
    },
    74017: (e, t, r) => {
      r.d(t, { x: () => s });
      const s = "SHA-256";
    },
    83407: (e, t, r) => {
      r.d(t, { $: () => s, x: () => o });
      const s = "RSA-OAEP",
        o = "RSASSA-PKCS1-v1_5";
    },
    22253: (e, t, r) => {
      r.d(t, { j: () => s });
      class s {}
    },
    4607: (e, t, r) => {
      r.d(t, { W: () => s });
      class s {
        constructor(e) {
          (this.headers = new Map()),
            (this.normalizedNames = new Map()),
            "string" == typeof e ? this.initFromString(e) : e && this.initFromObject(e);
        }
        has(e) {
          return this.headers.has(e.toLowerCase());
        }
        get(e) {
          const t = this.headers.get(e.toLowerCase());
          return t?.[0] ?? null;
        }
        keys() {
          return Array.from(this.normalizedNames.values());
        }
        getAll(e) {
          return this.headers.get(e.toLowerCase()) ?? null;
        }
        append(e, t) {
          return this.clone({ name: e, value: t, op: 0 });
        }
        set(e, t) {
          return this.clone({ name: e, value: t, op: 1 });
        }
        delete(e, t) {
          return this.clone({ name: e, value: t, op: 2 });
        }
        deleteMultiple(e) {
          return this.clone({ names: e, op: 3 });
        }
        toObject() {
          return Object.fromEntries(this.headers);
        }
        maybeSetNormalizedName(e, t) {
          this.normalizedNames.has(t) || this.normalizedNames.set(t, e);
        }
        clone(e) {
          const t = new s();
          return t.initFromOther(this), t.applyUpdate(e), t;
        }
        applyUpdate(e) {
          switch (e.op) {
            case 0:
            case 1:
              {
                const t = e.name.toLowerCase();
                let r = e.value;
                if (("string" == typeof r && (r = [r]), 0 === r.length)) return;
                this.maybeSetNormalizedName(e.name, t);
                const s = (0 === e.op ? this.headers.get(t) : void 0) ?? [];
                s.push(...r), this.headers.set(t, s);
              }
              break;
            case 2:
              {
                const t = e.name.toLowerCase(),
                  r = e.value;
                if (r) {
                  let e = this.headers.get(t);
                  if (!e) return;
                  const s = Array.isArray(r) ? r : [r];
                  (e = e.filter((e) => !s.includes(e))),
                    0 === e.length ? (this.headers.delete(t), this.normalizedNames.delete(t)) : this.headers.set(t, e);
                } else this.headers.delete(t), this.normalizedNames.delete(t);
              }
              break;
            case 3:
              e.names.forEach((e) => {
                const t = e.toLowerCase();
                this.headers.delete(t), this.normalizedNames.delete(t);
              });
          }
        }
        initFromOther(e) {
          Array.from(e.headers.keys()).forEach((t) => {
            this.headers.set(t, [...e.headers.get(t)]), this.normalizedNames.set(t, e.normalizedNames.get(t));
          });
        }
        initFromObject(e) {
          Object.keys(e).forEach((t) => {
            let r = e[t];
            const s = t.toLowerCase();
            "string" == typeof r && (r = [r]), r.length > 0 && (this.headers.set(s, r), this.maybeSetNormalizedName(t, s));
          });
        }
        initFromString(e) {
          e.split("\n").forEach((e) => {
            const t = e.indexOf(":");
            if (t > 0) {
              const r = e.slice(0, t),
                s = r.toLowerCase(),
                o = e.slice(t + 1).trim();
              this.maybeSetNormalizedName(r, s), this.headers.has(s) ? this.headers.get(s).push(o) : this.headers.set(s, [o]);
            }
          });
        }
      }
    },
    69912: (e, t, r) => {
      r.d(t, { L: () => o });
      class s {
        encodeKey(e) {
          return this.standardEncoding(e);
        }
        encodeValue(e) {
          return this.standardEncoding(e);
        }
        decodeKey(e) {
          return decodeURIComponent(e);
        }
        decodeValue(e) {
          return decodeURIComponent(e);
        }
        standardEncoding(e) {
          return encodeURIComponent(e).replace(s.STANDARD_ENCODING_REGEX, (e, t) => s.STANDARD_ENCODING_REPLACEMENTS[t] ?? e);
        }
      }
      (s.STANDARD_ENCODING_REGEX = /%(\d[a-f0-9])/gi),
        (s.STANDARD_ENCODING_REPLACEMENTS = { 40: "@", "3A": ":", 24: "$", "2C": ",", "3B": ";", "3D": "=", "3F": "?", "2F": "/" });
      class o {
        constructor(e = {}, t = {}) {
          (this.map = new Map()),
            (this.encoder = t.encoder ?? new s()),
            "string" == typeof e ? this.initFromString(e) : this.initFromObject(e);
        }
        has(e) {
          return this.map.has(e);
        }
        get(e) {
          const t = this.map.get(e);
          return t?.[0] ?? null;
        }
        getAll(e) {
          return this.map.get(e) ?? null;
        }
        keys() {
          return Array.from(this.map.keys());
        }
        append(e, t) {
          return this.clone({ param: e, value: t, op: 0 });
        }
        appendAll(e) {
          const t = [];
          return (
            Object.keys(e).forEach((r) => {
              const s = e[r];
              Array.isArray(s)
                ? s.forEach((e) => {
                    t.push({ param: r, value: e, op: 0 });
                  })
                : t.push({ param: r, value: s, op: 0 });
            }),
            this.clone(t)
          );
        }
        set(e, t) {
          return this.clone({ param: e, value: t, op: 1 });
        }
        delete(e, t) {
          return this.clone({ param: e, value: t, op: 2 });
        }
        toString() {
          return this.keys()
            .map((e) => {
              const t = this.encoder.encodeKey(e);
              return this.map
                .get(e)
                .map((e) => t + "=" + this.encoder.encodeValue(e))
                .join("&");
            })
            .filter((e) => "" !== e)
            .join("&");
        }
        clone(e) {
          const t = new o({}, { encoder: this.encoder });
          return t.initFromOther(this), t.applyUpdates(Array.isArray(e) ? e : [e]), t;
        }
        initFromOther(e) {
          e.keys().forEach((t) => this.map.set(t, [...e.map.get(t)]));
        }
        initFromObject(e) {
          Object.keys(e).forEach((t) => {
            const r = e[t],
              s = o.isValueArray(r) ? r.map(o.valueToString) : [o.valueToString(r)];
            this.map.set(t, s);
          });
        }
        initFromString(e) {
          const { encoder: t } = this;
          if (e.length > 0) {
            e.replace(/^\?/, "")
              .split("&")
              .forEach((e) => {
                const r = e.indexOf("="),
                  [s, o] = -1 === r ? [t.decodeKey(e), ""] : [t.decodeKey(e.slice(0, r)), t.decodeValue(e.slice(r + 1))],
                  n = this.map.get(s) ?? [];
                n.push(o), this.map.set(s, n);
              });
          }
        }
        applyUpdates(e) {
          e.forEach((e) => {
            switch (e.op) {
              case 0:
              case 1: {
                const t = (0 === e.op ? this.map.get(e.param) : void 0) ?? [];
                t.push(o.valueToString(e.value)), this.map.set(e.param, t);
                break;
              }
              case 2:
                if (void 0 === e.value) {
                  this.map.delete(e.param);
                  break;
                }
                {
                  const t = this.map.get(e.param) ?? [],
                    r = t.indexOf(o.valueToString(e.value));
                  -1 !== r && t.splice(r, 1), t.length > 0 ? this.map.set(e.param, t) : this.map.delete(e.param);
                }
            }
          });
        }
        static valueToString(e) {
          return `${e}`;
        }
        static isValueArray(e) {
          return Array.isArray(e);
        }
      }
    },
    4043: (e, t, r) => {
      r.d(t, { a: () => n });
      var s = r(4607),
        o = r(69912);
      class n {
        constructor(e, t, r, i) {
          (this.body = null),
            (this.headers = new s.W()),
            (this.withCredentials = !1),
            (this.timeout = void 0),
            (this.responseType = "json"),
            (this.params = new o.L({})),
            (this.url = t),
            (this.method = e),
            n.mightHaveBody(this.method) && (this.body = r ?? null),
            i &&
              ((this.withCredentials = Boolean(i.withCredentials)),
              i.responseType && (this.responseType = i.responseType),
              i.headers && (this.headers = this.getHeadersFromOptions(i.headers)),
              i.params && (this.params = this.getParamsFromOptions(i.params)),
              i.timeout && i.timeout > 0 && (this.timeout = i.timeout),
              i.mode && (this.mode = i.mode)),
            (this.urlWithParams = this.initUrlWithParams());
        }
        serializeBody() {
          return null === this.body
            ? null
            : n.isArrayBuffer(this.body) || "string" == typeof this.body
            ? this.body
            : this.body instanceof o.L
            ? this.body.toString()
            : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || n.isArrayBuffer(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof o.L
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(e = {}) {
          const t = e.method ?? this.method,
            r = e.url ?? this.url,
            s = e.responseType ?? this.responseType,
            o = void 0 !== e.body ? e.body : this.body,
            i = void 0 !== e.withCredentials ? e.withCredentials : this.withCredentials,
            a = void 0 !== e.timeout ? e.timeout : this.timeout,
            c = e.mode ?? this.mode;
          let l = e.headers ? this.getHeadersFromOptions(e.headers) : this.headers,
            d = e.params ? this.getParamsFromOptions(e.params) : this.params;
          const u = e.setHeaders;
          u && (l = Object.keys(u).reduce((e, t) => e.set(t, u[t]), l));
          const p = e.setParams;
          return (
            p && (d = Object.keys(p).reduce((e, t) => e.set(t, p[t]), d)),
            new n(t, r, o, { params: d, headers: l, responseType: s, withCredentials: i, timeout: a, mode: c })
          );
        }
        getHeadersFromOptions(e) {
          return e instanceof s.W ? e : new s.W(e);
        }
        getParamsFromOptions(e) {
          return e instanceof o.L ? e : new o.L(e);
        }
        initUrlWithParams() {
          const e = this.params.toString();
          if (0 === e.length) return this.url;
          const t = this.url.indexOf("?"),
            r = -1 === t ? "?" : t < this.url.length - 1 ? "&" : "";
          return this.url + r + e;
        }
        static mightHaveBody(e) {
          switch (e) {
            case "DELETE":
            case "GET":
            case "HEAD":
            case "OPTIONS":
              return !1;
            default:
              return !0;
          }
        }
        static isArrayBuffer(e) {
          return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer;
        }
      }
    },
    12964: (e, t, r) => {
      r.d(t, { Z: () => d });
      var s = r(33818),
        o = r(89685),
        n = r(54066),
        i = r(4607),
        a = r(25994);
      async function c(e) {
        const t = e.getReader();
        let r = new Uint8Array(0),
          s = await t.read();
        for (; !s.done; ) {
          const e = new Uint8Array(r.byteLength + s.value.byteLength);
          e.set(r, 0), e.set(s.value, r.byteLength), (r = e), (s = await t.read());
        }
        return r;
      }
      class l {
        constructor(e) {
          (this.bytesRead = 0), (this.data = e);
        }
        pull(e) {
          const { bytesRead: t, data: r } = this;
          if (t >= r.byteLength) return void e.close();
          const s = Math.min(r.byteLength - t, e.desiredSize ?? 1 / 0);
          if (s > 0) {
            const o = new Uint8Array(r, t, s);
            e.enqueue(o), (this.bytesRead += s);
          }
          t >= r.byteLength && e.close();
        }
      }
      class d {
        constructor(e = {}, t = a.W.Ok, r = "OK") {
          (this.headers = e.headers instanceof i.W ? e.headers : new i.W(e.headers)),
            (this.status = void 0 !== e.status ? e.status : t),
            (this.statusText = e.statusText ?? r),
            (this.url = e.url ?? null),
            (this.ok = this.status >= 200 && this.status < 300),
            (this.body = void 0 !== e.body ? e.body : null);
        }
        clone(e = {}) {
          return new d({
            body:
              void 0 !== e.body
                ? e.body
                : null === this.body
                ? null
                : this.body instanceof s.ReadableStream
                ? this.body.tee()[0]
                : this.body,
            headers: e.headers ?? this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText ?? this.statusText,
            url: e.url ?? this.url ?? void 0
          });
        }
        async arrayBuffer() {
          if (null === this.body) throw new Error("Empty response body");
          if ("object" == typeof this.body && "ReadableStream" === this.body.constructor.name) {
            return (await c(this.body)).buffer;
          }
          if (!(this.body instanceof ArrayBuffer)) throw new Error("Unexpected body type, not an ArrayBuffer");
          return this.body;
        }
        async text() {
          if (null === this.body) throw new Error("Empty response body");
          if ("object" == typeof this.body && "ReadableStream" === this.body.constructor.name) {
            const e = await c(this.body);
            return (0, o.v)(e.buffer);
          }
          if ("string" != typeof this.body) throw new Error("Unexpected body type, not a string");
          return this.body;
        }
        async json(e) {
          if (null === this.body) throw new Error("Empty response body");
          if ("object" == typeof this.body && "ReadableStream" === this.body.constructor.name) {
            const t = await c(this.body),
              r = (0, o.v)(t.buffer);
            try {
              const t = JSON.parse(r);
              return e.decode(t);
            } catch (e) {
              throw new Error("Failed to parse response body JSON");
            }
          }
          if (this.body instanceof ArrayBuffer || "string" == typeof this.body) throw new Error("Unexpected body type");
          return e.decode(this.body);
        }
        bodyStream() {
          if (null === this.body) throw new Error("Empty response body");
          if ("object" == typeof this.body && "ReadableStream" === this.body.constructor.name) return this.body;
          if ("string" == typeof this.body) return new s.ReadableStream(new l((0, n.u)(this.body)));
          if (this.body instanceof ArrayBuffer) return new s.ReadableStream(new l(this.body));
          const e = JSON.stringify(this.body);
          return new s.ReadableStream(new l((0, n.u)(e)));
        }
      }
    },
    25994: (e, t, r) => {
      var s;
      r.d(t, { W: () => s }),
        (function (e) {
          (e[(e.Continue = 100)] = "Continue"),
            (e[(e.SwitchingProtocols = 101)] = "SwitchingProtocols"),
            (e[(e.Processing = 102)] = "Processing"),
            (e[(e.EarlyHints = 103)] = "EarlyHints"),
            (e[(e.Ok = 200)] = "Ok"),
            (e[(e.Created = 201)] = "Created"),
            (e[(e.Accepted = 202)] = "Accepted"),
            (e[(e.NonAuthoritativeInformation = 203)] = "NonAuthoritativeInformation"),
            (e[(e.NoContent = 204)] = "NoContent"),
            (e[(e.ResetContent = 205)] = "ResetContent"),
            (e[(e.PartialContent = 206)] = "PartialContent"),
            (e[(e.MultiStatus = 207)] = "MultiStatus"),
            (e[(e.AlreadyReported = 208)] = "AlreadyReported"),
            (e[(e.ImUsed = 226)] = "ImUsed"),
            (e[(e.MultipleChoices = 300)] = "MultipleChoices"),
            (e[(e.MovedPermanently = 301)] = "MovedPermanently"),
            (e[(e.Found = 302)] = "Found"),
            (e[(e.SeeOther = 303)] = "SeeOther"),
            (e[(e.NotModified = 304)] = "NotModified"),
            (e[(e.UseProxy = 305)] = "UseProxy"),
            (e[(e.Unused = 306)] = "Unused"),
            (e[(e.TemporaryRedirect = 307)] = "TemporaryRedirect"),
            (e[(e.PermanentRedirect = 308)] = "PermanentRedirect"),
            (e[(e.BadRequest = 400)] = "BadRequest"),
            (e[(e.Unauthorized = 401)] = "Unauthorized"),
            (e[(e.PaymentRequired = 402)] = "PaymentRequired"),
            (e[(e.Forbidden = 403)] = "Forbidden"),
            (e[(e.NotFound = 404)] = "NotFound"),
            (e[(e.MethodNotAllowed = 405)] = "MethodNotAllowed"),
            (e[(e.NotAcceptable = 406)] = "NotAcceptable"),
            (e[(e.ProxyAuthenticationRequired = 407)] = "ProxyAuthenticationRequired"),
            (e[(e.RequestTimeout = 408)] = "RequestTimeout"),
            (e[(e.Conflict = 409)] = "Conflict"),
            (e[(e.Gone = 410)] = "Gone"),
            (e[(e.LengthRequired = 411)] = "LengthRequired"),
            (e[(e.PreconditionFailed = 412)] = "PreconditionFailed"),
            (e[(e.PayloadTooLarge = 413)] = "PayloadTooLarge"),
            (e[(e.UriTooLong = 414)] = "UriTooLong"),
            (e[(e.UnsupportedMediaType = 415)] = "UnsupportedMediaType"),
            (e[(e.RangeNotSatisfiable = 416)] = "RangeNotSatisfiable"),
            (e[(e.ExpectationFailed = 417)] = "ExpectationFailed"),
            (e[(e.ImATeapot = 418)] = "ImATeapot"),
            (e[(e.MisdirectedRequest = 421)] = "MisdirectedRequest"),
            (e[(e.UnprocessableEntity = 422)] = "UnprocessableEntity"),
            (e[(e.Locked = 423)] = "Locked"),
            (e[(e.FailedDependency = 424)] = "FailedDependency"),
            (e[(e.TooEarly = 425)] = "TooEarly"),
            (e[(e.UpgradeRequired = 426)] = "UpgradeRequired"),
            (e[(e.PreconditionRequired = 428)] = "PreconditionRequired"),
            (e[(e.TooManyRequests = 429)] = "TooManyRequests"),
            (e[(e.RequestHeaderFieldsTooLarge = 431)] = "RequestHeaderFieldsTooLarge"),
            (e[(e.UnavailableForLegalReasons = 451)] = "UnavailableForLegalReasons"),
            (e[(e.InternalServerError = 500)] = "InternalServerError"),
            (e[(e.NotImplemented = 501)] = "NotImplemented"),
            (e[(e.BadGateway = 502)] = "BadGateway"),
            (e[(e.ServiceUnavailable = 503)] = "ServiceUnavailable"),
            (e[(e.GatewayTimeout = 504)] = "GatewayTimeout"),
            (e[(e.HttpVersionNotSupported = 505)] = "HttpVersionNotSupported"),
            (e[(e.VariantAlsoNegotiates = 506)] = "VariantAlsoNegotiates"),
            (e[(e.InsufficientStorage = 507)] = "InsufficientStorage"),
            (e[(e.LoopDetected = 508)] = "LoopDetected"),
            (e[(e.NotExtended = 510)] = "NotExtended"),
            (e[(e.NetworkAuthenticationRequired = 511)] = "NetworkAuthenticationRequired");
        })(s || (s = {}));
    },
    73155: (e, t, r) => {
      r.d(t, { R: () => o, a: () => n });
      var s = r(96168);
      class o extends (0, s.Hu)("BadStatus", "The HTTP response has a non-successful status code (not 2XX)") {
        constructor(e) {
          super(), (this.response = e);
        }
      }
      class n extends (0, s.Hu)("FetchFailedError", "Something happened while communicating to the server") {}
    },
    96168: (e, t, r) => {
      r.d(t, { As: () => o, BU: () => n, Hu: () => s });
      const s = (e, t) =>
        class extends Error {
          constructor() {
            super(t), (this.tag = e);
          }
        };
      function o(e, t) {
        return t.includes(e.tag);
      }
      const n = (e) => e.tag;
    },
    20195: (e, t, r) => {
      function s(e) {
        if (e instanceof Error) throw e;
        if ("string" == typeof e) throw new Error(e);
        throw new Error(e.tag);
      }
      r.d(t, { j: () => s });
    },
    61475: (e, t, r) => {
      r.r(t),
        r.d(t, {
          FunctionalError: () => s.Hu,
          assertUnreachable: () => n.U,
          concatMapFailure: () => c.Tc,
          concatMapSuccess: () => c.Gx,
          concatMatchResult: () => c.RW,
          createMatchable: () => i.H6,
          failure: () => a.Rn,
          getBrander: () => d.zq,
          getFailure: () => a.Yv,
          getSuccess: () => a.db,
          hasProperty: () => d.l$,
          isFailure: () => a.hx,
          isFunctionalErrorOfType: () => s.As,
          isMatchable: () => i.cw,
          isResult: () => a.AZ,
          isSuccess: () => a.d6,
          mapFailure: () => a.SN,
          mapFailureObservable: () => c.DZ,
          mapResultObservable: () => c.vg,
          mapSuccess: () => a.ty,
          mapSuccessObservable: () => c.Qn,
          mapSuccessResultObservable: () => c.lk,
          match: () => i.EQ,
          matchMap: () => l.G,
          matchResult: () => a.f2,
          matchResultObservable: () => c.nb,
          panic: () => o.j,
          safeCast: () => d.Ay,
          success: () => a.Vp,
          switchMapFailure: () => c.pr,
          switchMapSuccess: () => c.CP,
          switchMatchResult: () => c.bM,
          toFunctionalErrorCode: () => s.BU
        });
      var s = r(96168),
        o = r(20195),
        n = r(95087),
        i = r(18533),
        a = r(87279),
        c = r(48844),
        l = r(25535),
        d = r(28489);
    },
    95087: (e, t, r) => {
      function s(e, t) {
        throw new Error(t ?? `Unreachable code detected (${e})`);
      }
      r.d(t, { U: () => s });
    },
    25535: (e, t, r) => {
      r.d(t, { G: () => s });
      const s = (e, t) => t[e]();
    },
    18533: (e, t, r) => {
      r.d(t, { EQ: () => o, H6: () => s, cw: () => n });
      const s = (e, t) => ({ tag: e, ...t }),
        o = (e, t) => {
          const r = e.tag,
            s = r in t ? t[r] : null;
          if (!s) throw new Error("Unmatchable case");
          return s(e);
        },
        n = (e, ...t) => {
          if ("object" != typeof e || !e) return !1;
          return "tag" in e && t.includes(e.tag);
        };
    },
    48844: (e, t, r) => {
      r.d(t, {
        CP: () => g,
        DZ: () => d,
        Gx: () => h,
        Qn: () => l,
        RW: () => v,
        Tc: () => m,
        bM: () => f,
        lk: () => p,
        nb: () => c,
        pr: () => y,
        vg: () => u
      });
      var s = r(87065),
        o = r(34987),
        n = r(43978),
        i = r(87279),
        a = r(18533);
      function c(e) {
        return (t) =>
          t.pipe((0, s.U)((t) => (0, a.EQ)(t, { success: ({ data: t }) => e.success(t), failure: ({ error: t }) => e.failure(t) })));
      }
      function l(e) {
        return (t) => t.pipe((0, s.U)((t) => ((0, i.hx)(t) ? t : (0, i.Vp)(e(t.data)))));
      }
      function d(e) {
        return (t) => t.pipe((0, s.U)((t) => ((0, i.d6)(t) ? t : (0, i.Rn)(e(t.error)))));
      }
      function u(e, t) {
        return (r) => r.pipe((0, s.U)((r) => ((0, i.hx)(r) ? (t ? t(r.error) : r) : e(r.data))));
      }
      function p(e) {
        return (t) => t.pipe((0, s.U)((t) => ((0, i.hx)(t) ? t : e(t.data))));
      }
      function h(e) {
        return (t) => t.pipe((0, o.b)(async (t) => ((0, i.hx)(t) ? t : (0, i.Vp)(await e(t.data)))));
      }
      function m(e) {
        return (t) => t.pipe((0, o.b)(async (t) => ((0, i.d6)(t) ? t : (0, i.Rn)(await e(t.error)))));
      }
      function v(e) {
        return (t) => t.pipe((0, o.b)((t) => (0, i.f2)(t, e)));
      }
      function g(e) {
        return (t) => t.pipe((0, n.w)(async (t) => ((0, i.hx)(t) ? t : (0, i.Vp)(await e(t.data)))));
      }
      function y(e) {
        return (t) => t.pipe((0, n.w)(async (t) => ((0, i.d6)(t) ? t : (0, i.Rn)(await e(t.error)))));
      }
      function f(e) {
        return (t) => t.pipe((0, n.w)((t) => (0, i.f2)(t, e)));
      }
    },
    87279: (e, t, r) => {
      r.d(t, {
        Rn: () => a,
        Yv: () => h,
        db: () => p,
        hx: () => d,
        AZ: () => u,
        d6: () => l,
        SN: () => v,
        ty: () => m,
        f2: () => c,
        Vp: () => i
      });
      var s = r(18533);
      const o = "success",
        n = "failure",
        i = (e) => (0, s.H6)("success", { data: e }),
        a = (e) => (0, s.H6)("failure", { error: e }),
        c = (e, t) => (0, s.EQ)(e, { success: ({ data: e }) => t.success(e), failure: ({ error: e }) => t.failure(e) }),
        l = (e) => e.tag === o,
        d = (e) => e.tag === n,
        u = (e) => (0, s.cw)(e, o, n),
        p = (e) => e.data,
        h = (e) => e.error,
        m = (e, t) => (d(e) ? e : i(t(e.data))),
        v = (e, t) => (l(e) ? e : a(t(e.error)));
    },
    28489: (e, t, r) => {
      r.d(t, { Ay: () => o, l$: () => n, zq: () => s });
      const s = (e) => (t) => Object.assign(t, { brand: e }),
        o = (e) => e;
      function n(e, t) {
        return t in e;
      }
    }
  }
]);
